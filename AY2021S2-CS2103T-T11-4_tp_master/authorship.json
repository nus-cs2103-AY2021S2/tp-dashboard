[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"# CakeCollate","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003dHVE6WF4JMI)](https://codecov.io/gh/AY2021S2-CS2103T-T11-4/tp)","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"Are you a home baker searching for a reliable tool to keep track of your orders?","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"CakeCollate promises to be an efficient desktop application that allows you to easily consolidate and manage your orders. Our main features include:\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"1. Order management","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"2. Order Item management","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"3. Quick search function for your orders","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"4. Reminder for undelivered orders that have delivery dates approaching the current date","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"5. Checking the delivery status of your orders","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you\u0027re a small-time cake seller that can type fast, CakeCollate can get your order management tasks done faster than traditional GUI applications.","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"### **Useful Links**","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"* [Setting up, getting started](https://ay2021s2-cs2103t-t11-4.github.io/tp/SettingUp.html)","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"* [User guide](https://ay2021s2-cs2103t-t11-4.github.io/tp/UserGuide.html)","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"* [Developer guide](https://ay2021s2-cs2103t-t11-4.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"### **Acknowledgements**","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"* Libraries used","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    * [JavaFX](https://openjfx.io/)","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    * [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    * [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"pavz02":7,"xiinweii98":19,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"mainClassName \u003d \u0027seedu.cakecollate.Main\u0027","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"run {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"    archiveName \u003d \u0027cakecollate.jar\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xiinweii98":2,"-":70,"simran-bhadani3":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"### Princess Priscilla Paulson","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"\u003cimg src\u003d\"images/ppris.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"[[github](http://github.com/ppris)]","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"[[portfolio](team/ppris.md)]","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"* Role: Team Lead, Deliverables and Scheduling ","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"* Responsibilities: Model","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"### Soh Xin Wei","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"\u003cimg src\u003d\"images/xiinweii98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"[[github](http://github.com/xiinweii98)]","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"[[portfolio](team/xiinweii98.md)]","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"* Role: Developer, Testing","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"* Responsibilities: Logic","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"### Lim Rui Xiong","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"\u003cimg src\u003d\"images/ruixiong2211.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"[[github](http://github.com/RuiXiong2211)] ","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"[[portfolio](team/ruixiong2211.md)]","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"* Role: Developer, Documentation","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"* Responsibilities: Commons","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"### Pavitra Thyagarajan","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"\u003cimg src\u003d\"images/pavz02.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"[[github](http://github.com/pavz02)]","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"[[portfolio](team/pavz02.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"* Role: Developer, Code quality","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"* Responsibilities: Ui and JavaFX","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"### Bhadani Simran","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"\u003cimg src\u003d\"images/simran-bhadani3.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"[[github](http://github.com/simran-bhadani3)]","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"[[portfolio](team/simran-bhadani3.md)]","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"* Role: Developer, Integration","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"* Responsibilities: Storage","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"pPris":7,"RuiXiong2211":3,"pavz02":5,"xiinweii98":9,"-":28,"simran-bhadani3":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"## **1. Setting up, getting started**","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"First, you will need to set up the project file in your local computer.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"Please refer to the guide [_Setting up and getting started_](SettingUp.md) to set up the project properly.","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"## **2. Introduction**","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"Welcome to our Developer Guide! CakeCollate promises to be an efficient desktop application that allows you to easily consolidate and manage your orders. Our main features include:\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"1. Order management","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"2. Order Item management","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"3. Quick search function for your orders","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"4. Reminder for undelivered orders that have delivery dates approaching the current date","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"5. Checking the delivery status of your orders","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you\u0027re a small-time cake seller that can type fast, CakeCollate can get your order management tasks done faster than traditional GUI applications.","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"## **3. Design**","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2021S2-CS2103T-T11-4/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"![Structure of the UI Component](images/UiClassDiagram2.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `OrderListPanel`, `OrderItemListPanel`, `HelpListPanel`, `StatusBarFooter` etc.","lastModifiedDate":"2021-04-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-04-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"xiinweii98"},"content":"1. `Logic` uses the `CakeCollateParser` class to parse the user command.","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"1. The command execution can affect the `Model` (e.g. adding a order).","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"pavz02"},"content":"The `Model`:","lastModifiedDate":"2021-04-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"simran-bhadani3"},"content":"* stores CakeCollate\u0027s data.","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"pavz02"},"content":"* stores the order item data.","lastModifiedDate":"2021-04-10"},{"lineNumber":139,"author":{"gitId":"pavz02"},"content":"* exposes an unmodifiable `ObservableList\u003cOrder\u003e` and `ObservableList\u003cOrderItem\u003e`that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list changes.","lastModifiedDate":"2021-04-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `CakeCollate`, which `Order` references. This allows `CakeCollate` to only require one `Tag` object per unique `Tag`, instead of each `Order` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"simran-bhadani3"},"content":"* `UserPrefsStorage` can save `UserPref` objects in JSON format and read it back.","lastModifiedDate":"2021-04-12"},{"lineNumber":159,"author":{"gitId":"simran-bhadani3"},"content":"* `CakeCollateStorage` can save CakeCollate\u0027s data in JSON format and read it back.","lastModifiedDate":"2021-04-12"},{"lineNumber":160,"author":{"gitId":"simran-bhadani3"},"content":"* `OrderItemsStorage` can save order items data in JSON format and read it back.","lastModifiedDate":"2021-04-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"xiinweii98"},"content":"Classes used by multiple components are in the `seedu.cakecollate.commons` package.","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":169,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":170,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":171,"author":{"gitId":"xiinweii98"},"content":"## **4. Implementation**","lastModifiedDate":"2021-04-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"pPris"},"content":"### Add Command Feature","lastModifiedDate":"2021-04-12"},{"lineNumber":176,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"pPris"},"content":"A key functionality of CakeCollate is the ability to add cake order items into an order. The add command accepts the parameter `o/ORDER_DESCRIPTION` to allow for this. To better accommodate our users, we decided to have a table of order items, and if users wanted to add an item from that table to their order, they could do so by specifying the corresponding indexes using the `oi/` prefix.","lastModifiedDate":"2021-04-12"},{"lineNumber":178,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"pPris"},"content":"However, since the user inputs specified by both the `o/` and `oi/` prefixes were referring to similar data items stored in the `Order` object of the model class, it seemed best to store only one of them to avoid duplication, and the other input had to be mapped. We chose to still contain an `OrderDescription` object in the `Order` class, and decided to map the indexes using the entries from the order items model so that the `Order` object is complete and does not rely on indexes or the model. ","lastModifiedDate":"2021-04-12"},{"lineNumber":180,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"pPris"},"content":"Prior to this feature, there were three relevant implementation details","lastModifiedDate":"2021-04-12"},{"lineNumber":182,"author":{"gitId":"pPris"},"content":"* the `AddCommand` was initialised using an `Order` object created by the `AddCommandParser`","lastModifiedDate":"2021-04-12"},{"lineNumber":183,"author":{"gitId":"pPris"},"content":"* the `AddCommand::execute` method took in a model, ","lastModifiedDate":"2021-04-12"},{"lineNumber":184,"author":{"gitId":"pPris"},"content":"* and the `AddCommandParser::parse` method did not take in a model.","lastModifiedDate":"2021-04-12"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"Given this, there were two main options to implement the mapping:","lastModifiedDate":"2021-04-12"},{"lineNumber":187,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"pPris"},"content":"1. Refactor `AddCommandParser::parse` to have access to the Model. ","lastModifiedDate":"2021-04-12"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"    * Pros: This meant that the mapping would be done within the parser, which fitted the responsibility of the parser, and the order object for initialising the `AddCommand` can be created in the parser itself.","lastModifiedDate":"2021-04-12"},{"lineNumber":191,"author":{"gitId":"pPris"},"content":"    * Cons: This seemed like extra coupling between the Parser methods and classes, and the Model class, as the method `CakeCollateParser::parseCommand` which is the caller of `AddCommandParser::parse` will need to have access to the model too.","lastModifiedDate":"2021-04-12"},{"lineNumber":192,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":193,"author":{"gitId":"pPris"},"content":"2. Allow the mapping to take place in the `AddCommand::execute` method, since that method takes in a model as a parameter. ","lastModifiedDate":"2021-04-12"},{"lineNumber":194,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":195,"author":{"gitId":"pPris"},"content":"    * Pros: Keep the existing level of coupling between model and parser classes (i.e. none). ","lastModifiedDate":"2021-04-12"},{"lineNumber":196,"author":{"gitId":"pPris"},"content":"    * Cons: This meant that the order object cannot be initialised in the `AddCommandParser::parse` method as the `OrderDescriptions` in the `Order` would have been incomplete if the mapping from `indexes` to `OrderDescriptions` was not done yet.","lastModifiedDate":"2021-04-12"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"In light of the additional coupling, the second option was chosen. An `AddCommandDescriptor` nested class was created in the `AddCommand` class, similar to the `EditCommand`, so that indexes and order descriptions that were inputted can be stored, and once the mappings were done in the `AddCommand::execute` method, the entire `Order` object could be built before being added to the model.","lastModifiedDate":"2021-04-12"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":200,"author":{"gitId":"pPris"},"content":"Hence, based on this implementation, here is the sequence diagram containing the steps that occur when a user inputs an `Order` containing an `o/` and `oi/` field.","lastModifiedDate":"2021-04-12"},{"lineNumber":201,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"**Sequence diagram depicting the `AddCommandParser::parse` method:**","lastModifiedDate":"2021-04-12"},{"lineNumber":203,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":204,"author":{"gitId":"pPris"},"content":"![AddParserSequenceDiagram](images/AddParserSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":205,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":206,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":208,"author":{"gitId":"pPris"},"content":"**Sequence diagram depicting the `AddCommand::execute` method:**","lastModifiedDate":"2021-04-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":210,"author":{"gitId":"pPris"},"content":"![AddSequenceDiagram](images/AddSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":212,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":214,"author":{"gitId":"xiinweii98"},"content":"### Find feature","lastModifiedDate":"2021-04-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":216,"author":{"gitId":"xiinweii98"},"content":"The intended usage of the Find feature is for users to locate their orders in CakeCollate quickly and efficiently.","lastModifiedDate":"2021-04-11"},{"lineNumber":217,"author":{"gitId":"xiinweii98"},"content":"In order to do this, this feature is implemented in a way that allows user to specify the fields of the orders and the keywords that they want to search with.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":219,"author":{"gitId":"xiinweii98"},"content":"The find mechanism is facilitated by `ContainsKeywordsPredicate` which implements Java\u0027s `Predicate` interface.","lastModifiedDate":"2021-04-11"},{"lineNumber":220,"author":{"gitId":"xiinweii98"},"content":"The conditions on which orders to find is then captured in this `Predicate`.","lastModifiedDate":"2021-04-11"},{"lineNumber":221,"author":{"gitId":"xiinweii98"},"content":"The orders in CakeCollate are extracted and stored in a JavaFX `FilteredList`.","lastModifiedDate":"2021-04-11"},{"lineNumber":222,"author":{"gitId":"xiinweii98"},"content":"It is then updated through the usage of `FilteredList#setPredicate(Predicate)` while passing `ContainsKeywordsPredicate` into the method.","lastModifiedDate":"2021-04-11"},{"lineNumber":223,"author":{"gitId":"xiinweii98"},"content":"This updated `FilteredList` is then displayed, showing the results of the find command.","lastModifiedDate":"2021-04-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":225,"author":{"gitId":"xiinweii98"},"content":"This operation is exposed in the `Model` interface as `Model#updateFilteredOrderList`.","lastModifiedDate":"2021-04-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":227,"author":{"gitId":"xiinweii98"},"content":"The find feature generally does a generic \u0027OR\u0027 search. When multiple keywords are specified, orders that contains any of these keywords will be displayed.","lastModifiedDate":"2021-04-11"},{"lineNumber":228,"author":{"gitId":"xiinweii98"},"content":"However, to enable a more specific search, users can specify multiple prefixes such as `n/` and `o/` and their respective keywords. This will trigger an \u0027AND\u0027 search.","lastModifiedDate":"2021-04-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":230,"author":{"gitId":"xiinweii98"},"content":"If users want to find all order with name `Alex` OR order description `Chocolate`, they can use the command: `find Alex Chocolate`.","lastModifiedDate":"2021-04-11"},{"lineNumber":231,"author":{"gitId":"xiinweii98"},"content":"If users want to find an order with name `Alex` AND order description `Chocolate`, they can use the command: `find n/Alex o/Chocolate`.","lastModifiedDate":"2021-04-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":233,"author":{"gitId":"xiinweii98"},"content":"Given below is an example usage scenario and how the find mechanism behaves at each step.","lastModifiedDate":"2021-04-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":235,"author":{"gitId":"xiinweii98"},"content":"*Step 1.* The user keys in and execute the command `find n/Alex` to find orders with name `Alex`.","lastModifiedDate":"2021-04-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":237,"author":{"gitId":"xiinweii98"},"content":"*Step 2.* The command is parsed by `FindCommandParser`. The prefixes and their respective keywords are extracted and saved in an `ArgumentMultimap`. Refer to the [Logic Component](#logic-component) for more details.","lastModifiedDate":"2021-04-11"},{"lineNumber":238,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":239,"author":{"gitId":"xiinweii98"},"content":"*Step 3.* The inputs are then checked for their validity. If no exceptions are detected, a `ContainsKeywordPredicate` and a `FindCommand` will be created.","lastModifiedDate":"2021-04-11"},{"lineNumber":240,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":241,"author":{"gitId":"xiinweii98"},"content":"*Step 4.* The `FindCommand#execute` is called which updates the `FilteredList` that is currently being displayed.","lastModifiedDate":"2021-04-11"},{"lineNumber":242,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":243,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":244,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":245,"author":{"gitId":"xiinweii98"},"content":"The following sequence diagram shows how this works:","lastModifiedDate":"2021-04-11"},{"lineNumber":246,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":247,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The CakeCollateParser creates FindCommandParser and calls parse(\"n/Alex\") while the LogicManager calls execute(). You can refer to the [Logic Component](#logic-component) for more details.","lastModifiedDate":"2021-04-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":251,"author":{"gitId":"xiinweii98"},"content":"![FindSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":252,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":253,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifelines should end at the destroy marker (X) but due to a limitation of PlantUML, the lifelines reach the end of diagram.","lastModifiedDate":"2021-04-12"},{"lineNumber":254,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":255,"author":{"gitId":"xiinweii98"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":256,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":257,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":258,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":259,"author":{"gitId":"xiinweii98"},"content":"#### Design considerations:","lastModifiedDate":"2021-04-11"},{"lineNumber":260,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":261,"author":{"gitId":"xiinweii98"},"content":"##### Aspect: How to create the `Predicate` to call `Model#updateFilteredOrderList` with.","lastModifiedDate":"2021-04-11"},{"lineNumber":262,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":263,"author":{"gitId":"xiinweii98"},"content":"As CakeCollate is adapted from the AddressBook-Level3 project, the original find feature creates a `NameContainsKeywordsPredicate` and allow for finding keywords in the name field only.","lastModifiedDate":"2021-04-11"},{"lineNumber":264,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":265,"author":{"gitId":"xiinweii98"},"content":"* **Alternative 1 (current choice):** Create a general `ContainsKeywordsPredicate` that tracks each field in an `Order` and their respective keywords. This is done by creating a `HashMap` and mapping each `Prefix` to a list of keywords inputted.","lastModifiedDate":"2021-04-11"},{"lineNumber":266,"author":{"gitId":"xiinweii98"},"content":"    * Pros:","lastModifiedDate":"2021-04-11"},{"lineNumber":267,"author":{"gitId":"xiinweii98"},"content":"      * Does not increase coupling as much as alternative 2.","lastModifiedDate":"2021-04-11"},{"lineNumber":268,"author":{"gitId":"xiinweii98"},"content":"      * Easy to implement both `OR` and `AND` searches.","lastModifiedDate":"2021-04-11"},{"lineNumber":269,"author":{"gitId":"xiinweii98"},"content":"    * Cons:","lastModifiedDate":"2021-04-11"},{"lineNumber":270,"author":{"gitId":"xiinweii98"},"content":"      * Many if-else statements to check which fields the user specified.","lastModifiedDate":"2021-04-11"},{"lineNumber":271,"author":{"gitId":"xiinweii98"},"content":"      * Require a way to map each field to the keywords inputted.","lastModifiedDate":"2021-04-11"},{"lineNumber":272,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":273,"author":{"gitId":"xiinweii98"},"content":"* **Alternative 2:** Create a `[Field]ContainsKeywordsPredicate` for each field in an `Order`.","lastModifiedDate":"2021-04-11"},{"lineNumber":274,"author":{"gitId":"xiinweii98"},"content":"    * Pros:","lastModifiedDate":"2021-04-11"},{"lineNumber":275,"author":{"gitId":"xiinweii98"},"content":"      * `Tag`, `OrderDescription` and `DeliveryDate` require more complex method of extracting the `TestString`(the `String` to test the keywords against). This alternative will allow for inheritance to take place and enabling reusability of code.","lastModifiedDate":"2021-04-11"},{"lineNumber":276,"author":{"gitId":"xiinweii98"},"content":"      * Easy to implement.","lastModifiedDate":"2021-04-11"},{"lineNumber":277,"author":{"gitId":"xiinweii98"},"content":"    * Cons:","lastModifiedDate":"2021-04-11"},{"lineNumber":278,"author":{"gitId":"xiinweii98"},"content":"      * Creating many classes causes increased coupling.","lastModifiedDate":"2021-04-11"},{"lineNumber":279,"author":{"gitId":"xiinweii98"},"content":"      * Hard to implement `OR` searches.","lastModifiedDate":"2021-04-11"},{"lineNumber":280,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":281,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":282,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":283,"author":{"gitId":"xiinweii98"},"content":"### Remind feature","lastModifiedDate":"2021-04-12"},{"lineNumber":284,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":285,"author":{"gitId":"RuiXiong2211"},"content":"The intended usage of the Remind feature is for users to locate impending undelivered orders within a certain time frame which the user can specify. ","lastModifiedDate":"2021-04-11"},{"lineNumber":286,"author":{"gitId":"RuiXiong2211"},"content":"The user specifies the number of days from the current date for all undelivered orders they want to locate. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":287,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":288,"author":{"gitId":"RuiXiong2211"},"content":"The remind mechanism is facilitated by `ReminderDatePredicate` which implements Java\u0027s `Predicate` interface.","lastModifiedDate":"2021-04-11"},{"lineNumber":289,"author":{"gitId":"RuiXiong2211"},"content":"The conditions (date period) on which undelivered orders to locate is then captured in this `Predicate`.","lastModifiedDate":"2021-04-11"},{"lineNumber":290,"author":{"gitId":"RuiXiong2211"},"content":"The orders in CakeCollate are extracted and stored in a JavaFX `FilteredList`.","lastModifiedDate":"2021-04-11"},{"lineNumber":291,"author":{"gitId":"RuiXiong2211"},"content":"It is then updated through the usage of `FilteredList#setPredicate(Predicate)` while passing `ReminderDatePredicate` into the method.","lastModifiedDate":"2021-04-11"},{"lineNumber":292,"author":{"gitId":"xiinweii98"},"content":"This updated `FilteredList` is then displayed, showing the results of the remind command.","lastModifiedDate":"2021-04-12"},{"lineNumber":293,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":294,"author":{"gitId":"RuiXiong2211"},"content":"This operation is exposed in the `Model` interface as `Model#updateFilteredOrderList`.","lastModifiedDate":"2021-04-11"},{"lineNumber":295,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":296,"author":{"gitId":"RuiXiong2211"},"content":"If users want to locate all undelivered orders for today, they can use the command `remind 0`.","lastModifiedDate":"2021-04-11"},{"lineNumber":297,"author":{"gitId":"RuiXiong2211"},"content":"If users want to locate all undelivered orders for 1 week, assuming today\u0027s date is 11 April 2021, they can use the command `remind 7`. The remind command","lastModifiedDate":"2021-04-11"},{"lineNumber":298,"author":{"gitId":"RuiXiong2211"},"content":"returns all undelivered orders within the time frame of 11 April 2021 - 18 April 2021.","lastModifiedDate":"2021-04-11"},{"lineNumber":299,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":300,"author":{"gitId":"RuiXiong2211"},"content":"Given below is an example usage scenario and how the find mechanism behaves at each step.","lastModifiedDate":"2021-04-11"},{"lineNumber":301,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":302,"author":{"gitId":"RuiXiong2211"},"content":"*Step 1.* The user keys in and execute the command `remind 7` to locates all undelivered orders within 1 week from today.","lastModifiedDate":"2021-04-11"},{"lineNumber":303,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":304,"author":{"gitId":"RuiXiong2211"},"content":"*Step 2.* The command is parsed by `RemindCommandParser`. The prefixes and their respective keywords are extracted and saved in an `ArgumentMultimap`. Refer to the [Logic Component](#logic-component) for more details.","lastModifiedDate":"2021-04-11"},{"lineNumber":305,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":306,"author":{"gitId":"RuiXiong2211"},"content":"*Step 3.* The inputs are then checked for their validity. If no exceptions are detected, a `ReminderDatePredicate` and a `RemindCommand` will be created.","lastModifiedDate":"2021-04-11"},{"lineNumber":307,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":308,"author":{"gitId":"RuiXiong2211"},"content":"*Step 4.* The `RemindCommand#execute` is called which updates the `FilteredList` that is currently being displayed.","lastModifiedDate":"2021-04-11"},{"lineNumber":309,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":310,"author":{"gitId":"RuiXiong2211"},"content":"The following sequence diagram shows how this works:","lastModifiedDate":"2021-04-11"},{"lineNumber":311,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":312,"author":{"gitId":"RuiXiong2211"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The CakeCollateParser creates RemindCommandParser and calls parse(\"7\") while the LogicManager calls execute(). You can refer to the [Logic Component](#logic-component) for more details.","lastModifiedDate":"2021-04-11"},{"lineNumber":313,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":314,"author":{"gitId":"RuiXiong2211"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":316,"author":{"gitId":"RuiXiong2211"},"content":"![RemindSequenceDiagram](images/RemindSequenceDiagram.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":318,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifelines should end at the destroy marker (X) but due to a limitation of PlantUML, the lifelines reach the end of diagram.","lastModifiedDate":"2021-04-12"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":320,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":322,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":324,"author":{"gitId":"RuiXiong2211"},"content":"#### Design considerations:","lastModifiedDate":"2021-04-11"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":326,"author":{"gitId":"RuiXiong2211"},"content":"##### Aspect: How to allow users to receive reminders","lastModifiedDate":"2021-04-11"},{"lineNumber":327,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":328,"author":{"gitId":"RuiXiong2211"},"content":"* **Alternative 1 (current choice):** Create a `remind` command that allows users to specify the time frame to","lastModifiedDate":"2021-04-11"},{"lineNumber":329,"author":{"gitId":"RuiXiong2211"},"content":"for the result of undelivered orders.","lastModifiedDate":"2021-04-11"},{"lineNumber":330,"author":{"gitId":"RuiXiong2211"},"content":"    * Pros:","lastModifiedDate":"2021-04-11"},{"lineNumber":331,"author":{"gitId":"RuiXiong2211"},"content":"      * Gives users flexibility in specifying the time frame they want to receive reminders for","lastModifiedDate":"2021-04-11"},{"lineNumber":332,"author":{"gitId":"RuiXiong2211"},"content":"      * Easy to implement, and to use.","lastModifiedDate":"2021-04-11"},{"lineNumber":333,"author":{"gitId":"RuiXiong2211"},"content":"    * Cons:","lastModifiedDate":"2021-04-11"},{"lineNumber":334,"author":{"gitId":"RuiXiong2211"},"content":"      * User has to remember to use the remind function in order to receive reminders.","lastModifiedDate":"2021-04-11"},{"lineNumber":335,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":336,"author":{"gitId":"RuiXiong2211"},"content":"* **Alternative 2:** Automated reminders for impending undelivered orders within a ","lastModifiedDate":"2021-04-11"},{"lineNumber":337,"author":{"gitId":"RuiXiong2211"},"content":"time frame of 1 week that pops out whenever the user opens the application.","lastModifiedDate":"2021-04-11"},{"lineNumber":338,"author":{"gitId":"RuiXiong2211"},"content":"    * Pros:","lastModifiedDate":"2021-04-11"},{"lineNumber":339,"author":{"gitId":"RuiXiong2211"},"content":"      * User does not have to remember to use the remind function since it is automated.","lastModifiedDate":"2021-04-11"},{"lineNumber":340,"author":{"gitId":"RuiXiong2211"},"content":"    * Cons:","lastModifiedDate":"2021-04-11"},{"lineNumber":341,"author":{"gitId":"RuiXiong2211"},"content":"      * User has no flexibility to specify the time range he/she wants to receive reminders for.","lastModifiedDate":"2021-04-11"},{"lineNumber":342,"author":{"gitId":"RuiXiong2211"},"content":"      * If user want to check for reminders again he has to reopen the application.","lastModifiedDate":"2021-04-11"},{"lineNumber":343,"author":{"gitId":"RuiXiong2211"},"content":"    ","lastModifiedDate":"2021-04-11"},{"lineNumber":344,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":345,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":346,"author":{"gitId":"simran-bhadani3"},"content":"### Add Order Item Feature","lastModifiedDate":"2021-04-12"},{"lineNumber":347,"author":{"gitId":"simran-bhadani3"},"content":"The `addItem` command enables users to predefine order items (also known as cake items or order descriptions). The user can choose to add order items directly from this table when adding orders to CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":348,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":349,"author":{"gitId":"simran-bhadani3"},"content":"An `OrderItem` consists of a `Type` field which refers to the description of the order item. In the user guide the `Type` field is referred to as `ORDER_DESCRIPTION` in order to make it more user friendly since `Type` is not very descriptive.","lastModifiedDate":"2021-04-12"},{"lineNumber":350,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":351,"author":{"gitId":"simran-bhadani3"},"content":"All order items input by the user are added to the `UniqueOrderItemList` and displayed on the right side of the Ui.","lastModifiedDate":"2021-04-12"},{"lineNumber":352,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":353,"author":{"gitId":"simran-bhadani3"},"content":"The underlying functionality for the `addItem` command utilises the `AddOrderItemCommand::execute` method which checks for duplicates of that particular `OrderItem` in the `UniqueOrderItemList` using the `Model::hasOrderItem` method. The `OrderItem` input by the user is added to the `UniqueOrderItemList` using the `Model::addOrderItem` method if no duplicates are found.  ","lastModifiedDate":"2021-04-12"},{"lineNumber":354,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":355,"author":{"gitId":"simran-bhadani3"},"content":"If the user wants to add an order item \"Chocolate Cake\" they can use the command `addItem Chocolate Cake`.","lastModifiedDate":"2021-04-12"},{"lineNumber":356,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":357,"author":{"gitId":"simran-bhadani3"},"content":"Given below is an example usage scenario and how the `addItem` mechanism works.","lastModifiedDate":"2021-04-12"},{"lineNumber":358,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":359,"author":{"gitId":"simran-bhadani3"},"content":"*Step 1.* The user keys in and executes the command `addItem Chocolate Cake` to add an order item with a `Type` field of \"Chocolate Cake\".","lastModifiedDate":"2021-04-12"},{"lineNumber":360,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":361,"author":{"gitId":"simran-bhadani3"},"content":"*Step 2.* The command is parsed by `AddOrderItemCommandParser`.","lastModifiedDate":"2021-04-12"},{"lineNumber":362,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":363,"author":{"gitId":"simran-bhadani3"},"content":"*Step 3.* The inputs are then checked for their validity. If no exceptions are detected, an `AddOrderItemCommand` will be created.","lastModifiedDate":"2021-04-12"},{"lineNumber":364,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":365,"author":{"gitId":"simran-bhadani3"},"content":"*Step 4.* `AddOrderItemCommand#execute` is called which updates the `UniqueOrderItemList` that is currently being displayed.","lastModifiedDate":"2021-04-12"},{"lineNumber":366,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":367,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":368,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":369,"author":{"gitId":"simran-bhadani3"},"content":"The following sequence diagram shows how this works:","lastModifiedDate":"2021-04-12"},{"lineNumber":370,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":371,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The CakeCollateParser creates AddOrderItemCommandParser and calls parse(\"Chocolate Cake\") while the LogicManager calls execute(). You can refer to the [Logic Component](#logic-component) for more details.","lastModifiedDate":"2021-04-12"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":373,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":375,"author":{"gitId":"simran-bhadani3"},"content":"![AddOrderItemSequenceDiagram](images/AddOrderItemSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":377,"author":{"gitId":"RuiXiong2211"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddOrderItemCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-04-12"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":379,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":381,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":384,"author":{"gitId":"simran-bhadani3"},"content":"#### Design considerations: ","lastModifiedDate":"2021-04-12"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":386,"author":{"gitId":"simran-bhadani3"},"content":"##### Aspect: Checking for duplicates when adding `OrderItem` to `UniqueOrderItemList`","lastModifiedDate":"2021-04-12"},{"lineNumber":387,"author":{"gitId":"simran-bhadani3"},"content":"* **Alternative 1 (current choice):** `Type::equals` method ignores case (returns `True` if the type is the same even if the case is different). ","lastModifiedDate":"2021-04-12"},{"lineNumber":388,"author":{"gitId":"simran-bhadani3"},"content":"   * Pros:","lastModifiedDate":"2021-04-12"},{"lineNumber":389,"author":{"gitId":"simran-bhadani3"},"content":"     * Prevents user from accidentally adding a duplicate `OrderItem` with the same value for `Type` but different case. ","lastModifiedDate":"2021-04-12"},{"lineNumber":390,"author":{"gitId":"simran-bhadani3"},"content":"   * Cons: ","lastModifiedDate":"2021-04-12"},{"lineNumber":391,"author":{"gitId":"simran-bhadani3"},"content":"     * Provides lesser flexibility to user who might want to add in the same order item with different case.","lastModifiedDate":"2021-04-12"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":393,"author":{"gitId":"simran-bhadani3"},"content":"* **Alternative 2:** `Type::equals` method considers case (returns `False` if case is different).","lastModifiedDate":"2021-04-12"},{"lineNumber":394,"author":{"gitId":"simran-bhadani3"},"content":"    * Pros:","lastModifiedDate":"2021-04-12"},{"lineNumber":395,"author":{"gitId":"simran-bhadani3"},"content":"      * Provides more flexibility to user who might want to add in the same order item with different case.","lastModifiedDate":"2021-04-12"},{"lineNumber":396,"author":{"gitId":"simran-bhadani3"},"content":"    * Cons:","lastModifiedDate":"2021-04-12"},{"lineNumber":397,"author":{"gitId":"simran-bhadani3"},"content":"      * User might accidentally add a duplicate `OrderItem` with the same value for `Type` but different case.","lastModifiedDate":"2021-04-12"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":401,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":403,"author":{"gitId":"simran-bhadani3"},"content":"### Delete Order Item Feature","lastModifiedDate":"2021-04-12"},{"lineNumber":404,"author":{"gitId":"simran-bhadani3"},"content":"The `deleteItem` command enables users to delete predefined order items (also known as cake items or order descriptions). The user can choose to delete a single order item or multiple order items at the same time.","lastModifiedDate":"2021-04-12"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":406,"author":{"gitId":"simran-bhadani3"},"content":"The `deleteItem` command utilises the `IndexList` class to enable the deletion of multiple items at once. The `IndexList` parser takes in a string of multiple indexes separated by spaces, parses them to `Index` and stores them in an `ArrayList\u003cIndex\u003e`.","lastModifiedDate":"2021-04-12"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":408,"author":{"gitId":"simran-bhadani3"},"content":"The underlying functionality for the `deleteItem` command utilises the `DeleteOrderItemCommand::execute` method which sorts the provided `Index List` in descending order. All the order items pertaining to the indexes input by the user are removed from the `UniqueOrderItemList` using the `Model::deleteOrderItem` method.","lastModifiedDate":"2021-04-12"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":410,"author":{"gitId":"simran-bhadani3"},"content":"If the user wants to delete order items at index `1` and `2` in the order items table, they can use the command `deleteItem 1 2`.","lastModifiedDate":"2021-04-12"},{"lineNumber":411,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":412,"author":{"gitId":"simran-bhadani3"},"content":"Given below is an example usage scenario and how the `deleteItem` mechanism works.","lastModifiedDate":"2021-04-12"},{"lineNumber":413,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":414,"author":{"gitId":"simran-bhadani3"},"content":"*Step 1.* The user keys in and executes the command `deleteItem 1 2` to delete the order items located at index 1 and 2 in the order items table.","lastModifiedDate":"2021-04-12"},{"lineNumber":415,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":416,"author":{"gitId":"simran-bhadani3"},"content":"*Step 2.* The command is parsed by `DeleteOrderItemCommandParser`.","lastModifiedDate":"2021-04-12"},{"lineNumber":417,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":418,"author":{"gitId":"simran-bhadani3"},"content":"*Step 3.* The inputs are then checked for their validity. If no exceptions are detected, a `DeleteOrderItemCommand` will be created.","lastModifiedDate":"2021-04-12"},{"lineNumber":419,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":420,"author":{"gitId":"simran-bhadani3"},"content":"*Step 4.* `DeleteOrderItemCommand#execute` is called which updates the `UniqueOrderItemList` that is currently being displayed.","lastModifiedDate":"2021-04-12"},{"lineNumber":421,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":422,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":423,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":424,"author":{"gitId":"xiinweii98"},"content":"The following sequence diagram shows how the `DeleteOrderItemCommandParser` works:","lastModifiedDate":"2021-04-12"},{"lineNumber":425,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":426,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The CakeCollateParser creates DeleteOrderItemCommandParser and calls parse(\"1 2\"). ","lastModifiedDate":"2021-04-12"},{"lineNumber":427,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":428,"author":{"gitId":"simran-bhadani3"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":429,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":430,"author":{"gitId":"simran-bhadani3"},"content":"![DeleteOrderItemParserSequenceDiagram](images/DeleteOrderItemParserSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":431,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":432,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteOrderItemCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-04-12"},{"lineNumber":433,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":434,"author":{"gitId":"simran-bhadani3"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":436,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":438,"author":{"gitId":"simran-bhadani3"},"content":"The following sequence diagram shows how the `DeleteOrderItemCommand` works:","lastModifiedDate":"2021-04-12"},{"lineNumber":439,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":440,"author":{"gitId":"simran-bhadani3"},"content":"![DeleteOrderItemSequenceDiagram](images/DeleteOrderItemSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":441,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":442,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":443,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The LogicManager calls execute(). You can refer to the [Logic Component](#logic-component) for more details.","lastModifiedDate":"2021-04-12"},{"lineNumber":444,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":445,"author":{"gitId":"simran-bhadani3"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":446,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":447,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":448,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":449,"author":{"gitId":"simran-bhadani3"},"content":"#### Design considerations:","lastModifiedDate":"2021-04-12"},{"lineNumber":450,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":451,"author":{"gitId":"simran-bhadani3"},"content":"##### Aspect: Parsing multiple indexes","lastModifiedDate":"2021-04-12"},{"lineNumber":452,"author":{"gitId":"simran-bhadani3"},"content":"* **Alternative 1 (current choice):** Create an IndexList class which can be used to store and parse multiple Indexes.","lastModifiedDate":"2021-04-12"},{"lineNumber":453,"author":{"gitId":"simran-bhadani3"},"content":"    * Pros:","lastModifiedDate":"2021-04-12"},{"lineNumber":454,"author":{"gitId":"simran-bhadani3"},"content":"        * Other commands which accept multiple indexes can also use methods from the IndexList class.","lastModifiedDate":"2021-04-12"},{"lineNumber":455,"author":{"gitId":"simran-bhadani3"},"content":"    * Cons:","lastModifiedDate":"2021-04-12"},{"lineNumber":456,"author":{"gitId":"simran-bhadani3"},"content":"        * Different commands have different requirements for index lists. For e.g. `DeleteOrderItemCommand` and `DeleteCommand` require that there should be no duplicate `Indexes` in the `IndexList` after parsing. However, the `AddOrderCommand` requires duplicate `Indexes` to also be stored. Each command has to implement additional checks when using `IndexList` due to differing requirements.","lastModifiedDate":"2021-04-12"},{"lineNumber":457,"author":{"gitId":"simran-bhadani3"},"content":"* **Alternative 2:** Simply use an `ArrayList` of `Index` without creating a new class.","lastModifiedDate":"2021-04-12"},{"lineNumber":458,"author":{"gitId":"simran-bhadani3"},"content":"    * Pros:","lastModifiedDate":"2021-04-12"},{"lineNumber":459,"author":{"gitId":"simran-bhadani3"},"content":"        * Each command can have its own implementation of `ArrayList` which suits its needs.","lastModifiedDate":"2021-04-12"},{"lineNumber":460,"author":{"gitId":"simran-bhadani3"},"content":"    * Cons:","lastModifiedDate":"2021-04-12"},{"lineNumber":461,"author":{"gitId":"simran-bhadani3"},"content":"        * Not extensible to other commands as they will have to implement their own `List` if they want to accept multiple indexes.","lastModifiedDate":"2021-04-12"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":463,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":466,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":467,"author":{"gitId":"pPris"},"content":"## **4. Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2021-04-12"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":470,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"pPris"},"content":"## **5. Appendix: Requirements**","lastModifiedDate":"2021-04-12"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"simran-bhadani3"},"content":"* small-time, home-based cake seller","lastModifiedDate":"2021-03-02"},{"lineNumber":484,"author":{"gitId":"simran-bhadani3"},"content":"* has a lot of orders to keep track of","lastModifiedDate":"2021-03-02"},{"lineNumber":485,"author":{"gitId":"simran-bhadani3"},"content":"* sells cakes on multiple platforms and wants to collect all orders in one place","lastModifiedDate":"2021-03-02"},{"lineNumber":486,"author":{"gitId":"simran-bhadani3"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2021-03-02"},{"lineNumber":487,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":489,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"simran-bhadani3"},"content":"**Value proposition**: keep track of and manage all orders placed on various online selling platforms in one place","lastModifiedDate":"2021-03-02"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":495,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":496,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"pPris"},"content":"| Priority| As a …​                                   | I can …​                                                        | So that …​                                                                                |","lastModifiedDate":"2021-03-02"},{"lineNumber":501,"author":{"gitId":"pPris"},"content":"|---------|----------------------------------------------|--------------------------------------------------------------------|----------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-03-02"},{"lineNumber":502,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | view all the possible commands that I can execute                  | I know what functionalities I can make use of when using the program                         |","lastModifiedDate":"2021-03-02"},{"lineNumber":503,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | add orders                                                         | I can add new orders to my database                                                          |","lastModifiedDate":"2021-04-12"},{"lineNumber":504,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | delete orders                                                      | I can remove unnecessary orders from my database                                             |","lastModifiedDate":"2021-04-12"},{"lineNumber":505,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | list all the orders I have entered in the app                      | I can view what orders I have to fulfil or have fulfilled                                         |","lastModifiedDate":"2021-04-12"},{"lineNumber":506,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | list all my orders for the day                                     | I can view what orders I have to fulfil for the day                                          |","lastModifiedDate":"2021-03-01"},{"lineNumber":507,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | retrieve data stored in the previous sessions                      | -                                                                                            |","lastModifiedDate":"2021-03-02"},{"lineNumber":508,"author":{"gitId":"pPris"},"content":"| `***`   | User logging in after a long time            | delete all orders, reset the application                           | I can start on a clean slate since the previous orders are now meaningless to me             |","lastModifiedDate":"2021-03-01"},{"lineNumber":509,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | load the app quickly                                               | I can access the data quickly                                                                |","lastModifiedDate":"2021-03-16"},{"lineNumber":510,"author":{"gitId":"pPris"},"content":"| `**`    | Advanced user                                | use shortcuts and short forms                                      | I can reduce the time it takes to enter orders                                               |","lastModifiedDate":"2021-03-15"},{"lineNumber":511,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | receive reminders for the orders due soon                          | I remember and complete them on time                                                         |","lastModifiedDate":"2021-03-02"},{"lineNumber":512,"author":{"gitId":"pPris"},"content":"| `**`    | User who is at least slightly experienced    | delete multiple orders at one go                                   | I can reflect mass cancellations in my database if they occur                                |","lastModifiedDate":"2021-03-15"},{"lineNumber":513,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | sort the orders according to which one needs to be completed first | I can prioritise the orders to work on for that day                                          |","lastModifiedDate":"2021-03-02"},{"lineNumber":514,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | edit individual orders                                             | I can update orders if a customer changes it instead of deleting and adding another order    |","lastModifiedDate":"2021-03-02"},{"lineNumber":515,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | add notes and special requests for orders                          | details on customized orders can be mentioned together with the main order                   |","lastModifiedDate":"2021-03-02"},{"lineNumber":516,"author":{"gitId":"pPris"},"content":"| `**`    | Regular user                                 | be warned of duplicate orders I might have accidentally entered    | I can avoid making more than necessary, which may waste time and resources                   |","lastModifiedDate":"2021-03-02"},{"lineNumber":517,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | add different statuses to my orders                                | I can keep track of whether my order is delivered, not delivered yet or cancelled.           |","lastModifiedDate":"2021-03-24"},{"lineNumber":518,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | find the orders made by a certain customer                         | I can retrieve information about the orders that this customer have made before, if needed   |","lastModifiedDate":"2021-03-02"},{"lineNumber":519,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | input multiple order descriptions at one go                        | I don\u0027t need to input multiple entries for customers who order more than one type of cake    |","lastModifiedDate":"2021-03-02"},{"lineNumber":520,"author":{"gitId":"pPris"},"content":"| `*`     | User                                         | set prices and costs of orders                                     | I can note how much profit I am earning                                                      |","lastModifiedDate":"2021-04-12"},{"lineNumber":521,"author":{"gitId":"pPris"},"content":"| `*`     | User                                         | save a particular customer\u0027s information                           | I can quickly add another order from this customer next time                                 |","lastModifiedDate":"2021-03-01"},{"lineNumber":522,"author":{"gitId":"pPris"},"content":"| `*`     | Regular user                                 | keep track of the money paid or owed by the customer               | I can ensure that all my dues have been received                                             |","lastModifiedDate":"2021-03-02"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":526,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"RuiXiong2211"},"content":"(For all use cases below, the **System** is `CakeCollate` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-03-02"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"pavz02"},"content":"**Use case: List all orders**","lastModifiedDate":"2021-04-10"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"RuiXiong2211"},"content":"1.  User requests to list order","lastModifiedDate":"2021-03-02"},{"lineNumber":535,"author":{"gitId":"RuiXiong2211"},"content":"2.  CakeCollate shows a list of orders","lastModifiedDate":"2021-03-02"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"RuiXiong2211"},"content":"**Use case: Add an order**","lastModifiedDate":"2021-03-02"},{"lineNumber":547,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":548,"author":{"gitId":"RuiXiong2211"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":550,"author":{"gitId":"RuiXiong2211"},"content":"1.  User requests to list order","lastModifiedDate":"2021-03-02"},{"lineNumber":551,"author":{"gitId":"RuiXiong2211"},"content":"2.  CakeCollate shows a list of orders","lastModifiedDate":"2021-03-02"},{"lineNumber":552,"author":{"gitId":"RuiXiong2211"},"content":"3.  User requests to add a specific order in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":553,"author":{"gitId":"RuiXiong2211"},"content":"4.  CakeCollate adds the order","lastModifiedDate":"2021-03-02"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":555,"author":{"gitId":"RuiXiong2211"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":556,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":557,"author":{"gitId":"RuiXiong2211"},"content":"**Use case: Edit an order**","lastModifiedDate":"2021-03-02"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":559,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":561,"author":{"gitId":"RuiXiong2211"},"content":"1.  User requests to list order","lastModifiedDate":"2021-03-02"},{"lineNumber":562,"author":{"gitId":"RuiXiong2211"},"content":"2.  CakeCollate shows a list of orders","lastModifiedDate":"2021-03-02"},{"lineNumber":563,"author":{"gitId":"RuiXiong2211"},"content":"3.  User requests to edit a specific order in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":564,"author":{"gitId":"RuiXiong2211"},"content":"4.  CakeCollate edits the order","lastModifiedDate":"2021-03-02"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":568,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":570,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":572,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":574,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":576,"author":{"gitId":"RuiXiong2211"},"content":"    * 3a1. CakeCollate shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":581,"author":{"gitId":"pavz02"},"content":"**Use case: Delete an order**","lastModifiedDate":"2021-04-10"},{"lineNumber":582,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":583,"author":{"gitId":"pavz02"},"content":"**MSS**","lastModifiedDate":"2021-04-10"},{"lineNumber":584,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":585,"author":{"gitId":"pavz02"},"content":"1.  User requests to list order","lastModifiedDate":"2021-04-10"},{"lineNumber":586,"author":{"gitId":"pavz02"},"content":"2.  CakeCollate shows a list of orders","lastModifiedDate":"2021-04-10"},{"lineNumber":587,"author":{"gitId":"pavz02"},"content":"3.  User requests to delete a specific list of orders","lastModifiedDate":"2021-04-10"},{"lineNumber":588,"author":{"gitId":"pavz02"},"content":"4.  CakeCollate deletes the specified orders","lastModifiedDate":"2021-04-10"},{"lineNumber":589,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":590,"author":{"gitId":"pavz02"},"content":"    Use case ends.","lastModifiedDate":"2021-04-10"},{"lineNumber":591,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":592,"author":{"gitId":"pavz02"},"content":"**Extensions**","lastModifiedDate":"2021-04-10"},{"lineNumber":593,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":594,"author":{"gitId":"pavz02"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-04-10"},{"lineNumber":595,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":596,"author":{"gitId":"pavz02"},"content":"  Use case ends.","lastModifiedDate":"2021-04-10"},{"lineNumber":597,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":598,"author":{"gitId":"pavz02"},"content":"* 3a. One or more indexes in the index list is invalid, without any negative indexes.","lastModifiedDate":"2021-04-10"},{"lineNumber":599,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":600,"author":{"gitId":"pavz02"},"content":"    * 3a1. CakeCollate shows an invalid index error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":601,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":602,"author":{"gitId":"pavz02"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-04-10"},{"lineNumber":603,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":604,"author":{"gitId":"pavz02"},"content":"* 3a. One or more indexes in the index list is negative.","lastModifiedDate":"2021-04-10"},{"lineNumber":605,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":606,"author":{"gitId":"pavz02"},"content":"    * 3a1. CakeCollate shows an invalid command format error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":607,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":608,"author":{"gitId":"pavz02"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-04-10"},{"lineNumber":609,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":610,"author":{"gitId":"pavz02"},"content":"    ","lastModifiedDate":"2021-04-10"},{"lineNumber":611,"author":{"gitId":"pavz02"},"content":"**Use case: undeliver/deliver/cancel an order**","lastModifiedDate":"2021-03-24"},{"lineNumber":612,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":613,"author":{"gitId":"pavz02"},"content":"**MSS**","lastModifiedDate":"2021-03-24"},{"lineNumber":614,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":615,"author":{"gitId":"pavz02"},"content":"1.  User requests to list orders","lastModifiedDate":"2021-03-24"},{"lineNumber":616,"author":{"gitId":"pavz02"},"content":"2.  CakeCollate shows a list of orders","lastModifiedDate":"2021-03-24"},{"lineNumber":617,"author":{"gitId":"simran-bhadani3"},"content":"3.  User requests to set a specific order, or a list of orders in the above list as undelivered/delivered/cancelled","lastModifiedDate":"2021-04-12"},{"lineNumber":618,"author":{"gitId":"simran-bhadani3"},"content":"4.  CakeCollate updates the order and sets the delivery status to undelivered/delivered/cancelled","lastModifiedDate":"2021-04-12"},{"lineNumber":619,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":620,"author":{"gitId":"pavz02"},"content":"    Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":621,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":622,"author":{"gitId":"pavz02"},"content":"**Extensions**","lastModifiedDate":"2021-03-24"},{"lineNumber":623,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":624,"author":{"gitId":"pavz02"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-24"},{"lineNumber":625,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":626,"author":{"gitId":"pavz02"},"content":"  Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":627,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":628,"author":{"gitId":"pavz02"},"content":"* 3a. One or more indexes in the index list is invalid, without any negative indexes in the index list.","lastModifiedDate":"2021-04-10"},{"lineNumber":629,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":630,"author":{"gitId":"pavz02"},"content":"    * 3a1. CakeCollate shows an invalid index error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":631,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":632,"author":{"gitId":"pavz02"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-04-10"},{"lineNumber":633,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":634,"author":{"gitId":"pavz02"},"content":"* 3a. One or more indexes in the index list is negative.","lastModifiedDate":"2021-04-10"},{"lineNumber":635,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":636,"author":{"gitId":"pavz02"},"content":"    * 3a1. CakeCollate shows an invalid command format error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":637,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":638,"author":{"gitId":"pavz02"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-24"},{"lineNumber":639,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":640,"author":{"gitId":"simran-bhadani3"},"content":"**Use case: Add an order item**","lastModifiedDate":"2021-04-12"},{"lineNumber":641,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":642,"author":{"gitId":"simran-bhadani3"},"content":"**MSS**","lastModifiedDate":"2021-04-12"},{"lineNumber":643,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":644,"author":{"gitId":"simran-bhadani3"},"content":"1.  User requests to add an order item to the order items table","lastModifiedDate":"2021-04-12"},{"lineNumber":645,"author":{"gitId":"simran-bhadani3"},"content":"2.  CakeCollate adds the item and displays it in the Order Items table on the right of the GUI","lastModifiedDate":"2021-04-12"},{"lineNumber":646,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":647,"author":{"gitId":"simran-bhadani3"},"content":"    Use case ends.","lastModifiedDate":"2021-04-12"},{"lineNumber":648,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":649,"author":{"gitId":"simran-bhadani3"},"content":"**Extensions**","lastModifiedDate":"2021-04-12"},{"lineNumber":650,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":651,"author":{"gitId":"simran-bhadani3"},"content":"* 1a. The order item description is invalid i.e. it contains invalid characters such as numbers and special characters or is blank.","lastModifiedDate":"2021-04-12"},{"lineNumber":652,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":653,"author":{"gitId":"simran-bhadani3"},"content":"    * 1a1. CakeCollate shows an error message stating that the order item description should only contain alphabets and shouldn\u0027t be blank.","lastModifiedDate":"2021-04-12"},{"lineNumber":654,"author":{"gitId":"simran-bhadani3"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":655,"author":{"gitId":"simran-bhadani3"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-04-12"},{"lineNumber":656,"author":{"gitId":"simran-bhadani3"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":657,"author":{"gitId":"simran-bhadani3"},"content":"**Use case: Delete an order item**","lastModifiedDate":"2021-04-12"},{"lineNumber":658,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":659,"author":{"gitId":"simran-bhadani3"},"content":"**MSS**","lastModifiedDate":"2021-04-12"},{"lineNumber":660,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":661,"author":{"gitId":"simran-bhadani3"},"content":"1.  User requests to delete a specific list of order items","lastModifiedDate":"2021-04-12"},{"lineNumber":662,"author":{"gitId":"simran-bhadani3"},"content":"2.  CakeCollate deletes the specified order items","lastModifiedDate":"2021-04-12"},{"lineNumber":663,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":664,"author":{"gitId":"simran-bhadani3"},"content":"    Use case ends.","lastModifiedDate":"2021-04-12"},{"lineNumber":665,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":666,"author":{"gitId":"simran-bhadani3"},"content":"**Extensions**","lastModifiedDate":"2021-04-12"},{"lineNumber":667,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":668,"author":{"gitId":"simran-bhadani3"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-04-12"},{"lineNumber":669,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":670,"author":{"gitId":"simran-bhadani3"},"content":"  Use case ends.","lastModifiedDate":"2021-04-12"},{"lineNumber":671,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":672,"author":{"gitId":"simran-bhadani3"},"content":"* 3a. One or more indexes input by the user exceeds the length of the current list.","lastModifiedDate":"2021-04-12"},{"lineNumber":673,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":674,"author":{"gitId":"simran-bhadani3"},"content":"    * 3a1. CakeCollate shows an error message stating that the index provided is invalid.","lastModifiedDate":"2021-04-12"},{"lineNumber":675,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":676,"author":{"gitId":"simran-bhadani3"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-04-12"},{"lineNumber":677,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":678,"author":{"gitId":"simran-bhadani3"},"content":"* 3b. One or more indexes input by the user is negative.","lastModifiedDate":"2021-04-12"},{"lineNumber":679,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":680,"author":{"gitId":"simran-bhadani3"},"content":"    * 3a1. CakeCollate shows an error message stating that the index can\u0027t be negative.","lastModifiedDate":"2021-04-12"},{"lineNumber":681,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":682,"author":{"gitId":"simran-bhadani3"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-04-12"},{"lineNumber":683,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":684,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":685,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":686,"author":{"gitId":"pavz02"},"content":"**Use case: Help needed for command summary**","lastModifiedDate":"2021-04-10"},{"lineNumber":687,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":688,"author":{"gitId":"pavz02"},"content":"**MSS**","lastModifiedDate":"2021-04-10"},{"lineNumber":689,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":690,"author":{"gitId":"simran-bhadani3"},"content":"1.  User requests for help","lastModifiedDate":"2021-04-12"},{"lineNumber":691,"author":{"gitId":"simran-bhadani3"},"content":"2.  CakeCollate shows a list of commands, their formats, descriptions, and examples","lastModifiedDate":"2021-04-12"},{"lineNumber":692,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":693,"author":{"gitId":"pavz02"},"content":"    Use case ends.","lastModifiedDate":"2021-04-10"},{"lineNumber":694,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":695,"author":{"gitId":"pavz02"},"content":"**Use case: Clear all existing orders and order items**","lastModifiedDate":"2021-04-10"},{"lineNumber":696,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":697,"author":{"gitId":"pavz02"},"content":"**MSS**","lastModifiedDate":"2021-04-10"},{"lineNumber":698,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":699,"author":{"gitId":"pavz02"},"content":"1.  User requests to clear all orders and order items.","lastModifiedDate":"2021-04-10"},{"lineNumber":700,"author":{"gitId":"pavz02"},"content":"2.  CakeCollate clears all orders and order items.","lastModifiedDate":"2021-04-10"},{"lineNumber":701,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":702,"author":{"gitId":"pavz02"},"content":"    Use case ends.","lastModifiedDate":"2021-04-10"},{"lineNumber":703,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":704,"author":{"gitId":"pavz02"},"content":"**Extensions**","lastModifiedDate":"2021-04-10"},{"lineNumber":705,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":706,"author":{"gitId":"pavz02"},"content":"* 2a. Both the order and the order item list are empty.","lastModifiedDate":"2021-04-10"},{"lineNumber":707,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":708,"author":{"gitId":"pavz02"},"content":"  Use case ends.","lastModifiedDate":"2021-04-10"},{"lineNumber":709,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":710,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":711,"author":{"gitId":"pavz02"},"content":"**Use case: Exit from CakeCollate**","lastModifiedDate":"2021-04-10"},{"lineNumber":712,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":713,"author":{"gitId":"pavz02"},"content":"**MSS**","lastModifiedDate":"2021-04-10"},{"lineNumber":714,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":715,"author":{"gitId":"pavz02"},"content":"1.  User requests to exit.","lastModifiedDate":"2021-04-10"},{"lineNumber":716,"author":{"gitId":"pavz02"},"content":"2.  CakeCollate is closed.","lastModifiedDate":"2021-04-10"},{"lineNumber":717,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":718,"author":{"gitId":"pavz02"},"content":"    Use case ends.","lastModifiedDate":"2021-04-10"},{"lineNumber":719,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":720,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":721,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":723,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"xiinweii98"},"content":"* Constraints:","lastModifiedDate":"2021-03-02"},{"lineNumber":726,"author":{"gitId":"xiinweii98"},"content":"    * CakeCollate should be backward compatible with data produced by earlier releases.","lastModifiedDate":"2021-03-02"},{"lineNumber":727,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":728,"author":{"gitId":"xiinweii98"},"content":"* Technical requirements:","lastModifiedDate":"2021-03-02"},{"lineNumber":729,"author":{"gitId":"xiinweii98"},"content":"    * CakeCollate should work on any _mainstream OS_ on both 32-bit and 64-bit environments with Java `11` or above installed.","lastModifiedDate":"2021-03-02"},{"lineNumber":730,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":731,"author":{"gitId":"xiinweii98"},"content":"* Performance requirements:","lastModifiedDate":"2021-03-02"},{"lineNumber":732,"author":{"gitId":"xiinweii98"},"content":"    * CakeCollate should be able to hold up to 1000 orders without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-03-02"},{"lineNumber":733,"author":{"gitId":"xiinweii98"},"content":"    * CakeCollate should response within two seconds for all commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":734,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":735,"author":{"gitId":"xiinweii98"},"content":"* Quality requirements:","lastModifiedDate":"2021-03-02"},{"lineNumber":736,"author":{"gitId":"xiinweii98"},"content":"    * A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-02"},{"lineNumber":737,"author":{"gitId":"xiinweii98"},"content":"    * A user who does not have much experience with command line interface tools should still be able to use CakeCollate with the help of the _[User guide](UserGuide.md)_ and the `help` command in CakeCollate.","lastModifiedDate":"2021-03-02"},{"lineNumber":738,"author":{"gitId":"xiinweii98"},"content":"    * A user who is experienced with command line interface tools should find CakeCollate commands easy to use.","lastModifiedDate":"2021-03-02"},{"lineNumber":739,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":740,"author":{"gitId":"xiinweii98"},"content":"* Process requirements:","lastModifiedDate":"2021-03-02"},{"lineNumber":741,"author":{"gitId":"xiinweii98"},"content":"    * The project is expected to adhere to a schedule that delivers a feature set every two weeks.","lastModifiedDate":"2021-03-02"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"pavz02"},"content":"* **MSS**: Main success scenario, lists the steps of a typical usage of the application by the user","lastModifiedDate":"2021-03-02"},{"lineNumber":750,"author":{"gitId":"pavz02"},"content":"* **Feature set**: A list of specifications and functionalities of the application","lastModifiedDate":"2021-03-02"},{"lineNumber":751,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":756,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":757,"author":{"gitId":"xiinweii98"},"content":"## **7. Appendix: Instructions for manual testing**","lastModifiedDate":"2021-04-11"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"pPris"},"content":"### Adding orders ","lastModifiedDate":"2021-04-12"},{"lineNumber":782,"author":{"gitId":"pPris"},"content":"1. Add an order to the database ","lastModifiedDate":"2021-04-12"},{"lineNumber":783,"author":{"gitId":"pPris"},"content":"    1. Prerequisites: none","lastModifiedDate":"2021-04-12"},{"lineNumber":784,"author":{"gitId":"pPris"},"content":"    1. Test case: `add n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567 d/13-05-2022 o/Chocolate Cake o/chocolate cake o/Mochi Cake t/friend t/daughter` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":785,"author":{"gitId":"pPris"},"content":"    Expected: A new entry corresponding to the details of this order is added to the Order Box. Details of the successful input is shown in the status box. If `Mochi Cake` and `Chocolate Cake` are not in the Order Items table previously, they should be added to it now.","lastModifiedDate":"2021-04-12"},{"lineNumber":786,"author":{"gitId":"pPris"},"content":"   1. `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/13-05-2022`","lastModifiedDate":"2021-04-12"},{"lineNumber":787,"author":{"gitId":"pPris"},"content":"      Expected: An invalid command format message with details is displayed. No order is added. ","lastModifiedDate":"2021-04-12"},{"lineNumber":788,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":789,"author":{"gitId":"simran-bhadani3"},"content":"### Deleting multiple orders","lastModifiedDate":"2021-03-26"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"pavz02"},"content":"1. Deleting multiple orders while all orders are being shown","lastModifiedDate":"2021-04-10"},{"lineNumber":792,"author":{"gitId":"xiinweii98"},"content":"    1. Prerequisites: List all orders using the `list` command. Multiple orders in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":793,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"simran-bhadani3"},"content":"       Expected: First order is deleted from the list. Details of the deleted order shown in the status message.","lastModifiedDate":"2021-03-26"},{"lineNumber":795,"author":{"gitId":"simran-bhadani3"},"content":"    1. Test case: `delete 1 2` \u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":796,"author":{"gitId":"simran-bhadani3"},"content":"       Expected: First and second orders are deleted from the list. Details of the deleted orders are shown in the status message.","lastModifiedDate":"2021-03-26"},{"lineNumber":797,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"simran-bhadani3"},"content":"    1. Test case: `delete 0 1`\u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":799,"author":{"gitId":"simran-bhadani3"},"content":"       Expected: No order is deleted. Error details shown in the status message.","lastModifiedDate":"2021-03-26"},{"lineNumber":800,"author":{"gitId":"-"},"content":"       ","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"simran-bhadani3"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":802,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"       ","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"xiinweii98"},"content":"### Finding orders","lastModifiedDate":"2021-04-12"},{"lineNumber":805,"author":{"gitId":"xiinweii98"},"content":"Prerequisites: Use the sample data provided on first start up. You can delete the `cakecollate.json` file in `/data` to reset CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":806,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":807,"author":{"gitId":"xiinweii98"},"content":"1. Finding all orders using a generic `OR` search","lastModifiedDate":"2021-04-12"},{"lineNumber":808,"author":{"gitId":"xiinweii98"},"content":"    1. Test case: `find serangoon vanilla`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":809,"author":{"gitId":"xiinweii98"},"content":"      Expected: 3 orders are listed.","lastModifiedDate":"2021-04-12"},{"lineNumber":810,"author":{"gitId":"xiinweii98"},"content":"        * Bernice with address containing `serangoon` and order description containing `vanilla`.","lastModifiedDate":"2021-04-12"},{"lineNumber":811,"author":{"gitId":"xiinweii98"},"content":"        * David with address containing `serangoon`.","lastModifiedDate":"2021-04-12"},{"lineNumber":812,"author":{"gitId":"xiinweii98"},"content":"        * Irfan with order description containing `vanilla`.","lastModifiedDate":"2021-04-12"},{"lineNumber":813,"author":{"gitId":"xiinweii98"},"content":"    1. Test case: `find n/Alex Bernice`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":814,"author":{"gitId":"xiinweii98"},"content":"      Expected: 2 orders are listed.","lastModifiedDate":"2021-04-12"},{"lineNumber":815,"author":{"gitId":"xiinweii98"},"content":"        * Alex with name containing `Alex`.","lastModifiedDate":"2021-04-12"},{"lineNumber":816,"author":{"gitId":"xiinweii98"},"content":"        * Bernice with name containing `Bernice`.","lastModifiedDate":"2021-04-12"},{"lineNumber":817,"author":{"gitId":"xiinweii98"},"content":"    1. Test case: `find durian`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":818,"author":{"gitId":"xiinweii98"},"content":"      Expected: 0 order listed.","lastModifiedDate":"2021-04-12"},{"lineNumber":819,"author":{"gitId":"xiinweii98"},"content":"    1. Test case: `find`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":820,"author":{"gitId":"xiinweii98"},"content":"      Expected: Error message shown.","lastModifiedDate":"2021-04-12"},{"lineNumber":821,"author":{"gitId":"xiinweii98"},"content":"    1. Test case: `find o/`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":822,"author":{"gitId":"xiinweii98"},"content":"      Expected: Error message shown.","lastModifiedDate":"2021-04-12"},{"lineNumber":823,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":824,"author":{"gitId":"xiinweii98"},"content":"1. Finding all orders using a specific `AND` search","lastModifiedDate":"2021-04-12"},{"lineNumber":825,"author":{"gitId":"xiinweii98"},"content":"    1. Test case: `find a/serangoon o/vanilla`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":826,"author":{"gitId":"xiinweii98"},"content":"      Expected: 1 order are listed.","lastModifiedDate":"2021-04-12"},{"lineNumber":827,"author":{"gitId":"xiinweii98"},"content":"        * Bernice with address containing `serangoon` and order description containing `vanilla`.","lastModifiedDate":"2021-04-12"},{"lineNumber":828,"author":{"gitId":"xiinweii98"},"content":"    1. Test case: `find p/durian o/singapore`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":829,"author":{"gitId":"xiinweii98"},"content":"      Expected: 0 order listed.    ","lastModifiedDate":"2021-04-12"},{"lineNumber":830,"author":{"gitId":"xiinweii98"},"content":"    1. Test case: `find o/ a/ d/`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":831,"author":{"gitId":"xiinweii98"},"content":"      Expected: Error message shown.","lastModifiedDate":"2021-04-12"},{"lineNumber":832,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":833,"author":{"gitId":"xiinweii98"},"content":"1. Finding all orders using both generic `OR` and specific `AND` search","lastModifiedDate":"2021-04-12"},{"lineNumber":834,"author":{"gitId":"xiinweii98"},"content":"    1. Test case: `find n/Alex Charlotte o/Chocolate`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":835,"author":{"gitId":"xiinweii98"},"content":"       Expected: 2 orders are listed.","lastModifiedDate":"2021-04-12"},{"lineNumber":836,"author":{"gitId":"xiinweii98"},"content":"         * Alex with name containing `Alex` and order description containing `Chocolate`.","lastModifiedDate":"2021-04-12"},{"lineNumber":837,"author":{"gitId":"xiinweii98"},"content":"         * Charlotte with name containing `Charlotte` and order description containing `Chocolate`.","lastModifiedDate":"2021-04-12"},{"lineNumber":838,"author":{"gitId":"xiinweii98"},"content":"    1. Test case: `find p/durian 100 o/singapore`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":839,"author":{"gitId":"xiinweii98"},"content":"       Expected: 0 order listed.","lastModifiedDate":"2021-04-12"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"RuiXiong2211"},"content":"### Receiving reminders for orders","lastModifiedDate":"2021-03-24"},{"lineNumber":842,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":843,"author":{"gitId":"RuiXiong2211"},"content":"1. Receiving reminders for all undelivered order within a specified time frame.","lastModifiedDate":"2021-04-11"},{"lineNumber":844,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":845,"author":{"gitId":"RuiXiong2211"},"content":"   1. Prerequisites: List all orders using the `list` command. Multiple orders in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":846,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":847,"author":{"gitId":"RuiXiong2211"},"content":"   1. Test case: `remind 5`\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":848,"author":{"gitId":"RuiXiong2211"},"content":"      Expected: All undelivered orders with a delivery date within 5 days from the delivery date displays on CakeCollate. The current date and the number of days from the current date for the date range to consider will appear in the status message. ","lastModifiedDate":"2021-04-11"},{"lineNumber":849,"author":{"gitId":"RuiXiong2211"},"content":"   1. Test case: `remind 0`\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":850,"author":{"gitId":"RuiXiong2211"},"content":"      Expected: Only undelivered orders that has the current date displays on CakeCollate. The current date and the number of days from the current date for the date range to consider will appear in the status message. ","lastModifiedDate":"2021-04-11"},{"lineNumber":851,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":852,"author":{"gitId":"RuiXiong2211"},"content":"   1. Other incorrect remind commands to try: `remind`, `remind x`, `...` (where x is not an integer more than or equal to 0)\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":853,"author":{"gitId":"RuiXiong2211"},"content":"      Expected: Error message showing the appropriate inputs to be parsed in the status message.","lastModifiedDate":"2021-03-24"},{"lineNumber":854,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":855,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":856,"author":{"gitId":"pavz02"},"content":"### Undelivering multiple orders","lastModifiedDate":"2021-04-10"},{"lineNumber":857,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":858,"author":{"gitId":"pavz02"},"content":"1. Undelivering multiple orders while all orders are being shown","lastModifiedDate":"2021-04-10"},{"lineNumber":859,"author":{"gitId":"pavz02"},"content":"    1. Prerequisites: List all orders using the `list` command.","lastModifiedDate":"2021-04-10"},{"lineNumber":860,"author":{"gitId":"pavz02"},"content":"    1. Test case: `undelivered 1`\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":861,"author":{"gitId":"pavz02"},"content":"       Expected: First order in the list is set to undelivered. Details of this order is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":862,"author":{"gitId":"pavz02"},"content":"    1. Test case: `undelivered 1 2` \u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":863,"author":{"gitId":"pavz02"},"content":"       Expected: First and second orders in the list are set to undelivered. Details of these orders are shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":864,"author":{"gitId":"pavz02"},"content":"    1. Test case: `undelivered 0 1`\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":865,"author":{"gitId":"pavz02"},"content":"       Expected: No changes made to any order. Invalid command format error is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":866,"author":{"gitId":"pavz02"},"content":"    1. Test case: `undelivered`\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":867,"author":{"gitId":"pavz02"},"content":"       Expected: No changes made to any order. Invalid command format error is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":868,"author":{"gitId":"pavz02"},"content":"    1. Test case:`undelivered x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":869,"author":{"gitId":"pavz02"},"content":"       Expected: No changes made to any order. Invalid index is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":870,"author":{"gitId":"pavz02"},"content":"       ","lastModifiedDate":"2021-04-10"},{"lineNumber":871,"author":{"gitId":"pavz02"},"content":"### Delivering multiple orders","lastModifiedDate":"2021-04-10"},{"lineNumber":872,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":873,"author":{"gitId":"pavz02"},"content":"1. Delivering multiple orders while all orders are being shown","lastModifiedDate":"2021-04-10"},{"lineNumber":874,"author":{"gitId":"pavz02"},"content":"    1. Prerequisites: List all orders using the `list` command.","lastModifiedDate":"2021-04-10"},{"lineNumber":875,"author":{"gitId":"pavz02"},"content":"    1. Test case: `delivered 1`\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":876,"author":{"gitId":"pavz02"},"content":"       Expected: First order in the list is set to delivered. Details of this order is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":877,"author":{"gitId":"pavz02"},"content":"    1. Test case: `delivered 1 2` \u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":878,"author":{"gitId":"pavz02"},"content":"       Expected: First and second orders in the list are set to delivered. Details of these orders are shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":879,"author":{"gitId":"pavz02"},"content":"    1. Test case: `delivered 0 1`\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":880,"author":{"gitId":"pavz02"},"content":"       Expected: No changes made to any order. Invalid command format error is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":881,"author":{"gitId":"pavz02"},"content":"    1. Test case: `delivered`\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":882,"author":{"gitId":"pavz02"},"content":"       Expected: No changes made to any order. Invalid command format error is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":883,"author":{"gitId":"pavz02"},"content":"    1. Test case:`delivered x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":884,"author":{"gitId":"pavz02"},"content":"       Expected: No changes made to any order. Invalid index is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":885,"author":{"gitId":"pavz02"},"content":"       ","lastModifiedDate":"2021-04-10"},{"lineNumber":886,"author":{"gitId":"pavz02"},"content":"### Cancelling multiple orders","lastModifiedDate":"2021-04-10"},{"lineNumber":887,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":888,"author":{"gitId":"pavz02"},"content":"1. Cancelling multiple orders while all orders are being shown","lastModifiedDate":"2021-04-10"},{"lineNumber":889,"author":{"gitId":"pavz02"},"content":"    1. Prerequisites: List all orders using the `list` command.","lastModifiedDate":"2021-04-10"},{"lineNumber":890,"author":{"gitId":"pavz02"},"content":"    1. Test case: `cancelled 1`\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":891,"author":{"gitId":"pavz02"},"content":"       Expected: First order in the list is set to cancelled. Details of this order is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":892,"author":{"gitId":"pavz02"},"content":"    1. Test case: `cancelled 1 2` \u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":893,"author":{"gitId":"pavz02"},"content":"       Expected: First and second orders in the list are set to cancelled. Details of these orders are shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":894,"author":{"gitId":"pavz02"},"content":"    1. Test case: `cancelled 0 1`\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":895,"author":{"gitId":"pavz02"},"content":"       Expected: No changes made to any order. Invalid command format error is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":896,"author":{"gitId":"pavz02"},"content":"    1. Test case: `cancelled`\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":897,"author":{"gitId":"pavz02"},"content":"       Expected: No changes made to any order. Invalid command format error is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":898,"author":{"gitId":"pavz02"},"content":"    1. Test case:`cancelled x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":899,"author":{"gitId":"pavz02"},"content":"       Expected: No changes made to any order. Invalid index is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":900,"author":{"gitId":"pavz02"},"content":" ","lastModifiedDate":"2021-04-10"},{"lineNumber":901,"author":{"gitId":"simran-bhadani3"},"content":"### Adding order items","lastModifiedDate":"2021-04-12"},{"lineNumber":902,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":903,"author":{"gitId":"simran-bhadani3"},"content":"1. Adding an order item to the order items table","lastModifiedDate":"2021-04-12"},{"lineNumber":904,"author":{"gitId":"simran-bhadani3"},"content":"    1. Prerequisites: none.","lastModifiedDate":"2021-04-12"},{"lineNumber":905,"author":{"gitId":"simran-bhadani3"},"content":"    1. Test case: `addItem Chocolate Cake`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":906,"author":{"gitId":"simran-bhadani3"},"content":"       Expected: A new Order Item with description \"Chocolate Cake\" is added to the order items table.","lastModifiedDate":"2021-04-12"},{"lineNumber":907,"author":{"gitId":"simran-bhadani3"},"content":"    1. Test case: `addItem 123`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":908,"author":{"gitId":"simran-bhadani3"},"content":"       Expected:  No order item is added. Error details shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":909,"author":{"gitId":"simran-bhadani3"},"content":"       ","lastModifiedDate":"2021-04-12"},{"lineNumber":910,"author":{"gitId":"simran-bhadani3"},"content":"### Deleting multiple order items","lastModifiedDate":"2021-04-12"},{"lineNumber":911,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":912,"author":{"gitId":"simran-bhadani3"},"content":"1. Deleting multiple order items from the order items table.","lastModifiedDate":"2021-04-12"},{"lineNumber":913,"author":{"gitId":"simran-bhadani3"},"content":"    1. Prerequisites: Multiple order items in the order items table.","lastModifiedDate":"2021-04-12"},{"lineNumber":914,"author":{"gitId":"simran-bhadani3"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":915,"author":{"gitId":"simran-bhadani3"},"content":"       Expected: First order item is deleted from the order items table. Details of the deleted order item shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":916,"author":{"gitId":"simran-bhadani3"},"content":"    1. Test case: `delete 1 2` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":917,"author":{"gitId":"simran-bhadani3"},"content":"       Expected: First and second order items are deleted from the order items table. Details of the deleted order items are shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":918,"author":{"gitId":"simran-bhadani3"},"content":"    1. Test case: `delete 0 1`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":919,"author":{"gitId":"simran-bhadani3"},"content":"       Expected: No order item is deleted. Error details shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":920,"author":{"gitId":"simran-bhadani3"},"content":"    1. Test case: `delete 0 1`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":921,"author":{"gitId":"simran-bhadani3"},"content":"       Expected: No order item is deleted. Error details shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":922,"author":{"gitId":"simran-bhadani3"},"content":"    1. Other incorrect deleteItem commands to try: `deleteItem`, `deleteItem x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":923,"author":{"gitId":"simran-bhadani3"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-04-12"},{"lineNumber":924,"author":{"gitId":"simran-bhadani3"},"content":"      ","lastModifiedDate":"2021-04-12"},{"lineNumber":925,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"xiinweii98"},"content":"   1. How to simulate a corrupted file:","lastModifiedDate":"2021-04-12"},{"lineNumber":929,"author":{"gitId":"xiinweii98"},"content":"      * Open the `cakecollate.json` file in the `/data` folder with Intellij or Notepad.","lastModifiedDate":"2021-04-12"},{"lineNumber":930,"author":{"gitId":"xiinweii98"},"content":"      * Change the `deliveryDate` of the first order to an invalid format.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":931,"author":{"gitId":"xiinweii98"},"content":"      I.e. `yyyy-dd-mm`","lastModifiedDate":"2021-04-12"},{"lineNumber":932,"author":{"gitId":"xiinweii98"},"content":"   1. Now run the application. Since the data file is not in the correct format, CakeCollate should start without any data.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":933,"author":{"gitId":"xiinweii98"},"content":"    I.e. all the previously stored data is lost.","lastModifiedDate":"2021-04-12"},{"lineNumber":934,"author":{"gitId":"pavz02"},"content":"    ","lastModifiedDate":"2021-04-11"},{"lineNumber":935,"author":{"gitId":"pavz02"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":937,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":938,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":939,"author":{"gitId":"xiinweii98"},"content":"## **8. Effort**","lastModifiedDate":"2021-04-11"},{"lineNumber":940,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":941,"author":{"gitId":"pavz02"},"content":"Creating CakeCollate required a lot of effort to be put in by all the team members to change the existing","lastModifiedDate":"2021-04-11"},{"lineNumber":942,"author":{"gitId":"pavz02"},"content":"AB3 project by introducing new models, commands and features which did not exist before.","lastModifiedDate":"2021-04-11"},{"lineNumber":943,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":944,"author":{"gitId":"pavz02"},"content":"Difficulty level: Hard","lastModifiedDate":"2021-04-11"},{"lineNumber":945,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":946,"author":{"gitId":"pavz02"},"content":"Challenges faced:","lastModifiedDate":"2021-04-11"},{"lineNumber":947,"author":{"gitId":"pavz02"},"content":"* Before starting to develop AB3 into CakeCollate, we had to spend time understanding the ","lastModifiedDate":"2021-04-11"},{"lineNumber":948,"author":{"gitId":"pavz02"},"content":"  existing commands, their implementation, and how the various parts of the application were ","lastModifiedDate":"2021-04-11"},{"lineNumber":949,"author":{"gitId":"pavz02"},"content":"  connected to each other.","lastModifiedDate":"2021-04-11"},{"lineNumber":950,"author":{"gitId":"pavz02"},"content":"    ","lastModifiedDate":"2021-04-11"},{"lineNumber":951,"author":{"gitId":"pavz02"},"content":"* As all the team members implemented different parts of CakeCollate simultaneously, it was ","lastModifiedDate":"2021-04-11"},{"lineNumber":952,"author":{"gitId":"pavz02"},"content":"  difficult to ensure that the modifications made by one person would not affect the modifications","lastModifiedDate":"2021-04-11"},{"lineNumber":953,"author":{"gitId":"pavz02"},"content":"  that another team member was making. A lot of testing and efficient communication was required","lastModifiedDate":"2021-04-11"},{"lineNumber":954,"author":{"gitId":"pavz02"},"content":"  to ensure that the workflow worked efficiently.","lastModifiedDate":"2021-04-11"},{"lineNumber":955,"author":{"gitId":"pavz02"},"content":"  ","lastModifiedDate":"2021-04-11"},{"lineNumber":956,"author":{"gitId":"pavz02"},"content":"* As two different models were implemented in CakeCollate, differentiating the commands used for","lastModifiedDate":"2021-04-11"},{"lineNumber":957,"author":{"gitId":"pavz02"},"content":"  both the models and implementing the interactions between the two models took time to work out.","lastModifiedDate":"2021-04-11"},{"lineNumber":958,"author":{"gitId":"pavz02"},"content":"  ","lastModifiedDate":"2021-04-11"},{"lineNumber":959,"author":{"gitId":"xiinweii98"},"content":"* Although the individual project used JavaFX, we were not very familiar with it. Hence, it took some","lastModifiedDate":"2021-04-12"},{"lineNumber":960,"author":{"gitId":"xiinweii98"},"content":"  trial and error was required to understand the JavaFX components and how they work.","lastModifiedDate":"2021-04-12"},{"lineNumber":961,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":962,"author":{"gitId":"pavz02"},"content":"Achievements of the project: ","lastModifiedDate":"2021-04-11"},{"lineNumber":963,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":964,"author":{"gitId":"pavz02"},"content":"* The needs of the user are our first priority and hence we included features that satisfy almost","lastModifiedDate":"2021-04-11"},{"lineNumber":965,"author":{"gitId":"pavz02"},"content":"  all the user stories that we hoped to satisfy in the table given in the User stories section of ","lastModifiedDate":"2021-04-11"},{"lineNumber":966,"author":{"gitId":"pavz02"},"content":"  this developer guide.","lastModifiedDate":"2021-04-11"},{"lineNumber":967,"author":{"gitId":"pavz02"},"content":"  ","lastModifiedDate":"2021-04-11"},{"lineNumber":968,"author":{"gitId":"pavz02"},"content":"* Extensive testing has been done to ensure minimum possible bugs in CakeCollate.","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"pPris":66,"pavz02":180,"RuiXiong2211":84,"xiinweii98":169,"-":276,"simran-bhadani3":193}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"   1. Run the `seedu.cakecollate.Main` and try a few commands.","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [CakeCollate’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"xiinweii98":2,"-":53}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"   e.g. `seedu.cakecollate.commons.StringUtilTest`","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"   e.g. `seedu.cakecollate.storage.StorageManagerTest`","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"   e.g. `seedu.cakecollate.logic.LogicManagerTest`","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"xiinweii98":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"\u003c!-- This UG\u0027s structure is inspired by ","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"https://ay2021s2-cs2103t-t11-2.github.io/tp/UserGuide.html#1-introduction","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"--\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"\u003cdiv class\u003d\"toc-no-bullet-points\"\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"  * Table of Contents","lastModifiedDate":"2021-04-03"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"  {:toc}","lastModifiedDate":"2021-04-03"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"## **1. Introduction**","lastModifiedDate":"2021-04-03"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"Welcome to our User Guide and thank you for using CakeCollate! Are you a home baker searching for a reliable tool to keep track of your orders? ","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"CakeCollate promises to be an efficient desktop application that allows you to easily consolidate and manage your orders. CakeCollate allows you to:\u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"1. Manage your orders including adding, editing and deleting orders","lastModifiedDate":"2021-04-16"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"2. Add cakes that you sell regularly to a predefined list","lastModifiedDate":"2021-04-16"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"3. Quickly select from a predefined list of cakes when adding new orders","lastModifiedDate":"2021-04-16"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"4. Quickly search through your existing orders","lastModifiedDate":"2021-04-16"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"5. Receive reminders for undelivered orders with delivery dates approaching soon","lastModifiedDate":"2021-04-16"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"6. Check the delivery status of your orders","lastModifiedDate":"2021-04-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you\u0027re a small-time cake seller that can type fast, CakeCollate can get your order management tasks done faster than traditional GUI applications.","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"Let us take you through how to use CakeCollate.","lastModifiedDate":"2021-04-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"## **2. Using the User Guide**","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"In this section, you can learn more about the different terminologies and what to expect from each section of the User Guide.","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"This allows you to better comprehend the terms that are used and quickly navigate to sections where the answers to your questions ","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"may lie.","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"### **2.1 What\u0027s in the User Guide**","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"In [Section 2.2: Reading the User Guide](#22-reading-the-user-guide), you can find essential information that enables you to read","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"the User Guide seamlessly.","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"In [Section 3: Getting started](#3-getting-started), you can find instructions on how to install and set up CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"In [Section 4: Commands and features](#4-commands-and-features), you can find instructions on the existing features and commands in CakeCollate","lastModifiedDate":"2021-04-16"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"as well as how you can use them to suit your needs.","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"In [Section 5: Glossary](#5-glossary), you can find some terms that have been frequently used in our User Guide and their definitions.","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"In [Section 6: FAQ](#6-faq), you can find answers to frequently asked questions.","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"In [Section 7: Command Summary](#7-command-and-prefix-summary), you can find a summary of all the available commands.","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"### **2.2 Reading the User Guide**","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"In this section, you will learn about CakeCollate\u0027s User Interface (UI), the format of commands, and the types of user inputs that you can specify in commands.","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"#### **2.2.1 Sections of the UI**","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"![User Interface](images/Annotated_Ui.PNG)","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"1. The **User Input Box** is where you can type in commands. Commands are what help you interact with CakeCollate. For example, you can use commands to tell CakeCollate to add a particular order, or display specific orders.","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"2. The **Result Box** is where response messages from CakeCollate are displayed. If your commands are valid and processed successfully by CakeCollate, a response message indicating success will be displayed. If your commands are invalid or processed unsuccessfully, then an error response message will be displayed.","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"3. The **Orders Box** is where all the orders that you have added to CakeCollate are displayed.","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"    :information_source: **In what order are orders displayed in CakeCollate?** \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"      * CakeCollates always displays orders by their statuses - first undelivered, then cancelled, and then delivered orders. ","lastModifiedDate":"2021-04-16"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"      * For orders that have the same statuses, they are then arranged according to delivery date, with the earliest date on the top of the GUI. ","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"4. The **Order Items Box** is where all the different type of order items you have predefined are displayed in an order items table. You can think of it as a product catalogue. ","lastModifiedDate":"2021-04-16"},{"lineNumber":77,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"#### **2.2.2 Formatting of the commands**","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"**:information_source: Interpreting command formats:**\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"* Words in `UPPER_CASE` are [types of user inputs](#223-types-of-user-input).\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"  E.g. in `add n/NAME`, `NAME` is a type of user input which can be used as `add n/John Doe`.","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"* Items in square brackets are optional fields that the user can choose to include or not.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"  E.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-04-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"* Items with `…`​ after them can be used multiple times. \u003cbr\u003e  E.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc. \u003c!-- order desc? --\u003e ","lastModifiedDate":"2021-04-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"* The different types of user input can be placed in any order.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"  E.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-04-12"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"* If a particular type of input is expected only once in a command, but has been specified multiple times, only the last occurrence will be taken.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"  E.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-04-12"},{"lineNumber":99,"author":{"gitId":"pPris"},"content":"  ","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"* If a user input is specified for a command that does not accept it, (such as [`help`](#viewing-help-help), [`list`](#list-all-existing-orders-list), [`exit`](#exiting-the-program--exit) and [`clear`](#clearing-all-existing-orders-and-order-items-clear)) it will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"  E.g. if you specify `help 123`, `123` will be ignored and the command will be interpreted as `help`.","lastModifiedDate":"2021-04-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"#### **2.2.3 Types of user input**","lastModifiedDate":"2021-04-12"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"In this section, you will learn about the commonly used user inputs as well as their accompanying prefixes. ","lastModifiedDate":"2021-04-12"},{"lineNumber":109,"author":{"gitId":"RuiXiong2211"},"content":"These will be helpful when you are trying to specify the fields for certain commands.","lastModifiedDate":"2021-04-10"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":111,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"##### `ADDRESS`","lastModifiedDate":"2021-04-08"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"The address of the customer who has placed the order.\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"Prefix: `a/`","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"* It can contain all types of characters.","lastModifiedDate":"2021-04-12"},{"lineNumber":116,"author":{"gitId":"xiinweii98"},"content":"* It cannot be empty.","lastModifiedDate":"2021-04-08"},{"lineNumber":117,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":118,"author":{"gitId":"RuiXiong2211"},"content":"##### `DAYS`","lastModifiedDate":"2021-04-10"},{"lineNumber":119,"author":{"gitId":"xiinweii98"},"content":"The number of days from today\u0027s date.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":120,"author":{"gitId":"RuiXiong2211"},"content":"Prefix: `none`","lastModifiedDate":"2021-04-10"},{"lineNumber":121,"author":{"gitId":"xiinweii98"},"content":"* It can contain integers greater than or equal to 0.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":122,"author":{"gitId":"RuiXiong2211"},"content":"  E.g. `0`,`365`,`99`","lastModifiedDate":"2021-04-10"},{"lineNumber":123,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":124,"author":{"gitId":"xiinweii98"},"content":"##### `DELIVERY_DATE`","lastModifiedDate":"2021-04-08"},{"lineNumber":125,"author":{"gitId":"xiinweii98"},"content":"The delivery date for the order.\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":126,"author":{"gitId":"xiinweii98"},"content":"Prefix: `d/`","lastModifiedDate":"2021-04-08"},{"lineNumber":127,"author":{"gitId":"xiinweii98"},"content":"* It should be a valid calendar date.","lastModifiedDate":"2021-04-08"},{"lineNumber":128,"author":{"gitId":"simran-bhadani3"},"content":"* It should be in one of the following formats:","lastModifiedDate":"2021-04-12"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"  * `dd/MM/yyyy` E.g. `01/01/2021`","lastModifiedDate":"2021-04-12"},{"lineNumber":130,"author":{"gitId":"xiinweii98"},"content":"  * `dd-MM-yyyy` E.g. `31-01-2021`","lastModifiedDate":"2021-04-12"},{"lineNumber":131,"author":{"gitId":"xiinweii98"},"content":"  * `dd.MM.yyyy` E.g. `01.12.2021`","lastModifiedDate":"2021-04-08"},{"lineNumber":132,"author":{"gitId":"xiinweii98"},"content":"  * `dd MMM yyyy` E.g. `31 Dec 2021`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":133,"author":{"gitId":"xiinweii98"},"content":"  :information_source: Dates and months from `1-9` should be specified as `01-09`. E.g. The first of January should be specified as `01/01` instead of `1/1`.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":134,"author":{"gitId":"xiinweii98"},"content":"  :information_source: `MMM` specifies the first three characters of the month. The first character should be capitalised.","lastModifiedDate":"2021-04-12"},{"lineNumber":135,"author":{"gitId":"simran-bhadani3"},"content":"* When adding or editing an order, the `DELIVERY_DATE` should either be today\u0027s date or a date in the future.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":136,"author":{"gitId":"xiinweii98"},"content":"  I.e. the date today or a date after today.","lastModifiedDate":"2021-04-08"},{"lineNumber":137,"author":{"gitId":"xiinweii98"},"content":"* Orders with a `DELIVERY_DATE` before today\u0027s date will not be deleted.\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":138,"author":{"gitId":"simran-bhadani3"},"content":"  I.e. If you enter an order with a `DELIVERY_DATE` for tomorrow, the order will not be deleted even if you launch the application again in two days.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":139,"author":{"gitId":"xiinweii98"},"content":":information_source: You do not have to worry about losing track of overdue orders.\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":140,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":141,"author":{"gitId":"simran-bhadani3"},"content":"**:exclamation: For advanced users:** You can set the delivery date of an order that is yet to be delivered to a past date in the storage file, `cakecollate.json`. The application will not be able to warn you that you have added an invalid delivery date. As such, you are recommended to add/edit a delivery date through the application itself.","lastModifiedDate":"2021-04-12"},{"lineNumber":142,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":143,"author":{"gitId":"RuiXiong2211"},"content":"##### `INDEX`","lastModifiedDate":"2021-04-10"},{"lineNumber":144,"author":{"gitId":"RuiXiong2211"},"content":"Each order is given a particular index so that you can easily refer to an order for certain commands. In particular, the index of an order can be found beside the name of the customer in the [orders box](#221-sections-of-the-ui).\u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":145,"author":{"gitId":"RuiXiong2211"},"content":"Prefix: `none`","lastModifiedDate":"2021-04-10"},{"lineNumber":146,"author":{"gitId":"xiinweii98"},"content":"* It can contain positive integers greater than or equal to 1, but should not be greater than the total number of orders in ","lastModifiedDate":"2021-04-12"},{"lineNumber":147,"author":{"gitId":"xiinweii98"},"content":"the orders box.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":148,"author":{"gitId":"RuiXiong2211"},"content":"  E.g. `1`,`20`,`35`","lastModifiedDate":"2021-04-10"},{"lineNumber":149,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":150,"author":{"gitId":"pPris"},"content":"##### `INDEXES`","lastModifiedDate":"2021-04-11"},{"lineNumber":151,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":152,"author":{"gitId":"xiinweii98"},"content":"Certain commands (such as [`delete`](#deleting-an-order-delete)) allow you to specify multiple [index](#index), which allows you to delete multiple orders at one go.","lastModifiedDate":"2021-04-12"},{"lineNumber":153,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":154,"author":{"gitId":"pPris"},"content":"Prefix: `none`","lastModifiedDate":"2021-04-11"},{"lineNumber":155,"author":{"gitId":"simran-bhadani3"},"content":"* To specify multiple indexes separate them with a space.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"  E.g. `1 2 5`","lastModifiedDate":"2021-04-12"},{"lineNumber":157,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":158,"author":{"gitId":"RuiXiong2211"},"content":"##### `EMAIL`","lastModifiedDate":"2021-04-10"},{"lineNumber":159,"author":{"gitId":"RuiXiong2211"},"content":"The email of the customer who has placed the order.\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":160,"author":{"gitId":"RuiXiong2211"},"content":"Prefix: `e/`","lastModifiedDate":"2021-04-10"},{"lineNumber":161,"author":{"gitId":"RuiXiong2211"},"content":"* Emails should be of the format `local-part@domain`.","lastModifiedDate":"2021-04-10"},{"lineNumber":162,"author":{"gitId":"simran-bhadani3"},"content":"* `local-part` can contain alphabetical and numerical characters and also the following special characters: ``!#$%\u0026\u0027*+/\u003d?`{|}~^.-``.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":163,"author":{"gitId":"RuiXiong2211"},"content":"  E.g. `alice#3in?wonderland!`","lastModifiedDate":"2021-04-10"},{"lineNumber":164,"author":{"gitId":"RuiXiong2211"},"content":"* `domain` should","lastModifiedDate":"2021-04-10"},{"lineNumber":165,"author":{"gitId":"RuiXiong2211"},"content":"  * be at least 2 characters long","lastModifiedDate":"2021-04-10"},{"lineNumber":166,"author":{"gitId":"RuiXiong2211"},"content":"  * start and end with alphabetical or numerical characters","lastModifiedDate":"2021-04-10"},{"lineNumber":167,"author":{"gitId":"RuiXiong2211"},"content":"  * contain alphabetical or numerical characters, a period `.` or a hyphen `-` for the characters in between, if any.\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":168,"author":{"gitId":"RuiXiong2211"},"content":"  E.g. `sample-domain.com`","lastModifiedDate":"2021-04-10"},{"lineNumber":169,"author":{"gitId":"RuiXiong2211"},"content":"  ","lastModifiedDate":"2021-04-10"},{"lineNumber":170,"author":{"gitId":"RuiXiong2211"},"content":"##### `NAME`","lastModifiedDate":"2021-04-10"},{"lineNumber":171,"author":{"gitId":"RuiXiong2211"},"content":"The name of the customer who has placed the order.\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":172,"author":{"gitId":"RuiXiong2211"},"content":"Prefix: `n/`","lastModifiedDate":"2021-04-10"},{"lineNumber":173,"author":{"gitId":"simran-bhadani3"},"content":"* It can contain alphabets, numbers and spaces.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":174,"author":{"gitId":"RuiXiong2211"},"content":"  E.g. `Alex Yeoh`, `Johnathan9`, `Charlotte the 5th`","lastModifiedDate":"2021-04-10"},{"lineNumber":175,"author":{"gitId":"RuiXiong2211"},"content":"* It cannot be longer than 70 characters.","lastModifiedDate":"2021-04-10"},{"lineNumber":176,"author":{"gitId":"RuiXiong2211"},"content":"* It cannot be empty.","lastModifiedDate":"2021-04-10"},{"lineNumber":177,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":178,"author":{"gitId":"xiinweii98"},"content":"##### `ORDER_DESCRIPTION`","lastModifiedDate":"2021-04-08"},{"lineNumber":179,"author":{"gitId":"RuiXiong2211"},"content":"The order description of the order.\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":180,"author":{"gitId":"xiinweii98"},"content":"Prefix: `o/`","lastModifiedDate":"2021-04-08"},{"lineNumber":181,"author":{"gitId":"simran-bhadani3"},"content":"* It can contain alphabets and spaces.","lastModifiedDate":"2021-04-12"},{"lineNumber":182,"author":{"gitId":"simran-bhadani3"},"content":"* It cannot be longer than 70 characters.","lastModifiedDate":"2021-04-12"},{"lineNumber":183,"author":{"gitId":"xiinweii98"},"content":"* It cannot be empty.\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":184,"author":{"gitId":"RuiXiong2211"},"content":"  E.g. `Durian Cake`, `Blackforest Cake`","lastModifiedDate":"2021-04-10"},{"lineNumber":185,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":187,"author":{"gitId":"xiinweii98"},"content":"##### `ORDER_ITEM_INDEXES`","lastModifiedDate":"2021-04-08"},{"lineNumber":188,"author":{"gitId":"simran-bhadani3"},"content":"The order item index in the order items table.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":189,"author":{"gitId":"xiinweii98"},"content":"Prefix: `oi/`","lastModifiedDate":"2021-04-08"},{"lineNumber":190,"author":{"gitId":"simran-bhadani3"},"content":"* This refers to indexes of the order items in the order items table located in the [order items box](#221-sections-of-the-ui).","lastModifiedDate":"2021-04-16"},{"lineNumber":191,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":192,"author":{"gitId":"RuiXiong2211"},"content":"##### `PHONE_NUMBER`","lastModifiedDate":"2021-04-10"},{"lineNumber":193,"author":{"gitId":"RuiXiong2211"},"content":"The phone number of the customer who has placed the order.\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":194,"author":{"gitId":"RuiXiong2211"},"content":"Prefix: `p/`","lastModifiedDate":"2021-04-10"},{"lineNumber":195,"author":{"gitId":"simran-bhadani3"},"content":"* It can contain only numbers.\u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":196,"author":{"gitId":"RuiXiong2211"},"content":"  E.g. `90126969`","lastModifiedDate":"2021-04-10"},{"lineNumber":197,"author":{"gitId":"RuiXiong2211"},"content":"* It should be at least 3 digits long.","lastModifiedDate":"2021-04-10"},{"lineNumber":198,"author":{"gitId":"RuiXiong2211"},"content":"* It cannot be longer than 20 digits.","lastModifiedDate":"2021-04-10"},{"lineNumber":199,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":200,"author":{"gitId":"xiinweii98"},"content":"##### `REQUEST`","lastModifiedDate":"2021-04-08"},{"lineNumber":201,"author":{"gitId":"simran-bhadani3"},"content":"The special request or notes you can add to an order. What makes it different from tags is that it can contain a","lastModifiedDate":"2021-04-12"},{"lineNumber":202,"author":{"gitId":"xiinweii98"},"content":"large amount of information.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":203,"author":{"gitId":"xiinweii98"},"content":"Prefix: `r/`","lastModifiedDate":"2021-04-08"},{"lineNumber":204,"author":{"gitId":"simran-bhadani3"},"content":"* It can contain all types of characters.","lastModifiedDate":"2021-04-12"},{"lineNumber":205,"author":{"gitId":"xiinweii98"},"content":"* It can be empty.","lastModifiedDate":"2021-04-08"},{"lineNumber":206,"author":{"gitId":"xiinweii98"},"content":"  * An empty request is used to clear/reset the `REQUEST` field of the order.","lastModifiedDate":"2021-04-08"},{"lineNumber":207,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":208,"author":{"gitId":"simran-bhadani3"},"content":":information_source: User input of type `REQUEST` and its prefix `r/` should only be specified in the [`request`](#adding-a-special-request-to-an-order-request) and [`find`](#locating-orders-find) commands.","lastModifiedDate":"2021-04-16"},{"lineNumber":209,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":210,"author":{"gitId":"RuiXiong2211"},"content":"##### `TAG`","lastModifiedDate":"2021-04-10"},{"lineNumber":211,"author":{"gitId":"RuiXiong2211"},"content":"The tags you can add to an order. A small piece of information you can add to an order.\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":212,"author":{"gitId":"RuiXiong2211"},"content":"Prefix: `t/`","lastModifiedDate":"2021-04-10"},{"lineNumber":213,"author":{"gitId":"RuiXiong2211"},"content":"* It can contain alphabetical or numerical characters but not spaces.","lastModifiedDate":"2021-04-10"},{"lineNumber":214,"author":{"gitId":"RuiXiong2211"},"content":"* Each tag cannot be longer than 30 characters.","lastModifiedDate":"2021-04-10"},{"lineNumber":215,"author":{"gitId":"RuiXiong2211"},"content":"* There is no specific usage for `TAG`.","lastModifiedDate":"2021-04-10"},{"lineNumber":216,"author":{"gitId":"RuiXiong2211"},"content":"  * Use it as a tag for the customer. E.g. `friend`, `fussy`, `important`","lastModifiedDate":"2021-04-10"},{"lineNumber":217,"author":{"gitId":"RuiXiong2211"},"content":"  * Use it as a tag for the order. E.g. `urgent`, `complicated`","lastModifiedDate":"2021-04-10"},{"lineNumber":218,"author":{"gitId":"RuiXiong2211"},"content":"    ","lastModifiedDate":"2021-04-10"},{"lineNumber":219,"author":{"gitId":"simran-bhadani3"},"content":"**:exclamation: For advanced users:** Only `NAME`, `ADDRESS`, `ORDER_DESCRIPTION` and `DELIVERY_DATE` are taken into consideration when checking whether two orders are the same.","lastModifiedDate":"2021-04-16"},{"lineNumber":220,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":221,"author":{"gitId":"xiinweii98"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":223,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":225,"author":{"gitId":"xiinweii98"},"content":"## **3. Getting started**","lastModifiedDate":"2021-04-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":227,"author":{"gitId":"simran-bhadani3"},"content":"1. Ensure you have Java `11` or above installed on your computer.","lastModifiedDate":"2021-04-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":229,"author":{"gitId":"xiinweii98"},"content":"2. Download the latest `cakecollate.jar` from [here](https://github.com/AY2021S2-CS2103T-T11-4/tp/releases).","lastModifiedDate":"2021-04-12"},{"lineNumber":230,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":231,"author":{"gitId":"simran-bhadani3"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for CakeCollate.","lastModifiedDate":"2021-04-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"xiinweii98"},"content":"4. Double-click the file to start CakeCollate. A GUI similar to the below should appear in a few seconds. Note how the application contains some sample data. ","lastModifiedDate":"2021-04-12"},{"lineNumber":234,"author":{"gitId":"xiinweii98"},"content":"You can use the sample data pre-loaded in the application to play around and get used to the available commands. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":235,"author":{"gitId":"xiinweii98"},"content":"  ![Ui](images/Ui.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":236,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":237,"author":{"gitId":"simran-bhadani3"},"content":"5. Type a command in the command box and press Enter to execute it.\u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":238,"author":{"gitId":"xiinweii98"},"content":"   E.g. typing **`help`** and pressing Enter will display the help window.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-04-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"xiinweii98"},"content":"   * **`list`** : Lists all orders in CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":243,"author":{"gitId":"xiinweii98"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/13-05-2021 o/Strawberry Cake` : Adds a `Strawberry Cake` order to CakeCollate.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":244,"author":{"gitId":"xiinweii98"},"content":"   :information_source: Please note that `d/13-05-2021` may become an invalid date depending on when you view this User Guide. Refer to [`DELIVERY_DATE`](#delivery_date) to check the constraints.","lastModifiedDate":"2021-04-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":246,"author":{"gitId":"simran-bhadani3"},"content":"   * **`delete`**`3` : Deletes the 3rd order shown in the currently displayed list.","lastModifiedDate":"2021-04-16"},{"lineNumber":247,"author":{"gitId":"RuiXiong2211"},"content":"   ","lastModifiedDate":"2021-04-04"},{"lineNumber":248,"author":{"gitId":"xiinweii98"},"content":"   * **`remind`**`2` : Lists all undelivered orders that are within 2 days from today\u0027s date.","lastModifiedDate":"2021-04-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":250,"author":{"gitId":"simran-bhadani3"},"content":"   * **`clear`** : Deletes all orders and order items from CakeCollate.","lastModifiedDate":"2021-04-16"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":252,"author":{"gitId":"simran-bhadani3"},"content":"   * **`exit`** : Closes the application.","lastModifiedDate":"2021-04-16"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":254,"author":{"gitId":"simran-bhadani3"},"content":"6. Refer to the [Commands and features](#4-commands-and-features) section below to know about each command in detail.","lastModifiedDate":"2021-04-16"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":258,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":260,"author":{"gitId":"xiinweii98"},"content":"## **4. Commands and features**","lastModifiedDate":"2021-04-12"},{"lineNumber":261,"author":{"gitId":"RuiXiong2211"},"content":"This section contains information about all existing commands and features that we have implemented.","lastModifiedDate":"2021-04-04"},{"lineNumber":262,"author":{"gitId":"simran-bhadani3"},"content":"Being well-versed with these commands and features will enable you to use CakeCollate to its fullest potential.","lastModifiedDate":"2021-04-16"},{"lineNumber":263,"author":{"gitId":"xiinweii98"},"content":"This section is categorised into 3 parts: [orders](#41-orders), [order items](#42-order-items) and [others](#43-others).","lastModifiedDate":"2021-04-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":265,"author":{"gitId":"RuiXiong2211"},"content":"### **4.1 Orders**","lastModifiedDate":"2021-04-03"},{"lineNumber":266,"author":{"gitId":"xiinweii98"},"content":"This section contains information about the commands that can modify the [orders box](#221-sections-of-the-ui).","lastModifiedDate":"2021-04-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":268,"author":{"gitId":"xiinweii98"},"content":"#### **4.1.1** ***Modifying the data***","lastModifiedDate":"2021-04-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":270,"author":{"gitId":"RuiXiong2211"},"content":"##### Adding an order: `add`","lastModifiedDate":"2021-04-03"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"simran-bhadani3"},"content":"Add an order to CakeCollate. The delivery status of the order will be undelivered by default, but can be modified with the [`delivered`](#setting-the-delivery-status-of-an-order-as-delivered-delivered) and [`cancelled`](#setting-the-delivery-status-of-an-order-as-cancelled-cancelled) commands.","lastModifiedDate":"2021-04-16"},{"lineNumber":273,"author":{"gitId":"xiinweii98"},"content":"The special request of the order will be initialised as none, but can be modified with the [`request`](#adding-a-special-request-to-an-order-request) command.","lastModifiedDate":"2021-04-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"xiinweii98"},"content":"###### Basic format","lastModifiedDate":"2021-04-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"xiinweii98"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS d/DELIVERY_DATE o/ORDER_DESCRIPTION…​ [t/TAG]…​`","lastModifiedDate":"2021-04-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"xiinweii98"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567 d/13-05-2022 o/Chocolate Cake o/chocolate cake o/Mochi Cake t/friend t/daughter` adds an order with all compulsory fields, three order descriptions, and a friend and daughter tag.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":282,"author":{"gitId":"xiinweii98"},"content":"  ![add_basic_1](images/add_basic_1.PNG)","lastModifiedDate":"2021-04-12"},{"lineNumber":283,"author":{"gitId":"xiinweii98"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567 d/13-05-2022 o/Chocolate Cake` adds an order with all compulsory fields, one order description and no tags.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":284,"author":{"gitId":"xiinweii98"},"content":"![add_basic_2](images/add_basic_2.PNG)","lastModifiedDate":"2021-04-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"pPris"},"content":":information_source: **How do you specify that a cake has been ordered multiple times?**\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":287,"author":{"gitId":"simran-bhadani3"},"content":"* If your customer orders 2 chocolate cakes and 1 mochi cake, you can specify the `o/` prefix twice, e.g. `o/Chocolate Cake o/Chocolate Cake o/Mochi Cake` (same as the first example above)","lastModifiedDate":"2021-04-16"},{"lineNumber":288,"author":{"gitId":"simran-bhadani3"},"content":"* The GUI will then display `2 x Chocolate Cake` and `1 x Mochi Cake` in the newly added order.","lastModifiedDate":"2021-04-16"},{"lineNumber":289,"author":{"gitId":"simran-bhadani3"},"content":"  * Note how there is no need for you to type `2 x` or `1 x` - CakeCollate helps you to count the number of times each order description has been input.","lastModifiedDate":"2021-04-16"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":291,"author":{"gitId":"pPris"},"content":":information_source: **Order descriptions are not case-sensitive**\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":292,"author":{"gitId":"pPris"},"content":"  * CakeCollate recognizes that `Chocolate cake` and `chocolatE caKe` are the same order description and will treat them like the same `Chocolate Cake`, so if you add `o/Chocolate cake o/chocoLATE CAKE` to your order, it will be still displayed as `2 x Chocolate Cake`, making your GUI look neat.  ","lastModifiedDate":"2021-04-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":294,"author":{"gitId":"RuiXiong2211"},"content":"###### Alternative format ","lastModifiedDate":"2021-04-03"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"xiinweii98"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS d/DELIVERY_DATE oi/ORDER_ITEM_INDEXES [o/ORDER_DESCRIPTION]…​ [t/TAG]…​`","lastModifiedDate":"2021-04-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"RuiXiong2211"},"content":"* The difference here compared to the previous format is that you can omit the `ORDER_DESCRIPTION` input, but you need to include an `ORDER_ITEM_INDEXES` input.","lastModifiedDate":"2021-04-16"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":300,"author":{"gitId":"simran-bhadani3"},"content":"* This alternative format is aimed at saving you some typing. If an order description you want to specify already exists in the order items table located in the [order items box](#221-sections-of-the-ui), you can specify its index instead of typing its entire name out.","lastModifiedDate":"2021-04-16"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"simran-bhadani3"},"content":"* For example, for an order that involves Chocolate Cake, if `Chocolate Cake` exists in the order items table located in the [order items box](#221-sections-of-the-ui) as shown, instead of typing `o/Chocolate Cake`, you can type `oi/4`.","lastModifiedDate":"2021-04-16"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":304,"author":{"gitId":"simran-bhadani3"},"content":"* As such, you can interpret the order items table of the GUI as being a shortcut table.","lastModifiedDate":"2021-04-12"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":306,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":310,"author":{"gitId":"xiinweii98"},"content":"![order_item_table_eg](images/order_item_table_eg.PNG)\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":311,"author":{"gitId":"xiinweii98"},"content":"(This is a screenshot extracted from the sample [here](#221-sections-of-the-ui))","lastModifiedDate":"2021-04-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"xiinweii98"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/13-05-2022 oi/1 4 5` adds an order with all compulsory fields and adds order items 1, 4, 5 of order items table to the order.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":314,"author":{"gitId":"xiinweii98"},"content":"![add_alt_1](images/add_alt_1.PNG)","lastModifiedDate":"2021-04-12"},{"lineNumber":315,"author":{"gitId":"simran-bhadani3"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/13-05-2022 o/Strawberry Cake oi/1` adds an order with all compulsory fields, an order description of Strawberry Cake and the first item of the order items table.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":316,"author":{"gitId":"xiinweii98"},"content":"![add_alt_1](images/add_alt_2.PNG)","lastModifiedDate":"2021-04-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":318,"author":{"gitId":"pPris"},"content":":information_source: **How are items added to the order items table?**\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":319,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":320,"author":{"gitId":"xiinweii98"},"content":"* When you specify an order description using the prefix `o/`, E.g. `o/Chocolate Cake`, CakeCollate automatically adds it into the order items table. As such, you don\u0027t need to go through extra steps to add in items into the order items table manually.","lastModifiedDate":"2021-04-12"},{"lineNumber":321,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":322,"author":{"gitId":"xiinweii98"},"content":"* If you do want to add items into the order items table, you can refer to the [`addItem`](#adding-order-items-additem) command below.","lastModifiedDate":"2021-04-12"},{"lineNumber":323,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":324,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":325,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":326,"author":{"gitId":"pPris"},"content":":information_source: **How do you specify that a cake has been ordered multiple times using the `oi/` prefix?**\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":327,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":328,"author":{"gitId":"pPris"},"content":"* If Chocolate Cake is at index 4 of the order items table, you can specify `oi/4 4`.","lastModifiedDate":"2021-04-12"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"RuiXiong2211"},"content":"##### Adding a special request to an order: `request`","lastModifiedDate":"2021-04-03"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"xiinweii98"},"content":"Add a special request to an existing order in CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"RuiXiong2211"},"content":"Format: `request INDEX r/REQUEST`","lastModifiedDate":"2021-04-03"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"xiinweii98"},"content":"* Adds a special request to the order at the specified `INDEX`. Refer to [`INDEX`](#index) for more details.","lastModifiedDate":"2021-04-12"},{"lineNumber":337,"author":{"gitId":"RuiXiong2211"},"content":"* Adding new special requests to an order will replace the existing special request the order currently has.","lastModifiedDate":"2021-04-09"},{"lineNumber":338,"author":{"gitId":"xiinweii98"},"content":"* You can remove an order’s special request by specifying `r/` without any requests after it, or only specifying the index without adding the prefix.","lastModifiedDate":"2021-04-12"},{"lineNumber":339,"author":{"gitId":"xiinweii98"},"content":"* By default, no special request will be added to an order when it is first added to CakeCollate.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":340,"author":{"gitId":"xiinweii98"},"content":"  ![empty_request](images/Empty_request.PNG)","lastModifiedDate":"2021-04-12"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":344,"author":{"gitId":"xiinweii98"},"content":"* `request 1 r/More sugar, spice and everything nice` sets the special request of the first order to be `More sugar, spice and everything nice`.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":345,"author":{"gitId":"xiinweii98"},"content":"  ![fllled_request](images/Filled_request.PNG)","lastModifiedDate":"2021-04-12"},{"lineNumber":346,"author":{"gitId":"xiinweii98"},"content":"* `request 1 r/` removes the first order\u0027s special request.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":347,"author":{"gitId":"xiinweii98"},"content":"  ![empty_request](images/Empty_request.PNG)","lastModifiedDate":"2021-04-12"},{"lineNumber":348,"author":{"gitId":"xiinweii98"},"content":"* `request 1` removes the first order\u0027s special request.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":349,"author":{"gitId":"xiinweii98"},"content":"  ![empty_request](images/Empty_request.PNG)","lastModifiedDate":"2021-04-12"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"RuiXiong2211"},"content":"##### Deleting an order: `delete`","lastModifiedDate":"2021-04-03"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"simran-bhadani3"},"content":"Delete the order(s) with the specified `INDEXES`. Refer to [`INDEXES`](#indexes) for more details.","lastModifiedDate":"2021-04-16"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"simran-bhadani3"},"content":"Format: `delete INDEXES`","lastModifiedDate":"2021-04-01"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"xiinweii98"},"content":"* `delete 2` delete the order with `INDEX` 2 from CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":359,"author":{"gitId":"xiinweii98"},"content":"* `delete 2 3` delete the orders with `INDEXES` 2 and 3 from CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":362,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":363,"author":{"gitId":"xiinweii98"},"content":"##### Editing an order: `edit`","lastModifiedDate":"2021-04-12"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":365,"author":{"gitId":"xiinweii98"},"content":"Edit an existing order in CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":367,"author":{"gitId":"xiinweii98"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [d/DELIVERY_DATE] [o/ORDER_DESCRIPTION]…​ [t/TAG]…​`","lastModifiedDate":"2021-04-12"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":369,"author":{"gitId":"xiinweii98"},"content":"* Edit the order at the specified `INDEX`. Refer to [`INDEX`](#index) for more details.","lastModifiedDate":"2021-04-12"},{"lineNumber":370,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-04-12"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-04-12"},{"lineNumber":372,"author":{"gitId":"xiinweii98"},"content":"* When editing tags, the existing tags of the order will be removed.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":373,"author":{"gitId":"xiinweii98"},"content":"  I.e. adding of tags is not cumulative.","lastModifiedDate":"2021-04-12"},{"lineNumber":374,"author":{"gitId":"simran-bhadani3"},"content":"* You can remove all of an order’s tags by specifying `t/` without any tag after it.","lastModifiedDate":"2021-04-12"},{"lineNumber":375,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":376,"author":{"gitId":"pavz02"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":377,"author":{"gitId":"xiinweii98"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` edits the phone number and email address of the first order to `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-04-12"},{"lineNumber":378,"author":{"gitId":"simran-bhadani3"},"content":"* `edit 2 n/Betsy Crower t/` edits the name of the second order to be `Betsy Crower` and removes all existing tags.","lastModifiedDate":"2021-04-12"},{"lineNumber":379,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":380,"author":{"gitId":"xiinweii98"},"content":"##### Updating delivery status of an order","lastModifiedDate":"2021-04-12"},{"lineNumber":381,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":382,"author":{"gitId":"xiinweii98"},"content":"###### Setting the delivery status of an order as undelivered: `undelivered`","lastModifiedDate":"2021-04-12"},{"lineNumber":383,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":384,"author":{"gitId":"simran-bhadani3"},"content":"Sets the delivery status of the orders with the specified `INDEXES` as `undelivered`. Refer to [`INDEXES`](#indexes) for more details.","lastModifiedDate":"2021-04-16"},{"lineNumber":385,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":386,"author":{"gitId":"xiinweii98"},"content":"Format: `undelivered INDEXES`","lastModifiedDate":"2021-04-12"},{"lineNumber":387,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":388,"author":{"gitId":"pavz02"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":389,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":390,"author":{"gitId":"xiinweii98"},"content":"* `undelivered 2` sets the delivery status of the order with `INDEX` 2 in CakeCollate as `undelivered`.","lastModifiedDate":"2021-04-12"},{"lineNumber":391,"author":{"gitId":"xiinweii98"},"content":"* `undelivered 2 3` sets the delivery status of the orders with `INDEXES` 2 and 3 in CakeCollate as `undelivered`.","lastModifiedDate":"2021-04-12"},{"lineNumber":392,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":393,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":394,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":395,"author":{"gitId":"xiinweii98"},"content":"###### Setting the delivery status of an order as delivered: `delivered`","lastModifiedDate":"2021-04-12"},{"lineNumber":396,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":397,"author":{"gitId":"simran-bhadani3"},"content":"Sets the delivery status of the orders with the specified `INDEXES` as `delivered`. Refer to [`INDEXES`](#indexes) for more details.","lastModifiedDate":"2021-04-16"},{"lineNumber":398,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":399,"author":{"gitId":"xiinweii98"},"content":"Format: `delivered INDEXES`","lastModifiedDate":"2021-04-12"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":401,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":403,"author":{"gitId":"xiinweii98"},"content":"* `delivered 2` sets the delivery status of the order with `INDEX` 2 in CakeCollate as `delivered`.","lastModifiedDate":"2021-04-12"},{"lineNumber":404,"author":{"gitId":"xiinweii98"},"content":"* `delivered 2 3` sets the delivery status of the orders with `INDEXES` 2 and 3 in CakeCollate as `delivered`.","lastModifiedDate":"2021-04-12"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":406,"author":{"gitId":"xiinweii98"},"content":"###### Setting the delivery status of an order as cancelled: `cancelled`","lastModifiedDate":"2021-04-12"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":408,"author":{"gitId":"simran-bhadani3"},"content":"Sets the delivery status of the orders with the specified `INDEXES` as `cancelled`. Refer to [`INDEXES`](#indexes) for more details.","lastModifiedDate":"2021-04-16"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":410,"author":{"gitId":"xiinweii98"},"content":"Format: `cancelled INDEXES`","lastModifiedDate":"2021-04-12"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-03"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":414,"author":{"gitId":"xiinweii98"},"content":"* `cancelled 2` sets the delivery status of the order with `INDEX` 2 in CakeCollate as `cancelled`.","lastModifiedDate":"2021-04-12"},{"lineNumber":415,"author":{"gitId":"xiinweii98"},"content":"* `cancelled 2 3` sets the delivery status of the orders with `INDEXES` 2 and 3 in CakeCollate as `cancelled`.","lastModifiedDate":"2021-04-12"},{"lineNumber":416,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":417,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":419,"author":{"gitId":"xiinweii98"},"content":"#### **4.1.2** ***Modifying what is displayed*** ","lastModifiedDate":"2021-04-12"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":421,"author":{"gitId":"xiinweii98"},"content":"##### Locating orders: `find`","lastModifiedDate":"2021-04-08"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":423,"author":{"gitId":"simran-bhadani3"},"content":"Find orders containing any of the keywords input by the user.","lastModifiedDate":"2021-04-16"},{"lineNumber":424,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":425,"author":{"gitId":"xiinweii98"},"content":"Format: `find [n/KEYWORD_NAME]…​ [p/KEYWORD_PHONE]…​ [e/KEYWORD_EMAIL]…​ [a/KEYWORD_ADDRESS]…​ [o/KEYWORD_ORDER_DESCRIPTION]…​ [t/KEYWORD_TAG]…​ [d/KEYWORD_DELIVERY_DATE]…​ [s/KEYWORD_DELIVERY_STATUS]…​ [r/KEYWORD_REQUEST]…​`","lastModifiedDate":"2021-04-12"},{"lineNumber":426,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":427,"author":{"gitId":"xiinweii98"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-04-12"},{"lineNumber":428,"author":{"gitId":"xiinweii98"},"content":"* The search is case-insensitive.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":429,"author":{"gitId":"xiinweii98"},"content":"  E.g. `hans` will match `Hans`.","lastModifiedDate":"2021-04-12"},{"lineNumber":430,"author":{"gitId":"xiinweii98"},"content":"* The order of the keywords does not matter.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":431,"author":{"gitId":"xiinweii98"},"content":"  E.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2021-04-12"},{"lineNumber":432,"author":{"gitId":"xiinweii98"},"content":"* Sub-strings will be matched.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":433,"author":{"gitId":"xiinweii98"},"content":"  E.g. `Han` will match `Hans`.","lastModifiedDate":"2021-04-12"},{"lineNumber":434,"author":{"gitId":"simran-bhadani3"},"content":"* Orders are searched according to specified prefixes.\u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":435,"author":{"gitId":"simran-bhadani3"},"content":"  E.g. `n/Hans` will only find orders with names that match `Hans`.","lastModifiedDate":"2021-04-12"},{"lineNumber":436,"author":{"gitId":"xiinweii98"},"content":"* If no prefixes are specified, orders matching at least one keyword will be returned.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":437,"author":{"gitId":"xiinweii98"},"content":"  I.e. `OR` search.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":438,"author":{"gitId":"xiinweii98"},"content":"  E.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2021-04-12"},{"lineNumber":439,"author":{"gitId":"xiinweii98"},"content":"* If multiple keywords are specified for a certain prefix, orders matching at least one keyword for the specified field will be returned.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":440,"author":{"gitId":"xiinweii98"},"content":"  I.e. `OR` search.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":441,"author":{"gitId":"simran-bhadani3"},"content":"  E.g. `n/Hans Bo` will return orders with names `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2021-04-12"},{"lineNumber":442,"author":{"gitId":"xiinweii98"},"content":"* If multiple prefixes are specified, each keyword specified for each field must match orders with corresponding fields.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":443,"author":{"gitId":"xiinweii98"},"content":"  I.e. `AND` search.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":444,"author":{"gitId":"simran-bhadani3"},"content":"  E.g. `n/Hans o/Cake` will only match orders with names that match `Hans` and order descriptions that match `Cake`.","lastModifiedDate":"2021-04-12"},{"lineNumber":445,"author":{"gitId":"RuiXiong2211"},"content":"* `AND` searches will take priority.","lastModifiedDate":"2021-04-03"},{"lineNumber":446,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":447,"author":{"gitId":"simran-bhadani3"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":449,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-03"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":451,"author":{"gitId":"simran-bhadani3"},"content":"* `find n/John` will return all orders with names `john`, `John Doe` or `Johnathan`.","lastModifiedDate":"2021-04-16"},{"lineNumber":452,"author":{"gitId":"simran-bhadani3"},"content":"* `find n/Alex Bob` will return all orders with names `Alex`, `alexander`, `Bob` or `bobby`.","lastModifiedDate":"2021-04-16"},{"lineNumber":453,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":454,"author":{"gitId":"xiinweii98"},"content":"*Using the sample data:*","lastModifiedDate":"2021-04-12"},{"lineNumber":455,"author":{"gitId":"RuiXiong2211"},"content":"* `find n/Alex o/Chocolate` will return all orders with name `Alex` and order description `Chocolate`.\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":456,"author":{"gitId":"xiinweii98"},"content":"  ![result for \u0027find n/Alex o/Chocolate\u0027](images/findAlexChocolate.PNG)","lastModifiedDate":"2021-04-08"},{"lineNumber":457,"author":{"gitId":"xiinweii98"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":458,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":459,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":460,"author":{"gitId":"xiinweii98"},"content":"* `find alex bernice` will return all orders that matches `alex` or `bernice`.\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":461,"author":{"gitId":"xiinweii98"},"content":"  ![result for \u0027find alex bernice\u0027](images/findAlexBernice.PNG)","lastModifiedDate":"2021-04-08"},{"lineNumber":462,"author":{"gitId":"xiinweii98"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":463,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":464,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":465,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":466,"author":{"gitId":"RuiXiong2211"},"content":"* `find n/Alex Charlotte o/Chocolate` will return all orders that matches (`Alex` or `Charlotte`) and `Chocolate`. \u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":467,"author":{"gitId":"RuiXiong2211"},"content":"  ![result for \u0027find n/Alex Charlotte o/Chocolate\u0027](images/findAlexCharlotteChocolate.PNG) \u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":468,"author":{"gitId":"RuiXiong2211"},"content":"  ","lastModifiedDate":"2021-04-03"},{"lineNumber":469,"author":{"gitId":"RuiXiong2211"},"content":"##### List all existing orders: `list`","lastModifiedDate":"2021-04-03"},{"lineNumber":470,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":471,"author":{"gitId":"xiinweii98"},"content":"Shows a list of all orders in CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":472,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":473,"author":{"gitId":"RuiXiong2211"},"content":"Format: `list`","lastModifiedDate":"2021-04-03"},{"lineNumber":474,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":475,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":476,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":477,"author":{"gitId":"xiinweii98"},"content":"##### Display upcoming orders: `remind`","lastModifiedDate":"2021-04-12"},{"lineNumber":478,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":479,"author":{"gitId":"xiinweii98"},"content":"Displays a list of undelivered orders with an upcoming `DELIVERY_DATE`.","lastModifiedDate":"2021-04-12"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":481,"author":{"gitId":"RuiXiong2211"},"content":"Format: `remind DAYS`","lastModifiedDate":"2021-04-03"},{"lineNumber":482,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":483,"author":{"gitId":"simran-bhadani3"},"content":"* Displays a list of all undelivered orders with an upcoming `DELIVERY_DATE` within `DAYS` days from today.","lastModifiedDate":"2021-04-12"},{"lineNumber":484,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":485,"author":{"gitId":"RuiXiong2211"},"content":"Examples:","lastModifiedDate":"2021-04-03"},{"lineNumber":486,"author":{"gitId":"xiinweii98"},"content":"* `remind 0` displays all undelivered orders that have a delivery date for today.","lastModifiedDate":"2021-04-12"},{"lineNumber":487,"author":{"gitId":"xiinweii98"},"content":"* `remind 365` displays all undelivered orders that have a delivery date within 365 days from today. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":488,"author":{"gitId":"RuiXiong2211"},"content":"    ![result for \u0027remind 365\u0027](images/Remind365.PNG) ","lastModifiedDate":"2021-04-10"},{"lineNumber":489,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":490,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":491,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":492,"author":{"gitId":"RuiXiong2211"},"content":"### **4.2 Order Items**","lastModifiedDate":"2021-04-03"},{"lineNumber":493,"author":{"gitId":"simran-bhadani3"},"content":"This section contains information about the commands that can modify the order items table located in the [order items box](#221-sections-of-the-ui).","lastModifiedDate":"2021-04-16"},{"lineNumber":494,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":495,"author":{"gitId":"RuiXiong2211"},"content":"#### Adding order items: `addItem`","lastModifiedDate":"2021-04-03"},{"lineNumber":496,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":497,"author":{"gitId":"xiinweii98"},"content":"Adds an order item to the order items table.","lastModifiedDate":"2021-04-12"},{"lineNumber":498,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":499,"author":{"gitId":"xiinweii98"},"content":"Format: `addItem ORDER_DESCRIPTION`","lastModifiedDate":"2021-04-12"},{"lineNumber":500,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":501,"author":{"gitId":"xiinweii98"},"content":"* Refer to [`ORDER_DESCRIPTION`](#order_description) for more details.","lastModifiedDate":"2021-04-12"},{"lineNumber":502,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":503,"author":{"gitId":"simran-bhadani3"},"content":"Examples:","lastModifiedDate":"2021-04-01"},{"lineNumber":504,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":505,"author":{"gitId":"xiinweii98"},"content":"* `addItem Red Velvet Cake` adds an order item with the specified description to the order items table.","lastModifiedDate":"2021-04-12"},{"lineNumber":506,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":507,"author":{"gitId":"RuiXiong2211"},"content":"#### Deleting order items: `deleteItem`","lastModifiedDate":"2021-04-03"},{"lineNumber":508,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":509,"author":{"gitId":"xiinweii98"},"content":"Deletes order items from the order items table based on the specified indexes.","lastModifiedDate":"2021-04-12"},{"lineNumber":510,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":511,"author":{"gitId":"simran-bhadani3"},"content":"Format: `deleteItem ORDER_ITEM_INDEXES`","lastModifiedDate":"2021-04-01"},{"lineNumber":512,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":513,"author":{"gitId":"xiinweii98"},"content":"* Refer to [`ORDER_ITEM_INDEXES`](#order_item_indexes) for more details.","lastModifiedDate":"2021-04-12"},{"lineNumber":514,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":515,"author":{"gitId":"simran-bhadani3"},"content":"Examples:","lastModifiedDate":"2021-04-01"},{"lineNumber":516,"author":{"gitId":"xiinweii98"},"content":"* `deleteItem 2` deletes the order item with `ORDER_ITEM_INDEX` 2 from the order items table.","lastModifiedDate":"2021-04-12"},{"lineNumber":517,"author":{"gitId":"simran-bhadani3"},"content":"* `deleteItem 2 3` deletes the order items with `ORDER_ITEM_INDEXES` 2 and 3 from the order items table.","lastModifiedDate":"2021-04-02"},{"lineNumber":518,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":519,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":520,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":521,"author":{"gitId":"RuiXiong2211"},"content":"### **4.3 Others**","lastModifiedDate":"2021-04-03"},{"lineNumber":522,"author":{"gitId":"simran-bhadani3"},"content":"This section contains information about other useful features and commands that you can use.","lastModifiedDate":"2021-04-16"},{"lineNumber":523,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":524,"author":{"gitId":"simran-bhadani3"},"content":"#### Viewing the help window: `help`","lastModifiedDate":"2021-04-16"},{"lineNumber":525,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":526,"author":{"gitId":"RuiXiong2211"},"content":"* Gives instructions on how to enter orders into the CLI.","lastModifiedDate":"2021-04-03"},{"lineNumber":527,"author":{"gitId":"RuiXiong2211"},"content":"* Displays a message with a list of all available commands and their format.","lastModifiedDate":"2021-04-03"},{"lineNumber":528,"author":{"gitId":"xiinweii98"},"content":"* To return to the main order list click on the `Return to the order list` button. ","lastModifiedDate":"2021-04-12"},{"lineNumber":529,"author":{"gitId":"simran-bhadani3"},"content":"* Help can also be accessed by clicking the `help` button on the top left corner of the application or by clicking the `F1` keyboard key.","lastModifiedDate":"2021-04-12"},{"lineNumber":530,"author":{"gitId":"pavz02"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":531,"author":{"gitId":"simran-bhadani3"},"content":":bulb: **Tip:** You can enter the command `list` to go back to the orders and order items table.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":532,"author":{"gitId":"simran-bhadani3"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":533,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":534,"author":{"gitId":"RuiXiong2211"},"content":"Format: `help`","lastModifiedDate":"2021-04-03"},{"lineNumber":535,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":536,"author":{"gitId":"RuiXiong2211"},"content":"#### Clearing all existing orders and order items: `clear`","lastModifiedDate":"2021-04-10"},{"lineNumber":537,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":538,"author":{"gitId":"xiinweii98"},"content":"Deletes all existing orders and order items in CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":539,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":540,"author":{"gitId":"pavz02"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-04-08"},{"lineNumber":541,"author":{"gitId":"simran-bhadani3"},"content":"This action is irreversible! When you run this command, all existing orders and order items will be deleted from ","lastModifiedDate":"2021-04-16"},{"lineNumber":542,"author":{"gitId":"xiinweii98"},"content":"CakeCollate and you will not be able to retrieve them. ","lastModifiedDate":"2021-04-12"},{"lineNumber":543,"author":{"gitId":"pavz02"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":545,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-04-08"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":547,"author":{"gitId":"RuiXiong2211"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-04-03"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":555,"author":{"gitId":"RuiXiong2211"},"content":"#### Saving the data","lastModifiedDate":"2021-04-03"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"simran-bhadani3"},"content":"CakeCollate data is saved in the hard disk automatically after you make any changes to the data. There is no need to save the data manually.","lastModifiedDate":"2021-04-16"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"RuiXiong2211"},"content":"#### Editing the data file","lastModifiedDate":"2021-04-03"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":561,"author":{"gitId":"simran-bhadani3"},"content":"Data related to orders is saved as a JSON file located at `[JAR file location]/data/cakecollate.json`.\u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":562,"author":{"gitId":"simran-bhadani3"},"content":"Data related to order items is saved as a JSON file located at `[JAR file location]/data/OrderItems.json`.\u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":563,"author":{"gitId":"simran-bhadani3"},"content":"Advanced users are welcome to update the data directly by editing the above-mentioned files.","lastModifiedDate":"2021-04-16"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":565,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":566,"author":{"gitId":"simran-bhadani3"},"content":"If you make any changes to the data files directly which makes the format of the data invalid, CakeCollate will discard all existing data and start with an empty data file on the next run.","lastModifiedDate":"2021-04-16"},{"lineNumber":567,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":569,"author":{"gitId":"pavz02"},"content":"#### Keyboard shortcuts","lastModifiedDate":"2021-04-08"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"simran-bhadani3"},"content":"* Press the `Up` arrow to traverse up the previously inputted commands if any. ","lastModifiedDate":"2021-04-16"},{"lineNumber":572,"author":{"gitId":"simran-bhadani3"},"content":"* Press the `Down` arrow in the keyboard to traverse down the previously inputted commands if any. ","lastModifiedDate":"2021-04-16"},{"lineNumber":573,"author":{"gitId":"simran-bhadani3"},"content":"* Press the `Shift` button followed by the `Backspace` button to delete all the text in the command box in one go. ","lastModifiedDate":"2021-04-16"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":578,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":579,"author":{"gitId":"pavz02"},"content":"## **5. Glossary**","lastModifiedDate":"2021-04-08"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":581,"author":{"gitId":"xiinweii98"},"content":"* **Command**: Commands are user inputs that are recognised by CakeCollate to modify the data that is stored or displayed.","lastModifiedDate":"2021-04-12"},{"lineNumber":582,"author":{"gitId":"simran-bhadani3"},"content":"* **JSON**: JSON stands for Javascript Object Notation. It is a format for saving data which provides user-friendliness as it is easy to read and write data in this format.","lastModifiedDate":"2021-04-12"},{"lineNumber":583,"author":{"gitId":"simran-bhadani3"},"content":"* **CLI**: CLI is an abbreviation for Command Line Interface. A Command Line Interface enables the user to interact with the application via commands in text format.","lastModifiedDate":"2021-04-12"},{"lineNumber":584,"author":{"gitId":"simran-bhadani3"},"content":"* **GUI**: GUI is an abbreviation for Graphical User Interface. A Graphical User Interface enables the user to interact with the application by clicking on visual components.","lastModifiedDate":"2021-04-12"},{"lineNumber":585,"author":{"gitId":"simran-bhadani3"},"content":"*  **Home folder**: The folder that you have installed CakeCollate in.","lastModifiedDate":"2021-04-16"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":587,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-08"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":589,"author":{"gitId":"pavz02"},"content":"## **6. FAQ**","lastModifiedDate":"2021-04-08"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"pavz02"},"content":"**Q**: How do I install Java?\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":592,"author":{"gitId":"simran-bhadani3"},"content":"**A**: [Click Here](https://www.oracle.com/sg/java/technologies/javase-jdk11-downloads.html) and download the appropriate Java version for your operating system. ","lastModifiedDate":"2021-04-16"},{"lineNumber":593,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":594,"author":{"gitId":"simran-bhadani3"},"content":"**Q**: Where will my data be saved? \u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":595,"author":{"gitId":"simran-bhadani3"},"content":"**A**: Your data will be saved in a folder called data which you can find inside your CakeCollate home folder.","lastModifiedDate":"2021-04-16"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":597,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":598,"author":{"gitId":"simran-bhadani3"},"content":"**A**: 1. Install CakeCollate on the computer that you want to transfer your data to. \u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":599,"author":{"gitId":"simran-bhadani3"},"content":"             2. You should be able to see a folder named data inside the CakeCollate home folder. \u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":600,"author":{"gitId":"simran-bhadani3"},"content":"             3. Replace this folder with the data folder from your original CakeCollate home folder.","lastModifiedDate":"2021-04-16"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":602,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":605,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":606,"author":{"gitId":"pavz02"},"content":"## **7. Command and prefix summary**","lastModifiedDate":"2021-04-08"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"xiinweii98"},"content":"### Orders","lastModifiedDate":"2021-04-12"},{"lineNumber":609,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":610,"author":{"gitId":"xiinweii98"},"content":"#### Modifying the data","lastModifiedDate":"2021-04-12"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":612,"author":{"gitId":"RuiXiong2211"},"content":"Action  | Format","lastModifiedDate":"2021-04-10"},{"lineNumber":613,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"xiinweii98"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS d/DELIVERY_DATE o/ORDER_DESCRIPTION…​ [t/TAG]…​` \u003cbr\u003e \u003cbr\u003e `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS d/DELIVERY_DATE oi/ORDER_ITEM_INDEXES [o/ORDER_DESCRIPTION]…​ [t/TAG]…​`","lastModifiedDate":"2021-04-12"},{"lineNumber":615,"author":{"gitId":"RuiXiong2211"},"content":"**Request** | `request INDEX r/REQUEST`","lastModifiedDate":"2021-04-10"},{"lineNumber":616,"author":{"gitId":"xiinweii98"},"content":"**Delete** | `delete INDEXES`","lastModifiedDate":"2021-04-12"},{"lineNumber":617,"author":{"gitId":"xiinweii98"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [d/DELIVERY_DATE] [o/ORDER_DESCRIPTION]…​ [t/TAG]…​`","lastModifiedDate":"2021-04-12"},{"lineNumber":618,"author":{"gitId":"RuiXiong2211"},"content":"**Undelivered** | `undelivered INDEXES`","lastModifiedDate":"2021-04-10"},{"lineNumber":619,"author":{"gitId":"RuiXiong2211"},"content":"**Delivered** | `delivered INDEXES`","lastModifiedDate":"2021-04-10"},{"lineNumber":620,"author":{"gitId":"RuiXiong2211"},"content":"**Cancelled** | `cancelled INDEXES`","lastModifiedDate":"2021-04-10"},{"lineNumber":621,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":622,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":623,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":624,"author":{"gitId":"xiinweii98"},"content":"#### Modifying what is displayed","lastModifiedDate":"2021-04-12"},{"lineNumber":625,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":626,"author":{"gitId":"RuiXiong2211"},"content":"Action | Format","lastModifiedDate":"2021-04-10"},{"lineNumber":627,"author":{"gitId":"RuiXiong2211"},"content":"-------|----------","lastModifiedDate":"2021-04-10"},{"lineNumber":628,"author":{"gitId":"xiinweii98"},"content":"**Find** | `find [n/KEYWORD_NAME]…​ [p/KEYWORD_PHONE]…​ [e/KEYWORD_EMAIL]…​ [a/KEYWORD_ADDRESS]…​ [o/KEYWORD_ORDER_DESCRIPTION]…​ [t/KEYWORD_TAG]…​ [d/KEYWORD_DELIVERY_DATE]…​ [s/KEYWORD_DELIVERY_STATUS]…​ [r/KEYWORD_REQUEST]…​`","lastModifiedDate":"2021-04-12"},{"lineNumber":629,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"RuiXiong2211"},"content":"**Remind** | `remind DAYS`","lastModifiedDate":"2021-04-10"},{"lineNumber":631,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":632,"author":{"gitId":"RuiXiong2211"},"content":"### Order Items","lastModifiedDate":"2021-04-10"},{"lineNumber":633,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":634,"author":{"gitId":"RuiXiong2211"},"content":"Action | Format","lastModifiedDate":"2021-04-10"},{"lineNumber":635,"author":{"gitId":"RuiXiong2211"},"content":"-------|----------","lastModifiedDate":"2021-04-10"},{"lineNumber":636,"author":{"gitId":"xiinweii98"},"content":"**Add order item** | `addItem ORDER_DESCRIPTION`","lastModifiedDate":"2021-04-12"},{"lineNumber":637,"author":{"gitId":"xiinweii98"},"content":"**Delete order item** | `deleteItem ORDER_ITEM_INDEXES`","lastModifiedDate":"2021-04-12"},{"lineNumber":638,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":639,"author":{"gitId":"RuiXiong2211"},"content":"### Others","lastModifiedDate":"2021-04-10"},{"lineNumber":640,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":641,"author":{"gitId":"RuiXiong2211"},"content":"Action | Format","lastModifiedDate":"2021-04-10"},{"lineNumber":642,"author":{"gitId":"RuiXiong2211"},"content":"-------|----------","lastModifiedDate":"2021-04-10"},{"lineNumber":643,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"RuiXiong2211"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-04-10"},{"lineNumber":645,"author":{"gitId":"RuiXiong2211"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-04-10"},{"lineNumber":646,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":647,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":648,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":649,"author":{"gitId":"simran-bhadani3"},"content":"### Prefixes","lastModifiedDate":"2021-04-16"},{"lineNumber":650,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":651,"author":{"gitId":"pavz02"},"content":"Prefix  | Description","lastModifiedDate":"2021-04-08"},{"lineNumber":652,"author":{"gitId":"pavz02"},"content":"--------|------------------","lastModifiedDate":"2021-04-08"},{"lineNumber":653,"author":{"gitId":"xiinweii98"},"content":"**n/** | Name of the customer.","lastModifiedDate":"2021-04-12"},{"lineNumber":654,"author":{"gitId":"xiinweii98"},"content":"**p/** | Phone number of the customer.","lastModifiedDate":"2021-04-12"},{"lineNumber":655,"author":{"gitId":"xiinweii98"},"content":"**e/** | Email of the customer.","lastModifiedDate":"2021-04-12"},{"lineNumber":656,"author":{"gitId":"xiinweii98"},"content":"**a/** | Address of the customer.","lastModifiedDate":"2021-04-12"},{"lineNumber":657,"author":{"gitId":"xiinweii98"},"content":"**d/** | Delivery date of the order.","lastModifiedDate":"2021-04-12"},{"lineNumber":658,"author":{"gitId":"xiinweii98"},"content":"**o/** | Order placed by the customer.","lastModifiedDate":"2021-04-12"},{"lineNumber":659,"author":{"gitId":"simran-bhadani3"},"content":"**oi/** | Order index of the order placed by the customer, based on the order items table.","lastModifiedDate":"2021-04-12"},{"lineNumber":660,"author":{"gitId":"xiinweii98"},"content":"**t/** | Tags for the customer/order.","lastModifiedDate":"2021-04-12"},{"lineNumber":661,"author":{"gitId":"xiinweii98"},"content":"**r/** | Requests placed by the customer for an order.","lastModifiedDate":"2021-04-12"},{"lineNumber":662,"author":{"gitId":"xiinweii98"},"content":"**s/** | Status of the order (undelivered, delivered or cancelled).","lastModifiedDate":"2021-04-12"},{"lineNumber":663,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":664,"author":{"gitId":"xiinweii98"},"content":"## **8. Acknowledgements**","lastModifiedDate":"2021-04-12"},{"lineNumber":665,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":666,"author":{"gitId":"xiinweii98"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"pPris":26,"RuiXiong2211":142,"pavz02":22,"xiinweii98":223,"-":137,"simran-bhadani3":116}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"xiinweii98"},"content":"    content: \"CakeCollate\";","lastModifiedDate":"2021-04-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"xiinweii98":1,"-":294}},{"path":"docs/_sass/minima/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Site header","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":".site-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":".site-title {","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  font-weight: 300;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    padding-right: 45px;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u0026,","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":".site-nav {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  position: absolute;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  top: 9px;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  text-align: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .nav-trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    height: 26px;","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    line-height: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    padding-top: 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003e svg path {","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    height: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    z-index: 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    padding: 5px 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      margin-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    margin-left: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    position: static;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    border: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    background-color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      display: inline;","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        margin-right: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":" * Page content","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":".page-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":".page-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":".post-list-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":".post-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  margin-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  list-style: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  \u003e li {","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":".post-meta {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":".post-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Posts","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":".post-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":".post-title,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":".post-content h1 {","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  line-height: 1.15;","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":".post-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  h1, h2, h3 { margin-top: $spacing-unit * 2 }","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  h4, h5, h6 { margin-top: $spacing-unit }","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  h2 {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  h3 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.375);","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  h4 {","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.25);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  h5 {","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.0625);","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":".social-media-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  margin: 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u0026:last-of-type { margin-right: 0 }","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    a {","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      \u0026:hover { border-color: darken($brand-color-light, 10%) }","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * Pagination navbar","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".pagination {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  @extend .social-media-list;","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    a, div {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      min-width: 41px;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      box-sizing: border-box;","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    div {","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        border: 1px dashed;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":" * Grid helpers","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  .one-half {","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":265,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":266,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":267,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-04-03"},{"lineNumber":268,"author":{"gitId":"RuiXiong2211"},"content":" * Table of Content without bullet points","lastModifiedDate":"2021-04-03"},{"lineNumber":269,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-04-03"},{"lineNumber":270,"author":{"gitId":"RuiXiong2211"},"content":".toc-no-bullet-points ul {","lastModifiedDate":"2021-04-03"},{"lineNumber":271,"author":{"gitId":"RuiXiong2211"},"content":"  list-style-type: none;","lastModifiedDate":"2021-04-03"},{"lineNumber":272,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-03"},{"lineNumber":273,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":274,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":275,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-03"}],"authorContributionMap":{"RuiXiong2211":12,"-":263}},{"path":"docs/diagrams/AddOrderItemSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"participant \":AddOrderItemCommandParser\" as AddOrderItemCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"participant \":OrderItem\" as OrderItem LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"participant \"a:AddOrderItemCommand\" as AddOrderItemCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"participant \"cr:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"[-\u003e AddOrderItemCommandParser : parse(\"Chocolate Cake\")","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"activate AddOrderItemCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"create OrderItem","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"AddOrderItemCommandParser -\u003e OrderItem","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"activate OrderItem","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"OrderItem --\u003e AddOrderItemCommandParser : orderItem","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"deactivate OrderItem","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"create AddOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"AddOrderItemCommandParser -\u003e AddOrderItemCommand : AddOrderItemCommand(OrderItem)","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"activate AddOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"AddOrderItemCommand --\u003e AddOrderItemCommandParser : a","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"deactivate AddOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"[\u003c-- AddOrderItemCommandParser : a","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"deactivate AddOrderItemCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"[\u003c-[hidden]- AddOrderItemCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"destroy AddOrderItemCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"[-\u003e AddOrderItemCommand : execute()","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"activate AddOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"AddOrderItemCommand -\u003e Model : addOrderItem(orderItem)","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"activate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"deactivate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"|||","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"AddOrderItemCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"CommandResult --\u003e AddOrderItemCommand : cr","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"[\u003c-- AddOrderItemCommand : cr","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"deactivate AddOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"simran-bhadani3":59}},{"path":"docs/diagrams/AddParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pPris"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"pPris"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"participant \"descriptor:AddOrderDescriptor\" as AddOrderDescriptor LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"participant \":IndexList\" as IndexList LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"participant \":AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"\u0027is omitting arguments okay, this argument is too long","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"[-\u003e AddCommandParser : parse user input","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"activate AddCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"create AddOrderDescriptor","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"AddCommandParser -\u003e AddOrderDescriptor","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"activate AddOrderDescriptor","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"\u0027italics?","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"\u0027is the return arrow supposed to be descriptor or just the object should be named descriptor","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"AddOrderDescriptor --\u003e AddCommandParser : descriptor","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"deactivate AddOrderDescriptor","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"create IndexList","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"pPris"},"content":"AddCommandParser -\u003e IndexList","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"pPris"},"content":"activate IndexList","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"IndexList --\u003e AddCommandParser : indexlist","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"deactivate IndexList","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"create AddCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"AddCommandParser -\u003e AddCommand : new AddCommand(descriptor, indexlist)","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"pPris"},"content":"activate AddCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"deactivate AddCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"[\u003c-- AddCommandParser : a","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"deactivate AddCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"[\u003c-[hidden]- AddCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"destroy AddCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"pPris":43}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pPris"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"pPris"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"participant \"descriptor:AddOrderDescriptor\" as AddOrderDescriptor LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"[-\u003e AddCommand : execute()","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"activate AddCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"\u0027not very sure about variables and argument names","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"loop for each order description not in the model","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"    AddCommand -\u003e Model : addOrderItem(order description)","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"end","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"|||","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"AddCommand -\u003e Model : getFilteredOrderItemsList()","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"pPris"},"content":"|||","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"loop for each order item index in indexlist","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"    AddCommand -\u003e AddOrderDescriptor : setOrderDescription(orderItem)","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"end","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"pPris"},"content":"|||","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"AddCommand -\u003e AddOrderDescriptor : build()","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"AddCommand \u003c-- AddOrderDescriptor : order","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"[\u003c-[hidden]- AddCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"destroy AddOrderDescriptor","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"AddCommand -\u003e Model : addOrder(order)","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"|||","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"pPris"},"content":"create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"pPris"},"content":"CommandResult --\u003e AddCommand : result","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"pPris"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"pPris"},"content":"[\u003c-- AddCommand : result","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"pPris"},"content":"deactivate AddCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"[\u003c-[hidden]- AddCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"pPris"},"content":"destroy AddCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"pPris"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"pPris":56}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteOrder(p)","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveCakeCollate(cakeCollate)","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xiinweii98":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"CakeCollate *-right-\u003e \"1\" UniqueOrderList","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"CakeCollate *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"CakeCollate *-down-\u003e \"1\" UniqueOrderItemList","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"UniqueTagList -[hidden]down- UniqueOrderList","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"UniqueTagList -[hidden]down- UniqueOrderList","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"UniqueOrderList o-right-\u003e Order","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"UniqueOrderItemList o-down-\u003e OrderItem","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"Order -up-\u003e \"*\" Tag","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"OrderItem *--\u003e Type","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"Order *--\u003e Name","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"Order *--\u003e Phone","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"Order *--\u003e Email","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"Order *--\u003e Address","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"Order *--\u003e DeliveryDate","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"Order *--\u003e Request","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"Order *--\u003e OrderItemDescription","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"Order *--\u003e DeliveryStatus","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RuiXiong2211":8,"xiinweii98":10,"-":13}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"if () then ([command commits CakeCollate])","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    :Save CakeCollate to","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    cakeCollateStateList;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xiinweii98":3,"-":12}},{"path":"docs/diagrams/DeleteOrderItemParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"participant \":DeleteOrderItemCommandParser\" as DeleteOrderItemCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"participant \":IndexList\" as IndexList LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"participant \":DeleteOrderItemCommand\" as DeleteOrderItemCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"[-\u003e DeleteOrderItemCommandParser : parse(\"1 2\")","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"activate DeleteOrderItemCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"create IndexList","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"DeleteOrderItemCommandParser -\u003e IndexList","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"activate IndexList","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"IndexList --\u003e DeleteOrderItemCommandParser : indexList","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"deactivate IndexList","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"create DeleteOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"DeleteOrderItemCommandParser -\u003e DeleteOrderItemCommand : DeleteOrderItemCommand(indexList)","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"activate DeleteOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"DeleteOrderItemCommand --\u003e DeleteOrderItemCommandParser : d","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"deactivate DeleteOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"[\u003c-- DeleteOrderItemCommandParser : d","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"deactivate DeleteOrderItemCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"[\u003c-[hidden]- DeleteOrderItemCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"destroy DeleteOrderItemCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"simran-bhadani3":32}},{"path":"docs/diagrams/DeleteOrderItemSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"participant \":DeleteOrderItemCommand\" as DeleteOrderItemCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"[-\u003e DeleteOrderItemCommand : execute()","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"activate DeleteOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"loop for each index in the index list","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    DeleteOrderItemCommand -\u003e Model: lastShownList(index)","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    activate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    Model --\u003e DeleteOrderItemCommand: orderItem","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    deactivate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"    |||","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    DeleteOrderItemCommand -\u003e Model : deleteOrderItem(orderItem)","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    activate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    deactivate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    |||","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"end","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"|||","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"|||","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"DeleteOrderItemCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"CommandResult --\u003e DeleteOrderItemCommand : result","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"[\u003c-- DeleteOrderItemCommand : result","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"deactivate DeleteOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"[\u003c-[hidden]- DeleteOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"destroy DeleteOrderItemCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"simran-bhadani3":43}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"participant \":CakeCollateParser\" as CakeCollateParser LOGIC_COLOR","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"LogicManager -\u003e CakeCollateParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"activate CakeCollateParser","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"CakeCollateParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"DeleteCommandParser --\u003e CakeCollateParser","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"CakeCollateParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"DeleteCommandParser --\u003e CakeCollateParser : d","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"DeleteCommandParser -[hidden]-\u003e CakeCollateParser","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"CakeCollateParser --\u003e LogicManager : d","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"deactivate CakeCollateParser","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"DeleteCommand -\u003e Model : deleteOrder(1)","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xiinweii98":11,"-":58}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"@startuml","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"!include style.puml","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"participant \"c:ContainsKeywordsPredicate\" as ContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"participant \"cr:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"[-\u003e FindCommandParser : parse(\"n/Alex\")","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"activate FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"create ContainsKeywordsPredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"FindCommandParser -\u003e ContainsKeywordsPredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"activate ContainsKeywordsPredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"ContainsKeywordsPredicate --\u003e FindCommandParser : c","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"deactivate ContainsKeywordsPredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"create FindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(c)","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"activate FindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"FindCommand --\u003e FindCommandParser : f","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"deactivate FindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"[\u003c-- FindCommandParser : f","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"[\u003c-[hidden]- FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"destroy FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"[-\u003e FindCommand : execute()","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"activate FindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"FindCommand -\u003e Model : updateFilteredOrderList(c)","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"activate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"deactivate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"FindCommandParser \u003c-[hidden]- ContainsKeywordsPredicate","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"destroy ContainsKeywordsPredicate","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"create CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"activate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"CommandResult --\u003e FindCommand : cr","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"[\u003c-- FindCommand : cr","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"deactivate FindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"[\u003c-[hidden]- FindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"destroy FindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"@enduml","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"xiinweii98":61}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"Class CakeCollateParser","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"package Storage{","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"LogicManager --\u003e\"1\" CakeCollateParser","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"CakeCollateParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"LogicManager -\u003e Storage","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RuiXiong2211":5,"xiinweii98":3,"-":59}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"Interface ReadOnlyCakeCollate \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"Interface ReadOnlyOrderItems \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"Class CakeCollate","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"Class OrderItems","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"Class ReadOnlyCakeCollate","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"Class ReadOnlyOrderItems","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"Package Order {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"Class Order","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"Class OrderDescription","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"Class Request","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"Class DeliveryStatus","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"Class DeliveryDate","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"Class UniqueOrderList","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"Package OrderItem {","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"Class OrderItem","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"Class Type","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"Class UniqueOrderItemsList","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"CakeCollate .up.|\u003e ReadOnlyCakeCollate","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"ModelManager o--\u003e \"1\" CakeCollate","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"CakeCollate *--\u003e \"1\" UniqueOrderList","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"UniqueOrderList o--\u003e \"*\" Order","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"Order *--\u003e Name","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"Order *--\u003e Phone","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"Order *--\u003e Email","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"Order *--\u003e Address","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"Order *--\u003e DeliveryStatus","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"Order *--\u003e Request","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"Order *--\u003e OrderDescription","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"Order *--\u003e DeliveryDate","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"Order *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"ModelManager -----\u003e\" ~* filtered list\" Order","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"OrderItems *--\u003e \"1\" UniqueOrderItemsList","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"UniqueOrderItemsList o--\u003e \"*\" OrderItem","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"ModelManager o-right-\u003e \"1\" OrderItems","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"OrderItems .down.|\u003e ReadOnlyOrderItems","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"OrderItem *--\u003e Type","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"ModelManager -----\u003e\" ~* filtered list\" OrderItem","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RuiXiong2211":28,"xiinweii98":16,"-":40}},{"path":"docs/diagrams/RemindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"@startuml","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"!include style.puml","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"participant \":RemindCommandParser\" as RemindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"participant \"r:ReminderDatePredicate\" as ReminderDatePredicate LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"participant \":RemindCommand\" as RemindCommand LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"participant \"cr:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"[-\u003e RemindCommandParser : parse(\"7\")","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"activate RemindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"create ReminderDatePredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"RemindCommandParser -\u003e ReminderDatePredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"activate ReminderDatePredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"ReminderDatePredicate --\u003e RemindCommandParser : r","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"deactivate ReminderDatePredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"create RemindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"RemindCommandParser -\u003e RemindCommand : RemindCommand(r)","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"activate RemindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"RemindCommand --\u003e RemindCommandParser : rc","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"deactivate RemindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"[\u003c-- RemindCommandParser : rc","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"deactivate RemindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"[\u003c-[hidden]- RemindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"destroy RemindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"[-\u003e RemindCommand : execute()","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"activate RemindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"RemindCommand -\u003e Model : updateFilteredOrderList(r)","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"activate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"deactivate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"RemindCommandParser \u003c-[hidden]- ReminderDatePredicate","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"destroy ReminderDatePredicate","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"create CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"RemindCommand -\u003e CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"activate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"CommandResult --\u003e RemindCommand : cr","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"[\u003c-- RemindCommand : cr","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"deactivate RemindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"[\u003c-[hidden]- RemindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"destroy RemindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"@enduml","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"RuiXiong2211":49,"xiinweii98":12}},{"path":"docs/diagrams/SortDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pPris"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"pPris"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"autonumber","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"Alice -\u003e Bob: Authentication Request","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"Bob --\u003e Alice: Authentication Response","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"Alice -\u003e Bob: Another authentication Request","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"Alice \u003c-- Bob: another authentication Response","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"pPris":11}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"Interface CakeCollateStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"Interface OrderItemsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"Class JsonCakeCollateStorage","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"Class JsonOrderItemsStorage","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"StorageManager o--\u003e CakeCollateStorage","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"StorageManager o--\u003e OrderItemsStorage","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"JsonCakeCollateStorage .left.|\u003e CakeCollateStorage","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"JsonCakeCollateStorage .down.\u003e JsonSerializableCakeCollate","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"JsonSerializableCakeCollate .left.\u003e JsonAdaptedOrder","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"JsonAdaptedOrder .right.\u003e JsonAdaptedTag","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"JsonAdaptedOrder .down.\u003e JsonAdaptedOrderDescription","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"JsonOrderItemsStorage .right.|\u003e OrderItemsStorage","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"JsonOrderItemsStorage .down.\u003e JsonSerializableOrderItems","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"JsonSerializableOrderItems .right.\u003e JsonAdaptedOrderItem","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RuiXiong2211":11,"xiinweii98":4,"-":17}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"Class Panel","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"Class OrderListPanel","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"Class OrderItemPanel","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"Class HelpListPanel","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"Class OrderCard","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"Class OrderItemCard","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"Class HelpCard","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"MainWindow *-down-\u003e Panel","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"Panel -down-\u003e OrderListPanel","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"OrderListPanel -down-\u003e OrderCard","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"Panel -down-\u003e OrderItemPanel","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"OrderItemPanel -down-\u003e OrderItemCard","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"Panel -down-\u003e HelpListPanel","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"HelpListPanel -down-\u003e HelpCard","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"Panel --|\u003e UiPart","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"OrderCard --|\u003e UiPart","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"OrderItemCard --|\u003e UiPart","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"HelpCard --|\u003e UiPart","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"OrderCard ..\u003e Model","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"OrderItemCard ..\u003e Model","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"pavz02":16,"xiinweii98":5,"-":49}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    class State1 as \"__ab0:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    class State2 as \"__ab1:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    class State3 as \"__ab2:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xiinweii98":3,"-":17}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    class State1 as \"__ab0:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    class State2 as \"__ab1:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    class State3 as \"__ab2:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xiinweii98":3,"-":19}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    class State1 as \"__ab0:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    class State2 as \"__ab1:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    class State3 as \"__ab2:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xiinweii98":3,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    class State1 as \"__ab0:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    class State2 as \"__ab1:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    class State3 as \"__ab2:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xiinweii98":3,"-":17}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    class State1 as \"__ab0:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    class State2 as \"__ab1:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    class State3 as \"__ab2:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xiinweii98":3,"-":17}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    class State1 as \"__ab0:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    class State2 as \"__ab1:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    class State3 as \"__ab3:CakeCollate__\"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xiinweii98":3,"-":18}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"participant \":CakeCollateParser\" as CakeCollateParser LOGIC_COLOR","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"participant \":VersionedCakeCollate\" as VersionedCakeCollate MODEL_COLOR","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"LogicManager -\u003e CakeCollateParser : parseCommand(undo)","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"activate CakeCollateParser","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"CakeCollateParser -\u003e UndoCommand","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"UndoCommand --\u003e CakeCollateParser","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"CakeCollateParser --\u003e LogicManager : u","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"deactivate CakeCollateParser","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"UndoCommand -\u003e Model : undoCakeCollate()","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"Model -\u003e VersionedCakeCollate : undo()","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"activate VersionedCakeCollate","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"VersionedCakeCollate -\u003e VersionedCakeCollate :resetData(ReadOnlyCakeCollate)","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"VersionedCakeCollate --\u003e Model :","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"deactivate VersionedCakeCollate","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xiinweii98":14,"-":39}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"Participant \":CakeCollateParser\" as abp LOGIC_COLOR","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"ecp -\u003e ec ++: index, editOrderDescriptor","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"xiinweii98":2,"-":19}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"title: CakeCollate","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003dHVE6WF4JMI)](https://codecov.io/gh/AY2021S2-CS2103T-T11-4/tp)","lastModifiedDate":"2021-02-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"CakeCollate promises to be an efficient desktop application that allows user to easily consolidate and manage orders. Our main features include:\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"1. Order management","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"2. Order Item management","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"3. Quick search function for your orders","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"4. Reminder for undelivered orders that have delivery dates approaching the current date","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"5. Checking the delivery status of your orders","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"If you\u0027re a small-time cake seller that can type fast, CakeCollate can get your order management tasks done faster than traditional GUI applications.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"* If you are interested in using CakeCollate, head over to the [Quick Start](UserGuide.html#quick-start) section of the [**User Guide**](UserGuide.html).","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"* If you are interested about developing CakeCollate, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"* Libraries used","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    * [JavaFX](https://openjfx.io/)","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    * [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    * [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"pPris":1,"xiinweii98":17,"-":11}},{"path":"docs/team/pavz02.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"title: Pavitra\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"## Project: CakeCollate","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"CakeCollate is a desktop application used for tracking cake orders. The user interacts with it using a CLI, ","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"* **New Feature**: Added the ability to mark orders as undelivered/delivered/cancelled.","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"  * What it does: Allows the user to mark multiple orders as undelivered, delivered or cancelled in one go.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"  * Justification: The user can modify many orders in one go without having to re-type the command.","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"* **New Feature**: Added a command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"  * What it does: This allows the user to navigate through previously entered commands. ","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"  * Justification: This feature improves the ease of using the product significantly because a user can easily ","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    re-enter or edit a previously entered command without having to retype the entire line.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dpavz02\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dpavz02\u0026tabRepo\u003dAY2021S2-CS2103T-T11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"  * Updated the GUI to include two models (orders and order items)","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"  * Updated the help command and the GUI to dynamically change the order and order item panels to the help panel and back.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":" ","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    * Added documentation for the features `help`, `delivered`, `undelivered`, `cancelled`, and `keyboard shortcuts`","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    * Modified the glossary, FAQ, and the prefix summary table","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"    * Updated the UI class diagram","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    * Modified the use cases, manual testing, and effort sections","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"  ","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"pavz02":39}},{"path":"docs/team/ppris.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pPris"},"content":"---","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"pPris"},"content":"layout: page","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"title: Princess Priscilla Paulson\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"---","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"## Project: CakeCollate","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"CakeCollate is a desktop application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"* **New Feature**: Added the ability to map order item index in user inputs to order description ","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"  * What it does: The add command takes in a new parameter of order item indexes that refer to items in the order item model, which will be then mapped to order descriptions  ","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"  * Justification: This allows the user to save keystrokes if they\u0027ve already entered a particular order description e.g. `chocolate cake` before.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"  * Highlights: This feature required creating an AddOrderDescriptor, and resulted in lots of refactoring for the AddCommand and AddCommandParser, which affected majority of the tests that use addcommand.","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"  * Credits: The AddOrderDescriptor used was similar to the EditOrderDescriptor, though there are some different methods included.","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"* **New Feature**: (Related to previous) Added the ability to store order descriptions inputted using `o/` prefix in the order items table * What it does: order descriptions inputted using `o/` by the user are added in the order items table automatically by the app","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"  * Justification: Users can save some time and effort trying to use `addItem` to populate the order item table ","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"  * Highlights: This led to the realisation that the `OrderDescription` and `OrderItem` objects were closely related, as whatever `OrderDescription`s were added needed to appear in the `OrderItems` model as an `OrderItem`.  So the validation of `OrderDescription` was changed to refer to the validation constraints of the `OrderItem` field (in `Type.java`). Also this feature broke some existing v1.2/early v1.3 tests that did not preserve this close relationship, e.g. there were some `OrderDescriptions` in the model that did not appear in the `OrderItem` model, so they required fixing.","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"* **New Feature**: Added the ability to always list orders by a default comparator (that compares orders by status and delivery date)","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"  * What it does: Changes to the model always result in a sorting of the orders by its compareTo method, such that the orders on the GUI is always sorted by status and delivery date","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"pPris"},"content":"  * Justification: This feature improves the usefulness of the GUI to the user immensely as their screen will not be cluttered by `delivered` or `cancelled` orders, or orders that are far into their future. They\u0027ll be able to focus on the orders that are more important and urgent to take care of.","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dppris\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dpPris\u0026tabRepo\u003dAY2021S2-CS2103T-T11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"* **Project management**:","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"    * Managed scheduling of meetings and tasks and provided weekly summaries of the tasks due for that week","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"  * Managed project demo (screenshots) in two releases and set up team org repo","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"    * Added order description field to order ","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"        * This involved fixing existing tests involving the `Order` object.","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"    * User Guide:","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"        * Added documentation for the features `add`. Explained some concepts like `indexes` and quantities in more detail for users [\\#226](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/226)","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"        * Added implementation details of the `add` feature.","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"pPris"},"content":"* **Community**:","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#79](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/79), [\\#85](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/85), [\\#56](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/56)","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"    * Contributed to forum discussions ([#211](https://github.com/nus-cs2103-AY2021S2/forum/issues/211))","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"pPris":47}},{"path":"docs/team/ruixiong2211.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"---","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"layout: page","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"title: Lim Rui Xiong\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"---","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"## Project: CakeCollate","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"CakeCollate is a desktop order book application used for tracking cake orders. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"CakeCollate is based on the AddressBook-Level3 project (AB3) created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"[Here is a link to the code I contributed.](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dRuiXiong2211\u0026tabRepo\u003dAY2021S2-CS2103T-T11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"### Enhancements implemented:","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"* **New Feature**: Added the ability to receive reminders","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"  * What it does: Users can now receive a list of undelivered orders that are within a certain time frame from the ","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"  current date.","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"  * Justification: This feature improves the product significantly because a user can now easily filter through ","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"  undelivered impending orders within a time frame they have the flexibility to be able to specify.","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"  * Highlights: This enhancement affects existing fields and fields to be added in the future. ","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"  It required an in-depth analysis of design alternatives. The implementation too was challenging as it required ","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"  changes to existing fields.","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"  ","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"* **New Feature**: Added the ability to add special requests to orders","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"  * What it does: Users can now add special requests or notes to specific orders","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"  * Justification: This feature improves the product significantly because a user can now check whether an order ","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"  has any important details that a customer has requested for their order. ","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"  ","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"* **Backend**: Implemented the Storage for the new Model, OrderItems","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"  * What it does: The OrderItems model is saves automatically when the user adds or delete items from it.","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"  Whenever the user starts the application, data from the latest session is loaded up into the current session.","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"  ","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"### Contributions to the User Guide","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"* Reformatted the structure of the user guide such that it flows more logically and added hyperlinks to headers ","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"for easy navigation to the important sections.","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"* Split up the tables in the command summary so that the tables present the appropriate amount of information","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"and not be overloaded.","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"* Split up the different commands into it\u0027s appropriate categories, so that it is neater to navigate.","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"* Added information required to use the `remind` and `request` command, with examples and screenshots to aid","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"in my explanation","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"* Maintain overall flow and structure of the user guide, adding screenshots where necessary.","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"* Updated all existing diagrams from AB3 to reflect the current codebase of CakeCollate.","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"* Added implementation details, design considerations and sequence diagram for the `remind` command.","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"* Added Use Cases for Add, Edit, Delete command.","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"* Maintained the issue tracker","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"* Updating the User/Developer guide not related to features as mentioned above.","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"* Peer review team mates code, checked for spelling errors and gave feedback for their pull requests. [eg1](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/198), [eg2](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/65)","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"RuiXiong2211":52,"xiinweii98":3}},{"path":"docs/team/simran-bhadani3.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"---","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"layout: page","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"title: Bhadani Simran\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"---","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"## Project: CakeCollate","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"CakeCollate is a desktop application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"* **New Feature**: Added an IndexList class","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"  * What it does: Allows parsing of multiple Indexes input by the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"  * Justification: This allows users to key in multiple indexes for any command which requires an Index to be input.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"  * Highlights: This feature was challenging to implement as it required quite a few changes to existing commands and tests.","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"* **New Feature**: Added an OrderItems model","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"  * What it does: An `OrderItems` model allows the creation of `OrderItem` objects and also multiple operations to be performed on them.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"  * Justification: An `OrderItems` model was needed for the OrderItems table which relies on a `UniqueOrderItemList` which was added in the model.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"  * Highlights: This model is a crucial part of CakeCollate and was challenging to implement as a lot of classes had to be created and tested properly.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"  * Credit: Based on the CakeCollate model.","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"* **New Feature**: Added the `deleteItem` and `addItem` commands.","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"  * What it does: These commands allow the users to interact with the `OrderItems` model by enabling them to add their own order items to the order items table and also delete orders.","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"  * Justification: The user needs to be able to add their own order items to the order items table since they might want to predefine order items.","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dsimran-bhadani3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dsimran-bhadani3\u0026tabRepo\u003dAY2021S2-CS2103T-T11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"* **Project management**:","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"    * Maintained the issue tracker","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    * Managed jar file creation for two releases","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    * Modified delete command to accept multiple indexes","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"        * Involved creating the `IndexList` class","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    * User Guide:","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        * Added documentation for the `delete`, `addItem` and `deleteItem` features. [\\#122](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/112/)","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        * Edited Glossary, FAQ and checked for grammatical errors. [\\#248](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/248)","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"    * Developer Guide:","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        * Added implementation details for the `addItem` feature.","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        * Added implementation details for the `deleteItem` feature.","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"* **Community**:","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#125](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/125), [\\#232](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/232)","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"simran-bhadani3":48}},{"path":"docs/team/xiinweii98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"title: Soh Xin Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"## Project: CakeCollate","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"CakeCollate is a desktop order book application used for tracking cake orders. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"CakeCollate is based on the AddressBook-Level3 project (AB3) created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"### Code contributed:","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"* [This](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dxiinweii98\u0026tabRepo\u003dAY2021S2-CS2103T-T11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"  is a link to the code that I have contributed.","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"### Enhancements implemented:","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"* **Enhancement to existing feature**: Added `DeliveryDate` to the `Order`(refactored from Person). (Pull request [\\#56](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/56))","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"  * What it does: Allow users to add a delivery date to the order that being created.","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"  * Justification: As our team\u0027s goal is to adapt AB3\u0027s address book into an order book, adding a delivery date field allow users to better","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    manage the tracking of their orders in CakeCollate.","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. The implementation was challenging as it required changes to existing commands.","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"* **Enhancement to existing feature**: Modified `FindCommand`. (Pull request [\\#92](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/92))","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"  * What was changed: ","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    * Allow users a less restrictive search.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    I.e. The find function no longer require matching of full keywords.","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    * Allow users to specify prefixes for their search of orders.","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"  * Justification: To allow for efficient tracking of orders, our team wanted to allow users to execute both generic OR search and specific AND search for the fields of an orders.","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"  * Highlights: The implementation was challenging as it required changes to existing find command. As it required changes to the original `NameContainsKeywordsPredicate`, it required an in-depth analysis of design alternatives as described in the [Developer Guide](https://ay2021s2-cs2103t-t11-4.github.io/tp/DeveloperGuide.html#design-considerations).","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"### Contributions to User Guide:","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"* Edited documentation for the find feature.","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"* Added the Types of user input.","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"* Vetted the whole document to fix inconsistent usage of terms, ordering of sections, brief descriptions etc. (Pull request [\\#242](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/242))","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"### Contributions to Developer Guide:","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"* Added non-functional requirements.","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"* Added implementation details for the find feature.","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"* Added instructions for manual testing for the find feature.","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"* Refactored terms to adapt the address book into an order book. (Pull request [\\#75](https://github.com/AY2021S2-CS2103T-T11-4/tp/pull/75))","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"* Maintained milestone tracker.","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"xiinweii98":48}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"This command allows users of the CakeCollate application to add optional remarks to people in their cakecollate and edit it if required. The command should have the following format:","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":" * Changes the remark of an existing order in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `CakeCollateParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the order identified \"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"            + \"by the index number used in the last order listing. \"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"     * @param index of the order in the filtered order list to edit the remark","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"     * @param remark of the order to be updated to","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"Create a `RemarkCommandParser` class in the `seedu.cakecollate.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"xiinweii98"},"content":":information_source: Don’t forget to update `CakeCollateParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"xiinweii98"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of order data. We achieve that by working with the `Order` model. Each field in a Order is implemented as a separate class (e.g. a `Name` object represents the order’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a order.","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"xiinweii98"},"content":"Create a new `Remark` in `seedu.cakecollate.model.order`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"xiinweii98"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each order.","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"xiinweii98"},"content":"Simply add the following to [`seedu.cakecollate.ui.OrderCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"xiinweii98"},"content":"**`OrderCard.java`:**","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"xiinweii98"},"content":"Then insert the following into [`main/resources/view/OrderListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"xiinweii98"},"content":"**`OrderListCard.fxml`:**","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"xiinweii98"},"content":"## Modify `Order` to support a `Remark` field","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"xiinweii98"},"content":"Since `OrderCard` displays data from a `Order`, we need to update `Order` to get our `Remark` displayed!","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"xiinweii98"},"content":"### Modify `Order`","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"xiinweii98"},"content":"We change the constructor of `Order` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-03-17"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"xiinweii98"},"content":"### Update other usages of `Order`","lastModifiedDate":"2021-03-17"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"xiinweii98"},"content":"Unfortunately, a change to `Order` will cause other commands to break, you will have to modify these commands to use the updated `Order`!","lastModifiedDate":"2021-03-17"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"xiinweii98"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Order` class to find these commands.","lastModifiedDate":"2021-03-17"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"xiinweii98"},"content":"CakeCollate stores data by serializing `JsonAdaptedOrder` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedOrder` to work with our new `Order`!","lastModifiedDate":"2021-03-17"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"xiinweii98"},"content":":exclamation: You must delete CakeCollate’s storage file located at `/data/cakecollate.json` before running it! Not doing so will cause CakeCollate to default to an empty cakeCollate!","lastModifiedDate":"2021-03-17"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"xiinweii98"},"content":"Now that we have finalized the `Order` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-03-17"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"xiinweii98"},"content":"**`OrderCard.java`:**","lastModifiedDate":"2021-03-17"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"xiinweii98"},"content":"public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"xiinweii98"},"content":"    remark.setText(order.getRemark().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"xiinweii98"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Order`. Since all fields in a `Order` are immutable, we create a new instance of a `Order` with the values that we want and","lastModifiedDate":"2021-03-17"},{"lineNumber":326,"author":{"gitId":"xiinweii98"},"content":"save it with `Model#setOrder()`.","lastModifiedDate":"2021-03-17"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Order: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":333,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Order: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"xiinweii98"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"xiinweii98"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"xiinweii98"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":344,"author":{"gitId":"xiinweii98"},"content":"        Order editedOrder \u003d new Order(orderToEdit.getName(), orderToEdit.getPhone(), orderToEdit.getEmail(),","lastModifiedDate":"2021-03-17"},{"lineNumber":345,"author":{"gitId":"xiinweii98"},"content":"                orderToEdit.getAddress(), remark, orderToEdit.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"xiinweii98"},"content":"        model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":348,"author":{"gitId":"xiinweii98"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"xiinweii98"},"content":"        return new CommandResult(generateSuccessMessage(editedOrder));","lastModifiedDate":"2021-03-17"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"xiinweii98"},"content":"     * {@code orderToEdit}.","lastModifiedDate":"2021-03-17"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"xiinweii98"},"content":"    private String generateSuccessMessage(Order orderToEdit) {","lastModifiedDate":"2021-03-17"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"xiinweii98"},"content":"        return String.format(message, orderToEdit);","lastModifiedDate":"2021-03-17"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"xiinweii98"},"content":"This concludes the tutorial for adding a new `Command` to CakeCollate.","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"xiinweii98":48,"-":346}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"When working on CakeCollate, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Order` model to suit your use case.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Order`.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"The `address` field in `Order` is actually an instance of the `seedu.cakecollate.model.order.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditOrderDescriptor` may require more careful inspection.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"Let’s try removing references to `Address` in `EditOrderDescriptor`.","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"1. Safe delete the field `address` in `EditOrderDescriptor`.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Order` class will require you to modify its constructor.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `OrderCard` that has not been removed nor identified.","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"A quick look at the `OrderCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"**`OrderCard.java`**","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"**`OrderCard.fxml`**","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"**`invalidOrderCakeCollate.json`:**","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"    \"name\": \"Order with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xiinweii98":14,"-":89}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.cakecollate.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"        Command command \u003d cakeCollateParser.parseCommand(commandText);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"            storage.saveCakeCollate(model.getCakeCollate());","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"    **`CakeCollateParser\\#parseCommand()`**","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"xiinweii98"},"content":"1. Stepping into the `switch`, we obviously stop at **`CakeCollateParser\\#parseCommand()`.**","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"xiinweii98"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditOrderDescriptor`. Recall that we can verify the contents of `editOrderDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":"       Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"       Order editedOrder \u003d createEditedOrder(orderToEdit, editOrderDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"xiinweii98"},"content":"       if (!orderToEdit.isSameOrder(editedOrder) \u0026\u0026 model.hasOrder(editedOrder)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"xiinweii98"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"xiinweii98"},"content":"       model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"xiinweii98"},"content":"       model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"xiinweii98"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_ORDER_SUCCESS, editedOrder));","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"xiinweii98"},"content":"    `JsonCakeCollate#saveCakeCollate()`.","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"xiinweii98"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableCakeCollate`\u0027s constructor.","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"xiinweii98"},"content":"    **`JsonSerializableCakeCollate\\#JsonSerializableCakeCollate()`:**","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"xiinweii98"},"content":"    * Converts a given {@code ReadOnlyCakeCollate} into this class for Jackson use.","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"xiinweii98"},"content":"    * {@code JsonSerializableCakeCollate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"xiinweii98"},"content":"   public JsonSerializableCakeCollate(ReadOnlyCakeCollate source) {","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"xiinweii98"},"content":"       orders.addAll(","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"xiinweii98"},"content":"           source.getOrderList()","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"xiinweii98"},"content":"                 .map(JsonAdaptedOrder::new)","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"xiinweii98"},"content":"1. It appears that a `JsonAdaptedOrder` is created for each `Order` and then added to the `JsonSerializableCakeCollate`.","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"xiinweii98"},"content":"more about the inner workings of CakeCollate and how the various","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"xiinweii98"},"content":"    3.  Save the cakecollate in the CSV format instead","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"xiinweii98"},"content":"    5.  Add a new field to `Order`","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"xiinweii98"},"content":"    6.  Add a new entity to the cakecollate","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"xiinweii98":27,"-":223}},{"path":"src/main/java/seedu/cakecollate/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.FileUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"xiinweii98":3,"-":61}},{"path":"src/main/java/seedu/cakecollate/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"xiinweii98":1,"-":24}},{"path":"src/main/java/seedu/cakecollate/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.Config;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.Version;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.ConfigUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.StringUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.Logic;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.LogicManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.storage.CakeCollateStorage;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.storage.JsonCakeCollateStorage;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.storage.JsonOrderItemsStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.storage.OrderItemsStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.storage.Storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.storage.StorageManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.ui.Ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.ui.UiManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing CakeCollate ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        CakeCollateStorage cakeCollateStorage \u003d new JsonCakeCollateStorage(userPrefs.getCakeCollateFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItemsStorage orderItemsStorage \u003d new JsonOrderItemsStorage(userPrefs.getOrderItemsFilePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"        storage \u003d new StorageManager(cakeCollateStorage, userPrefsStorage, orderItemsStorage);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s cakecollate and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"     * The data from the sample cakecollate will be used instead if {@code storage}\u0027s cakecollate is not found,","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"     * or an empty cakecollate will be used instead if errors occur when reading {@code storage}\u0027s cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"        Optional\u003cReadOnlyOrderItems\u003e orderItemsOptional;","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        Optional\u003cReadOnlyCakeCollate\u003e cakeCollateOptional;","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"        ReadOnlyCakeCollate initialData;","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"        ReadOnlyOrderItems initialDataForOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"            cakeCollateOptional \u003d storage.readCakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"            orderItemsOptional \u003d storage.readOrderItems();","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"            if (!cakeCollateOptional.isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"                logger.info(\"Data file not found. Will be starting with a sample CakeCollate\");","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"            initialData \u003d cakeCollateOptional.orElseGet(SampleDataUtil::getSampleCakeCollate);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"            initialDataForOrderItems \u003d orderItemsOptional.orElseGet(SampleDataUtil::getSampleOrderItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty CakeCollate\");","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"            initialData \u003d new CakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"            initialDataForOrderItems \u003d new OrderItems();","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty CakeCollate\");","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"            initialData \u003d new CakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"            initialDataForOrderItems \u003d new OrderItems();","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"        return new ModelManager(initialData, userPrefs, initialDataForOrderItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"xiinweii98"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty CakeCollate\");","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"xiinweii98"},"content":"        logger.info(\"Starting CakeCollate \" + MainApp.VERSION);","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"xiinweii98"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Cake Collate ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RuiXiong2211":13,"xiinweii98":43,"-":138}},{"path":"src/main/java/seedu/cakecollate/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.core;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":1,"-":62}},{"path":"src/main/java/seedu/cakecollate/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.core;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":1,"-":78}},{"path":"src/main/java/seedu/cakecollate/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.core;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    private static final String LOG_FILE \u003d \"cakecollate.log\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":2,"-":110}},{"path":"src/main/java/seedu/cakecollate/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.core;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_INVALID_ORDER_DISPLAYED_INDEX \u003d \"The order index provided is invalid.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_INVALID_ORDER_ITEM_INDEX \u003d \"The order item index provided is invalid.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_NEGATIVE_INDEX \u003d \"Index can\u0027t be negative. Look out for stray dashes!\";","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_ORDERS_LISTED_OVERVIEW \u003d \"%1$d order(s) listed!\";","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_ORDERS_REMINDER_OVERVIEW \u003d \"REMINDER! \\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"            + \"Date Today is \"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"            + DateTimeFormatter.ofPattern(\"dd MMM yyyy\").format(LocalDate.now())","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"            + \".\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"            + \"%1$d order(s) with an upcoming delivery date\"","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"            + \" in %2$d day(s)\";","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"RuiXiong2211":8,"xiinweii98":4,"-":9,"simran-bhadani3":3}},{"path":"src/main/java/seedu/cakecollate/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.core;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":1,"-":115}},{"path":"src/main/java/seedu/cakecollate/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.core.index;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"    public int compareTo(Index index) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"        return this.zeroBasedIndex - index.zeroBasedIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xiinweii98":1,"-":52,"simran-bhadani3":6}},{"path":"src/main/java/seedu/cakecollate/commons/core/index/IndexList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.core.index;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"public class IndexList {","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"    private List\u003cIndex\u003e indexList;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"    public IndexList(List\u003cIndex\u003e indexList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"        this.indexList \u003d indexList;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"     * Sorts {@code IndexList} in descending order.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    public void sortList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"        Collections.sort(this.indexList);","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"        Collections.reverse(this.indexList);","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"    public void add(Index index) {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"        this.indexList.add(index);","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    public List\u003cIndex\u003e getIndexList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"pPris"},"content":"        return this.indexList; // unmodifiable?","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    /** Checks whether two @code IndexList}s are equal.","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"     * @param other {@code IndexList} to compare this list to.","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"     * @return true if the two {@code IndexList}s are equal and false otherwise.","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    public boolean checkIfEqual(IndexList other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"        boolean equal \u003d true;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"            return this \u003d\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"        // will this affect anyone else\u0027s work","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"        this.sortList();","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"        other.sortList();","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        if (this.indexList.size() !\u003d other.getIndexList().size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"            for (int i \u003d 0; i \u003c other.getIndexList().size(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"                if (!this.indexList.get(i).equals(other.indexList.get(i))) {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"                    equal \u003d false;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"                }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"        return equal;","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"                || (other instanceof IndexList // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"                \u0026\u0026 checkIfEqual((IndexList) other)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"pPris":10,"xiinweii98":1,"simran-bhadani3":52}},{"path":"src/main/java/seedu/cakecollate/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.exceptions;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":1,"-":10}},{"path":"src/main/java/seedu/cakecollate/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.exceptions;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xiinweii98":1,"-":20}},{"path":"src/main/java/seedu/cakecollate/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.MainApp;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xiinweii98":2,"-":40}},{"path":"src/main/java/seedu/cakecollate/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xiinweii98":1,"-":34}},{"path":"src/main/java/seedu/cakecollate/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.Config;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xiinweii98":3,"-":20}},{"path":"src/main/java/seedu/cakecollate/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":1,"-":82}},{"path":"src/main/java/seedu/cakecollate/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":3,"-":140}},{"path":"src/main/java/seedu/cakecollate/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"     *   Ignores case, a full word match is not required.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"        String preppedSentence \u003d sentence.trim();","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"        return preppedSentence.toLowerCase().contains(preppedWord.toLowerCase());","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"pPris"},"content":"     * Capitalises each word in a given string, and returns other letters to lowercase,","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"pPris"},"content":"     * assuming words are separated by whitespace.","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"pPris"},"content":"     * @param words","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"pPris"},"content":"     * @return","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"pPris"},"content":"    public static String capitaliseEachWord(String words) {","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"pPris"},"content":"        requireNonNull(words);","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"pPris"},"content":"        if (words.isBlank()) {","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"pPris"},"content":"            return words;","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"        String[] wordArr \u003d words.split(\"\\\\s+\");","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"pPris"},"content":"        for (int i \u003d 0; i \u003c wordArr.length; i++) {","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"pPris"},"content":"            String s \u003d wordArr[i];","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"pPris"},"content":"            String capitalised \u003d s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase();","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"pPris"},"content":"            wordArr[i] \u003d capitalised;","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"pPris"},"content":"        return String.join(\" \", wordArr);","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"     * Returns true if {@code s} represents a unsigned integer (zero included)","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"     * e.g. 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"     * e.g. empty string, \"-1\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"    public static boolean isUnsignedInteger(String s) {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns true if {@code s} represents a negative integer","lastModifiedDate":"2021-04-10"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"     * e.g. -1, -2, -3 \u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2021-04-10"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"     * e.g. empty string, \"1\", \"+1\", and \" -2 \" (untrimmed), \"-3 -0\" (contains whitespace), \"-1 a\" (contains letters)","lastModifiedDate":"2021-04-10"},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-04-10"},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":"    public static boolean isNegativeInteger(String s) {","lastModifiedDate":"2021-04-10"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-04-10"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"        try {","lastModifiedDate":"2021-04-10"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2021-04-10"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"            return value \u003c 0;","lastModifiedDate":"2021-04-10"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-04-10"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"            return false;","lastModifiedDate":"2021-04-10"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pPris":23,"RuiXiong2211":18,"xiinweii98":6,"-":59,"simran-bhadani3":18}},{"path":"src/main/java/seedu/cakecollate/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.CommandResult;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"     * Returns the CakeCollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"     * @see seedu.cakecollate.model.Model#getCakeCollate()","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    ReadOnlyCakeCollate getCakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"    /** Returns an unmodifiable view of the filtered list of orders */","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"    /** Updates the deliveryStatus of an order to Status.DELIVERED if the delivery date is before the current date */","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"    String updateDeliveryStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"     * Returns the user prefs\u0027 cakecollate file path.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"    Path getCakeCollateFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"pPris"},"content":"    ObservableList\u003cOrderItem\u003e getFilteredOrderItemsList();","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"pPris":3,"pavz02":3,"xiinweii98":14,"-":36}},{"path":"src/main/java/seedu/cakecollate/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.Command;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.CommandResult;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.CakeCollateParser;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Status;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.storage.Storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    private final CakeCollateParser cakeCollateParser;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"        cakeCollateParser \u003d new CakeCollateParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"        Command command \u003d cakeCollateParser.parseCommand(commandText);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"            storage.saveCakeCollate(model.getCakeCollate());","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"            storage.saveOrderItems(model.getOrderItems());","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"     * Updates the deliveryStatus to delivered if the delivery date is before the current date.","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"     * @return A parsable string to update the deliveryStatus if necessary, and an empty string otherwise.","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"    public String updateDeliveryStatus() {","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        ObservableList\u003cOrder\u003e orderList \u003d getFilteredOrderList();","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"        String result \u003d \"delivered\";","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"        boolean entered \u003d false;","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"        for (int i \u003d 0; i \u003c orderList.size(); i++) {","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"            if (orderList.get(i).getDeliveryDate().value.isBefore(LocalDate.now())","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"                    \u0026\u0026 orderList.get(i).getDeliveryStatus().equals(new DeliveryStatus(Status.DELIVERED))) {","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"                result +\u003d \" \" + String.valueOf(i + 1);","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"                entered \u003d true;","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"        if (entered) {","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"            return result;","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"            return \"\";","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"    public ReadOnlyCakeCollate getCakeCollate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"        return model.getCakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"pPris"},"content":"        // MainWindow calls this function to get a filteredOrderList.","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"pPris"},"content":"        // if cakecollate.json is not sorted, this call to sort ensures","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"pPris"},"content":"        // that list will be sorted when gui first opens","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"pPris"},"content":"        model.sortFilteredOrderList();","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"        return model.getFilteredOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"    public Path getCakeCollateFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"        return model.getCakeCollateFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"pPris"},"content":"    public ObservableList\u003cOrderItem\u003e getFilteredOrderItemsList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"pPris"},"content":"        return model.getFilteredOrderItemsList();","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"pPris":11,"pavz02":25,"RuiXiong2211":2,"xiinweii98":22,"-":59}},{"path":"src/main/java/seedu/cakecollate/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_ITEM_IDX;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":" * Adds an order to CakeCollate.","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an order to CakeCollate. \\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"            + \"Parameters for basic format: \"","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"            + PREFIX_PHONE + \"PHONE_NUMBER \"","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"            + PREFIX_DATE + \"DELIVERY_DATE \"","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"            + PREFIX_ORDER_DESCRIPTION + \"ORDER_DESCRIPTION... \"","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"pPris"},"content":"            + PREFIX_ORDER_DESCRIPTION + \"Chocolate Cake \"","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"            + PREFIX_ORDER_DESCRIPTION + \"Strawberry Cake \"","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"            + PREFIX_ORDER_DESCRIPTION + \"Strawberry Cake \"","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"pPris"},"content":"            + PREFIX_DATE + \"01/01/2022\"","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"pPris"},"content":"            + \"\\n\\n\"","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"            + \"Parameters for alternative format: \"","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"pPris"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"            + PREFIX_PHONE + \"PHONE_NUMBER \"","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"pPris"},"content":"            + PREFIX_DATE + \"DELIVERY_DATE \"","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"            + PREFIX_ORDER_ITEM_IDX + \"ORDER_ITEM_INDEXES \"","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"pPris"},"content":"            + \"[\" + PREFIX_ORDER_DESCRIPTION + \"ORDER_DESCRIPTION]... \"","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"pPris"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"pPris"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"pPris"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"pPris"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"pPris"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"pPris"},"content":"            + PREFIX_ORDER_ITEM_IDX + \"1 2 2 3 \"","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"pPris"},"content":"            + PREFIX_ORDER_DESCRIPTION + \"Chocolate Cake \"","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"            + PREFIX_DATE + \"01/01/2022\";","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New order added: %1$s\";","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists in CakeCollate.\\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"            + \"Note that Name, Address, Order Description and Delivery Date are taken into consideration \"","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"            + \"when checking for duplicated orders.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":89,"author":{"gitId":"pPris"},"content":"    private final IndexList orderItemIndexList;","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"pPris"},"content":"    private final AddOrderDescriptor addOrderDescriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"pPris"},"content":"     * Creates an AddCommand object with an indexlist containing the indexes passed in by user,","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"pPris"},"content":"     * and a descriptor that contains other fields needed for the Order to be built","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"pPris"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"pPris"},"content":"     * @param orderItemIndexList null if no index was given by user, a non-empty indexlist if index was given by user","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"pPris"},"content":"     * @param addOrderDescriptor contains all other fields needed for Order to be built and added into model","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"pPris"},"content":"    public AddCommand(IndexList orderItemIndexList, AddOrderDescriptor addOrderDescriptor) {","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"pPris"},"content":"        requireNonNull(addOrderDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"pPris"},"content":"        assert orderItemIndexList \u003d\u003d null || !orderItemIndexList.getIndexList().isEmpty();","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"pPris"},"content":"        this.orderItemIndexList \u003d orderItemIndexList;","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"pPris"},"content":"        this.addOrderDescriptor \u003d new AddOrderDescriptor(addOrderDescriptor); // defensive copy like in edit command","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"pPris"},"content":"        assert this.addOrderDescriptor.getOrderDescriptions().isPresent()","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"pPris"},"content":"                || this.orderItemIndexList.getIndexList().size() !\u003d 0","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"                : \"some error here; neither order description nor order item index was provided\";","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"pPris"},"content":"        checkValidIndexes(model);","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":118,"author":{"gitId":"pPris"},"content":"        if (this.addOrderDescriptor.getOrderDescriptions().isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"pPris"},"content":"            addToOrderItemsModel(model);","lastModifiedDate":"2021-04-10"},{"lineNumber":120,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"pPris"},"content":"        if (orderItemIndexList !\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"pPris"},"content":"            addToOrderDescriptionsBasedOnIndexes(model);","lastModifiedDate":"2021-04-10"},{"lineNumber":124,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"pPris"},"content":"        Order toAdd \u003d addOrderDescriptor.build();","lastModifiedDate":"2021-04-10"},{"lineNumber":127,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"xiinweii98"},"content":"        if (model.hasOrder(toAdd)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"xiinweii98"},"content":"        model.addOrder(toAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":137,"author":{"gitId":"pPris"},"content":"     * Checks if indexes exceed number of items in order item model. Other validity checks like -ve numbers and","lastModifiedDate":"2021-04-11"},{"lineNumber":138,"author":{"gitId":"pPris"},"content":"     * non-integers are taken care of by parser for index list.","lastModifiedDate":"2021-04-11"},{"lineNumber":139,"author":{"gitId":"pPris"},"content":"     * @param model","lastModifiedDate":"2021-04-11"},{"lineNumber":140,"author":{"gitId":"pPris"},"content":"     * @throws CommandException","lastModifiedDate":"2021-04-11"},{"lineNumber":141,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":142,"author":{"gitId":"pPris"},"content":"    private void checkValidIndexes(Model model) throws CommandException {","lastModifiedDate":"2021-04-11"},{"lineNumber":143,"author":{"gitId":"pPris"},"content":"        if (orderItemIndexList \u003d\u003d null) {","lastModifiedDate":"2021-04-11"},{"lineNumber":144,"author":{"gitId":"pPris"},"content":"            return;","lastModifiedDate":"2021-04-11"},{"lineNumber":145,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":146,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":147,"author":{"gitId":"pPris"},"content":"        List\u003cOrderItem\u003e lastShownOrderItems \u003d model.getFilteredOrderItemsList();","lastModifiedDate":"2021-04-11"},{"lineNumber":148,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":149,"author":{"gitId":"pPris"},"content":"        List\u003cIndex\u003e indexList \u003d orderItemIndexList.getIndexList();","lastModifiedDate":"2021-04-11"},{"lineNumber":150,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":151,"author":{"gitId":"pPris"},"content":"        for (Index i : indexList) {","lastModifiedDate":"2021-04-11"},{"lineNumber":152,"author":{"gitId":"pPris"},"content":"            if (i.getZeroBased() \u003e\u003d lastShownOrderItems.size()) {","lastModifiedDate":"2021-04-11"},{"lineNumber":153,"author":{"gitId":"pPris"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_ORDER_ITEM_INDEX);","lastModifiedDate":"2021-04-11"},{"lineNumber":154,"author":{"gitId":"pPris"},"content":"            }","lastModifiedDate":"2021-04-11"},{"lineNumber":155,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":156,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":157,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":158,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"pPris"},"content":"     * Adds order descriptions in the descriptor to order items model if they aren\u0027t already in the model.","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"pPris"},"content":"     * These order descriptions are inputted by the user and already added into the descriptor before","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"pPris"},"content":"     * this add command object is created.","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"pPris"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"pPris"},"content":"     * @param model","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"pPris"},"content":"    private void addToOrderItemsModel(Model model) {","lastModifiedDate":"2021-04-10"},{"lineNumber":166,"author":{"gitId":"pPris"},"content":"        this.addOrderDescriptor.getOrderDescriptions().get().keySet().stream()","lastModifiedDate":"2021-04-10"},{"lineNumber":167,"author":{"gitId":"pPris"},"content":"                .map(OrderDescription::getValue) // because a string is needed for creating a new Type for new OrderItem","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"pPris"},"content":"                .map(o -\u003e new OrderItem(new Type(o))) // map to order item so can check if already in model","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"pPris"},"content":"                .filter(o -\u003e !model.hasOrderItem(o)) // filters out items that already exist in model","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"pPris"},"content":"                .forEach(model::addOrderItem);","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"pPris"},"content":"     * Adds order items from the order model that correspond to order item indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":175,"author":{"gitId":"pPris"},"content":"     * given by the user, which have been added to the descriptor by the parser","lastModifiedDate":"2021-04-10"},{"lineNumber":176,"author":{"gitId":"pPris"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"pPris"},"content":"     * @param model","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"pPris"},"content":"    private void addToOrderDescriptionsBasedOnIndexes(Model model) {","lastModifiedDate":"2021-04-11"},{"lineNumber":180,"author":{"gitId":"pPris"},"content":"        List\u003cOrderItem\u003e lastShownOrderItems \u003d model.getFilteredOrderItemsList();","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"pPris"},"content":"        List\u003cIndex\u003e indexList \u003d orderItemIndexList.getIndexList();","lastModifiedDate":"2021-04-10"},{"lineNumber":183,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"pPris"},"content":"        /* for each index specified","lastModifiedDate":"2021-04-10"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"         * get corresponding order item","lastModifiedDate":"2021-04-10"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"         * create an order description from the order item","lastModifiedDate":"2021-04-10"},{"lineNumber":187,"author":{"gitId":"pPris"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"pPris"},"content":"        indexList.forEach(index -\u003e addOrderDescriptor.setOrderDescription(new OrderDescription(","lastModifiedDate":"2021-04-11"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"                lastShownOrderItems","lastModifiedDate":"2021-04-11"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"                    .get(index.getZeroBased())","lastModifiedDate":"2021-04-10"},{"lineNumber":191,"author":{"gitId":"pPris"},"content":"                    .getType()","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"pPris"},"content":"                    .toString()","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"pPris"},"content":"                )","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"pPris"},"content":"        ));","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"pPris"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"pPris"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"pPris"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"pPris"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"pPris"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"pPris"},"content":"        // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"pPris"},"content":"        AddCommand a \u003d (AddCommand) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"pPris"},"content":"        return (Objects.equals(orderItemIndexList, a.orderItemIndexList))","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"pPris"},"content":"                \u0026\u0026 addOrderDescriptor.equals(a.addOrderDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"pPris"},"content":"     * Stores the details to edit the order with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"pPris"},"content":"     * corresponding field value of the order.","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"pPris"},"content":"     *","lastModifiedDate":"2021-04-10"},{"lineNumber":220,"author":{"gitId":"pPris"},"content":"     * Note that this order descriptor has slight differences from edit order descriptor.","lastModifiedDate":"2021-04-10"},{"lineNumber":221,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"pPris"},"content":"    public static class AddOrderDescriptor {","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"pPris"},"content":"        private Name name;","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"pPris"},"content":"        private Phone phone;","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"pPris"},"content":"        private Email email;","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"pPris"},"content":"        private Address address;","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"pPris"},"content":"        private HashMap\u003cOrderDescription, Integer\u003e orderDescriptions;","lastModifiedDate":"2021-04-10"},{"lineNumber":228,"author":{"gitId":"pPris"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"pPris"},"content":"        private DeliveryDate deliveryDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"pPris"},"content":"        private Request request;","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"pPris"},"content":"        public AddOrderDescriptor() {","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"pPris"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"pPris"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"pPris"},"content":"         * A defensive copy of {@code orderDescriptions} and {@code tags} is used internally.","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"pPris"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"pPris"},"content":"        public AddOrderDescriptor(AddCommand.AddOrderDescriptor toCopy) {","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"pPris"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"pPris"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"pPris"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"pPris"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"pPris"},"content":"            setOrderDescriptions(toCopy.orderDescriptions);","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"pPris"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":246,"author":{"gitId":"pPris"},"content":"            setDeliveryDate(toCopy.deliveryDate);","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"pPris"},"content":"            setRequest(toCopy.request);","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"pPris"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"pPris"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"pPris"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"pPris"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":258,"author":{"gitId":"pPris"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-03-29"},{"lineNumber":259,"author":{"gitId":"pPris"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"pPris"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-03-29"},{"lineNumber":263,"author":{"gitId":"pPris"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-03-29"},{"lineNumber":264,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":265,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":266,"author":{"gitId":"pPris"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-03-29"},{"lineNumber":267,"author":{"gitId":"pPris"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":269,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"pPris"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-03-29"},{"lineNumber":271,"author":{"gitId":"pPris"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":273,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"pPris"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-03-29"},{"lineNumber":275,"author":{"gitId":"pPris"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-03-29"},{"lineNumber":276,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":277,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":278,"author":{"gitId":"pPris"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-03-29"},{"lineNumber":279,"author":{"gitId":"pPris"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-03-29"},{"lineNumber":280,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":281,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":282,"author":{"gitId":"pPris"},"content":"        public void setOrderDescriptions(Map\u003cOrderDescription, Integer\u003e orderDescriptions) {","lastModifiedDate":"2021-04-10"},{"lineNumber":283,"author":{"gitId":"pPris"},"content":"            if (orderDescriptions \u003d\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"pPris"},"content":"                return;","lastModifiedDate":"2021-03-31"},{"lineNumber":285,"author":{"gitId":"pPris"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":286,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"pPris"},"content":"            if (this.orderDescriptions \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":288,"author":{"gitId":"pPris"},"content":"                this.orderDescriptions \u003d new HashMap\u003c\u003e(orderDescriptions);","lastModifiedDate":"2021-04-10"},{"lineNumber":289,"author":{"gitId":"pPris"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":290,"author":{"gitId":"pPris"},"content":"                this.orderDescriptions.putAll(orderDescriptions);","lastModifiedDate":"2021-04-10"},{"lineNumber":291,"author":{"gitId":"pPris"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":292,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":293,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":294,"author":{"gitId":"pPris"},"content":"        public void setOrderDescription(OrderDescription od) {","lastModifiedDate":"2021-04-10"},{"lineNumber":295,"author":{"gitId":"pPris"},"content":"            if (this.orderDescriptions \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":296,"author":{"gitId":"pPris"},"content":"                this.orderDescriptions \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":297,"author":{"gitId":"pPris"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":298,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":299,"author":{"gitId":"pPris"},"content":"            int quantity \u003d this.orderDescriptions.containsKey(od) ? orderDescriptions.get(od) : 0;","lastModifiedDate":"2021-04-10"},{"lineNumber":300,"author":{"gitId":"pPris"},"content":"            this.orderDescriptions.put(od, quantity + 1);","lastModifiedDate":"2021-04-10"},{"lineNumber":301,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":302,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":303,"author":{"gitId":"pPris"},"content":"        public Optional\u003cMap\u003cOrderDescription, Integer\u003e\u003e getOrderDescriptions() {","lastModifiedDate":"2021-04-10"},{"lineNumber":304,"author":{"gitId":"pPris"},"content":"            return (orderDescriptions !\u003d null)","lastModifiedDate":"2021-03-29"},{"lineNumber":305,"author":{"gitId":"pPris"},"content":"                    ? Optional.of(Collections.unmodifiableMap(orderDescriptions))","lastModifiedDate":"2021-04-10"},{"lineNumber":306,"author":{"gitId":"pPris"},"content":"                    : Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":307,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":308,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":309,"author":{"gitId":"pPris"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":310,"author":{"gitId":"pPris"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-29"},{"lineNumber":311,"author":{"gitId":"pPris"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-29"},{"lineNumber":312,"author":{"gitId":"pPris"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":313,"author":{"gitId":"pPris"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-29"},{"lineNumber":314,"author":{"gitId":"pPris"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-29"},{"lineNumber":315,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":316,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":317,"author":{"gitId":"pPris"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":318,"author":{"gitId":"pPris"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-29"},{"lineNumber":319,"author":{"gitId":"pPris"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-29"},{"lineNumber":320,"author":{"gitId":"pPris"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-29"},{"lineNumber":321,"author":{"gitId":"pPris"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":322,"author":{"gitId":"pPris"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-29"},{"lineNumber":323,"author":{"gitId":"pPris"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":324,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":325,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":326,"author":{"gitId":"pPris"},"content":"        public void setDeliveryDate(DeliveryDate deliveryDate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":327,"author":{"gitId":"pPris"},"content":"            this.deliveryDate \u003d deliveryDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":328,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":329,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":330,"author":{"gitId":"pPris"},"content":"        public Optional\u003cDeliveryDate\u003e getDeliveryDate() {","lastModifiedDate":"2021-03-29"},{"lineNumber":331,"author":{"gitId":"pPris"},"content":"            return Optional.ofNullable(deliveryDate);","lastModifiedDate":"2021-03-29"},{"lineNumber":332,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":333,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":334,"author":{"gitId":"pPris"},"content":"        public void setRequest(Request request) {","lastModifiedDate":"2021-03-29"},{"lineNumber":335,"author":{"gitId":"pPris"},"content":"            this.request \u003d request;","lastModifiedDate":"2021-03-29"},{"lineNumber":336,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":337,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":340,"author":{"gitId":"pPris"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":341,"author":{"gitId":"pPris"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":342,"author":{"gitId":"pPris"},"content":"                return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":343,"author":{"gitId":"pPris"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":344,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":345,"author":{"gitId":"pPris"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":346,"author":{"gitId":"pPris"},"content":"            if (!(other instanceof AddCommand.AddOrderDescriptor)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":347,"author":{"gitId":"pPris"},"content":"                return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":348,"author":{"gitId":"pPris"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":349,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":350,"author":{"gitId":"pPris"},"content":"            // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":351,"author":{"gitId":"pPris"},"content":"            AddCommand.AddOrderDescriptor e \u003d (AddCommand.AddOrderDescriptor) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":352,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":353,"author":{"gitId":"pPris"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-29"},{"lineNumber":354,"author":{"gitId":"pPris"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-03-29"},{"lineNumber":355,"author":{"gitId":"pPris"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-03-29"},{"lineNumber":356,"author":{"gitId":"pPris"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-03-29"},{"lineNumber":357,"author":{"gitId":"pPris"},"content":"                    \u0026\u0026 getOrderDescriptions().equals(e.getOrderDescriptions())","lastModifiedDate":"2021-03-29"},{"lineNumber":358,"author":{"gitId":"pPris"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-29"},{"lineNumber":359,"author":{"gitId":"pPris"},"content":"                    \u0026\u0026 getDeliveryDate().equals(e.getDeliveryDate());","lastModifiedDate":"2021-03-29"},{"lineNumber":360,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":361,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":362,"author":{"gitId":"pPris"},"content":"        /**","lastModifiedDate":"2021-03-31"},{"lineNumber":363,"author":{"gitId":"pPris"},"content":"         * Builds an order based on the fields added to the descriptor","lastModifiedDate":"2021-03-31"},{"lineNumber":364,"author":{"gitId":"pPris"},"content":"         * @return","lastModifiedDate":"2021-03-31"},{"lineNumber":365,"author":{"gitId":"pPris"},"content":"         */","lastModifiedDate":"2021-03-31"},{"lineNumber":366,"author":{"gitId":"pPris"},"content":"        public Order build() {","lastModifiedDate":"2021-03-31"},{"lineNumber":367,"author":{"gitId":"pPris"},"content":"            return new Order(this.name, this.phone, this.email, this.address, this.orderDescriptions, this.tags,","lastModifiedDate":"2021-03-29"},{"lineNumber":368,"author":{"gitId":"pPris"},"content":"                    this.deliveryDate, this.request);","lastModifiedDate":"2021-03-29"},{"lineNumber":369,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pPris":307,"pavz02":3,"xiinweii98":25,"-":36}},{"path":"src/main/java/seedu/cakecollate/logic/commands/AddOrderItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":" * Adds an order item to the list of Order Items.","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"public class AddOrderItemCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String COMMAND_WORD \u003d \"addItem\";","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an order item to the list of order items. \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"            + \"Parameters: \" + \"ORDER_ITEM_DESCRIPTION\\n\"","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"            + \"Example: \" + COMMAND_WORD + \" Chocolate Cake\";","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New order item added: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER_ITEM \u003d \"This order item already exists in the list.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    private final OrderItem orderItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"     * Adds an order item to the list of order items upon execution.","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"     * @param orderItem Order Item to be added","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    public AddOrderItemCommand(OrderItem orderItem) {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(orderItem);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"        this.orderItem \u003d orderItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem toAdd \u003d orderItem; // slightly diff from editOrderDescriptor","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        if (model.hasOrderItem(toAdd)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER_ITEM);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        model.addOrderItem(toAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"            return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"        if (!(other instanceof AddOrderItemCommand)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"            return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"        // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"        AddOrderItemCommand a \u003d (AddOrderItemCommand) other;","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"        return (Objects.equals(orderItem, a.orderItem));","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"pPris":1,"simran-bhadani3":68}},{"path":"src/main/java/seedu/cakecollate/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":" * Clears the orders and the order items in cakecollate.","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"CakeCollate has been cleared!\";","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears all entries from CakeCollate.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"        model.setCakeCollate(new CakeCollate());","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        model.setOrderItems(new OrderItems());","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pavz02":5,"xiinweii98":4,"-":17}},{"path":"src/main/java/seedu/cakecollate/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xiinweii98":3,"-":17}},{"path":"src/main/java/seedu/cakecollate/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xiinweii98":1,"-":70}},{"path":"src/main/java/seedu/cakecollate/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":" * Deletes a order identified using it\u0027s displayed index from the CakeCollate database.","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"            + \": Deletes the orders identified by the index numbers used in the displayed order list.\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"            + \"Parameters: INDEXES (must be positive integers)\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 3\";","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Deleted Order: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_DELETE_ORDERS_SUCCESS \u003d \"Deleted Orders: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    private final IndexList targetIndexList;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * Creates a DeleteCommand object with an IndexList containing the indexes passed in by user.","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     * @param targetIndexList Index list consisting of one or more indexes passed by the user","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    public DeleteCommand(IndexList targetIndexList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        this.targetIndexList \u003d targetIndexList;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"    public static String getResultString(List\u003cOrder\u003e ordersToDelete) {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        if (ordersToDelete.size() \u003d\u003d 1) {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"            return String.format(MESSAGE_DELETE_ORDER_SUCCESS, ordersToDelete.get(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        String convertedToString \u003d \"\";","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        for (Order order : ordersToDelete) {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"            convertedToString \u003d convertedToString + String.format(\"\\n%1$s\", order);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        return String.format(MESSAGE_DELETE_ORDERS_SUCCESS, convertedToString);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"        List\u003cOrder\u003e ordersToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"        for (Index targetIndex:this.targetIndexList.getIndexList()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"            Order orderToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"            if (!ordersToDelete.contains(orderToDelete)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"                ordersToDelete.add(orderToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"            }","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"        for (Order orderToDelete:ordersToDelete) {","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"            model.deleteOrder(orderToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"        return new CommandResult(getResultString(ordersToDelete));","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"                \u0026\u0026 targetIndexList.equals(((DeleteCommand) other).targetIndexList)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pavz02":3,"xiinweii98":15,"-":32,"simran-bhadani3":32}},{"path":"src/main/java/seedu/cakecollate/logic/commands/DeleteOrderItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":" * Deletes a order item identified using the index displayed in the order items table.","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"public class DeleteOrderItemCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String COMMAND_WORD \u003d \"deleteItem\";","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"            + \": Deletes the order items identified by the index number used in the displayed order item list.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"            + \"Parameters: ORDER_ITEM_INDEXES (must be positive integers)\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_DELETE_ORDER_ITEM_SUCCESS \u003d \"Deleted Order Item: %1$s\";","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_DELETE_ORDER_ITEMS_SUCCESS \u003d \"Deleted Order Items: %1$s\";","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    private final IndexList targetIndexList;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * Creates a DeleteOrderItemCommand object with an IndexList containing the indexes passed in by user.","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     * @param targetIndexList Index list consisting of one or more indexes passed by the user","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    public DeleteOrderItemCommand(IndexList targetIndexList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        this.targetIndexList \u003d targetIndexList;","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"    public static String getResultString(List\u003cOrderItem\u003e orderItemsToDelete) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        if (orderItemsToDelete.size() \u003d\u003d 1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"            return String.format(MESSAGE_DELETE_ORDER_ITEM_SUCCESS, orderItemsToDelete.get(0));","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        String convertedToString \u003d \"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        for (OrderItem orderItem : orderItemsToDelete) {","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"            convertedToString \u003d convertedToString + String.format(\"\\n%1$s\", orderItem);","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        return String.format(MESSAGE_DELETE_ORDER_ITEMS_SUCCESS, convertedToString);","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"        List\u003cOrderItem\u003e lastShownList \u003d model.getFilteredOrderItemsList();","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"        List\u003cOrderItem\u003e orderItemsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"        for (Index targetIndex:this.targetIndexList.getIndexList()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"            OrderItem orderItemToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"            if (!orderItemsToDelete.contains(orderItemToDelete)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"                orderItemsToDelete.add(orderItemToDelete);","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"            }","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"        for (OrderItem orderItemToDelete:orderItemsToDelete) {","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"            model.deleteOrderItem(orderItemToDelete);","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"        return new CommandResult(getResultString(orderItemsToDelete));","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"                || (other instanceof DeleteOrderItemCommand // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"                \u0026\u0026 targetIndexList.equals(((DeleteOrderItemCommand) other).targetIndexList)); // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"simran-bhadani3":79}},{"path":"src/main/java/seedu/cakecollate/logic/commands/DeliveryStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"public class DeliveryStatusCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    public static final String UNDELIVERED_COMMAND_WORD \u003d \"undelivered\";","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    public static final String DELIVERED_COMMAND_WORD \u003d \"delivered\";","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    public static final String CANCELLED_COMMAND_WORD \u003d \"cancelled\";","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_UPDATED \u003d \"Updated order status for: %1$s\";","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_SAME \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"            \"The order status has already been updated for: %1$s\";","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    private final IndexList targetIndexList;","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"    private final DeliveryStatus status;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"     * Initialises a delivery status command.","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"     * @param targetIndexList IndexList of the indices that need to be updated.","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"     * @param status          The status the deliveryStatus has to be changed to.","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"    public DeliveryStatusCommand(IndexList targetIndexList, DeliveryStatus status) {","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"        this.targetIndexList \u003d targetIndexList;","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"     * Returns the description of how each of the commands in DeliveryStatusCommand works.","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"    public static String messageUsage(String commandWord) {","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"        return commandWord","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"                + \": Updates the deliveryStatus of the order identified by the index number \"","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"                + \"used in the displayed order list to \" + commandWord + \".\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"                + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"                + \"Example: \" + commandWord + \" 1 2 3\";","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"    public static String getMessageUsage(String commandWord) {","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"        return messageUsage(commandWord.toLowerCase());","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"    public static String getResultString(List\u003cOrder\u003e ordersToUpdate, List\u003cOrder\u003e sameOrders) {","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"        String convertedToStringUpdated \u003d \"\";","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"        for (Order order : ordersToUpdate) {","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"            convertedToStringUpdated \u003d convertedToStringUpdated + String.format(\"\\n%1$s\", order);","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"        String convertedToStringSame \u003d \"\";","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"        for (Order order : sameOrders) {","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"            convertedToStringSame \u003d convertedToStringSame + String.format(\"\\n%1$s\", order);","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"        if (!convertedToStringUpdated.equals(\"\")) {","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"            output +\u003d String.format(MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_UPDATED, convertedToStringUpdated);","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"        if (!convertedToStringUpdated.equals(\"\") \u0026\u0026 !convertedToStringSame.equals(\"\")) {","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"pavz02"},"content":"            output +\u003d \"\\n\\n\";","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        if (!convertedToStringSame.equals(\"\")) {","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"            output +\u003d String.format(MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_SAME, convertedToStringSame);","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"        return output;","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"pPris"},"content":"        List\u003cOrder\u003e copy \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2021-04-12"},{"lineNumber":92,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"        List\u003cOrder\u003e updatedOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"        List\u003cOrder\u003e sameOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-07"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"        for (Index targetIndex : this.targetIndexList.getIndexList()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"pPris"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d copy.size()) {","lastModifiedDate":"2021-04-12"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":101,"author":{"gitId":"pPris"},"content":"            Order orderToUpdate \u003d copy.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-04-12"},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"            if (orderToUpdate.getDeliveryStatus().equals(status)) {","lastModifiedDate":"2021-04-07"},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"                sameOrders.add(orderToUpdate);","lastModifiedDate":"2021-04-07"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"            } else {","lastModifiedDate":"2021-04-07"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"                Order editedOrder \u003d updateOrder(orderToUpdate, status);","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"                model.setOrder(orderToUpdate, editedOrder);","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"                model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"                updatedOrders.add(editedOrder);","lastModifiedDate":"2021-04-07"},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":"            }","lastModifiedDate":"2021-04-07"},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":"        return new CommandResult(getResultString(updatedOrders, sameOrders));","lastModifiedDate":"2021-04-07"},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"    private static Order updateOrder(Order order, DeliveryStatus status) {","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"        return new Order(order.getName(), order.getPhone(), order.getEmail(), order.getAddress(),","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"RuiXiong2211"},"content":"                order.getOrderDescriptions(), order.getTags(), order.getDeliveryDate(), status, order.getRequest());","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"pavz02"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"pavz02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"pavz02"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"pavz02"},"content":"                || (other instanceof DeliveryStatusCommand // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"pavz02"},"content":"                \u0026\u0026 targetIndexList.equals(((DeliveryStatusCommand) other).targetIndexList)","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"pavz02"},"content":"                \u0026\u0026 status.equals(((DeliveryStatusCommand) other).status)); // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"pPris":8,"pavz02":118,"RuiXiong2211":1}},{"path":"src/main/java/seedu/cakecollate/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":" * Edits the details of an existing order in CakeCollate.","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the order identified \"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"            + \"by the index number used in the displayed order list. \"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE_NUMBER] \"","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_DATE + \"DELIVERY_DATE]\"","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_ORDER_DESCRIPTION + \"ORDER_DESCRIPTION]... \"","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_EDIT_ORDER_SUCCESS \u003d \"Edited order: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists in CakeCollate.\\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"            + \"Note that Name, Address, Order Description and Delivery Date are taken into consideration \"","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"            + \"when checking for duplicated orders.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"No changes were made. Edit will not change the specified order.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"    private final EditOrderDescriptor editOrderDescriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"     * @param index of the order in the filtered order list to edit","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"     * @param editOrderDescriptor details to edit the order with","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"    public EditCommand(Index index, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(editOrderDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        this.editOrderDescriptor \u003d new EditOrderDescriptor(editOrderDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"        Order editedOrder \u003d createEditedOrder(orderToEdit, editOrderDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"        if (!orderToEdit.isSameOrder(editedOrder) \u0026\u0026 model.hasOrder(editedOrder)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"        if (orderToEdit.equals(editedOrder)) {","lastModifiedDate":"2021-04-07"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"            throw new CommandException(MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-04-07"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"pPris"},"content":"        addToOrderItemsModel(model);","lastModifiedDate":"2021-04-12"},{"lineNumber":103,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"        model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ORDER_SUCCESS, editedOrder));","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"     * Creates and returns a {@code Order} with the details of {@code orderToEdit}","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"xiinweii98"},"content":"     * edited with {@code editOrderDescriptor}.","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"    private static Order createEditedOrder(Order orderToEdit, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"        assert orderToEdit !\u003d null;","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"xiinweii98"},"content":"        Name updatedName \u003d editOrderDescriptor.getName().orElse(orderToEdit.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"        Phone updatedPhone \u003d editOrderDescriptor.getPhone().orElse(orderToEdit.getPhone());","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"xiinweii98"},"content":"        Email updatedEmail \u003d editOrderDescriptor.getEmail().orElse(orderToEdit.getEmail());","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"xiinweii98"},"content":"        Address updatedAddress \u003d editOrderDescriptor.getAddress().orElse(orderToEdit.getAddress());","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"pPris"},"content":"        Map\u003cOrderDescription, Integer\u003e updatedOrderDescriptions \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":121,"author":{"gitId":"pPris"},"content":"                editOrderDescriptor.getOrderDescriptions().orElse(orderToEdit.getOrderDescriptions());","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"xiinweii98"},"content":"        Set\u003cTag\u003e updatedTags \u003d editOrderDescriptor.getTags().orElse(orderToEdit.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"xiinweii98"},"content":"        DeliveryDate updatedDeliveryDate \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"xiinweii98"},"content":"                editOrderDescriptor.getDeliveryDate().orElse(orderToEdit.getDeliveryDate());","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"pavz02"},"content":"        DeliveryStatus deliveryStatus \u003d orderToEdit.getDeliveryStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"xiinweii98"},"content":"        // Normal edit command does not support editing request but this is here to support test cases for edit command","lastModifiedDate":"2021-04-07"},{"lineNumber":127,"author":{"gitId":"xiinweii98"},"content":"        Request updatedRequest \u003d editOrderDescriptor.getRequest().orElse(orderToEdit.getRequest());","lastModifiedDate":"2021-04-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"        return new Order(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedOrderDescriptions,","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"RuiXiong2211"},"content":"                updatedTags, updatedDeliveryDate, deliveryStatus, updatedRequest);","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"pPris"},"content":"    private void addToOrderItemsModel(Model model) {","lastModifiedDate":"2021-04-12"},{"lineNumber":134,"author":{"gitId":"pPris"},"content":"        if (this.editOrderDescriptor.getOrderDescriptions().isEmpty()) {","lastModifiedDate":"2021-04-12"},{"lineNumber":135,"author":{"gitId":"pPris"},"content":"            return;","lastModifiedDate":"2021-04-12"},{"lineNumber":136,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":137,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"pPris"},"content":"        this.editOrderDescriptor.getOrderDescriptions().get().keySet().stream()","lastModifiedDate":"2021-04-12"},{"lineNumber":139,"author":{"gitId":"pPris"},"content":"                .map(OrderDescription::getValue) // because a string is needed for creating a new Type for new OrderItem","lastModifiedDate":"2021-04-12"},{"lineNumber":140,"author":{"gitId":"pPris"},"content":"                .map(o -\u003e new OrderItem(new Type(o))) // map to order item so can check if already in model","lastModifiedDate":"2021-04-12"},{"lineNumber":141,"author":{"gitId":"pPris"},"content":"                .filter(o -\u003e !model.hasOrderItem(o)) // filters out items that already exist in model","lastModifiedDate":"2021-04-12"},{"lineNumber":142,"author":{"gitId":"pPris"},"content":"                .forEach(model::addOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":143,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":144,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 editOrderDescriptor.equals(e.editOrderDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"xiinweii98"},"content":"     * Stores the details to edit the order with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-09"},{"lineNumber":165,"author":{"gitId":"xiinweii98"},"content":"     * corresponding field value of the order.","lastModifiedDate":"2021-03-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"xiinweii98"},"content":"    public static class EditOrderDescriptor {","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"pPris"},"content":"        private Map\u003cOrderDescription, Integer\u003e orderDescriptions;","lastModifiedDate":"2021-04-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"xiinweii98"},"content":"        private DeliveryDate deliveryDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":175,"author":{"gitId":"RuiXiong2211"},"content":"        private Request request;","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"xiinweii98"},"content":"        public EditOrderDescriptor() {}","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":181,"author":{"gitId":"pPris"},"content":"         * A defensive copy of {@code orderDescriptions} and {@code tags} is used internally.","lastModifiedDate":"2021-03-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"xiinweii98"},"content":"        public EditOrderDescriptor(EditOrderDescriptor toCopy) {","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":188,"author":{"gitId":"pPris"},"content":"            setOrderDescriptions(toCopy.orderDescriptions);","lastModifiedDate":"2021-03-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"xiinweii98"},"content":"            setDeliveryDate(toCopy.deliveryDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":191,"author":{"gitId":"xiinweii98"},"content":"            setRequest(toCopy.request);","lastModifiedDate":"2021-04-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, orderDescriptions, tags, deliveryDate);","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"pPris"},"content":"        public void setOrderDescriptions(Map\u003cOrderDescription, Integer\u003e orderDescriptions) {","lastModifiedDate":"2021-04-10"},{"lineNumber":234,"author":{"gitId":"pPris"},"content":"            this.orderDescriptions \u003d (orderDescriptions !\u003d null) ? new HashMap\u003c\u003e(orderDescriptions) : null;","lastModifiedDate":"2021-04-10"},{"lineNumber":235,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":236,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":237,"author":{"gitId":"pPris"},"content":"        public Optional\u003cMap\u003cOrderDescription, Integer\u003e\u003e getOrderDescriptions() {","lastModifiedDate":"2021-04-10"},{"lineNumber":238,"author":{"gitId":"pPris"},"content":"            return (orderDescriptions !\u003d null)","lastModifiedDate":"2021-03-10"},{"lineNumber":239,"author":{"gitId":"pPris"},"content":"                    ? Optional.of(Collections.unmodifiableMap(orderDescriptions))","lastModifiedDate":"2021-04-10"},{"lineNumber":240,"author":{"gitId":"pPris"},"content":"                    : Optional.empty();","lastModifiedDate":"2021-03-13"},{"lineNumber":241,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":242,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"xiinweii98"},"content":"        public void setDeliveryDate(DeliveryDate deliveryDate) {","lastModifiedDate":"2021-03-09"},{"lineNumber":261,"author":{"gitId":"xiinweii98"},"content":"            this.deliveryDate \u003d deliveryDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":262,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":263,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":264,"author":{"gitId":"xiinweii98"},"content":"        public Optional\u003cDeliveryDate\u003e getDeliveryDate() {","lastModifiedDate":"2021-03-09"},{"lineNumber":265,"author":{"gitId":"xiinweii98"},"content":"            return Optional.ofNullable(deliveryDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":266,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":267,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":268,"author":{"gitId":"xiinweii98"},"content":"        public void setRequest(Request request) {","lastModifiedDate":"2021-04-07"},{"lineNumber":269,"author":{"gitId":"xiinweii98"},"content":"            this.request \u003d request;","lastModifiedDate":"2021-04-07"},{"lineNumber":270,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":271,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":272,"author":{"gitId":"xiinweii98"},"content":"        public Optional\u003cRequest\u003e getRequest() {","lastModifiedDate":"2021-04-07"},{"lineNumber":273,"author":{"gitId":"xiinweii98"},"content":"            return Optional.ofNullable(request);","lastModifiedDate":"2021-04-07"},{"lineNumber":274,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":275,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"xiinweii98"},"content":"            if (!(other instanceof EditOrderDescriptor)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"xiinweii98"},"content":"            EditOrderDescriptor e \u003d (EditOrderDescriptor) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":295,"author":{"gitId":"pPris"},"content":"                    \u0026\u0026 getOrderDescriptions().equals(e.getOrderDescriptions())","lastModifiedDate":"2021-03-29"},{"lineNumber":296,"author":{"gitId":"xiinweii98"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-09"},{"lineNumber":297,"author":{"gitId":"xiinweii98"},"content":"                    \u0026\u0026 getDeliveryDate().equals(e.getDeliveryDate());","lastModifiedDate":"2021-03-09"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"pPris":35,"pavz02":9,"RuiXiong2211":3,"xiinweii98":89,"-":164}},{"path":"src/main/java/seedu/cakecollate/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting CakeCollate as requested ...\";","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"pavz02":2,"xiinweii98":2,"-":15}},{"path":"src/main/java/seedu/cakecollate/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DELIVERY_STATUS;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ContainsKeywordsPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":" * Finds and lists all orders in cakecollate whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all orders which contain any of \"","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"            + \"the specified keywords/sub-keywords (case-insensitive) with or without prefixes and displays them \"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"            + \"as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_NAME + \"KEYWORD_NAME]... \"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_PHONE + \"KEYWORD_PHONE]... \"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_EMAIL + \"KEYWORD_EMAIL]... \"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_ADDRESS + \"KEYWORD_ADDRESS]... \"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_ORDER_DESCRIPTION + \"KEYWORD_ORDER_DESCRIPTION]... \"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_TAG + \"KEYWORD_TAG]... \"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_DATE + \"KEYWORD_DELIVERY_DATE]... \"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_DELIVERY_STATUS + \"KEYWORD_DELIVERY_STATUS]... \"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"            + \"[\" + PREFIX_REQUEST + \"KEYWORD_REQUEST]... \\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" alice .com chocolate\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"            + \"-\u003e find all orders that contains \\\"alice\\\" or \\\".com\\\" or \\\"chocolate\\\"\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" n/ali e/.co o/choco\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"            + \"-\u003e find all orders that contains \\\"ali\\\" in NAME and \\\".co\\\" in EMAIL \"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"            + \"and \\\"choco\\\" in ORDER_DESCRIPTION\";","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"    private final ContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"    public FindCommand(ContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"                String.format(Messages.MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size()));","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"        return predicate.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"pavz02":1,"xiinweii98":39,"-":29}},{"path":"src/main/java/seedu/cakecollate/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Switched to help window.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    public static final String SHOWING_RETURN_MESSAGE \u003d \"Switched to order window.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    private static boolean isAdded \u003d false;","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    private static final ObservableList\u003cString\u003e listOfCommands \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"     * Constructor which adds the command descriptions of all the commands present in CakeCollate to the listOfCommands.","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"        if (!isAdded) {","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"            addAllCommands();","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"            isAdded \u003d true;","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"     * Adds all the MESSAGE_USAGE strings in all of the commands into one observable list.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"    public static void addAllCommands() {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"        listOfCommands.addAll(HelpCommand.MESSAGE_USAGE, AddCommand.MESSAGE_USAGE, ListCommand.MESSAGE_USAGE,","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"                EditCommand.MESSAGE_USAGE, FindCommand.MESSAGE_USAGE, DeleteCommand.MESSAGE_USAGE,","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"                ClearCommand.MESSAGE_USAGE, ExitCommand.MESSAGE_USAGE, RemindCommand.MESSAGE_USAGE,","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"                DeliveryStatusCommand.getMessageUsage(DeliveryStatusCommand.UNDELIVERED_COMMAND_WORD),","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"                DeliveryStatusCommand.getMessageUsage(DeliveryStatusCommand.DELIVERED_COMMAND_WORD),","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"                DeliveryStatusCommand.getMessageUsage(DeliveryStatusCommand.CANCELLED_COMMAND_WORD),","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"                RequestCommand.MESSAGE_USAGE, AddOrderItemCommand.MESSAGE_USAGE, DeleteOrderItemCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    public static ObservableList\u003cString\u003e getListOfCommands() {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"        return listOfCommands;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pavz02":31,"RuiXiong2211":1,"xiinweii98":2,"-":17,"simran-bhadani3":1}},{"path":"src/main/java/seedu/cakecollate/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_ORDERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":" * Lists all orders in the cakecollate to the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all orders.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows a list of all orders from CakeCollate.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"        return new CommandResult(String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size()));","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pPris":2,"pavz02":2,"xiinweii98":5,"-":16}},{"path":"src/main/java/seedu/cakecollate/logic/commands/RemindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ReminderDatePredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":" * Finds and lists all orders in CakeCollate database whose delivery date is within X days of the current date.","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":" *","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String COMMAND_WORD \u003d \"remind\";","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_MULTIPLE_INPUTS \u003d \"Only one input for remind command is accepted! Did you leave\"","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"            + \"a space between 2 digits?\";","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all orders whose delivery dates \"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"            + \"are within X days from the current date, as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"            + \"Parameters: DAYS (Integer more than or equal to 0 but less than or equal to 2147483647) \\n\"","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    private final ReminderDatePredicate predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"     * @param predicate of the number of days from the current date, to return true for existing orders","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"     * which delivery dates fall within the date range.","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    public RemindCommand(ReminderDatePredicate predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        assert predicate !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"                String.format(Messages.MESSAGE_ORDERS_REMINDER_OVERVIEW, model.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"                        predicate.getDays()));","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"                || (other instanceof RemindCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 predicate.equals(((RemindCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"RuiXiong2211":44,"xiinweii98":6}},{"path":"src/main/java/seedu/cakecollate/logic/commands/RequestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":" * Command to add a request field to the order.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":" * Request field is initially empty when an order is added.","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"public class RequestCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String COMMAND_WORD \u003d \"request\";","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the request of the order identified \"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"            + \"by the index number used in the last order listing. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"            + \"Existing request will be overwritten by the input.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"            + PREFIX_REQUEST + \"[REQUEST]\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"            + PREFIX_REQUEST + \"No vanilla in the Vanilla Cake.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"            + \"Empty requests would change the request status back to -No special requests added.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_ADD_REQUEST_SUCCESS \u003d \"Added request to order: %1$s\";","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_DELETE_REQUEST_SUCCESS \u003d \"Removed request from order: %1$s\";","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_DELETE_REQUEST_SUCCESS_EMPTY \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"            \"Special request is already empty! Try adding a request instead.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"    private final Index index;","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    private final Request request;","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"     * @param index of the order in the filtered order list to edit the order","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"     * @param request of the order to be updated to","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"    public RequestCommand(Index index, Request request) {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        requireAllNonNull(index, request);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"        this.request \u003d request;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"        Order editedOrder \u003d new Order(orderToEdit.getName(), orderToEdit.getPhone(), orderToEdit.getEmail(),","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"                orderToEdit.getAddress(), orderToEdit.getOrderDescriptions(),","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"                orderToEdit.getTags(), orderToEdit.getDeliveryDate(), orderToEdit.getDeliveryStatus(), request);","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"        model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"        return new CommandResult(generateSuccessMessage(editedOrder, orderToEdit));","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"     * Generates a command execution success message based on whether the request is added to or removed from","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"     * {@code orderToEdit}.","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"    private String generateSuccessMessage(Order editedOrder, Order orderToEdit) {","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"        boolean isEmptyRequest \u003d request.isRequestEmpty();","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"        boolean isOrderRequestCurrentlyEmpty \u003d orderToEdit.getRequest().isRequestEmpty;","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"        // check that when deleting a request, it is already empty.","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"        if (isOrderRequestCurrentlyEmpty \u0026\u0026 isEmptyRequest) {","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"            return String.format(MESSAGE_DELETE_REQUEST_SUCCESS_EMPTY);","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"        String message \u003d isEmptyRequest","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"                ? MESSAGE_DELETE_REQUEST_SUCCESS","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"                : MESSAGE_ADD_REQUEST_SUCCESS;","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"        return String.format(message, editedOrder);","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"        if (!(other instanceof RequestCommand)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"        // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"        RequestCommand e \u003d (RequestCommand) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 request.equals(e.request);","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"RuiXiong2211":105}},{"path":"src/main/java/seedu/cakecollate/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands.exceptions;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"xiinweii98":1,"-":16}},{"path":"src/main/java/seedu/cakecollate/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_ITEM_IDX;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.AddCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"                args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"                PREFIX_ORDER_DESCRIPTION, PREFIX_ORDER_ITEM_IDX, PREFIX_TAG, PREFIX_DATE);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"                PREFIX_DATE)","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"                || !isAnyPresent(argMultimap, PREFIX_ORDER_ITEM_IDX, PREFIX_ORDER_DESCRIPTION)","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor addOrderDescriptor \u003d new AddCommand.AddOrderDescriptor();","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"pPris"},"content":"        Map\u003cOrderDescription, Integer\u003e orderDescriptionSet \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"pPris"},"content":"                ParserUtil.parseOrderDescriptions(argMultimap.getAllValues(PREFIX_ORDER_DESCRIPTION));","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        DeliveryDate deliveryDate \u003d ParserUtil.parseDeliveryDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"        Request request \u003d new Request(\"\"); //request should be empty when addcommand is initialized.","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"pPris"},"content":"        addOrderDescriptor.setName(name);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"pPris"},"content":"        addOrderDescriptor.setPhone(phone);","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"pPris"},"content":"        addOrderDescriptor.setEmail(email);","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"pPris"},"content":"        addOrderDescriptor.setAddress(address);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"pPris"},"content":"        addOrderDescriptor.setOrderDescriptions(orderDescriptionSet);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"        addOrderDescriptor.setTags(tagList);","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"        addOrderDescriptor.setDeliveryDate(deliveryDate);","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"pPris"},"content":"        addOrderDescriptor.setRequest(request);","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"pPris"},"content":"        IndexList orderItemIndexList \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"pPris"},"content":"                argMultimap.getValue(PREFIX_ORDER_ITEM_IDX).isEmpty()","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"pPris"},"content":"                        ? null","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"pPris"},"content":"                        : ParserUtil.parseIndexList(argMultimap.getValue(PREFIX_ORDER_ITEM_IDX).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"        return new AddCommand(orderItemIndexList, addOrderDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":91,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"pPris"},"content":"     * Returns true if any one of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"pPris"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"pPris"},"content":"    private static boolean isAnyPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"pPris"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"pPris":38,"RuiXiong2211":2,"xiinweii98":19,"-":40}},{"path":"src/main/java/seedu/cakecollate/logic/parser/AddOrderItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.commands.AddOrderItemCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":" * Parses input arguments and creates a new AddOrderItemCommand object","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"public class AddOrderItemCommandParser implements Parser\u003cAddOrderItemCommand\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    public AddOrderItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"            OrderItem orderItem \u003d ParserUtil.parseOrderItem(args);","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"            return new AddOrderItemCommand(orderItem);","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(pe.getMessage());","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"RuiXiong2211":1,"simran-bhadani3":25}},{"path":"src/main/java/seedu/cakecollate/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"xiinweii98":1,"-":59}},{"path":"src/main/java/seedu/cakecollate/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"xiinweii98":1,"-":147}},{"path":"src/main/java/seedu/cakecollate/logic/parser/CakeCollateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.AddCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.commands.AddOrderItemCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.Command;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.commands.DeleteOrderItemCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.DeliveryStatusCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.EditCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.FindCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.ListCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.RemindCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.commands.RequestCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Status;","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"public class CakeCollateParser {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"        case RemindCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"            return new RemindCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"        case DeliveryStatusCommand.UNDELIVERED_COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"            return new DeliveryStatusCommandParser(new DeliveryStatus(Status.UNDELIVERED)).parse(arguments);","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"        case DeliveryStatusCommand.DELIVERED_COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"            return new DeliveryStatusCommandParser(new DeliveryStatus(Status.DELIVERED)).parse(arguments);","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"        case DeliveryStatusCommand.CANCELLED_COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"            return new DeliveryStatusCommandParser(new DeliveryStatus(Status.CANCELLED)).parse(arguments);","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"        case RequestCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"            return new RequestCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"        case AddOrderItemCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"            return new AddOrderItemCommandParser().parse(arguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"        case DeleteOrderItemCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"            return new DeleteOrderItemCommandParser().parse(arguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pavz02":22,"RuiXiong2211":7,"xiinweii98":5,"-":62,"simran-bhadani3":8}},{"path":"src/main/java/seedu/cakecollate/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"    public static final Prefix PREFIX_ORDER_DESCRIPTION \u003d new Prefix(\"o/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"    public static final Prefix PREFIX_ORDER_ITEM_IDX \u003d new Prefix(\"oi/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public static final Prefix PREFIX_REQUEST \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    public static final Prefix PREFIX_DELIVERY_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    public static final Prefix PREFIX_ALL \u003d new Prefix(\"all/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"pPris":2,"RuiXiong2211":1,"xiinweii98":4,"-":13}},{"path":"src/main/java/seedu/cakecollate/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.parser.exceptions.IndexOutOfBoundsException;","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.parser.exceptions.NegativeIndexException;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"            IndexList indexList \u003d ParserUtil.parseIndexList(args);","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"            return new DeleteCommand(indexList);","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IndexOutOfBoundsException pe) {","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"            throw new IndexOutOfBoundsException(pe.getMessage());","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (NegativeIndexException pe) {","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"            throw new NegativeIndexException(pe.getMessage());","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"RuiXiong2211":3,"xiinweii98":5,"-":22,"simran-bhadani3":5}},{"path":"src/main/java/seedu/cakecollate/logic/parser/DeleteOrderItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.commands.DeleteOrderItemCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.parser.exceptions.IndexOutOfBoundsException;","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.parser.exceptions.NegativeIndexException;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"public class DeleteOrderItemCommandParser implements Parser\u003cDeleteOrderItemCommand\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    public DeleteOrderItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"            IndexList indexList \u003d ParserUtil.parseIndexList(args);","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"            return new DeleteOrderItemCommand(indexList);","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IndexOutOfBoundsException pe) {","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"            throw new IndexOutOfBoundsException(Messages.MESSAGE_INVALID_ORDER_ITEM_INDEX);","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (NegativeIndexException pe) {","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"            throw new NegativeIndexException(pe.getMessage());","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderItemCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"RuiXiong2211":4,"simran-bhadani3":32}},{"path":"src/main/java/seedu/cakecollate/logic/parser/DeliveryStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.DeliveryStatusCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.parser.exceptions.IndexOutOfBoundsException;","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.parser.exceptions.NegativeIndexException;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"public class DeliveryStatusCommandParser implements Parser\u003cDeliveryStatusCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    public final DeliveryStatus status;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    DeliveryStatusCommandParser(DeliveryStatus status) {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"     * Parses the given {@code String} of arguments in the context of the DeliveryStatusCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"     * and returns a DeliveryStatusCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    public DeliveryStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"        try {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"            assert status !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"            IndexList indexList \u003d ParserUtil.parseIndexList(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"            return new DeliveryStatusCommand(indexList, status);","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IndexOutOfBoundsException pe) {","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"            throw new IndexOutOfBoundsException(pe.getMessage());","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (NegativeIndexException pe) {","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"            throw new NegativeIndexException(pe.getMessage());","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"        } catch (ParseException exception) {","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"                    DeliveryStatusCommand.getMessageUsage(status.toString())), exception);","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"pavz02":33,"RuiXiong2211":3,"simran-bhadani3":3}},{"path":"src/main/java/seedu/cakecollate/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.EditCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.EditCommand.EditOrderDescriptor;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.parser.exceptions.IndexOutOfBoundsException;","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.parser.exceptions.NegativeIndexException;","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"                        PREFIX_ORDER_DESCRIPTION, PREFIX_TAG, PREFIX_DATE);","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IndexOutOfBoundsException pe) {","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"            throw new IndexOutOfBoundsException(pe.getMessage());","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (NegativeIndexException pe) {","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"            throw new NegativeIndexException(pe.getMessage());","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"        EditOrderDescriptor editOrderDescriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"            editOrderDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"            editOrderDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"            editOrderDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"            editOrderDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"        parseOrderDescriptionsForEdit(","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"pPris"},"content":"                argMultimap.getAllValues(PREFIX_ORDER_DESCRIPTION))","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"                .ifPresent(editOrderDescriptor::setOrderDescriptions);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editOrderDescriptor::setTags);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"            editOrderDescriptor.setDeliveryDate(ParserUtil.parseDeliveryDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"        if (!editOrderDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"        return new EditCommand(index, editOrderDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"pPris"},"content":"     * Parses {@code Collection\u003cString\u003e orderDescriptions} into a {@code Map\u003cOrderDescription, Integer\u003e} if {@code","lastModifiedDate":"2021-04-10"},{"lineNumber":106,"author":{"gitId":"pPris"},"content":"     * orderDescriptions} is non-empty.","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"pPris"},"content":"     * The value of the map corresponds to the quantity of order descriptions inputted.","lastModifiedDate":"2021-04-10"},{"lineNumber":108,"author":{"gitId":"pPris"},"content":"     * If {@code orderDescriptions} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"pPris"},"content":"     * {@code Map\u003cOrderDescription, Integer\u003e} containing zero orderDescriptions.","lastModifiedDate":"2021-04-10"},{"lineNumber":110,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"pPris"},"content":"    private Optional\u003cMap\u003cOrderDescription, Integer\u003e\u003e parseOrderDescriptionsForEdit(Collection\u003cString\u003e orderDescriptions)","lastModifiedDate":"2021-04-10"},{"lineNumber":112,"author":{"gitId":"pPris"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"pPris"},"content":"        assert orderDescriptions !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"pPris"},"content":"        if (orderDescriptions.isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"pPris"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"pPris"},"content":"        return Optional.of(ParserUtil.parseOrderDescriptions(orderDescriptions));","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"pPris":25,"RuiXiong2211":4,"xiinweii98":29,"-":62,"simran-bhadani3":3}},{"path":"src/main/java/seedu/cakecollate/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ALL;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DELIVERY_STATUS;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.FindCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ContainsKeywordsPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    private final Prefix[] allPrefixes \u003d new Prefix[] {PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        PREFIX_ORDER_DESCRIPTION, PREFIX_TAG, PREFIX_DATE, PREFIX_REQUEST, PREFIX_DELIVERY_STATUS};","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"                args, allPrefixes);","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"        List\u003cPrefix\u003e prefixes \u003d Arrays.asList(allPrefixes);","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e prefixesToFind \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        // User input at least 1 valid prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"        if (!arePrefixesEmpty(argMultimap, allPrefixes)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"            String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"            if (!preamble.trim().isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"                throw new ParseException(","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"            prefixes.forEach(prefix -\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"                List\u003cString\u003e values \u003d argMultimap.getAllValues(prefix);","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"                if (!values.isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"                    List\u003cString\u003e processed \u003d processAllKeywords(values);","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"                    prefixesToFind.put(prefix, processed);","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"            });","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"            checkInputs(prefixesToFind);","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        // User did not input any known prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"                throw new ParseException(","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"            List\u003cString\u003e processed \u003d Arrays.asList(trimmedArgs.split(\"\\\\s+\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"            // PREFIX_ALL to indicate searching in all fields of an order","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"            // (User will not be able to use \"all/\" as a valid and known prefix)","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"            prefixesToFind.put(PREFIX_ALL, processed);","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"        return new FindCommand(new ContainsKeywordsPredicate(prefixesToFind));","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"     * Process and return a {@code List\u003cString\u003e} containing the keywords retrieved from {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"    public List\u003cString\u003e processAllKeywords(List\u003cString\u003e allKeywords) {","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"        return allKeywords.stream()","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"                .map(value -\u003e value.trim().split(\"\\\\s+\"))","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"                .flatMap(Stream::of)","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"     * Returns true if all of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"    private static boolean arePrefixesEmpty(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isEmpty());","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"     * Checks if keywords input by user is non-blank. Throws a {@code ParseException} otherwise.","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"    public void checkInputs(HashMap\u003cPrefix, List\u003cString\u003e\u003e toTest) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"        for (Map.Entry\u003cPrefix, List\u003cString\u003e\u003e entry : toTest.entrySet()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"            List\u003cString\u003e value \u003d entry.getValue();","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"            for (String v : value) {","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"                if (v.isBlank()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"xiinweii98":88,"-":21}},{"path":"src/main/java/seedu/cakecollate/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.Command;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"xiinweii98":3,"-":13}},{"path":"src/main/java/seedu/cakecollate/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.commons.util.StringUtil.capitaliseEachWord;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.StringUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.commands.RemindCommand;","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.parser.exceptions.IndexOutOfBoundsException;","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.parser.exceptions.NegativeIndexException;","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is invalid.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String MESSAGE_NO_INDEX_PROVIDED \u003d \"No index provided\";","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    public static final int PHONE_LENGTH \u003d 20;","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"    public static final int TAG_LENGTH \u003d 30;","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"    public static final int INTEGER_LENGTH \u003d 10;","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"    public static final int NAME_LENGTH \u003d 70;","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"    public static final int ORDER_DESCRIPTION_LENGTH \u003d 70;","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"        boolean allDigits \u003d oneBasedIndex.chars().allMatch(Character::isDigit);","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"        boolean lengthMoreThanTen \u003d oneBasedIndex.length() \u003e INTEGER_LENGTH;","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"        boolean allDigitsAndLengthMoreThanTen \u003d allDigits \u0026\u0026 lengthMoreThanTen;","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"        if (allDigitsAndLengthMoreThanTen) {","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"            throw new IndexOutOfBoundsException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"        if (StringUtil.isNegativeInteger(trimmedIndex)) {","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"            throw new NegativeIndexException(Messages.MESSAGE_NEGATIVE_INDEX);","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses {@code oneBasedIndexList} from String into an {@code IndexList} and returns it.","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"     * @param oneBasedIndexList one based indices input by the user.","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"     * @return list of indices sorted in descending order.","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws ParseException if one of the specified indices is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"    public static IndexList parseIndexList(String oneBasedIndexList) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        String[] indexListSplit \u003d oneBasedIndexList.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-04-09"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexList \u003d new IndexList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"        for (String index: indexListSplit) {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"            if ((!index.equals(\" \")) \u0026\u0026 (!index.equals(\"\"))) {","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"                Index parsedIndex \u003d parseIndex(index.trim());","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"                indexList.add(parsedIndex);","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"        if (indexList.getIndexList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"            throw new ParseException(MESSAGE_NO_INDEX_PROVIDED);","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"        indexList.sortList();","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"        return indexList;","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"        if (trimmedName.isEmpty()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(Name.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-07"},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"        if (trimmedName.length() \u003e NAME_LENGTH) {","lastModifiedDate":"2021-04-07"},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(Name.MESSAGE_OVERFLOW);","lastModifiedDate":"2021-04-07"},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"RuiXiong2211"},"content":"        if (trimmedPhone.isEmpty()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":123,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(Phone.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-07"},{"lineNumber":124,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":125,"author":{"gitId":"RuiXiong2211"},"content":"        if (trimmedPhone.length() \u003e PHONE_LENGTH) {","lastModifiedDate":"2021-04-07"},{"lineNumber":126,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(Phone.MESSAGE_OVERFLOW);","lastModifiedDate":"2021-04-07"},{"lineNumber":127,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2021-04-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2021-04-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"RuiXiong2211"},"content":"        if (trimmedAddress.isEmpty()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":144,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(Address.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-07"},{"lineNumber":145,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"RuiXiong2211"},"content":"        if (trimmedEmail.isEmpty()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":162,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(Email.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-07"},{"lineNumber":163,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"pPris"},"content":"     * Parses a {@code String orderDescription} into a {@code OrderDescription}.","lastModifiedDate":"2021-03-10"},{"lineNumber":172,"author":{"gitId":"pPris"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"pPris"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":174,"author":{"gitId":"pPris"},"content":"     * @throws ParseException if the given {@code orderDescription} is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":176,"author":{"gitId":"pPris"},"content":"    public static OrderDescription parseOrderDescription(String orderDescription) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":177,"author":{"gitId":"pPris"},"content":"        requireNonNull(orderDescription);","lastModifiedDate":"2021-03-10"},{"lineNumber":178,"author":{"gitId":"pPris"},"content":"        String formattedOrderDescription \u003d capitaliseEachWord(orderDescription.trim());","lastModifiedDate":"2021-04-11"},{"lineNumber":179,"author":{"gitId":"RuiXiong2211"},"content":"        if (formattedOrderDescription.isEmpty()) {","lastModifiedDate":"2021-04-12"},{"lineNumber":180,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(OrderDescription.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-12"},{"lineNumber":181,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":182,"author":{"gitId":"pPris"},"content":"        if (formattedOrderDescription.length() \u003e ORDER_DESCRIPTION_LENGTH) {","lastModifiedDate":"2021-04-11"},{"lineNumber":183,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(OrderDescription.MESSAGE_OVERFLOW);","lastModifiedDate":"2021-04-09"},{"lineNumber":184,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"        if (!OrderDescription.isValidOrderDescription(formattedOrderDescription)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"            throw new ParseException(OrderDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"        return new OrderDescription(formattedOrderDescription);","lastModifiedDate":"2021-04-11"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":191,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":192,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":193,"author":{"gitId":"pPris"},"content":"     * Parses {@code Collection\u003cString\u003e orderDescriptions} into a {@code Map\u003cOrderDescription, Integer\u003e}.","lastModifiedDate":"2021-04-10"},{"lineNumber":194,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":195,"author":{"gitId":"pPris"},"content":"    public static Map\u003cOrderDescription, Integer\u003e parseOrderDescriptions(Collection\u003cString\u003e orderDescriptions)","lastModifiedDate":"2021-04-10"},{"lineNumber":196,"author":{"gitId":"pPris"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"        requireNonNull(orderDescriptions);","lastModifiedDate":"2021-03-10"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"        final Map\u003cOrderDescription, Integer\u003e orderDescriptionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"        for (String str : orderDescriptions) {","lastModifiedDate":"2021-04-10"},{"lineNumber":200,"author":{"gitId":"pPris"},"content":"            OrderDescription od \u003d parseOrderDescription(str);","lastModifiedDate":"2021-04-10"},{"lineNumber":201,"author":{"gitId":"pPris"},"content":"            int quantity \u003d orderDescriptionMap.getOrDefault(od, 0);","lastModifiedDate":"2021-04-10"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"            orderDescriptionMap.put(od, quantity + 1);","lastModifiedDate":"2021-04-10"},{"lineNumber":203,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":204,"author":{"gitId":"pPris"},"content":"        return orderDescriptionMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":205,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":206,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"RuiXiong2211"},"content":"        if (trimmedTag.length() \u003e TAG_LENGTH) {","lastModifiedDate":"2021-04-07"},{"lineNumber":217,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(Tag.MESSAGE_OVERFLOW);","lastModifiedDate":"2021-04-07"},{"lineNumber":218,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":236,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":237,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":238,"author":{"gitId":"xiinweii98"},"content":"     * Parses a {@code String deliveryDate} into an {@code DeliveryDate}.","lastModifiedDate":"2021-03-09"},{"lineNumber":239,"author":{"gitId":"xiinweii98"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":240,"author":{"gitId":"xiinweii98"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":241,"author":{"gitId":"xiinweii98"},"content":"     * @throws ParseException if the given {@code deliveryDate} is invalid.","lastModifiedDate":"2021-03-09"},{"lineNumber":242,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":243,"author":{"gitId":"xiinweii98"},"content":"    public static DeliveryDate parseDeliveryDate(String deliveryDate) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":244,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(deliveryDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":245,"author":{"gitId":"xiinweii98"},"content":"        String trimmedDeliveryDate \u003d deliveryDate.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":246,"author":{"gitId":"RuiXiong2211"},"content":"        if (trimmedDeliveryDate.isEmpty()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":247,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(DeliveryDate.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-07"},{"lineNumber":248,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":249,"author":{"gitId":"xiinweii98"},"content":"        if (!DeliveryDate.isValidFormat(trimmedDeliveryDate)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"xiinweii98"},"content":"            throw new ParseException(DeliveryDate.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"xiinweii98"},"content":"        if (!DeliveryDate.isXDaysLater(trimmedDeliveryDate, 0L)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"xiinweii98"},"content":"            throw new ParseException(String.format(DeliveryDate.MESSAGE_CONSTRAINTS_VALUE, trimmedDeliveryDate));","lastModifiedDate":"2021-03-30"},{"lineNumber":254,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":255,"author":{"gitId":"xiinweii98"},"content":"        return new DeliveryDate(trimmedDeliveryDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":256,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":257,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":258,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses a {@code String orderItemType} into an {@code OrderItem}.","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"simran-bhadani3"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-31"},{"lineNumber":261,"author":{"gitId":"simran-bhadani3"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":262,"author":{"gitId":"simran-bhadani3"},"content":"     * @param orderItemType Type of the order item as entered by the user.","lastModifiedDate":"2021-03-31"},{"lineNumber":263,"author":{"gitId":"simran-bhadani3"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":264,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws ParseException if the given {@code orderItemType} is invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":266,"author":{"gitId":"simran-bhadani3"},"content":"    public static OrderItem parseOrderItem(String orderItemType) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":267,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(orderItemType);","lastModifiedDate":"2021-03-31"},{"lineNumber":268,"author":{"gitId":"pPris"},"content":"        String formattedOrderItemDescription \u003d capitaliseEachWord(orderItemType.trim());","lastModifiedDate":"2021-04-11"},{"lineNumber":269,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":270,"author":{"gitId":"pPris"},"content":"        if (formattedOrderItemDescription.length() \u003e ORDER_DESCRIPTION_LENGTH) {","lastModifiedDate":"2021-04-11"},{"lineNumber":271,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(OrderDescription.MESSAGE_OVERFLOW);","lastModifiedDate":"2021-04-11"},{"lineNumber":272,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":273,"author":{"gitId":"pPris"},"content":"        if (!Type.isValidType(formattedOrderItemDescription)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":274,"author":{"gitId":"simran-bhadani3"},"content":"            throw new ParseException(String.format(Type.SHARED_CONSTRAINTS_MESSAGE, \"Order description\"));","lastModifiedDate":"2021-04-12"},{"lineNumber":275,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":276,"author":{"gitId":"pPris"},"content":"        return new OrderItem(new Type(formattedOrderItemDescription));","lastModifiedDate":"2021-04-11"},{"lineNumber":277,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":278,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":279,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":280,"author":{"gitId":"RuiXiong2211"},"content":"     * Parses a {@code String days} into a valid day}.","lastModifiedDate":"2021-04-11"},{"lineNumber":281,"author":{"gitId":"RuiXiong2211"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-04-11"},{"lineNumber":282,"author":{"gitId":"RuiXiong2211"},"content":"     *","lastModifiedDate":"2021-04-11"},{"lineNumber":283,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws ParseException if the given {@code daus} is invalid.","lastModifiedDate":"2021-04-11"},{"lineNumber":284,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":285,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":286,"author":{"gitId":"RuiXiong2211"},"content":"    public static int parseDays(String days) throws ParseException {","lastModifiedDate":"2021-04-11"},{"lineNumber":287,"author":{"gitId":"RuiXiong2211"},"content":"        requireNonNull(days);","lastModifiedDate":"2021-04-11"},{"lineNumber":288,"author":{"gitId":"RuiXiong2211"},"content":"        String[] inputs \u003d days.replaceFirst(\"^\\\\s\", \"\").split(\"\\\\s+\");","lastModifiedDate":"2021-04-11"},{"lineNumber":289,"author":{"gitId":"RuiXiong2211"},"content":"        boolean isMoreThanOneInput \u003d inputs.length \u003e 1;","lastModifiedDate":"2021-04-11"},{"lineNumber":290,"author":{"gitId":"RuiXiong2211"},"content":"        String trimmedDays \u003d days.trim();","lastModifiedDate":"2021-04-11"},{"lineNumber":291,"author":{"gitId":"RuiXiong2211"},"content":"        if (isMoreThanOneInput) {","lastModifiedDate":"2021-04-11"},{"lineNumber":292,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(RemindCommand.MESSAGE_MULTIPLE_INPUTS);","lastModifiedDate":"2021-04-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":294,"author":{"gitId":"RuiXiong2211"},"content":"        if (!StringUtil.isUnsignedInteger(trimmedDays)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":295,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-11"},{"lineNumber":296,"author":{"gitId":"RuiXiong2211"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":297,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":298,"author":{"gitId":"RuiXiong2211"},"content":"        return Integer.parseInt(trimmedDays);","lastModifiedDate":"2021-04-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":300,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-11"},{"lineNumber":301,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"pPris":40,"RuiXiong2211":68,"xiinweii98":30,"-":113,"simran-bhadani3":50}},{"path":"src/main/java/seedu/cakecollate/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"xiinweii98":1,"-":38}},{"path":"src/main/java/seedu/cakecollate/logic/parser/RemindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.RemindCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ReminderDatePredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" * Parses input argument and creates a new RemindCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"public class RemindCommandParser implements Parser\u003cRemindCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"     * Parses the given {@code String} of arguments in the context of the RemindCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"     * and returns a RemindCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    public RemindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        int days;","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        try {","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"            days \u003d ParserUtil.parseDays(args);","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(pe.getMessage());","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        return new RemindCommand(new ReminderDatePredicate(days));","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"RuiXiong2211":23,"xiinweii98":4}},{"path":"src/main/java/seedu/cakecollate/logic/parser/RequestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.commands.RequestCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.parser.exceptions.IndexOutOfBoundsException;","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"public class RequestCommandParser implements Parser\u003cRequestCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"     * Parses the given {@code String} of arguments in the context of the RequestCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"     * and returns an RequestCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"    public RequestCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        requireAllNonNull(args);","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"                PREFIX_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        Index index;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IndexOutOfBoundsException pe) {","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"            throw new IndexOutOfBoundsException(pe.getMessage());","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"                    RequestCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"        String request \u003d argMultimap.getValue(PREFIX_REQUEST).orElse(\"\");","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"        return new RequestCommand(index, new Request(request));","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"RuiXiong2211":40}},{"path":"src/main/java/seedu/cakecollate/logic/parser/exceptions/IndexOutOfBoundsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.logic.parser.exceptions;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":" * Represents a parse error encountered by a parser, when the index provided is an integer above 32bits.","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"public class IndexOutOfBoundsException extends ParseException {","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    public IndexOutOfBoundsException(String message) {","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"        super(message);","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"RuiXiong2211":12}},{"path":"src/main/java/seedu/cakecollate/logic/parser/exceptions/NegativeIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.logic.parser.exceptions;","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":" * Represents a parse error encountered by a parser, when the index provided is a negative integer.","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"public class NegativeIndexException extends ParseException {","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"    public NegativeIndexException(String message) {","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"        super(message);","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"simran-bhadani3":12}},{"path":"src/main/java/seedu/cakecollate/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser.exceptions;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"xiinweii98":2,"-":15}},{"path":"src/main/java/seedu/cakecollate/model/CakeCollate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.UniqueOrderList;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":" * Wraps all data at the cakecollate-book level","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":" * Duplicates are not allowed (by .isSameOrder comparison)","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"public class CakeCollate implements ReadOnlyCakeCollate {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    private final UniqueOrderList orders;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        orders \u003d new UniqueOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    public CakeCollate() {}","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"     * Creates an CakeCollate using the Orders in the {@code toBeCopied}","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"    public CakeCollate(ReadOnlyCakeCollate toBeCopied) {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"     * Replaces the contents of the order list with {@code orders}.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"     * {@code orders} must not contain duplicate orders.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        this.orders.setOrders(orders);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"     * Resets the existing data of this {@code CakeCollate} with {@code newData}.","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"    public void resetData(ReadOnlyCakeCollate newData) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"        setOrders(newData.getOrderList());","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"    //// order-level operations","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"     * Returns true if a order with the same identity as {@code order} exists in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"        return orders.contains(order);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"     * Adds a order to the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"     * The order must not already exist in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"    public void addOrder(Order p) {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        orders.add(p);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"     * Replaces the given order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"     * {@code target} must exist in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"        orders.setOrder(target, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"     * Removes {@code key} from this {@code CakeCollate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"     * {@code key} must exist in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"    public void removeOrder(Order key) {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"        orders.remove(key);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"        return orders.asUnmodifiableObservableList().size() + \" orders\";","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"pPris"},"content":"    public void sortOrderList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"pPris"},"content":"        orders.sortOrdersByDateAndStatus();","lastModifiedDate":"2021-04-11"},{"lineNumber":111,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"xiinweii98"},"content":"                || (other instanceof CakeCollate // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 orders.equals(((CakeCollate) other).orders));","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"xiinweii98"},"content":"        return orders.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pPris":4,"xiinweii98":43,"-":77}},{"path":"src/main/java/seedu/cakecollate/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    Predicate\u003cOrder\u003e PREDICATE_SHOW_ALL_ORDERS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"     * Returns the user prefs\u0027 cakecollate file path.","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"    Path getCakeCollateFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"     * Sets the user prefs\u0027 cakecollate file path.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"    void setCakeCollateFilePath(Path cakeCollateFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"     * Replaces cakecollate data with the data in {@code cakeCollate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"    void setCakeCollate(ReadOnlyCakeCollate cakeCollate);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"    /** Returns the CakeCollate */","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"    ReadOnlyCakeCollate getCakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"     * Returns true if a order with the same identity as {@code order} exists in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"    boolean hasOrder(Order order);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"     * Deletes the given order.","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"     * The order must exist in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"    void deleteOrder(Order target);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"     * Adds the given order.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"     * {@code order} must not already exist in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"    void addOrder(Order order);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"     * Replaces the given order {@code target} with {@code editedOrder}.","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"     * {@code target} must exist in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"    void setOrder(Order target, Order editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"    /** Returns an unmodifiable view of the filtered order list */","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"pPris"},"content":"    /** Updates the order list to sort by delivery date. */","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"pPris"},"content":"    void sortFilteredOrderList();","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"     * Updates the filter of the filtered order list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"    void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"    /** Returns the OrderItems */","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"    ReadOnlyOrderItems getOrderItems();","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"     * Adds the given orderItem.","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"     * {@code orderItem} must not already exist in the orderItems.","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"    void addOrderItem(OrderItem orderItem);","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"pPris"},"content":"    boolean hasOrderItem(OrderItem orderItem);","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"     * Deletes the given orderItem.","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"     * The order must exist in the orderItems.","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"RuiXiong2211"},"content":"    void deleteOrderItem(OrderItem orderitem);","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"pPris"},"content":"    /** Returns an unmodifiable view of the filtered order items list */","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"pPris"},"content":"    ObservableList\u003cOrderItem\u003e getFilteredOrderItemsList();","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"     * Replaces the data in order items with the data in {@code orderItems}.","lastModifiedDate":"2021-04-08"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"    void setOrderItems(ReadOnlyOrderItems orderItems);","lastModifiedDate":"2021-04-08"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"pPris":12,"RuiXiong2211":12,"pavz02":5,"xiinweii98":28,"-":59,"simran-bhadani3":1}},{"path":"src/main/java/seedu/cakecollate/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":" * Represents the in-memory model of the cakecollate data.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    private final CakeCollate cakeCollate;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    private final FilteredList\u003cOrder\u003e filteredOrders;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    private final OrderItems orderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"    private final FilteredList\u003cOrderItem\u003e filteredOrderItems;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"     * Initializes a ModelManager with the given cakeCollate and userPrefs.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    public ModelManager(ReadOnlyCakeCollate cakeCollate, ReadOnlyUserPrefs userPrefs, ReadOnlyOrderItems orderItems) {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"        requireAllNonNull(cakeCollate, userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"        logger.fine(\"Initializing with cakecollate: \" + cakeCollate + \" and user prefs \"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"                + userPrefs + \"and orderitems \" + orderItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        this.cakeCollate \u003d new CakeCollate(cakeCollate);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.cakeCollate.getOrderList());","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"        this.orderItems \u003d new OrderItems(orderItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"pPris"},"content":"        filteredOrderItems \u003d new FilteredList\u003c\u003e(this.orderItems.getOrderItemList());","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"        sortFilteredOrderList();","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"        this(new CakeCollate(), new UserPrefs(), new OrderItems());","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"    public Path getCakeCollateFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"        return userPrefs.getCakeCollateFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"    public void setCakeCollateFilePath(Path cakeCollateFilePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(cakeCollateFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"        userPrefs.setCakeCollateFilePath(cakeCollateFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CakeCollate \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"    public void setCakeCollate(ReadOnlyCakeCollate cakeCollate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"        this.cakeCollate.resetData(cakeCollate);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"    public ReadOnlyCakeCollate getCakeCollate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"        return cakeCollate;","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"        return cakeCollate.hasOrder(order);","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"    public void deleteOrder(Order target) {","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"        cakeCollate.removeOrder(target);","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"xiinweii98"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"        cakeCollate.addOrder(order);","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"        updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"        sortFilteredOrderList();","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"xiinweii98"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"xiinweii98"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"xiinweii98"},"content":"        cakeCollate.setOrder(target, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"pPris"},"content":"        sortFilteredOrderList();","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"xiinweii98"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Order List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"pPris"},"content":"     * Returns an unmodifiable view of the list of {@code Orders} backed by the internal list of","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"     * {@code versionedCakeCollate}","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"xiinweii98"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"xiinweii98"},"content":"        return filteredOrders;","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"pPris"},"content":"    public void sortFilteredOrderList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"pPris"},"content":"        // calls the cakeCollate model to sort the list because only","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"pPris"},"content":"        // the cakeCollate model class has access to the modifiable list","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"pPris"},"content":"        cakeCollate.sortOrderList();","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"xiinweii98"},"content":"        filteredOrders.setPredicate(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"xiinweii98"},"content":"        return cakeCollate.equals(other.cakeCollate)","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 filteredOrders.equals(other.filteredOrders)","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 orderItems.equals(other.orderItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"pPris"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OrderItems \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"RuiXiong2211"},"content":"    public ReadOnlyOrderItems getOrderItems() {","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"RuiXiong2211"},"content":"        return orderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"pPris"},"content":"    public boolean hasOrderItem(OrderItem orderItem) {","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"pPris"},"content":"        requireNonNull(orderItem);","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"pPris"},"content":"        return orderItems.hasOrderItem(orderItem);","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"RuiXiong2211"},"content":"    public void deleteOrderItem(OrderItem target) {","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"RuiXiong2211"},"content":"        orderItems.removeOrderItem(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"RuiXiong2211"},"content":"    public void addOrderItem(OrderItem orderItem) {","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"pPris"},"content":"        logger.info(String.format(\"adding order item %s to orderitems %s\", orderItem, orderItems));","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"RuiXiong2211"},"content":"        orderItems.addOrderItem(orderItem);","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"pavz02"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":193,"author":{"gitId":"pavz02"},"content":"    public void setOrderItems(ReadOnlyOrderItems orderItems) {","lastModifiedDate":"2021-04-08"},{"lineNumber":194,"author":{"gitId":"pavz02"},"content":"        this.orderItems.resetData(orderItems);","lastModifiedDate":"2021-04-08"},{"lineNumber":195,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":196,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Order Items List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"     * Returns an unmodifiable view of the list of {@code OrderItems} backed by the internal list of","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"pPris"},"content":"     * {@code versionedOrderItems}","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"pPris"},"content":"    public ObservableList\u003cOrderItem\u003e getFilteredOrderItemsList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"pPris"},"content":"        return filteredOrderItems;","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"pPris":38,"RuiXiong2211":17,"pavz02":5,"xiinweii98":40,"-":108}},{"path":"src/main/java/seedu/cakecollate/model/OrderItems.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.UniqueOrderItemList;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"public class OrderItems implements ReadOnlyOrderItems {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"    private final UniqueOrderItemList orderItems;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    /*","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"     * Non-static initialization block to avoid duplication","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        orderItems \u003d new UniqueOrderItemList();","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    public OrderItems() {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"     * Creates an OrderItemList using the Order Items in the {@code toBeCopied}","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    public OrderItems(ReadOnlyOrderItems toBeCopied) {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"        this();","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * Replaces the contents of the order items list with {@code orderItems}.","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"     * {@code orderItems} must not contain duplicate orders.","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItems(List\u003cOrderItem\u003e orderItems) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        this.orderItems.setOrderItems(orderItems);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"     * Resets the existing data of this {@code OrderItemList} with {@code newData}.","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"    public void resetData(ReadOnlyOrderItems newData) {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        setOrderItems(newData.getOrderItemList());","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns true if an order item with the same type as {@code orderItem} exists in the order item list.","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"    public boolean hasOrderItem(OrderItem orderItem) {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(orderItem);","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"        return orderItems.contains(orderItem);","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"     * Adds an order item to the Order Item List.","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"     * The order item must not already exist in the order item list.","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"    public void addOrderItem(OrderItem p) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"        requireNonNull(p);","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"        orderItems.add(p);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"     * Replaces the given order item {@code target} in the list with {@code editedOrderItem}.","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"     * {@code target} must exist in the OrderItemList.","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItem(OrderItem target, OrderItem editedOrderItem) {","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(editedOrderItem);","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"        orderItems.setOrderItem(target, editedOrderItem);","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"     * Removes {@code key} from this {@code OrderItemList}.","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"     * {@code key} must exist in OrderItemList.","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"    public void removeOrderItem(OrderItem key) {","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"        orderItems.remove(key);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"        return orderItems.asUnmodifiableObservableList().size() + \" order items\";","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"    public ObservableList\u003cOrderItem\u003e getOrderItemList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"        return orderItems.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"                || (other instanceof OrderItems // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"                \u0026\u0026 orderItems.equals(((OrderItems) other).orderItems));","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"        return orderItems.hashCode();","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"pPris":2,"simran-bhadani3":104}},{"path":"src/main/java/seedu/cakecollate/model/ReadOnlyCakeCollate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":" * Unmodifiable view of an cakecollate","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"public interface ReadOnlyCakeCollate {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"     * Returns an unmodifiable view of the orders list.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"     * This list will not contain any duplicate orders.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":7,"-":10}},{"path":"src/main/java/seedu/cakecollate/model/ReadOnlyOrderItems.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":" * Unmodifiable view of Order Items","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"public interface ReadOnlyOrderItems {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns an unmodifiable view of the order items list.","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"     * This list will not contain any duplicate order items.","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    ObservableList\u003cOrderItem\u003e getOrderItemList();","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"simran-bhadani3":16}},{"path":"src/main/java/seedu/cakecollate/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    Path getCakeCollateFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    Path getOrderItemsFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"RuiXiong2211":1,"xiinweii98":3,"-":13}},{"path":"src/main/java/seedu/cakecollate/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    private Path cakeCollateFilePath \u003d Paths.get(\"data\" , \"cakecollate.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    private Path orderItemsFilePath \u003d Paths.get(\"data\", \"OrderItems.json\");","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        setCakeCollateFilePath(newUserPrefs.getCakeCollateFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"        setOrderItemsFilePath(newUserPrefs.getOrderItemsFilePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"    public Path getCakeCollateFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"        return cakeCollateFilePath;","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"    public void setCakeCollateFilePath(Path cakeCollateFilePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(cakeCollateFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"        this.cakeCollateFilePath \u003d cakeCollateFilePath;","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"    public Path getOrderItemsFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"        return orderItemsFilePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"    public void setOrderItemsFilePath(Path orderItemsFilePath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"        requireNonNull(orderItemsFilePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"        this.orderItemsFilePath \u003d orderItemsFilePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 cakeCollateFilePath.equals(o.cakeCollateFilePath)","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 orderItemsFilePath.equals(o.orderItemsFilePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"        return Objects.hash(guiSettings, cakeCollateFilePath, orderItemsFilePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"        sb.append(\"\\nLocal data file location : \" + cakeCollateFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RuiXiong2211":10,"xiinweii98":10,"-":78}},{"path":"src/main/java/seedu/cakecollate/model/order/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":" * Represents an Order\u0027s address in the CakeCollate.","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_EMPTY \u003d \"Address cannot be blank.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RuiXiong2211":1,"xiinweii98":2,"-":52,"simran-bhadani3":2}},{"path":"src/main/java/seedu/cakecollate/model/order/ContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ALL;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DELIVERY_STATUS;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.StringUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.Prefix;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":" * Tests that an {@code Order}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"public class ContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    private final HashMap\u003cPrefix, List\u003cString\u003e\u003e keywords;","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    public ContainsKeywordsPredicate(HashMap\u003cPrefix, List\u003cString\u003e\u003e keywords) {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        boolean result \u003d true;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"        for (Map.Entry\u003cPrefix, List\u003cString\u003e\u003e entry : keywords.entrySet()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"            Prefix prefix \u003d entry.getKey();","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"            List\u003cString\u003e value \u003d entry.getValue();","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"            String testString \u003d getTestString(prefix, order);","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"            result \u003d result \u0026\u0026 prefixTest(value, testString);","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        return result;","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"     * Test each {@code String} retrieved from {@code Order} to see if {@code String}","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"     * contains any of the provided keywords.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"    public boolean prefixTest(List\u003cString\u003e toTest, String toTestFrom) {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"        return toTest.stream()","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(toTestFrom, keyword));","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"     * For the specified {@code Order}, retrieve, process and return the {@code String} to test keywords against","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"     * based on the provided {@code Prefix}.","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"    public String getTestString(Prefix prefix, Order order) {","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        // Cannot use switch-case unless I edit the Prefix class...","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"            return order.getName().fullName;","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        } else if (prefix.equals(PREFIX_PHONE)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"            return order.getPhone().value;","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"        } else if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"            return order.getEmail().value;","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        } else if (prefix.equals(PREFIX_ADDRESS)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"            return order.getAddress().value;","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"        } else if (prefix.equals(PREFIX_ORDER_DESCRIPTION)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"pPris"},"content":"            Map\u003cOrderDescription, Integer\u003e orderDescriptions \u003d order.getOrderDescriptions();","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"            Set\u003cString\u003e orderDescriptionsString \u003d orderDescriptions.keySet().stream()","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"                    .map(OrderDescription::toString)","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"                    .collect(Collectors.toSet());","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"            return String.join(\" \", orderDescriptionsString);","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        } else if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"            Set\u003cTag\u003e tags \u003d order.getTags();","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"            Set\u003cString\u003e tagsString \u003d tags.stream()","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"                    .map(tag -\u003e tag.tagName)","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"                    .collect(Collectors.toSet());","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"            return String.join(\" \", tagsString);","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        } else if (prefix.equals(PREFIX_DATE)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"            return order.getDeliveryDate().getTestString();","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"        } else if (prefix.equals(PREFIX_REQUEST)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"            return order.getRequest().value;","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"        } else if (prefix.equals(PREFIX_DELIVERY_STATUS)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"            return order.getDeliveryStatus().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"        } else if (prefix.equals(PREFIX_ALL)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"            List\u003cPrefix\u003e prefixes \u003d Arrays.asList(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"                    PREFIX_ORDER_DESCRIPTION, PREFIX_TAG, PREFIX_DATE, PREFIX_REQUEST, PREFIX_DELIVERY_STATUS);","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"            StringBuilder returnResult \u003d new StringBuilder();","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"            prefixes.forEach(px -\u003e returnResult.append(getTestString(px, order)).append(\" \"));","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"            return returnResult.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"            return \"\";","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"                || (other instanceof ContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 keywords.equals(((ContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"pPris":2,"xiinweii98":87,"-":17}},{"path":"src/main/java/seedu/cakecollate/model/order/DeliveryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":" * Represents an Order\u0027s delivery date in CakeCollate.","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFormat(String)}","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"public class DeliveryDate implements Comparable\u003cDeliveryDate\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_EMPTY \u003d \"Delivery date cannot be blank.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_CONSTRAINTS_FORMAT \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"            \"Delivery date should be of the format dd/mm/yyyy, dd-mm-yyyy, \"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"            + \"dd.mm.yyyy or dd MMM yyyy and adhere to the following constraints:\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"            + \"1. The delivery date should have a valid day, month and year.\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"            + \"For example:\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"            + \"01/01/2022, 01-01-2022, 01.01.2022, 01 Jan 2022\";","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_CONSTRAINTS_VALUE \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"            \"Delivery date should be today\u0027s date or a future date.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"            + \"Today\u0027s date is: \" + DateTimeFormatter.ofPattern(\"dd MMM yyyy\").format(LocalDate.now()) + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"            + \"You have entered: %1$s\";","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    private static final DateTimeFormatter ACCEPTABLE_FORMATS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"            DateTimeFormatter.ofPattern(\"[dd/MM/uuuu][dd-MM-uuuu][dd.MM.uuuu][dd MMM uuuu]\");","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    public final LocalDate value;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"     * Constructs a {@code DeliveryDate}.","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"     * @param deliveryDate A valid delivery date.","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"    public DeliveryDate(String deliveryDate) {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(deliveryDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"        checkArgument(isValidFormat(deliveryDate), MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"        value \u003d LocalDate.parse(deliveryDate, ACCEPTABLE_FORMATS);","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"     * Returns true if a given {@code String} is a valid date X working days after current date.","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"     * X should be positive.","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"     * This method should only be called after validating {@code test} using {@link DeliveryDate#isValidFormat(String)}.","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"    public static boolean isXDaysLater(String test, long x) {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"        assert x \u003e\u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"        LocalDate toTest \u003d LocalDate.parse(test, ACCEPTABLE_FORMATS);","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"        LocalDate dateToday \u003d LocalDate.now();","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"        LocalDate acceptableDate \u003d dateToday.plusDays(x);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        return toTest.isAfter(acceptableDate) || toTest.isEqual(acceptableDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"     * Returns true if a given {@code String} is a valid delivery date format.","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"    public static boolean isValidFormat(String test) {","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        // Test if date is valid using LocalDate.parse()","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"            LocalDate.parse(test, ACCEPTABLE_FORMATS.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"        return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"    public LocalDate getValue() {","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"        return this.value;","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"     * Return a {@code String} of possible formats of {@code DeliveryDate} concatenated. This {@code String} is","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"     * used to test against keywords from the {@code FindCommand}.","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"    public String getTestString() {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"        DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"        DateTimeFormatter format2 \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"        DateTimeFormatter format3 \u003d DateTimeFormatter.ofPattern(\"dd.MM.yyyy\");","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        DateTimeFormatter format4 \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"        return value.getMonth().toString() + \" \"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"                + format1.format(value) + \" \"","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"                + format2.format(value) + \" \"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"                + format3.format(value) + \" \"","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"                + format4.format(value) + \" \";","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"        DateTimeFormatter toDisplay \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"        return toDisplay.format(value);","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"                || (other instanceof DeliveryDate","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 value.equals(((DeliveryDate) other).value));","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"pPris"},"content":"     * Uses the compareTo already defined by the LocalDate class to compare delivery dates.","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"pPris"},"content":"     * This is needed for sorting order lists according to delivery dates.","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"    public int compareTo(DeliveryDate o) {","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"pPris"},"content":"        return this.value.compareTo(o.value);","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"pPris":10,"RuiXiong2211":5,"xiinweii98":101,"simran-bhadani3":1}},{"path":"src/main/java/seedu/cakecollate/model/order/DeliveryStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"public class DeliveryStatus implements Comparable\u003cDeliveryStatus\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"The delivery status should be a valid enum value.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    public static final String[] STRING_REPRESENTATION \u003d Arrays.stream(Status.values())","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"            .map(Enum::name)","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"            .toArray(String[]::new);","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"    private static final HashMap\u003cStatus, Integer\u003e ordering \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"    private Status deliveryStatus;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"    static {","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"        ordering.put(Status.UNDELIVERED, 1);","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"        ordering.put(Status.CANCELLED, 2);","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"        ordering.put(Status.DELIVERED, 3);","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    public DeliveryStatus() {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"        this.deliveryStatus \u003d Status.UNDELIVERED;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"    public DeliveryStatus(Status status) {","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"        this.deliveryStatus \u003d status;","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    public Status getDeliveryStatus() {","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"        return deliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    public void setDeliveryStatus(Status status) {","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"        deliveryStatus \u003d status;","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"    public String toString() {","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"        return STRING_REPRESENTATION[deliveryStatus.ordinal()];","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"                || (other instanceof DeliveryStatus","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"                \u0026\u0026 deliveryStatus.equals(((DeliveryStatus) other).deliveryStatus));","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"        return deliveryStatus.hashCode();","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"pPris"},"content":"     * Uses the compareTo already defined by the LocalDate class to compare delivery dates.","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"pPris"},"content":"     * This is needed for sorting order lists according to delivery dates.","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"    public int compareTo(DeliveryStatus d) {","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"        return ordering.get(this.deliveryStatus).compareTo(ordering.get(d.deliveryStatus));","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"pPris":21,"pavz02":43}},{"path":"src/main/java/seedu/cakecollate/model/order/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":" * Represents an Order\u0027s email in CakeCollate.","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_EMPTY \u003d \"Email cannot be blank.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"     * @param email A valid email cakecollate.","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RuiXiong2211":1,"xiinweii98":3,"-":63,"simran-bhadani3":1}},{"path":"src/main/java/seedu/cakecollate/model/order/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":" * Represents an Order\u0027s name in CakeCollate.","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should only contain alphanumeric characters and spaces.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_EMPTY \u003d \"Name cannot be blank.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_OVERFLOW \u003d \"Name has a size limit of 70 characters.\";","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pPris":1,"RuiXiong2211":3,"xiinweii98":2,"-":52,"simran-bhadani3":1}},{"path":"src/main/java/seedu/cakecollate/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":" * Represents an Order in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"public class Order implements Comparable\u003cOrder\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"    private final HashMap\u003cOrderDescription, Integer\u003e orderDescriptions \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    private final DeliveryDate deliveryDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    private final DeliveryStatus deliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    private final Request request;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"    // with default status","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"    public Order(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"                 HashMap\u003cOrderDescription, Integer\u003e orderDescriptions,","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"                 Set\u003cTag\u003e tags, DeliveryDate deliveryDate, Request request) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"        requireAllNonNull(name, phone, email, address, orderDescriptions, tags, deliveryDate, request);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"        this.orderDescriptions.putAll(orderDescriptions);","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"        this.deliveryDate \u003d deliveryDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"        this.deliveryStatus \u003d new DeliveryStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"        this.request \u003d request;","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"    // with status","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"     * Initialises an order.","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"     * @param name Name of the customer.","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"     * @param phone Phone number of the customer.","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"     * @param email Email of the customer.","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"     * @param address Address of the customer.","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"     * @param orderDescriptions Order descriptions of the orders made by the customer.","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"     * @param tags Tags for the order.","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"     * @param deliveryDate Delivery date of the order.","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"     * @param deliveryStatus Delivery status of the order.","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"     * @param request Request of the order.","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"pPris"},"content":"    public Order(Name name, Phone phone, Email email, Address address, Map\u003cOrderDescription, Integer\u003e orderDescriptions,","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"                 Set\u003cTag\u003e tags, DeliveryDate deliveryDate, DeliveryStatus deliveryStatus, Request request) {","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"        requireAllNonNull(name, phone, email, address, orderDescriptions, tags, deliveryDate, request);","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"        this.orderDescriptions.putAll(orderDescriptions);","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"        this.deliveryDate \u003d deliveryDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"        this.deliveryStatus \u003d deliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"        this.request \u003d request;","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":96,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"pPris"},"content":"     * Returns an immutable order description set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"pPris"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"pPris"},"content":"    public Map\u003cOrderDescription, Integer\u003e getOrderDescriptions() {","lastModifiedDate":"2021-04-10"},{"lineNumber":101,"author":{"gitId":"pPris"},"content":"        return Collections.unmodifiableMap(orderDescriptions);","lastModifiedDate":"2021-04-10"},{"lineNumber":102,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"    public DeliveryDate getDeliveryDate() {","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"        return deliveryDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"    public DeliveryStatus getDeliveryStatus() {","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"pavz02"},"content":"        return deliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"RuiXiong2211"},"content":"    public Request getRequest() {","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"RuiXiong2211"},"content":"        return request;","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"xiinweii98"},"content":"     * Returns true if both orders have the same name, address, order description and delivery date.","lastModifiedDate":"2021-04-12"},{"lineNumber":126,"author":{"gitId":"xiinweii98"},"content":"     * This defines a weaker notion of equality between two orders.","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"xiinweii98"},"content":"    public boolean isSameOrder(Order otherOrder) {","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"        if (otherOrder \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"xiinweii98"},"content":"        return otherOrder !\u003d null","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 otherOrder.getName().equals(getName())","lastModifiedDate":"2021-04-12"},{"lineNumber":135,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 otherOrder.getAddress().equals(getAddress())","lastModifiedDate":"2021-04-12"},{"lineNumber":136,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 otherOrder.getOrderDescriptions().equals(getOrderDescriptions())","lastModifiedDate":"2021-04-12"},{"lineNumber":137,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 otherOrder.getDeliveryDate().equals(getDeliveryDate());","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"xiinweii98"},"content":"     * Returns true if both orders have the same identity and data fields.","lastModifiedDate":"2021-04-12"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"     * This defines a stronger notion of equality between two orders.","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"xiinweii98"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"xiinweii98"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":"        return otherOrder.getName().equals(getName())","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 otherOrder.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 otherOrder.getEmail().equals(getEmail())","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 otherOrder.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 otherOrder.getOrderDescriptions().equals(getOrderDescriptions())","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 otherOrder.getTags().equals(getTags())","lastModifiedDate":"2021-04-12"},{"lineNumber":161,"author":{"gitId":"pavz02"},"content":"                \u0026\u0026 otherOrder.getDeliveryDate().equals(getDeliveryDate())","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 otherOrder.getDeliveryStatus().equals(getDeliveryStatus())","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 otherOrder.getRequest().equals(getRequest());","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"RuiXiong2211"},"content":"        return Objects.hash(name, phone, email, address, tags, deliveryDate, deliveryStatus, request);","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":183,"author":{"gitId":"pPris"},"content":"        Map\u003cOrderDescription, Integer\u003e orderDescriptions \u003d getOrderDescriptions();","lastModifiedDate":"2021-04-10"},{"lineNumber":184,"author":{"gitId":"pPris"},"content":"        if (!orderDescriptions.isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"            builder.append(\"; Order Descriptions:\");","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"            orderDescriptions.forEach((obj, quantity) -\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":187,"author":{"gitId":"pPris"},"content":"                    builder.append(\" \").append(quantity).append(\" x \").append(obj).append(\",\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":188,"author":{"gitId":"pPris"},"content":"            builder.setLength(builder.length() - 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":198,"author":{"gitId":"xiinweii98"},"content":"        builder.append(\"; DeliveryDate: \")","lastModifiedDate":"2021-03-09"},{"lineNumber":199,"author":{"gitId":"pavz02"},"content":"                .append(getDeliveryDate())","lastModifiedDate":"2021-03-22"},{"lineNumber":200,"author":{"gitId":"pavz02"},"content":"                .append(\"; DeliveryStatus: \")","lastModifiedDate":"2021-03-22"},{"lineNumber":201,"author":{"gitId":"RuiXiong2211"},"content":"                .append(getDeliveryStatus())","lastModifiedDate":"2021-03-23"},{"lineNumber":202,"author":{"gitId":"RuiXiong2211"},"content":"                .append(\"; Request: \")","lastModifiedDate":"2021-03-23"},{"lineNumber":203,"author":{"gitId":"RuiXiong2211"},"content":"                .append(getRequest());","lastModifiedDate":"2021-03-23"},{"lineNumber":204,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":208,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":209,"author":{"gitId":"pPris"},"content":"    public int compareTo(Order o) {","lastModifiedDate":"2021-04-11"},{"lineNumber":210,"author":{"gitId":"pPris"},"content":"        int statusCompareTo \u003d this.getDeliveryStatus().compareTo(o.getDeliveryStatus());","lastModifiedDate":"2021-04-11"},{"lineNumber":211,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":212,"author":{"gitId":"pPris"},"content":"        if (statusCompareTo \u003d\u003d 0) {","lastModifiedDate":"2021-04-11"},{"lineNumber":213,"author":{"gitId":"pPris"},"content":"            return (this.getDeliveryDate().compareTo(o.getDeliveryDate()));","lastModifiedDate":"2021-04-11"},{"lineNumber":214,"author":{"gitId":"pPris"},"content":"        } else {","lastModifiedDate":"2021-04-11"},{"lineNumber":215,"author":{"gitId":"pPris"},"content":"            return statusCompareTo;","lastModifiedDate":"2021-04-11"},{"lineNumber":216,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":217,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pPris":43,"pavz02":29,"RuiXiong2211":18,"xiinweii98":29,"-":99}},{"path":"src/main/java/seedu/cakecollate/model/order/OrderDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"public class OrderDescription {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_OVERFLOW \u003d \"Order description has a size limit of 70 characters.\";","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"            String.format(Type.SHARED_CONSTRAINTS_MESSAGE, \"Order description\");","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_EMPTY \u003d \"Order description cannot be empty.\";","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"    public static final String VALIDATION_REGEX \u003d Type.VALIDATION_REGEX;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"    public final String value;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"     * Constructs an {@code Order Description}.","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"     * @param orderDescription A valid order description","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"    public OrderDescription(String orderDescription) {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"pPris"},"content":"        requireNonNull(orderDescription);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"pPris"},"content":"        checkArgument(isValidOrderDescription(orderDescription), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"        this.value \u003d orderDescription;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"     * Returns true if a given string is a order desecription.","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"    public static boolean isValidOrderDescription(String test) {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"                || (other instanceof seedu.cakecollate.model.order.OrderDescription // instanceof handles nulls","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"                \u0026\u0026 value.equals(((OrderDescription) other).value)); // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"pPris"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"pPris"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"pPris"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"        return value;","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"pPris"},"content":"    public String getValue() {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"pPris"},"content":"        return value;","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"pPris"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"pPris":54,"RuiXiong2211":2,"xiinweii98":3}},{"path":"src/main/java/seedu/cakecollate/model/order/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":" * Represents an Order\u0027s phone number in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long. \"","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"                + \"Look out for spaces! Spaces are not allowed.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_EMPTY \u003d \"Phone number cannot be blank.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_OVERFLOW \u003d \"Phone has a size limit of 20 digits.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pPris":2,"RuiXiong2211":2,"xiinweii98":3,"-":49}},{"path":"src/main/java/seedu/cakecollate/model/order/ReminderDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":" * Tests that a {@code Orders}\u0027s {@code DeliveryDate} is within X days of the current date.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"public class ReminderDatePredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    private long days;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"     * Constructor for ReminderDatePredicate","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"     * @param days the number of days from the current date such that the","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"     * predicate will return true.","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    public ReminderDatePredicate(long days) {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        this.days \u003d days;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        return isWithinXDays(order) \u0026\u0026 isUndelivered(order);","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"     * Returns true if the order\u0027s delivery date is within X days of the current date.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    public boolean isWithinXDays(Order order) {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"        LocalDate toTest \u003d order.getDeliveryDate().getValue();","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"        LocalDate dateToday \u003d LocalDate.now();","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"        LocalDate acceptableDate \u003d dateToday.plusDays(days + 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        return toTest.isAfter(dateToday.minusDays(1L)) \u0026\u0026 toTest.isBefore(acceptableDate);","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"                || (other instanceof ReminderDatePredicate // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 days \u003d\u003d (((ReminderDatePredicate) other).days)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"    public long getDays() {","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"        return this.days;","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"     * Returns true if the order\u0027s delivery status is undelivered.","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"    public boolean isUndelivered(Order order) {","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"        return order.getDeliveryStatus().getDeliveryStatus() \u003d\u003d Status.UNDELIVERED;","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"RuiXiong2211":50,"xiinweii98":5}},{"path":"src/main/java/seedu/cakecollate/model/order/Request.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":" * Represents an Order\u0027s request in CakeCollate.","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"public class Request {","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    public final String value;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    public final boolean isRequestEmpty;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"     * Constructs a {@code Request}.","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"     * @param request The request.","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    public Request(String request) {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        requireNonNull(request);","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        if (request.isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"            isRequestEmpty \u003d true;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"            value \u003d \"No special requests added yet.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"            isRequestEmpty \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"            value \u003d request;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    public boolean isRequestEmpty() {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        return isRequestEmpty;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"        return value;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"                || (other instanceof Request // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 value.equals(((Request) other).value)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"RuiXiong2211":50}},{"path":"src/main/java/seedu/cakecollate/model/order/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"public enum Status {","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"    UNDELIVERED,","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"    DELIVERED,","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    CANCELLED","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"pavz02":7}},{"path":"src/main/java/seedu/cakecollate/model/order/UniqueOrderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.exceptions.OrderNotFoundException;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":" * A list of orders that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":" * A order is considered unique by comparing using {@code Order#isSameOrder(Order)}. As such, adding and updating of","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":" * orders uses Order#isSameOrder(Order) for equality so as to ensure that the order being added or updated is","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":" * unique in terms of identity in the UniqueOrderList. However, the removal of an order uses Order#equals(Object) so","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":" * as to ensure that the order with exactly the same fields will be removed.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":" *","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":" *","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":" * @see Order#isSameOrder(Order)","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"public class UniqueOrderList implements Iterable\u003cOrder\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    private final ObservableList\u003cOrder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    private final ObservableList\u003cOrder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"     * Returns true if the list contains an equivalent order as the given argument.","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"    public boolean contains(Order toCheck) {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"        return internalList.stream().anyMatch(toCheck::isSameOrder);","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"     * Adds a order to the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"     * The order must not already exist in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"    public void add(Order toAdd) {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"     * Replaces the order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        if (!target.isSameOrder(editedOrder) \u0026\u0026 contains(editedOrder)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"        internalList.set(index, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"     * Removes the equivalent order from the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"     * The order must exist in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"    public void remove(Order toRemove) {","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"    public void setOrders(UniqueOrderList replacement) {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"     * Replaces the contents of this list with {@code orders}.","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"     * {@code orders} must not contain duplicate orders.","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"        requireAllNonNull(orders);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"        if (!ordersAreUnique(orders)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"        internalList.setAll(orders);","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"    public ObservableList\u003cOrder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"    public Iterator\u003cOrder\u003e iterator() {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"xiinweii98"},"content":"                || (other instanceof UniqueOrderList // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"xiinweii98"},"content":"                        \u0026\u0026 internalList.equals(((UniqueOrderList) other).internalList));","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"xiinweii98"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"xiinweii98"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"xiinweii98"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"xiinweii98"},"content":"     * Returns true if {@code orders} contains only unique orders.","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"xiinweii98"},"content":"    private boolean ordersAreUnique(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"xiinweii98"},"content":"        for (int i \u003d 0; i \u003c orders.size() - 1; i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"            for (int j \u003d i + 1; j \u003c orders.size(); j++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"xiinweii98"},"content":"                if (orders.get(i).isSameOrder(orders.get(j))) {","lastModifiedDate":"2021-04-12"},{"lineNumber":131,"author":{"gitId":"xiinweii98"},"content":"                    return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"xiinweii98"},"content":"                }","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"xiinweii98"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"xiinweii98"},"content":"        return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"pPris"},"content":"     * Sorts date from earliest to latest, as defined by the compareTo in the delivery date class","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"pPris"},"content":"    public void sortOrdersByDateAndStatus() {","lastModifiedDate":"2021-04-11"},{"lineNumber":142,"author":{"gitId":"pPris"},"content":"        internalList.sort(Order::compareTo);","lastModifiedDate":"2021-04-11"},{"lineNumber":143,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"xiinweii98"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"pPris":8,"xiinweii98":137}},{"path":"src/main/java/seedu/cakecollate/model/order/exceptions/DuplicateOrderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order.exceptions;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" * Signals that the operation will result in duplicate Orders (Orders are considered duplicates if they have the same","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" * identity).","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"public class DuplicateOrderException extends RuntimeException {","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"    public DuplicateOrderException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"        super(\"Operation would result in duplicate orders\");","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"xiinweii98":11}},{"path":"src/main/java/seedu/cakecollate/model/order/exceptions/OrderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order.exceptions;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":" * Signals that the operation is unable to find the specified order.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"public class OrderNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"xiinweii98":6}},{"path":"src/main/java/seedu/cakecollate/model/orderitem/OrderItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model.orderitem;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":" * Represents an OrderItem.","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"public class OrderItem {","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"    private final Type type;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"     * Type field must be present and not null.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"    public OrderItem(Type type) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"        requireAllNonNull(type);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    public Type getType() {","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"        return type;","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns true if both order items have the same type of cake.","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"     * This method is case insensitive.","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"            return true;","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        if (!(other instanceof OrderItem)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem otherOrder \u003d (OrderItem) other;","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        return otherOrder.getType().equals(getType());","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        return Objects.hash(type);","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"        builder.append(getType());","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"pPris":7,"simran-bhadani3":52}},{"path":"src/main/java/seedu/cakecollate/model/orderitem/Type.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model.orderitem;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":" * Represents the type of cake of an order item. Type refers to the description of the order item.","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidType(String)}","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"public class Type {","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"     * The following constraints are shared by {@code Type} and {@code OrderDescription} from the {@code Order} model.","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"    public static final String SHARED_CONSTRAINTS_MESSAGE \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"            \"%s should only contain alphabets.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d String.format(SHARED_CONSTRAINTS_MESSAGE, \"Order Type\");","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"     * Only matches alphabets and white spaces. String cannot start with a space.","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([\\\\p{Alpha}]|([\\\\p{Alpha}][\\\\p{Alpha} ]*))$\";","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"     * Holds the value of the {@code Type} as specified by the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"    public final String value;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"     * Constructs a {@code Type}.","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"     * @param type A valid type.","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"    public Type(String type) {","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(type);","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        checkArgument(isValidType(type), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        value \u003d type;","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"     * Checks whether the string input by the user is a valid {@code Type} or not. For the string to be valid it must","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"     * contain only alphabets and must not be blank.","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"     * @param test String to be checked","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"     * @return whether the string is valid or not","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"    public static boolean isValidType(String test) {","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        if (test.length() \u003e 0) {","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"            assert (test.charAt(test.length() - 1) !\u003d \u0027 \u0027);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"        return value;","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns true if the value of the type is the same regardless of case.","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"     *","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"     * @param other Object to compare with","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"     * @return whether the two are equal (case insensitive)","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"                || (other instanceof Type // instanceof handles nulls","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"                \u0026\u0026 value.equalsIgnoreCase(((Type) other).value)); // state check","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"pPris"},"content":"    public String getValue() {","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"        return value;","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"pPris":7,"RuiXiong2211":1,"simran-bhadani3":74}},{"path":"src/main/java/seedu/cakecollate/model/orderitem/UniqueOrderItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model.orderitem;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.exceptions.DuplicateOrderItemException;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.exceptions.OrderItemNotFoundException;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":" * A list of order items that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":" * An order item is considered unique by comparing using {@code OrderItem#equals(Object)}.","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":" * As such, adding and updating of orders uses OrderItem#equals(Object) for equality so as","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":" * to ensure that the order item being added or updated is unique in terms of order description in","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":" * the UniqueOrderItemList. The removal of an order uses OrderItem#equals(Object) so also uses","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":" * {@code OrderItem#equals(Object)}.","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":" *","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":" * @see OrderItem#equals(Object)","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"public class UniqueOrderItemList implements Iterable\u003cOrderItem\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    private final ObservableList\u003cOrderItem\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    private final ObservableList\u003cOrderItem\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns true if the list contains an equivalent order item as the given argument.","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"    public boolean contains(OrderItem toCheck) {","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"     * Adds an order item to the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"     * The order item must not already exist in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"    public void add(OrderItem toAdd) {","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"            throw new DuplicateOrderItemException();","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"     * Replaces the order item {@code target} in the list with {@code editedOrderItem}.","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"     * The order item type of {@code editedOrderItem} must not be the same as another existing order item in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItem(OrderItem target, OrderItem editedOrderItem) {","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"        requireAllNonNull(target, editedOrderItem);","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"            throw new OrderItemNotFoundException();","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"        if (!target.equals(editedOrderItem) \u0026\u0026 contains(editedOrderItem)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"            throw new DuplicateOrderItemException();","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"        internalList.set(index, editedOrderItem);","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"     * Removes the equivalent order item from the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"     * The order item must exist in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"    public void remove(OrderItem toRemove) {","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"            throw new OrderItemNotFoundException();","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItems(UniqueOrderItemList replacement) {","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"     * Replaces the contents of this list with {@code orderItems}.","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"     * {@code orderItems} must not contain duplicate orders.","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItems(List\u003cOrderItem\u003e orderItems) {","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"        requireAllNonNull(orderItems);","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"        if (!orderItemsAreUnique(orderItems)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"            throw new DuplicateOrderItemException();","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"        internalList.setAll(orderItems);","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"    public ObservableList\u003cOrderItem\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"    public Iterator\u003cOrderItem\u003e iterator() {","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"                || (other instanceof UniqueOrderItemList // instanceof handles nulls","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"                \u0026\u0026 internalList.equals(((UniqueOrderItemList) other).internalList));","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":124,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":125,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns true if {@code orderItems} contains only unique order items.","lastModifiedDate":"2021-03-21"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":128,"author":{"gitId":"simran-bhadani3"},"content":"    private boolean orderItemsAreUnique(List\u003cOrderItem\u003e orderItems) {","lastModifiedDate":"2021-03-21"},{"lineNumber":129,"author":{"gitId":"simran-bhadani3"},"content":"        for (int i \u003d 0; i \u003c orderItems.size() - 1; i++) {","lastModifiedDate":"2021-03-21"},{"lineNumber":130,"author":{"gitId":"simran-bhadani3"},"content":"            for (int j \u003d i + 1; j \u003c orderItems.size(); j++) {","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"                if (orderItems.get(i).equals(orderItems.get(j))) {","lastModifiedDate":"2021-04-04"},{"lineNumber":132,"author":{"gitId":"simran-bhadani3"},"content":"                    return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":133,"author":{"gitId":"simran-bhadani3"},"content":"                }","lastModifiedDate":"2021-03-21"},{"lineNumber":134,"author":{"gitId":"simran-bhadani3"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":135,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":136,"author":{"gitId":"simran-bhadani3"},"content":"        return true;","lastModifiedDate":"2021-03-21"},{"lineNumber":137,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":138,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"simran-bhadani3":138}},{"path":"src/main/java/seedu/cakecollate/model/orderitem/exceptions/DuplicateOrderItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model.orderitem.exceptions;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":" * Signals that the operation will result in duplicate order items","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":" * Order Items are considered duplicates if they have the same value for type (case insensitive).","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"public class DuplicateOrderItemException extends RuntimeException {","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    public DuplicateOrderItemException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"        super(\"Operation would result in duplicate order items.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"simran-bhadani3":11}},{"path":"src/main/java/seedu/cakecollate/model/orderitem/exceptions/OrderItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model.orderitem.exceptions;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":" * Signals that the operation is unable to find the specified order item.","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"public class OrderItemNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    public OrderItemNotFoundException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"        super(\"Order Item was not found in the UniqueOrderItem list.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"simran-bhadani3":13}},{"path":"src/main/java/seedu/cakecollate/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":" * Represents a Tag in the cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_OVERFLOW \u003d \"Tags have a size limit of 30 characters.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RuiXiong2211":1,"xiinweii98":3,"-":51}},{"path":"src/main/java/seedu/cakecollate/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":" * Contains utility methods for populating {@code CakeCollate} and {@code OrderItems} with sample data.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    private static LocalDate dateToday \u003d LocalDate.now();","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"[dd/MM/yyyy]\");","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    private static final Request EMPTY_REQUEST \u003d new Request(\"\");","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    private static final Request NON_EMPTY_REQUEST_1 \u003d new Request(\"No sugar, customer has diabetes.\");","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    private static final Request NON_EMPTY_REQUEST_2 \u003d new Request(\"More sugar, spice and everything nice.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"    public static Order[] getSampleOrders() {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"        return new Order[] {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"            new Order(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"                    getOrderDescriptionMap(\"Chocolate Cake\"), getTagSet(\"friends\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"                    new DeliveryDate(dateFormatter.format(dateToday.plusDays(3L))), EMPTY_REQUEST","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"            ),","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"            new Order(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"                    getOrderDescriptionMap(\"Vanilla Cake\"), getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"                    new DeliveryDate(dateFormatter.format(dateToday.plusDays(4L))), EMPTY_REQUEST","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"            ),","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"            new Order(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"pPris"},"content":"                    getOrderDescriptionMap(\"Chocolate Cake\", \"Chocolate Cake\", \"Kiwi Cake\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"pPris"},"content":"                    getTagSet(\"neighbours\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"                    new DeliveryDate(dateFormatter.format(dateToday.plusDays(5L))), NON_EMPTY_REQUEST_1","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"            ),","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"            new Order(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"pPris"},"content":"                    getOrderDescriptionMap(\"Chocolate Cake\"), getTagSet(\"family\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"                    new DeliveryDate(dateFormatter.format(dateToday.plusDays(6L))), NON_EMPTY_REQUEST_1","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"pPris"},"content":"            ),","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"            new Order(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"                    getOrderDescriptionMap(\"Strawberry Cake\", \"Chocolate Vanilla Cake\", \"Berries Cake\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"                    getTagSet(\"classmates\"), new DeliveryDate(dateFormatter.format(dateToday.plusDays(7L))),","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"                    NON_EMPTY_REQUEST_2","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"pPris"},"content":"            ),","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"            new Order(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"pPris"},"content":"                    getOrderDescriptionMap(\"Black Forest Cake\"), getTagSet(\"colleagues\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"                    new DeliveryDate(dateFormatter.format(dateToday.plusDays(8L))), NON_EMPTY_REQUEST_2","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"pPris"},"content":"            ),","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"    // sample order items should include the order descriptions above so it doesn\u0027t confuse users","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"pPris"},"content":"    // since order descriptions typed by users should always be added to the order items table","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"    public static OrderItem[] getSampleOrderItem() {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        return new OrderItem[] { new OrderItem(new Type(\"Banana Cake\")),","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"            new OrderItem(new Type(\"GME Banana Cake\")),","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"pPris"},"content":"            new OrderItem(new Type(\"Strawberry Cake\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"pPris"},"content":"            new OrderItem(new Type(\"Chocolate Cake\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"            new OrderItem(new Type(\"Black Forest Cake\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"pPris"},"content":"            new OrderItem(new Type(\"Vanilla Cake\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"pPris"},"content":"            new OrderItem(new Type(\"Chocolate Vanilla Cake\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"pPris"},"content":"            new OrderItem(new Type(\"Berries Cake\"))","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"        };","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"    public static ReadOnlyCakeCollate getSampleCakeCollate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate sampleAb \u003d new CakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"        for (Order sampleOrder : getSampleOrders()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"            sampleAb.addOrder(sampleOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"    public static ReadOnlyOrderItems getSampleOrderItems() {","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItems sampleOi \u003d new OrderItems();","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"        for (OrderItem sampleItems : getSampleOrderItem()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"            sampleOi.addOrderItem(sampleItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"        return sampleOi;","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":112,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"pPris"},"content":"     * Returns a set of order descriptions containing the list of strings given.","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"pPris"},"content":"    public static HashMap\u003cOrderDescription, Integer\u003e getOrderDescriptionMap(String... strings) {","lastModifiedDate":"2021-04-10"},{"lineNumber":116,"author":{"gitId":"pPris"},"content":"        HashMap\u003cOrderDescription, Integer\u003e orderDescriptionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":117,"author":{"gitId":"pPris"},"content":"        Arrays.stream(strings)","lastModifiedDate":"2021-04-10"},{"lineNumber":118,"author":{"gitId":"pPris"},"content":"                .map(OrderDescription::new)","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"pPris"},"content":"                .forEach(od -\u003e orderDescriptionMap.put(od,","lastModifiedDate":"2021-04-10"},{"lineNumber":120,"author":{"gitId":"pPris"},"content":"                        1 + orderDescriptionMap.getOrDefault(od, 0)));","lastModifiedDate":"2021-04-10"},{"lineNumber":121,"author":{"gitId":"pPris"},"content":"        return orderDescriptionMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":122,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"pPris":34,"RuiXiong2211":28,"xiinweii98":28,"-":32,"simran-bhadani3":2}},{"path":"src/main/java/seedu/cakecollate/storage/CakeCollateStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":" * Represents a storage for {@link CakeCollate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"public interface CakeCollateStorage {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    Path getCakeCollateFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"     * Returns CakeCollate data as a {@link ReadOnlyCakeCollate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    Optional\u003cReadOnlyCakeCollate\u003e readCakeCollate() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"     * @see #getCakeCollateFilePath()","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    Optional\u003cReadOnlyCakeCollate\u003e readCakeCollate(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"     * Saves the given {@link ReadOnlyCakeCollate} to the storage.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"     * @param cakeCollate cannot be null.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"    void saveCakeCollate(ReadOnlyCakeCollate cakeCollate) throws IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"     * @see #saveCakeCollate(ReadOnlyCakeCollate)","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"    void saveCakeCollate(ReadOnlyCakeCollate cakeCollate, Path filePath) throws IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xiinweii98":16,"-":30}},{"path":"src/main/java/seedu/cakecollate/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Status;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"class JsonAdaptedOrder {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Order\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"    private final List\u003cJsonAdaptedOrderDescription\u003e orderDescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"    private final String deliveryDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"    private final Status deliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"    private final String request;","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given order details.","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"                            @JsonProperty(\"email\") String email, @JsonProperty(\"cakecollate\") String address,","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"pPris"},"content":"                            @JsonProperty(\"orderDescriptions\") List\u003cJsonAdaptedOrderDescription\u003e orderDescriptions,","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"                            @JsonProperty(\"deliveryDate\") String deliveryDate,","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"                            @JsonProperty(\"deliveryStatus\") Status status,","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"                            @JsonProperty(\"request\") String request) {","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"pPris"},"content":"        if (orderDescriptions !\u003d null) { // handle null below","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"pPris"},"content":"            this.orderDescriptions.addAll(orderDescriptions);","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        this.deliveryDate \u003d deliveryDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"        this.deliveryStatus \u003d status;","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"        this.request \u003d request;","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"    public JsonAdaptedOrder(Order source) {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"pPris"},"content":"        // for each order description in map, for quantity number of times, add order description to command string","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"        for (Map.Entry\u003cOrderDescription, Integer\u003e entry : source.getOrderDescriptions().entrySet()) {","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"pPris"},"content":"            for (int i \u003d 0; i \u003c entry.getValue(); i++) {","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"pPris"},"content":"                orderDescriptions.add(new JsonAdaptedOrderDescription(entry.getKey()));","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"pPris"},"content":"            }","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"        deliveryDate \u003d source.getDeliveryDate().toString();","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"        deliveryStatus \u003d source.getDeliveryStatus().getDeliveryStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"        request \u003d source.getRequest().toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"     * Converts this Jackson-friendly adapted order object into the model\u0027s {@code Order} object.","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted order.","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"        final List\u003cTag\u003e orderTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"            orderTags.add(tag.toModelType());","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"xiinweii98"},"content":"        if (deliveryDate \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"xiinweii98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"xiinweii98"},"content":"                    DeliveryDate.class.getSimpleName()));","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"xiinweii98"},"content":"        if (!DeliveryDate.isValidFormat(deliveryDate)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"            throw new IllegalValueException(DeliveryDate.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"        final DeliveryDate modelDeliveryDate \u003d new DeliveryDate(deliveryDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"xiinweii98"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(orderTags);","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"pPris"},"content":"        if (orderDescriptions.isEmpty() || orderDescriptions \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"pPris"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-10"},{"lineNumber":150,"author":{"gitId":"pPris"},"content":"                    OrderDescription.class.getSimpleName()));","lastModifiedDate":"2021-03-10"},{"lineNumber":151,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":152,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"xiinweii98"},"content":"        final List\u003cOrderDescription\u003e orderOrderDescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"pPris"},"content":"        for (JsonAdaptedOrderDescription o : orderDescriptions) {","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":"            orderOrderDescriptions.add(o.toModelType());","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":157,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":158,"author":{"gitId":"pPris"},"content":"        final Map\u003cOrderDescription, Integer\u003e modelOrderDescriptions \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":159,"author":{"gitId":"pPris"},"content":"        orderOrderDescriptions.forEach(o -\u003e modelOrderDescriptions.put(o,","lastModifiedDate":"2021-04-10"},{"lineNumber":160,"author":{"gitId":"pPris"},"content":"                1 + modelOrderDescriptions.getOrDefault(o, 0)));","lastModifiedDate":"2021-04-10"},{"lineNumber":161,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":162,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"pavz02"},"content":"        final DeliveryStatus modelDeliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"pavz02"},"content":"        if (deliveryStatus \u003d\u003d null) {","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"pavz02"},"content":"            modelDeliveryStatus \u003d new DeliveryStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"pavz02"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"pavz02"},"content":"            modelDeliveryStatus \u003d new DeliveryStatus(deliveryStatus);","lastModifiedDate":"2021-03-22"},{"lineNumber":168,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"RuiXiong2211"},"content":"        if (request \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"RuiXiong2211"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Request.class.getSimpleName()));","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"RuiXiong2211"},"content":"        final Request modelRequest \u003d new Request(request);","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"xiinweii98"},"content":"        return new Order(modelName, modelPhone, modelEmail, modelAddress, modelOrderDescriptions, modelTags,","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"RuiXiong2211"},"content":"                modelDeliveryDate, modelDeliveryStatus, modelRequest);","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":183,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"pPris":30,"pavz02":23,"RuiXiong2211":13,"xiinweii98":33,"-":84}},{"path":"src/main/java/seedu/cakecollate/storage/JsonAdaptedOrderDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"public class JsonAdaptedOrderDescription {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"    private final String orderDescription;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"     * Constructs a {@code JsonAdaptedOrderDescription} with the given {@code orderDescription}.","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"    public JsonAdaptedOrderDescription(String orderDescription) {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"        this.orderDescription \u003d orderDescription;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"     * Converts a given {@code orderDescription} into this class for Jackson use.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"    public JsonAdaptedOrderDescription(OrderDescription source) {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"pPris"},"content":"        orderDescription \u003d source.value;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"    @JsonValue","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"    public String getOrderDescription() {","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"        return orderDescription;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"     * Converts this Jackson-friendly adapted OrderDescription object into the model\u0027s {@code OrderDescription} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"    public OrderDescription toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"        if (!OrderDescription.isValidOrderDescription(orderDescription)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"            throw new IllegalValueException(OrderDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"        return new OrderDescription(orderDescription);","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"pPris":40,"xiinweii98":3}},{"path":"src/main/java/seedu/cakecollate/storage/JsonAdaptedOrderItems.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":" * Jackson-friendly version of {@link OrderItem}.","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"public class JsonAdaptedOrderItems {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Order item\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    private final String type;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"     * Constructs a {@code JsonAdaptedOrderItem} with the given orderItem details","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    public JsonAdaptedOrderItems(@JsonProperty(\"type\") String type) {","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"     * Constructs a given {@code OrderItem} with the given orderItem details","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    public JsonAdaptedOrderItems(OrderItem source) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        type \u003d source.getType().value;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"     * Converts this Jackson-friendly adapted orderItem object into the model\u0027s {@code OrderItem} object.","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted order.","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    public OrderItem toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"        if (type \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Type.class.getSimpleName()));","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"        if (!Type.isValidType(type)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"            throw new IllegalValueException(Type.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        final Type typeName \u003d new Type(type);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        return new OrderItem(typeName);","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"RuiXiong2211":48,"simran-bhadani3":2}},{"path":"src/main/java/seedu/cakecollate/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xiinweii98":3,"-":45}},{"path":"src/main/java/seedu/cakecollate/storage/JsonCakeCollateStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.FileUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.JsonUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":" * A class to access CakeCollate data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"public class JsonCakeCollateStorage implements CakeCollateStorage {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonCakeCollateStorage.class);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    public JsonCakeCollateStorage(Path filePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    public Path getCakeCollateFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"    public Optional\u003cReadOnlyCakeCollate\u003e readCakeCollate() throws DataConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"        return readCakeCollate(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"     * Similar to {@link #readCakeCollate()}.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"    public Optional\u003cReadOnlyCakeCollate\u003e readCakeCollate(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"        Optional\u003cJsonSerializableCakeCollate\u003e jsonCakeCollate \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"                filePath, JsonSerializableCakeCollate.class);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        if (!jsonCakeCollate.isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"            return Optional.of(jsonCakeCollate.get().toModelType());","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"    public void saveCakeCollate(ReadOnlyCakeCollate cakeCollate) throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        saveCakeCollate(cakeCollate, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"     * Similar to {@link #saveCakeCollate(ReadOnlyCakeCollate)}.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"    public void saveCakeCollate(ReadOnlyCakeCollate cakeCollate, Path filePath) throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"        requireNonNull(cakeCollate);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableCakeCollate(cakeCollate), filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xiinweii98":26,"-":54}},{"path":"src/main/java/seedu/cakecollate/storage/JsonOrderItemsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.util.FileUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.util.JsonUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":" * A class to access OrderItems data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"public class JsonOrderItemsStorage implements OrderItemsStorage {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonOrderItemsStorage.class);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"    public JsonOrderItemsStorage(Path filePath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    public Path getOrderItemsFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        return filePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    public Optional\u003cReadOnlyOrderItems\u003e readOrderItems() throws DataConversionException {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"        return readOrderItems(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"     * Similar to {@link #readOrderItems()}","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"    public Optional\u003cReadOnlyOrderItems\u003e readOrderItems(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"        Optional\u003cJsonSerializableOrderItems\u003e jsonOrderItem \u003d JsonUtil.readJsonFile(filePath,","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"                JsonSerializableOrderItems.class);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"        if (!jsonOrderItem.isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"            return Optional.of(jsonOrderItem.get().toModelType());","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"    public void saveOrderItems(ReadOnlyOrderItems orderItems) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"        saveOrderItems(orderItems, filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"     * Similar to {@link #saveOrderItems(ReadOnlyOrderItems)}.","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"    public void saveOrderItems(ReadOnlyOrderItems orderItems, Path filePath) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"        requireNonNull(orderItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableOrderItems(orderItems), filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"RuiXiong2211":80}},{"path":"src/main/java/seedu/cakecollate/storage/JsonSerializableCakeCollate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":" * An Immutable CakeCollate that is serializable to JSON format.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"@JsonRootName(value \u003d \"cakecollate\")","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"class JsonSerializableCakeCollate {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"Orders list contains duplicate order(s).\";","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"     * Constructs a {@code JsonSerializableCakeCollate} with the given orders.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    public JsonSerializableCakeCollate(@JsonProperty(\"orders\") List\u003cJsonAdaptedOrder\u003e orders) {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"     * Converts a given {@code ReadOnlyCakeCollate} into this class for Jackson use.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableCakeCollate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"    public JsonSerializableCakeCollate(ReadOnlyCakeCollate source) {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        orders.addAll(source.getOrderList().stream().map(JsonAdaptedOrder::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"     * Converts this cakecollate into the model\u0027s {@code CakeCollate} object.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    public CakeCollate toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate cakeCollate \u003d new CakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        for (JsonAdaptedOrder jsonAdaptedOrder : orders) {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"            Order order \u003d jsonAdaptedOrder.toModelType();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"            if (cakeCollate.hasOrder(order)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"            cakeCollate.addOrder(order);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"        return cakeCollate;","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xiinweii98":26,"-":34}},{"path":"src/main/java/seedu/cakecollate/storage/JsonSerializableOrderItems.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":" * An immutable OrderItem that is serializable to JSON format.","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"@JsonRootName(value \u003d \"OrderItems\")","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"class JsonSerializableOrderItems {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER_ITEMS \u003d \"OrderItems list contains duplicate orderItems(s).\";","lastModifiedDate":"2021-04-03"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    private final List\u003cJsonAdaptedOrderItems\u003e orderItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"     * Constructs a {@code JsonSerializableOrderItems} with the given orders.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    public JsonSerializableOrderItems(@JsonProperty(\"orderItems\") List\u003cJsonAdaptedOrderItems\u003e orderItems) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        this.orderItems.addAll(orderItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"     * Converts a given {@code ReadOnlyOrderItems} into this class for Jackson use.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableOrderItems}.","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    public JsonSerializableOrderItems(ReadOnlyOrderItems source) {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"        orderItems.addAll(source.getOrderItemList().stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"                .map(JsonAdaptedOrderItems::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"     * Converts this orderitems into the model\u0027s {@code OrderItems} object.","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"    public OrderItems toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItems orderitems \u003d new OrderItems();","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"        for (JsonAdaptedOrderItems jsonAdaptedOrderItems : orderItems) {","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"            OrderItem orderItem \u003d jsonAdaptedOrderItems.toModelType();","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"            if (orderitems.hasOrderItem(orderItem)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ORDER_ITEMS);","lastModifiedDate":"2021-04-03"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"            orderitems.addOrderItem(orderItem);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"        return orderitems;","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"RuiXiong2211":60}},{"path":"src/main/java/seedu/cakecollate/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.JsonUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xiinweii98":5,"-":42}},{"path":"src/main/java/seedu/cakecollate/storage/OrderItemsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":" * Represents a storage for {@link OrderItems}.","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"public interface OrderItemsStorage {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"     * returns the file path of the data file.","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"    Path getOrderItemsFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"     * Returns OrderItems data as a {@link OrderItems}.","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    Optional\u003cReadOnlyOrderItems\u003e readOrderItems() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"     * @see #getOrderItemsFilePath()","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    Optional\u003cReadOnlyOrderItems\u003e readOrderItems(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"     * Saves the given {@link ReadOnlyOrderItems} to the storage.","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"     * @param orderItems cannot be null.","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"    void saveOrderItems(ReadOnlyOrderItems orderItems) throws IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"     * @see #saveOrderItems(ReadOnlyOrderItems)","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"    void saveOrderItems(ReadOnlyOrderItems orderItems, Path filePath) throws IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"RuiXiong2211":46}},{"path":"src/main/java/seedu/cakecollate/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"public interface Storage extends CakeCollateStorage, UserPrefsStorage, OrderItemsStorage {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    Path getCakeCollateFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    Optional\u003cReadOnlyCakeCollate\u003e readCakeCollate() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    void saveCakeCollate(ReadOnlyCakeCollate cakeCollate) throws IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    Path getOrderItemsFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    Optional\u003cReadOnlyOrderItems\u003e readOrderItems() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"    void saveOrderItems(ReadOnlyOrderItems orderItems) throws IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"RuiXiong2211":12,"xiinweii98":8,"-":23}},{"path":"src/main/java/seedu/cakecollate/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":" * Manages storage of CakeCollate data in local storage.","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    private CakeCollateStorage cakeCollateStorage;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    private OrderItemsStorage orderItemsStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"     * Creates a {@code StorageManager} with the given {@code CakeCollateStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    public StorageManager(CakeCollateStorage cakeCollateStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"                          OrderItemsStorage orderItemsStorage) {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"        this.cakeCollateStorage \u003d cakeCollateStorage;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"        this.orderItemsStorage \u003d orderItemsStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CakeCollate methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"    public Path getCakeCollateFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"        return cakeCollateStorage.getCakeCollateFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"    public Optional\u003cReadOnlyCakeCollate\u003e readCakeCollate() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        return readCakeCollate(cakeCollateStorage.getCakeCollateFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"    public Optional\u003cReadOnlyCakeCollate\u003e readCakeCollate(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        return cakeCollateStorage.readCakeCollate(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"    public void saveCakeCollate(ReadOnlyCakeCollate cakeCollate) throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        saveCakeCollate(cakeCollate, cakeCollateStorage.getCakeCollateFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"    public void saveCakeCollate(ReadOnlyCakeCollate cakeCollate, Path filePath) throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"        cakeCollateStorage.saveCakeCollate(cakeCollate, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OrderItems methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"    public Path getOrderItemsFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"        return orderItemsStorage.getOrderItemsFilePath();","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"    public Optional\u003cReadOnlyOrderItems\u003e readOrderItems() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"        return readOrderItems(orderItemsStorage.getOrderItemsFilePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"    public Optional\u003cReadOnlyOrderItems\u003e readOrderItems(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"        return orderItemsStorage.readOrderItems(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"    public void saveOrderItems(ReadOnlyOrderItems orderItems) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"        saveOrderItems(orderItems, orderItemsStorage.getOrderItemsFilePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"RuiXiong2211"},"content":"    public void saveOrderItems(ReadOnlyOrderItems orderItems, Path filePath) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"RuiXiong2211"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"RuiXiong2211"},"content":"        orderItemsStorage.saveOrderItems(orderItems, filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RuiXiong2211":34,"xiinweii98":21,"-":57}},{"path":"src/main/java/seedu/cakecollate/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":" * Represents a storage for {@link seedu.cakecollate.model.UserPrefs}.","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"     * Saves the given {@link seedu.cakecollate.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xiinweii98":6,"-":30}},{"path":"src/main/java/seedu/cakecollate/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.CommandResult;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    private ArrayList\u003cString\u003e userInputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    private int userInputsIndex \u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    private boolean firstDecrementAfterUserInput \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    private boolean isShiftEntered \u003d false;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    private boolean firstUpEntered \u003d true;","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    private String firstUpEnteredString \u003d \"\";","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"     * Adds the command typed in by the user to the array list userInputs.","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"     * @param input the command that the user has typed in.","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"    public void updateUserInputs(String input) {","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"        userInputs.add(input);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"        incrementUserInputsIndex();","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"        userInputsIndex \u003d userInputs.size() - 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"        updateVariablesOnNewCommand();","lastModifiedDate":"2021-04-07"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"        positionCaretInTheEnd();","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"    private void updateVariablesOnNewCommand() {","lastModifiedDate":"2021-04-07"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"        firstDecrementAfterUserInput \u003d true;","lastModifiedDate":"2021-04-07"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"        firstUpEntered \u003d true;","lastModifiedDate":"2021-04-07"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"        firstUpEnteredString \u003d \"\";","lastModifiedDate":"2021-04-07"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"     * Sets the input string as the text in the command box if it exists.","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"     * @param input The Optional of the string to be set in the command box if it exists.","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"    public void setCommandTextField(Optional\u003cString\u003e input) {","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"        input.ifPresent(string -\u003e getCommandTextField().setText(string));","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"        positionCaretInTheEnd();","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":"     * Gets the command text field.","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"     * @return The command text field.","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"    public TextField getCommandTextField() {","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"pavz02"},"content":"        return commandTextField;","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"pavz02"},"content":"     * If shift is entered right before the backspace, all the text is removed from the command box.","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"pavz02"},"content":"    public void handleBackSpace() {","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"pavz02"},"content":"        if (isShiftEntered) {","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"pavz02"},"content":"            getCommandTextField().setText(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"pavz02"},"content":"     * Updates the boolean value of isShiftEntered depending on the user input.","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"pavz02"},"content":"     * @param isShiftEntered True if shift is entered, and false otherwise.","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"pavz02"},"content":"    public void updateShiftEntered(boolean isShiftEntered) {","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"pavz02"},"content":"        this.isShiftEntered \u003d isShiftEntered;","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"pavz02"},"content":"     * Navigates to the previous string in the userInputs array list if it exists.","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"pavz02"},"content":"     * @return Optional of the previous string if it exists.","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"pavz02"},"content":"    public Optional\u003cString\u003e getPreviousInput() {","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"pavz02"},"content":"        if (firstUpEntered) {","lastModifiedDate":"2021-04-07"},{"lineNumber":142,"author":{"gitId":"pavz02"},"content":"            firstUpEnteredString \u003d getTextInCommandTextField();","lastModifiedDate":"2021-04-07"},{"lineNumber":143,"author":{"gitId":"pavz02"},"content":"            firstUpEntered \u003d false;","lastModifiedDate":"2021-04-07"},{"lineNumber":144,"author":{"gitId":"pavz02"},"content":"        } else if (userInputsIndex \u003d\u003d userInputs.size()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":145,"author":{"gitId":"pavz02"},"content":"            firstUpEnteredString \u003d getTextInCommandTextField();","lastModifiedDate":"2021-04-07"},{"lineNumber":146,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":147,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":148,"author":{"gitId":"pavz02"},"content":"        decrementUserInputsIndex();","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"pavz02"},"content":"        return Optional.ofNullable(input());","lastModifiedDate":"2021-04-07"},{"lineNumber":150,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"pavz02"},"content":"     * Navigates to the next string in the userInputs array list if it exists.","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"pavz02"},"content":"     * @return Optional of the next string if it exists.","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"pavz02"},"content":"    public Optional\u003cString\u003e getNextInput() {","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"pavz02"},"content":"        incrementUserInputsIndex();","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"pavz02"},"content":"        return Optional.ofNullable(input());","lastModifiedDate":"2021-04-07"},{"lineNumber":159,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"pavz02"},"content":"     * Returns the user input in the position userInputsIndex from the array list if it exists, and null otherwise.","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"pavz02"},"content":"     * @return","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"pavz02"},"content":"    private String input() {","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"pavz02"},"content":"        String output \u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"pavz02"},"content":"        if (userInputsIndex \u003e -1 \u0026\u0026 userInputsIndex \u003c userInputs.size()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"pavz02"},"content":"            output \u003d userInputs.get(userInputsIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":171,"author":{"gitId":"pavz02"},"content":"        if (userInputsIndex \u003d\u003d userInputs.size()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":172,"author":{"gitId":"pavz02"},"content":"            output \u003d firstUpEnteredString;","lastModifiedDate":"2021-04-07"},{"lineNumber":173,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":174,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":175,"author":{"gitId":"pavz02"},"content":"        return output;","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"pavz02"},"content":"     * Increments the index that the user input history points to if a future user input exists.","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"pavz02"},"content":"    private void incrementUserInputsIndex() {","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"pavz02"},"content":"        if (userInputsIndex + 1 \u003c\u003d userInputs.size() \u0026\u0026 userInputsIndex \u003c\u003d userInputs.size()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":183,"author":{"gitId":"pavz02"},"content":"            userInputsIndex++;","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"pavz02"},"content":"     * Decrements the index that the user input history points to if a previous user input exists.","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"pavz02"},"content":"    private void decrementUserInputsIndex() {","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"pavz02"},"content":"        if (!firstDecrementAfterUserInput \u0026\u0026 userInputsIndex \u003e 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"pavz02"},"content":"            userInputsIndex--;","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"pavz02"},"content":"        firstDecrementAfterUserInput \u003d false;","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"pavz02"},"content":"     * Gets the text in the command text field.","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"pavz02"},"content":"     * @return The texts in the command text field.","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"pavz02"},"content":"    private String getTextInCommandTextField() {","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"pavz02"},"content":"        return commandTextField.getText();","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"pavz02"},"content":"     * Moves the caret position to the end of the text.","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"pavz02"},"content":"    private void positionCaretInTheEnd() {","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"pavz02"},"content":"        getCommandTextField().positionCaret(getTextInCommandTextField().length());","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"xiinweii98"},"content":"         * @see seedu.cakecollate.logic.Logic#execute(String)","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"pavz02":140,"xiinweii98":5,"-":80}},{"path":"src/main/java/seedu/cakecollate/ui/HelpCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":" * An UI component that displays information of a {@code String command description}.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"public class HelpCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    private static final String FXML \u003d \"HelpCard.fxml\";","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    private HBox helpPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    private Label commandDescription;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"     * Creates a {@code HelpCard} with the given {@code String} to display.","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"     * @param command String description of the commands available in CakeCollate.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    public HelpCard(String command) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"        commandDescription.setText(command);","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"        if (!(other instanceof HelpCard)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"        // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"        HelpCard card \u003d (HelpCard) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"        return commandDescription.getText().equals(card.commandDescription.getText());","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"pavz02":50,"xiinweii98":1}},{"path":"src/main/java/seedu/cakecollate/ui/HelpListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"public class HelpListPanel extends Panel {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(HelpListPanel.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    private ListView\u003cString\u003e listView;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"     * Creates a {@code HelpCommandPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    public HelpListPanel(ObservableList\u003cString\u003e commandDescriptionList) {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"        super();","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"        listView.setItems(commandDescriptionList);","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"        listView.setCellFactory(listView -\u003e new ListViewCell());","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code String command} using a {@code HelpCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    class ListViewCell extends ListCell\u003cString\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"        protected void updateItem(String command, boolean empty) {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"            super.updateItem(command, empty);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"            if (empty || command \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"                setText(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"                setGraphic(new HelpCard(command).getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"pavz02":45,"xiinweii98":2}},{"path":"src/main/java/seedu/cakecollate/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.logic.commands.HelpCommand.SHOWING_RETURN_MESSAGE;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.Logic;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.CommandResult;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"    private boolean inHelp \u003d false;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"    private Panel orderPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"    private Panel helpPanel;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"    private Panel orderItemPanel;","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"    private Button helpPanelToMain;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"pPris"},"content":"    private Node models;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"pPris"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"    private StackPane orderItemTablePlaceholder;","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"pPris"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"    private HBox modelBox;","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"    public MainWindow(Stage primaryStage, Logic logic) throws CommandException, ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        primaryStage.setMaximized(true);","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"        initialiseHelpPanelAndButton();","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"xiinweii98"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getCakeCollateFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"pavz02"},"content":"        commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"pavz02"},"content":"        commandBoxArrowShortcut();","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"pPris"},"content":"        orderPanel \u003d new OrderListPanel(logic.getFilteredOrderList());","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"pPris"},"content":"        listPanelPlaceholder.getChildren().add(orderPanel.getRoot());","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"pavz02"},"content":"        orderItemPanel \u003d new OrderItemPanel(logic.getFilteredOrderItemsList());","lastModifiedDate":"2021-04-07"},{"lineNumber":147,"author":{"gitId":"pavz02"},"content":"        orderItemTablePlaceholder.getChildren().add(orderItemPanel.getRoot());","lastModifiedDate":"2021-04-07"},{"lineNumber":148,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"pavz02"},"content":"    void updateDeliveryStatuses() throws ParseException, CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"pavz02"},"content":"        String deliveryStatus \u003d logic.updateDeliveryStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"pavz02"},"content":"        if (!deliveryStatus.isEmpty()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":153,"author":{"gitId":"pavz02"},"content":"            executeCommand(logic.updateDeliveryStatus());","lastModifiedDate":"2021-03-22"},{"lineNumber":154,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"pavz02"},"content":"    void initialiseHelpPanelAndButton() {","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"pavz02"},"content":"        helpPanel \u003d new HelpListPanel(HelpCommand.getListOfCommands());","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"pavz02"},"content":"        helpPanelToMain \u003d new Button(\"Return to the order list\");","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"pavz02"},"content":"        helpPanelToMain.setOnAction(event -\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"pavz02"},"content":"            resetMainWindow();","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"pavz02"},"content":"            logger.info(\"Result: \" + SHOWING_RETURN_MESSAGE);","lastModifiedDate":"2021-04-10"},{"lineNumber":163,"author":{"gitId":"pavz02"},"content":"            resultDisplay.setFeedbackToUser(SHOWING_RETURN_MESSAGE);","lastModifiedDate":"2021-04-10"},{"lineNumber":164,"author":{"gitId":"pavz02"},"content":"        });","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"pavz02"},"content":"    void commandBoxArrowShortcut() {","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"pavz02"},"content":"        commandBox.getCommandTextField().setOnKeyPressed(event -\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"pavz02"},"content":"            if (event.getCode().equals(KeyCode.UP)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"pavz02"},"content":"                commandBox.setCommandTextField(commandBox.getPreviousInput());","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"pavz02"},"content":"            } else if (event.getCode().equals(KeyCode.DOWN)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"pavz02"},"content":"                commandBox.setCommandTextField(commandBox.getNextInput());","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"pavz02"},"content":"            } else if (event.getCode().equals(KeyCode.SHIFT)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"pavz02"},"content":"                commandBox.updateShiftEntered(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"pavz02"},"content":"            } else if (event.getCode().equals(KeyCode.BACK_SPACE)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"pavz02"},"content":"                commandBox.handleBackSpace();","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"pavz02"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"pavz02"},"content":"            if (!event.getCode().equals(KeyCode.SHIFT)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"pavz02"},"content":"                commandBox.updateShiftEntered(false);","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"pavz02"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"pavz02"},"content":"        });","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"pavz02"},"content":"     * Transitions from the help window to the the main order list.","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"pavz02"},"content":"    public void resetMainWindow() {","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"        replaceHelpPanelWithModels();","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"        removeHelpButtonFromDisplay();","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"pavz02"},"content":"        logger.info(\"Result: \" + SHOWING_RETURN_MESSAGE);","lastModifiedDate":"2021-04-10"},{"lineNumber":193,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"pavz02"},"content":"        inHelp \u003d false;","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"    void replaceHelpPanelWithModels() {","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"        modelBox.getChildren().remove(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"        modelBox.getChildren().add(models);","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"    void removeHelpButtonFromDisplay() {","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"pPris"},"content":"        resultDisplayPlaceholder.getChildren().remove(1);","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":223,"author":{"gitId":"pavz02"},"content":"        if (!inHelp) {","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"pavz02"},"content":"            inHelp \u003d true;","lastModifiedDate":"2021-03-14"},{"lineNumber":225,"author":{"gitId":"pPris"},"content":"            removeModelsFromDisplay();","lastModifiedDate":"2021-03-30"},{"lineNumber":226,"author":{"gitId":"pPris"},"content":"            replaceModelsWithHelpPanel();","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"pPris"},"content":"            addHelpButtonToDisplay();","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"pPris"},"content":"    private void removeModelsFromDisplay() {","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"pPris"},"content":"        models \u003d modelBox.getChildren().get(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"pPris"},"content":"        modelBox.getChildren().remove(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":236,"author":{"gitId":"pPris"},"content":"    private void replaceModelsWithHelpPanel() {","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"pPris"},"content":"        helpPanel.getRoot().setPrefWidth(modelBox.getWidth());","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"pPris"},"content":"        modelBox.getChildren().add(helpPanel.getRoot());","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"pPris"},"content":"    private void addHelpButtonToDisplay() {","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"pavz02"},"content":"        helpPanelToMain.setPrefWidth(resultDisplayPlaceholder.getWidth());","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"pavz02"},"content":"        resultDisplayPlaceholder.getChildren().add(helpPanelToMain);","lastModifiedDate":"2021-03-14"},{"lineNumber":244,"author":{"gitId":"pavz02"},"content":"        StackPane.setAlignment(helpPanelToMain, Pos.BOTTOM_CENTER);","lastModifiedDate":"2021-03-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"xiinweii98"},"content":"     * @see seedu.cakecollate.logic.Logic#execute(String)","lastModifiedDate":"2021-03-18"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"pavz02"},"content":"            commandBox.updateUserInputs(commandText);","lastModifiedDate":"2021-03-30"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"pavz02"},"content":"            String result \u003d commandResult.getFeedbackToUser();","lastModifiedDate":"2021-04-10"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"pavz02"},"content":"            if (inHelp \u0026\u0026 !commandResult.isShowHelp()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":282,"author":{"gitId":"pavz02"},"content":"                resetMainWindow();","lastModifiedDate":"2021-03-22"},{"lineNumber":283,"author":{"gitId":"pavz02"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":284,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":285,"author":{"gitId":"pavz02"},"content":"            resultDisplay.setFeedbackToUser(result);","lastModifiedDate":"2021-04-10"},{"lineNumber":286,"author":{"gitId":"pavz02"},"content":"            logger.info(\"Result: \" + result);","lastModifiedDate":"2021-04-10"},{"lineNumber":287,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"pPris":33,"pavz02":78,"xiinweii98":11,"-":173}},{"path":"src/main/java/seedu/cakecollate/ui/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":" * An UI component that displays information of a {@code Order}.","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"    private static final String FXML \u003d \"OrderCard.fxml\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on CakeCollate level 4\u003c/a\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    public final Order order;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"    private FlowPane orderDescriptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"    private Label deliveryDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"pPris"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"    private Label deliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"    @FXML","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"    private Label request;","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"     * Creates a {@code OrderCode} with the given {@code Order} and index to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"    public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"        this.order \u003d order;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        name.setText(order.getName().fullName);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        phone.setText(order.getPhone().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        address.setText(order.getAddress().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        email.setText(order.getEmail().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"pPris"},"content":"        // this map maps order descriptions to quantities entered in order","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"pPris"},"content":"        Map\u003cOrderDescription, Integer\u003e orderDescriptionMap \u003d order.getOrderDescriptions(); /*.stream()*/","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"pPris"},"content":"        orderDescriptionMap.keySet().stream()","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"                .sorted(Comparator.comparing(orderDescription -\u003e orderDescription.value))","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"                .forEach(orderDescription -\u003e orderDescriptions","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"pPris"},"content":"                        .getChildren()","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"                        .add(createOrderDescLabel(orderDescription, orderDescriptionMap.get(orderDescription))));","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        order.getTags().stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        deliveryDate.setText(order.getDeliveryDate().toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"        deliveryStatus.setText(order.getDeliveryStatus().toString());","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"        request.setText(order.getRequest().toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        setDeliveryStatusStyle();","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"pPris"},"content":"    private Node createOrderDescLabel(OrderDescription orderDescription, int quantity) {","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"pPris"},"content":"        return new Label(String.format(\"%d x %s\", quantity, orderDescription.value));","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"    public void setDeliveryStatusStyle() {","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"        deliveryStatus.getStyleClass().add(\"cell_deliveryStatus_label_\" + order.getDeliveryStatus().toString());","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"        if (!(other instanceof OrderCard)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"        OrderCard card \u003d (OrderCard) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"                \u0026\u0026 order.equals(card.order);","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"pPris":19,"pavz02":10,"RuiXiong2211":3,"xiinweii98":19,"-":59}},{"path":"src/main/java/seedu/cakecollate/ui/OrderItemCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"public class OrderItemCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    private static final String FXML \u003d \"OrderItemCard.fxml\";","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    @FXML","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    private Label index;","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    @FXML","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    private Label type;","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    private final OrderItem orderItem;","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"     * Creates a {@code OrderCode} with the given {@code Order} and index to display.","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    public OrderItemCard(OrderItem orderItem, String displayedIndex) {","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"        super(FXML);","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        this.orderItem \u003d orderItem;","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"        index.setText(displayedIndex);","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"        type.setText(orderItem.getType().toString());","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    @Override","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"        // short circuit if same object","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"            return true;","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"        if (!(other instanceof OrderCard)) {","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"            return false;","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"        // state check","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"        OrderItemCard card \u003d (OrderItemCard) other;","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"        return index.getText().equals(card.index.getText())","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"                \u0026\u0026 type.equals(card.type);","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"pavz02":45}},{"path":"src/main/java/seedu/cakecollate/ui/OrderItemPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"/**","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":" */","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"public class OrderItemPanel extends Panel {","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    @FXML","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"    private ListView\u003cOrderItem\u003e listView;","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"     * Creates a {@code OrderListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    public OrderItemPanel(ObservableList\u003cOrderItem\u003e orderList) {","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"        super();","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"        listView.setItems(orderList);","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"        listView.setCellFactory(listView -\u003e new OrderItemViewCell());","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Order} using a {@code OrderCard}.","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"    class OrderItemViewCell extends ListCell\u003cOrderItem\u003e {","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"        @Override","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"        protected void updateItem(OrderItem orderItem, boolean empty) {","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"            super.updateItem(orderItem, empty);","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"            if (empty || orderItem \u003d\u003d null) {","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"                setGraphic(null);","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"                setText(null);","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"            } else {","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"                setGraphic(new OrderItemCard(orderItem, Integer.toString(getIndex() + 1)).getRoot());","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"            }","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"pavz02":47}},{"path":"src/main/java/seedu/cakecollate/ui/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"public class OrderListPanel extends Panel {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    private ListView\u003cOrder\u003e listView;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"     * Creates a {@code OrderListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    public OrderListPanel(ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"        super();","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"        listView.setItems(orderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        listView.setCellFactory(listView -\u003e new OrderListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Order} using a {@code OrderCard}.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    class OrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"                setText(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"                setGraphic(new OrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"xiinweii98":47}},{"path":"src/main/java/seedu/cakecollate/ui/Panel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"abstract class Panel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"    private static final String FXML \u003d \"ListPanel.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"     * Creates a {@code OrderListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    public Panel() {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"pavz02":13,"xiinweii98":1}},{"path":"src/main/java/seedu/cakecollate/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xiinweii98":1,"-":27}},{"path":"src/main/java/seedu/cakecollate/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":1,"-":27}},{"path":"src/main/java/seedu/cakecollate/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xiinweii98":1,"-":12}},{"path":"src/main/java/seedu/cakecollate/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.MainApp;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.LogsCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.StringUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.Logic;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/cake_icon.png\";","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"            mainWindow.updateDeliveryStatuses();","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"pavz02":2,"xiinweii98":5,"-":83}},{"path":"src/main/java/seedu/cakecollate/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.MainApp;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xiinweii98":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    -fx-control-inner-background: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":".table-row-cell {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"   -fx-background-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":".table-row-cell:filled:even {","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"   -fx-background-color: #3c3e3f;","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":".table-row-cell:filled:odd {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"   -fx-background-color: #515658;","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"RuiXiong2211"},"content":".cell_request_label {","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"RuiXiong2211"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"RuiXiong2211"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"RuiXiong2211"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"RuiXiong2211"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"RuiXiong2211"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"RuiXiong2211"},"content":"    -fx-background-color: #FF5733;","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"pavz02"},"content":".cell_help_label {","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"pavz02"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"pavz02"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"pavz02"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"pavz02"},"content":".cell_order_item_label {","lastModifiedDate":"2021-04-07"},{"lineNumber":163,"author":{"gitId":"pavz02"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-04-07"},{"lineNumber":164,"author":{"gitId":"pavz02"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-04-07"},{"lineNumber":165,"author":{"gitId":"pavz02"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-04-07"},{"lineNumber":166,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-04-07"},{"lineNumber":167,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":168,"author":{"gitId":"pavz02"},"content":".cell_deliveryStatus_label_general {","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"pavz02"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"pavz02"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-22"},{"lineNumber":171,"author":{"gitId":"pavz02"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"pavz02"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"pavz02"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"pavz02"},"content":".cell_deliveryStatus_label_UNDELIVERED {","lastModifiedDate":"2021-03-22"},{"lineNumber":177,"author":{"gitId":"pavz02"},"content":"    -fx-background-color: #ff0000;","lastModifiedDate":"2021-03-22"},{"lineNumber":178,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"pavz02"},"content":".cell_deliveryStatus_label_DELIVERED {","lastModifiedDate":"2021-03-22"},{"lineNumber":181,"author":{"gitId":"pavz02"},"content":"    -fx-background-color: #0e6b0e;","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":183,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":184,"author":{"gitId":"pavz02"},"content":".cell_deliveryStatus_label_CANCELLED {","lastModifiedDate":"2021-03-22"},{"lineNumber":185,"author":{"gitId":"pavz02"},"content":"    -fx-background-color: #ffd300;","lastModifiedDate":"2021-03-22"},{"lineNumber":186,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":187,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"pavz02"},"content":"    -fx-background-color: #2a2a2a;","lastModifiedDate":"2021-03-14"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":384,"author":{"gitId":"xiinweii98"},"content":"#filterField, #orderListPanel, #orderWebpage {","lastModifiedDate":"2021-03-17"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":386,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":388,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":391,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":393,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":398,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":406,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":407,"author":{"gitId":"pavz02"},"content":"#orderDescriptions {","lastModifiedDate":"2021-03-29"},{"lineNumber":408,"author":{"gitId":"pavz02"},"content":"    -fx-hgap: 3;","lastModifiedDate":"2021-03-29"},{"lineNumber":409,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":410,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":411,"author":{"gitId":"pavz02"},"content":"#orderDescriptions .label {","lastModifiedDate":"2021-03-29"},{"lineNumber":412,"author":{"gitId":"pavz02"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-29"},{"lineNumber":413,"author":{"gitId":"pavz02"},"content":"    -fx-padding: 0 0 1 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":414,"author":{"gitId":"pavz02"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-29"},{"lineNumber":415,"author":{"gitId":"pavz02"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-03-29"},{"lineNumber":416,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":417,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":418,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"pavz02":60,"RuiXiong2211":9,"xiinweii98":1,"-":348}},{"path":"src/main/resources/view/HelpCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"\u003cHBox id\u003d\"helpPane\" fx:id\u003d\"helpPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"            \u003cLabel fx:id\u003d\"commandDescription\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" wrapText\u003d\"true\"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"                   styleClass\u003d\"cell_help_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"pavz02":27}},{"path":"src/main/resources/view/ListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"  \u003cListView fx:id\u003d\"listView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"pavz02":2,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"         title\u003d\"CakeCollate\" minWidth\u003d\"1000\" minHeight\u003d\"695\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    \u003cImage url\u003d\"@/images/cake_icon.png\" /\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        \u003cHBox fx:id\u003d\"modelBox\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"          \u003cHBox fx:id\u003d\"unmodifiedModels\" minHeight\u003d\"433\" prefWidth\u003d\"1350\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"            \u003cVBox fx:id\u003d\"list\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"650\" prefWidth\u003d\"950\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"                  HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"              \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"            \u003cVBox fx:id\u003d\"orderItem\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"350\" prefWidth\u003d\"350\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"              \u003cHBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"                  \u003cLabel text\u003d\"Index\" prefWidth\u003d\"50\" styleClass\u003d\"cell_order_item_label\"/\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"                  \u003cLabel text\u003d\"Order Item\" prefWidth\u003d\"250\" styleClass\u003d\"cell_order_item_label\"/\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"              \u003cStackPane fx:id\u003d\"orderItemTablePlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"pavz02":20,"xiinweii98":4,"-":56,"simran-bhadani3":1}},{"path":"src/main/resources/view/OrderCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"      \u003cLabel fx:id\u003d\"deliveryStatus\" text\u003d\"\\$first\" styleClass\u003d\"cell_deliveryStatus_label_general\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"      \u003cFlowPane fx:id\u003d\"orderDescriptions\" /\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"      \u003cLabel fx:id\u003d\"deliveryDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deliveryDate\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"      \u003cLabel fx:id\u003d\"request\" styleClass\u003d\"cell_request_label\" text\u003d\"\\$request\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pPris":1,"RuiXiong2211":3,"pavz02":4,"-":32}},{"path":"src/main/resources/view/OrderItemCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"\u003cGridPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"5\" /\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"            \u003cLabel fx:id\u003d\"index\" text\u003d\"\\$first\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" prefWidth\u003d\"50\"/\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"            \u003cLabel fx:id\u003d\"type\" text\u003d\"\\$first\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" prefWidth\u003d\"250\"/\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"pavz02":26}},{"path":"src/main/resources/view/OrderItemListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"\u003c?import javafx.scene.control.cell.PropertyValueFactory?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"\u003cGridPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"    \u003cTableView fx:id\u003d\"table\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"        \u003ccolumns\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"            \u003cTableColumn fx:id\u003d\"index\" text\u003d\"Index\" prefWidth\u003d\"100\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"            \u003c/TableColumn\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"            \u003cTableColumn fx:id\u003d\"type\" text\u003d\"Order Item\" prefWidth\u003d\"200\"\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"                \u003ccellValueFactory\u003e\u003cPropertyValueFactory property\u003d\"type\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"                \u003c/cellValueFactory\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"            \u003c/TableColumn\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"        \u003c/columns\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    \u003c/TableView\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"pavz02":19,"simran-bhadani3":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"pavz02":1,"-":8}},{"path":"src/test/data/JsonCakeCollateStorageTest/invalidAndValidOrderCakeCollate.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"    \"name\": \"Valid Order\",","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"    \"orderDescriptions\": [ \"2 x Strawberry Cakes\" ],","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"    \"deliveryDate\": \"02/02/2022\"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    \"name\": \"Order With Invalid Phone Field\",","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pPris":4,"xiinweii98":3,"-":9}},{"path":"src/test/data/JsonCakeCollateStorageTest/invalidOrderCakeCollate.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"    \"name\": \"Order with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xiinweii98":2,"-":6}},{"path":"src/test/data/JsonOrderItemsStorageTest/invalidAndValidOrderItems.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"{","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"  \"orderItems\": [ {","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    \"cost\": \"1\",","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Banana Cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"  }, {","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    \"cost\": \"69420 Bananas\",","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Banana Cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"  } ]","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"RuiXiong2211":9}},{"path":"src/test/data/JsonOrderItemsStorageTest/invalidOrderItems.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"{","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"  \"orderItems\": [ {","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    \"cost\": \"40 Bananas\",","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Banana Cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"  }, {","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    \"cost\": \"69420 Bananas\",","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Banana Cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"  } ]","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"RuiXiong2211":9}},{"path":"src/test/data/JsonOrderItemsStorageTest/notJsonFormatOrderItems.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"69420 is not a meme!","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"RuiXiong2211":2}},{"path":"src/test/data/JsonSerializableCakeCollateTest/duplicateOrderCakeCollate.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"    \"orderDescriptions\": [ \"Strawberry Cakes\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    \"deliveryDate\": \"02/02/2022\",","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    \"request\": \"Give me more pineapples.\"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    \"orderDescriptions\": [ \"Strawberry Cakes\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    \"deliveryDate\": \"02/02/2022\",","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    \"request\": \"Give me more pineapples.\"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RuiXiong2211":4,"xiinweii98":5,"-":10,"simran-bhadani3":2}},{"path":"src/test/data/JsonSerializableCakeCollateTest/invalidOrderCakeCollate.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    \"request\": \"\"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RuiXiong2211":2,"xiinweii98":1,"-":6}},{"path":"src/test/data/JsonSerializableCakeCollateTest/typicalOrdersCakeCollate.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"  \"_comment\": \"CakeCollate save file which contains the same Order values as in TypicalOrders#getTypicalCakeCollate()\",","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"  \"orders\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"    \"orderDescriptions\": [ \"Strawberry Cake\" ],","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    \"deliveryDate\": \"01/01/2022\",","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    \"request\": \"\"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"    \"orderDescriptions\": [ \"Chocolate Cake\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    \"deliveryDate\": \"01-01-2022\",","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"    \"request\": \"More pineapples\"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"pPris"},"content":"    \"orderDescriptions\": [ \"Vanilla Cake\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    \"deliveryDate\": \"01.01.2022\",","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"    \"request\": \"Custom cake decoration, diamond hands.\"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"    \"orderDescriptions\": [ \"Chocolate Chip Muffin\", \"Chocolate Chip Muffin\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    \"deliveryDate\": \"01 Jan 2022\",","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"    \"request\": \"\"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"pPris"},"content":"    \"orderDescriptions\": [ \"Raisin Cake\", \"Vanilla Cake\", \"Blackforest cake\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"    \"deliveryDate\": \"31/12/2022\",","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"    \"request\": \"\"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"    \"orderDescriptions\": [ \"Vanilla cakes\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"    \"deliveryDate\": \"28-02-2022\",","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"    \"request\": \"Replace vanilla essence with banana essence.\"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"    \"orderDescriptions\": [ \"lava cake\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"    \"deliveryDate\": \"06.03.2022\",","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"    \"request\": \"\"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pPris":7,"RuiXiong2211":14,"xiinweii98":9,"-":37}},{"path":"src/test/data/JsonSerializableOrderItemsTest/duplicateOrderItems.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"{","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"  \"orderItems\": [ {","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Banana Cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"  }, {","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Banana Cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"  } ]","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"RuiXiong2211":7}},{"path":"src/test/data/JsonSerializableOrderItemsTest/invalidOrderItems.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"{","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"  \"orderItems\": [ {","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Banana Cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"  }, {","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": null","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"  } ]","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"RuiXiong2211":7}},{"path":"src/test/data/JsonSerializableOrderItemsTest/typicalOrderItems.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"{","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"  \"_comment\": \"OrderItems save file which contains the same OrderItem values as in TypicalOrderItems#getTypicalOrderItemsModel()\",","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"  \"orderItems\": [ {","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Black Forest\"","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"  }, {","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Red Velvet Cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"  }, {","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Chocolate Mud Cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"  }, {","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Oreo Cheesecake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"  }, {","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Butterscotch Cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"  },","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    {","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Strawberry cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"  }, {","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    \"type\": \"Chocolate cake\"","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"  } ]","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"RuiXiong2211":19}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"  \"cakeCollateFilePath\" : \"cakecollate.json\"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xiinweii98":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"  \"cakeCollateFilePath\" : \"cakecollate.json\"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xiinweii98":1,"-":10}},{"path":"src/test/java/seedu/cakecollate/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"xiinweii98":1,"-":57}},{"path":"src/test/java/seedu/cakecollate/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.core;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"xiinweii98":1,"-":26}},{"path":"src/test/java/seedu/cakecollate/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.core;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":2,"-":133}},{"path":"src/test/java/seedu/cakecollate/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.core.index;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"        final Index fifthOrderIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(fifthOrderIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(fifthOrderIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(fifthOrderIndex.equals(fifthOrderIndex));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(fifthOrderIndex.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(fifthOrderIndex.equals(5.0f));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(fifthOrderIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xiinweii98":9,"-":51}},{"path":"src/test/java/seedu/cakecollate/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"xiinweii98":2,"-":34}},{"path":"src/test/java/seedu/cakecollate/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"xiinweii98":3,"-":105}},{"path":"src/test/java/seedu/cakecollate/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.Config;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xiinweii98":4,"-":112}},{"path":"src/test/java/seedu/cakecollate/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":2,"-":21}},{"path":"src/test/java/seedu/cakecollate/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.SerializableTestClass;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.TestUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":3,"-":42}},{"path":"src/test/java/seedu/cakecollate/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.commons.util;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.commons.util.StringUtil.capitaliseEachWord;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    //---------------- Tests for isUnsignedInteger --------------------------------------","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"    public void isUnsignedInteger() {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"        // EP: empty strings","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"  \"));","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"        // EP: not a number","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"a\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"aaa\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"        // EP: zero","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"0\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"        // EP: zero as prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"01\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"        // EP: signed numbers","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"-1\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"+1\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"        // EP: numbers with white space","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(StringUtil.isUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"1\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"10\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":148,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":179,"author":{"gitId":"pPris"},"content":"    // --------------- Tests for capitalise -----------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":180,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":181,"author":{"gitId":"pPris"},"content":"    public void capitaliseEachWordTest() {","lastModifiedDate":"2021-04-11"},{"lineNumber":182,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":183,"author":{"gitId":"pPris"},"content":"        assertEquals(\"Hello World\", capitaliseEachWord(\"HELLO WORLD\")); // all caps","lastModifiedDate":"2021-04-11"},{"lineNumber":184,"author":{"gitId":"pPris"},"content":"        assertEquals(\"Hello World\", capitaliseEachWord(\"hellO wOrLd\")); // random caps","lastModifiedDate":"2021-04-11"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"        assertEquals(\"Hello World\", capitaliseEachWord(\"hello world\")); // all lower case","lastModifiedDate":"2021-04-11"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"        assertEquals(\"Hello World\", capitaliseEachWord(\"Hello World\")); // input same as output","lastModifiedDate":"2021-04-11"},{"lineNumber":187,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":188,"author":{"gitId":"pPris"},"content":"        // special characters preserved","lastModifiedDate":"2021-04-11"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"        // include standalone special characters, special characters sandwiched/at the start/at the end of word","lastModifiedDate":"2021-04-11"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"        assertEquals(capitaliseEachWord(\"Hello w#$% world ..@@\u0026 !hello\"), \"Hello W#$% World ..@@\u0026 !hello\");","lastModifiedDate":"2021-04-11"},{"lineNumber":191,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":192,"author":{"gitId":"pPris"},"content":"        // numbers preserved (include numbers at start of word, numbers in middle of word, numbers beside letters)","lastModifiedDate":"2021-04-11"},{"lineNumber":193,"author":{"gitId":"pPris"},"content":"        assertEquals(\"Hello 78 World\", capitaliseEachWord(\"hello 78 world\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":194,"author":{"gitId":"pPris"},"content":"        assertEquals(\"Hello 78world\", capitaliseEachWord(\"hello 78world\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":195,"author":{"gitId":"pPris"},"content":"        assertEquals(\"Hello Wor34ld\", capitaliseEachWord(\"hello wor34ld\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":196,"author":{"gitId":"pPris"},"content":"        assertEquals(\"Hello World12\", capitaliseEachWord(\"hello world12\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"        //only one letter","lastModifiedDate":"2021-04-11"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"        assertEquals(\"Hello W\", capitaliseEachWord(\"hello w\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":200,"author":{"gitId":"pPris"},"content":"        assertEquals(\"W\", capitaliseEachWord(\"w\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":201,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"        assertEquals(\"  \", capitaliseEachWord(\"  \"));","lastModifiedDate":"2021-04-11"},{"lineNumber":203,"author":{"gitId":"pPris"},"content":"        assertEquals(\"\", capitaliseEachWord(\"\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":204,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":205,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"pPris":29,"RuiXiong2211":34,"xiinweii98":3,"-":140}},{"path":"src/test/java/seedu/cakecollate/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_ORDERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.DELIVERY_DATE_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_ITEM_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.AddCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.CommandResult;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.ListCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.storage.JsonCakeCollateStorage;","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.storage.JsonOrderItemsStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.storage.StorageManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"        JsonCakeCollateStorage cakeCollateStorage \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"                new JsonCakeCollateStorage(temporaryFolder.resolve(\"cakeCollate.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"        JsonOrderItemsStorage orderItemsStorage \u003d new JsonOrderItemsStorage(temporaryFolder.resolve(\"OrderItems.json\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"        StorageManager storage \u003d new StorageManager(cakeCollateStorage, userPrefsStorage, orderItemsStorage);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"pPris"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size());","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"pPris"},"content":"        assertCommandSuccess(listCommand, expectedMessage, model);","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"        // Setup LogicManager with JsonCakeCollateIoExceptionThrowingStub","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"        JsonCakeCollateStorage cakeCollateStorage \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"                new JsonCakeCollateIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionCakeCollate.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"        JsonOrderItemsStorage orderItemsStorage \u003d new JsonOrderItemsStorage(temporaryFolder.resolve(\"OrderItems.json\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"        StorageManager storage \u003d new StorageManager(cakeCollateStorage, userPrefsStorage, orderItemsStorage);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"pPris"},"content":"                + ADDRESS_DESC_AMY + ORDER_DESC_AMY + DELIVERY_DATE_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"        Order expectedOrder \u003d new OrderBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"        expectedModel.addOrder(expectedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"pPris"},"content":"        expectedModel.addOrderItem(ORDER_ITEM_AMY);","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredOrderList().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"RuiXiong2211"},"content":"        Model expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(), model.getOrderItems());","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"xiinweii98"},"content":"    private static class JsonCakeCollateIoExceptionThrowingStub extends JsonCakeCollateStorage {","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"xiinweii98"},"content":"        private JsonCakeCollateIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"xiinweii98"},"content":"        public void saveCakeCollate(ReadOnlyCakeCollate cakeCollate, Path filePath) throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"pPris":7,"RuiXiong2211":6,"xiinweii98":37,"-":121}},{"path":"src/test/java/seedu/cakecollate/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pPris"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_ITEM_AMY;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_ITEM_BOB;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_BERRY_ORDER;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TestUtil.stringify;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_THIRD_ORDER;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.testutil.AddOrderDescriptorBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.testutil.OrderItemBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"    private Model model;","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"    private IndexList nonNullIndexList;","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"pPris"},"content":"        nonNullIndexList \u003d new IndexList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"        nonNullIndexList.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"        nonNullIndexList.add(INDEX_THIRD_ORDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"        model \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"pPris"},"content":"    public void execute_newOrder_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"        Order validOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"        Model expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(), model.getOrderItems());","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"pPris"},"content":"        expectedModel.addOrder(validOrder);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"pPris"},"content":"        assertCommandSuccess(new AddCommand(null, descriptor), model,","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"pPris"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validOrder), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"pPris"},"content":"    public void execute_duplicateOrder_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"pPris"},"content":"        Order orderInList \u003d model.getCakeCollate().getOrderList().get(0);","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(orderInList).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"pPris"},"content":"        assertCommandFailure(new AddCommand(null, descriptor), model, AddCommand.MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TESTS ADDED AFTER ORDER ITEM FEATURE \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"pPris"},"content":"    // \u003d\u003d\u003d INDEX LIST RELATED \u003d\u003d\u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"pPris"},"content":"    public void execute_invalidListIndex_throwsInvalidIndex() {","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"pPris"},"content":"        Model emptyModel \u003d new ModelManager();","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"                new AddOrderDescriptorBuilder(new OrderBuilder().withOrderDescriptions().build()).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"pPris"},"content":"        Command addCommand \u003d new AddCommand(nonNullIndexList, descriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"pPris"},"content":"        assertCommandFailure(addCommand, emptyModel, Messages.MESSAGE_INVALID_ORDER_ITEM_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"pPris"},"content":"    public void execute_singleValidIndexList_addedToOrder() {","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"pPris"},"content":"        IndexList indexList \u003d new IndexList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"pPris"},"content":"        indexList.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"pPris"},"content":"        OrderItem toAdd \u003d model.getOrderItems().getOrderItemList().get(0);","lastModifiedDate":"2021-04-12"},{"lineNumber":93,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"pPris"},"content":"        Order validOrder \u003d new OrderBuilder().withOrderDescriptions().build();","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"pPris"},"content":"        // add order item 0 to expected order","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"pPris"},"content":"        Order finalOrderToAddToModel \u003d new OrderBuilder(validOrder).withOrderDescriptions(stringify(toAdd)).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"pPris"},"content":"        // construct expected model","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"pPris"},"content":"        Model expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(), model.getOrderItems());","lastModifiedDate":"2021-04-12"},{"lineNumber":102,"author":{"gitId":"pPris"},"content":"        expectedModel.addOrder(finalOrderToAddToModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"pPris"},"content":"        assertCommandSuccess(new AddCommand(indexList, descriptor), model,","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"pPris"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, finalOrderToAddToModel), expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"pPris"},"content":"    // \u003d\u003d\u003d TESTS RELATED TO ORDER DESC/ORDER ITEM INDEXES \u003d\u003d\u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"pPris"},"content":"    public void execute_inputExistingOrderDesc_doesNotAddToModelAgain() {","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"        String value \u003d \"cake that already exists in model\";","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"pPris"},"content":"        Order order \u003d new OrderBuilder().withOrderDescriptions(value).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(order).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"pPris"},"content":"        OrderItem existingOrderItem \u003d new OrderItemBuilder().withType(value).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"pPris"},"content":"        model.addOrderItem(existingOrderItem);","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"pPris"},"content":"        int initialSize \u003d model.getFilteredOrderItemsList().size();","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"pPris"},"content":"        Command addCommand \u003d new AddCommand(null, descriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"pPris"},"content":"        Model expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(), model.getOrderItems());","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"pPris"},"content":"        expectedModel.addOrder(order);","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"pPris"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, order);","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"pPris"},"content":"        assertCommandSuccess(addCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"pPris"},"content":"        assertTrue(model.getFilteredOrderItemsList().size() \u003d\u003d initialSize);","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"pPris"},"content":"    public void execute_inputNewOrderDescription_addedToOrderItemModel() {","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"pPris"},"content":"        String value \u003d \"cake that does not exist in model yet\";","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"pPris"},"content":"        Order order \u003d new OrderBuilder().withOrderDescriptions(value).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(order).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"pPris"},"content":"        OrderItem newOrderItemToAdd \u003d new OrderItemBuilder().withType(value).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"pPris"},"content":"        assert !model.hasOrderItem(newOrderItemToAdd)","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"pPris"},"content":"                : \"corresponding order description shouldn\u0027t be in the order item model\";","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"pPris"},"content":"        int initialSize \u003d model.getFilteredOrderItemsList().size();","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"pPris"},"content":"        Command addCommand \u003d new AddCommand(null, descriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"pPris"},"content":"        Model expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(), model.getOrderItems());","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"pPris"},"content":"        expectedModel.addOrder(order);","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"pPris"},"content":"        expectedModel.addOrderItem(newOrderItemToAdd);","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"pPris"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, order);","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"pPris"},"content":"        assertCommandSuccess(addCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"pPris"},"content":"        assertTrue(model.hasOrderItem(newOrderItemToAdd));","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"pPris"},"content":"        assertTrue(model.getFilteredOrderItemsList().size() \u003d\u003d initialSize + 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"pPris"},"content":"    public void execute_bothOrderDescAndIndexList_allAddedToOrder() {","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"pPris"},"content":"        /*","lastModifiedDate":"2021-04-12"},{"lineNumber":164,"author":{"gitId":"pPris"},"content":"         * Item 1 is added via oi/ prefix while item 2 is added to order by o/ prefix.","lastModifiedDate":"2021-04-12"},{"lineNumber":165,"author":{"gitId":"pPris"},"content":"         * Both should appear in expected order.","lastModifiedDate":"2021-04-12"},{"lineNumber":166,"author":{"gitId":"pPris"},"content":"         * Item 1 should be distinct from item 2 for this to work.","lastModifiedDate":"2021-04-12"},{"lineNumber":167,"author":{"gitId":"pPris"},"content":"         */","lastModifiedDate":"2021-04-12"},{"lineNumber":168,"author":{"gitId":"pPris"},"content":"        OrderItem item1 \u003d model.getFilteredOrderItemsList().get(0);","lastModifiedDate":"2021-04-12"},{"lineNumber":169,"author":{"gitId":"pPris"},"content":"        OrderItem item2 \u003d model.getFilteredOrderItemsList().get(1);","lastModifiedDate":"2021-04-12"},{"lineNumber":170,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"pPris"},"content":"        assert !item1.equals(item2) : \"something might be wrong, order item model seems to accept duplicates.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":172,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"pPris"},"content":"        Order temp \u003d new OrderBuilder().withOrderDescriptions(stringify(item2)).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":174,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(temp).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":175,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":176,"author":{"gitId":"pPris"},"content":"        IndexList indexList \u003d new IndexList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-04-12"},{"lineNumber":177,"author":{"gitId":"pPris"},"content":"        indexList.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":178,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":179,"author":{"gitId":"pPris"},"content":"        Order expectedOrder \u003d new OrderBuilder()","lastModifiedDate":"2021-04-12"},{"lineNumber":180,"author":{"gitId":"pPris"},"content":"                .withOrderDescriptions(stringify(item1), stringify(item2)).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":181,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":182,"author":{"gitId":"pPris"},"content":"        Model expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(), model.getOrderItems());","lastModifiedDate":"2021-04-12"},{"lineNumber":183,"author":{"gitId":"pPris"},"content":"        expectedModel.addOrder(expectedOrder);","lastModifiedDate":"2021-04-12"},{"lineNumber":184,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"        assertCommandSuccess(new AddCommand(indexList, descriptor), model,","lastModifiedDate":"2021-04-12"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, expectedOrder), expectedModel);","lastModifiedDate":"2021-04-12"},{"lineNumber":187,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TESTS ADDED FOR ACCEPTING DUPLICATE CAKES IN SAME ORDER \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-12"},{"lineNumber":191,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":192,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":193,"author":{"gitId":"pPris"},"content":"    public void execute_recogniseDuplicateCakes_addedOrderHasDuplicateCakes() throws CommandException {","lastModifiedDate":"2021-04-10"},{"lineNumber":194,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":195,"author":{"gitId":"pPris"},"content":"        // \u003d\u003d\u003d\u003d Add same order indexes \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":196,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"        Order validOrder \u003d new OrderBuilder().withOrderDescriptions().build();","lastModifiedDate":"2021-04-10"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-04-10"},{"lineNumber":200,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":201,"author":{"gitId":"pPris"},"content":"        // set up order items","lastModifiedDate":"2021-04-10"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"        IndexList indexListWithMultiple \u003d new IndexList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":203,"author":{"gitId":"pPris"},"content":"        indexListWithMultiple.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-04-10"},{"lineNumber":204,"author":{"gitId":"pPris"},"content":"        indexListWithMultiple.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-04-10"},{"lineNumber":205,"author":{"gitId":"pPris"},"content":"        model.addOrderItem(ORDER_ITEM_AMY);","lastModifiedDate":"2021-04-10"},{"lineNumber":206,"author":{"gitId":"pPris"},"content":"        model.addOrderItem(ORDER_ITEM_BOB);","lastModifiedDate":"2021-04-10"},{"lineNumber":207,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":208,"author":{"gitId":"pPris"},"content":"        Order expectedOrder \u003d new OrderBuilder()","lastModifiedDate":"2021-04-10"},{"lineNumber":209,"author":{"gitId":"pPris"},"content":"                .withOrderDescriptions(VALID_BERRY_ORDER, VALID_BERRY_ORDER).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":210,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":211,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":212,"author":{"gitId":"pPris"},"content":"        CommandResult commandResult \u003d new AddCommand(indexListWithMultiple, descriptor).execute(model);","lastModifiedDate":"2021-04-10"},{"lineNumber":213,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":214,"author":{"gitId":"pPris"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, expectedOrder), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-10"},{"lineNumber":215,"author":{"gitId":"pPris"},"content":"        assertTrue(model.hasOrder(expectedOrder));","lastModifiedDate":"2021-04-10"},{"lineNumber":216,"author":{"gitId":"pPris"},"content":"        assertTrue(model.getFilteredOrderItemsList().size() \u003d\u003d 2);","lastModifiedDate":"2021-04-10"},{"lineNumber":217,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":218,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":219,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":220,"author":{"gitId":"pPris"},"content":"        // \u003d\u003d\u003d\u003d Add same order descriptions \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":221,"author":{"gitId":"pPris"},"content":"        // ---- this test ends up checking whether the builder stores multiple too","lastModifiedDate":"2021-04-10"},{"lineNumber":222,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":223,"author":{"gitId":"pPris"},"content":"        validOrder \u003d new OrderBuilder().withOrderDescriptions(VALID_BERRY_ORDER, VALID_BERRY_ORDER).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":224,"author":{"gitId":"pPris"},"content":"        descriptor \u003d new AddOrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":225,"author":{"gitId":"pPris"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2021-04-10"},{"lineNumber":226,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":227,"author":{"gitId":"pPris"},"content":"        expectedOrder \u003d validOrder;","lastModifiedDate":"2021-04-10"},{"lineNumber":228,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":229,"author":{"gitId":"pPris"},"content":"        commandResult \u003d new AddCommand(null, descriptor).execute(model);","lastModifiedDate":"2021-04-10"},{"lineNumber":230,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":231,"author":{"gitId":"pPris"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, expectedOrder), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-10"},{"lineNumber":232,"author":{"gitId":"pPris"},"content":"        assertTrue(model.hasOrder(expectedOrder));","lastModifiedDate":"2021-04-10"},{"lineNumber":233,"author":{"gitId":"pPris"},"content":"        assertEquals(model.getFilteredOrderItemsList().size(), 1);","lastModifiedDate":"2021-04-10"},{"lineNumber":234,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":235,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":236,"author":{"gitId":"pPris"},"content":"        // \u003d\u003d\u003d\u003d Add item in order description and add corresponding order item index","lastModifiedDate":"2021-04-10"},{"lineNumber":237,"author":{"gitId":"pPris"},"content":"        validOrder \u003d new OrderBuilder().withOrderDescriptions(VALID_BERRY_ORDER).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":238,"author":{"gitId":"pPris"},"content":"        descriptor \u003d new AddOrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":239,"author":{"gitId":"pPris"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2021-04-10"},{"lineNumber":240,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":241,"author":{"gitId":"pPris"},"content":"        indexListWithMultiple \u003d new IndexList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":242,"author":{"gitId":"pPris"},"content":"        indexListWithMultiple.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-10"},{"lineNumber":243,"author":{"gitId":"pPris"},"content":"        model.addOrderItem(ORDER_ITEM_BOB);","lastModifiedDate":"2021-04-10"},{"lineNumber":244,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":245,"author":{"gitId":"pPris"},"content":"        expectedOrder \u003d validOrder;","lastModifiedDate":"2021-04-10"},{"lineNumber":246,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":247,"author":{"gitId":"pPris"},"content":"        commandResult \u003d new AddCommand(null, descriptor).execute(model);","lastModifiedDate":"2021-04-10"},{"lineNumber":248,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":249,"author":{"gitId":"pPris"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, expectedOrder), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-10"},{"lineNumber":250,"author":{"gitId":"pPris"},"content":"        assertTrue(model.hasOrder(expectedOrder));","lastModifiedDate":"2021-04-10"},{"lineNumber":251,"author":{"gitId":"pPris"},"content":"        assertEquals(model.getFilteredOrderItemsList().size(), 1);","lastModifiedDate":"2021-04-10"},{"lineNumber":252,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":253,"author":{"gitId":"pPris"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"pPris":249,"RuiXiong2211":4}},{"path":"src/test/java/seedu/cakecollate/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pPris"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_THIRD_ORDER;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.testutil.AddOrderDescriptorBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"    private final IndexList nonNullIndexList \u003d new IndexList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"        nonNullIndexList.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"        nonNullIndexList.add(INDEX_THIRD_ORDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"pPris"},"content":"    public void constructor_nullAddOrderDescriptor_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null, null));","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(nonNullIndexList, null));","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"pPris"},"content":"    public void execute_orderAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"pPris"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded();","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"pPris"},"content":"        Order validOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"pPris"},"content":"        CommandResult commandResult \u003d new AddCommand(null, descriptor).execute(modelStub);","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"pPris"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validOrder), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"pPris"},"content":"        assertEquals(Arrays.asList(validOrder), modelStub.ordersAdded);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"    public void execute_duplicateOrder_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"pPris"},"content":"        Order validOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"pPris"},"content":"        AddCommand addCommand \u003d new AddCommand(null, descriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"pPris"},"content":"        ModelStub modelStub \u003d new ModelStubWithOrder(validOrder);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"pPris"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_ORDER, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"pPris"},"content":"    public void equals() {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"        Order alice \u003d new OrderBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"pPris"},"content":"        Order bob \u003d new OrderBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptorAlice \u003d new AddOrderDescriptorBuilder(alice).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptorBob \u003d new AddOrderDescriptorBuilder(bob).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"pPris"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(null, descriptorAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"pPris"},"content":"        AddCommand addBobCommand \u003d new AddCommand(null, descriptorBob);","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"pPris"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"pPris"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"pPris"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(null, descriptorAlice);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"pPris"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"pPris"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"pPris"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"pPris"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"pPris"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"pPris"},"content":"        // same null index list, different order -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"pPris"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"pPris"},"content":"        // same order, different index list -\u003e return false","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"pPris"},"content":"        assertFalse(addAliceCommand.equals(new AddCommand(nonNullIndexList, descriptorAlice)));","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"pPris"},"content":"        // same non-null index list, different order -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"pPris"},"content":"        addAliceCommand \u003d new AddCommand(nonNullIndexList, descriptorAlice);","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"pPris"},"content":"        addBobCommand \u003d new AddCommand(nonNullIndexList, descriptorBob);","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"pPris"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"pPris"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MODEL STUBS \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"pPris"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"pPris"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"pPris"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"pPris"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"pPris"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"pPris"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"pPris"},"content":"        public Path getCakeCollateFilePath() {","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"pPris"},"content":"        public void setCakeCollateFilePath(Path cakeCollateFilePath) {","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"pPris"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"pPris"},"content":"        public void setCakeCollate(ReadOnlyCakeCollate cakeCollate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"pPris"},"content":"        public ReadOnlyCakeCollate getCakeCollate() {","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"pPris"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"pPris"},"content":"        public void deleteOrder(Order target) {","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"pPris"},"content":"        public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"pPris"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"pPris"},"content":"        public void sortFilteredOrderList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"pPris"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"RuiXiong2211"},"content":"        public void deleteOrderItem(OrderItem target) {","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"RuiXiong2211"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"pPris"},"content":"        public ObservableList\u003cOrderItem\u003e getFilteredOrderItemsList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"        public void addOrderItem(OrderItem item) {","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"pPris"},"content":"        public boolean hasOrderItem(OrderItem orderItem) {","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"pPris"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"RuiXiong2211"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"RuiXiong2211"},"content":"        public ReadOnlyOrderItems getOrderItems() {","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"RuiXiong2211"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":211,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":212,"author":{"gitId":"pavz02"},"content":"        @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":213,"author":{"gitId":"pavz02"},"content":"        public void setOrderItems(ReadOnlyOrderItems orderItems) {","lastModifiedDate":"2021-04-08"},{"lineNumber":214,"author":{"gitId":"pavz02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":215,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"pPris"},"content":"     * A Model stub that contains a single order.","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"pPris"},"content":"    private class ModelStubWithOrder extends ModelStub {","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"pPris"},"content":"        private final Order order;","lastModifiedDate":"2021-03-30"},{"lineNumber":223,"author":{"gitId":"pPris"},"content":"        private final ArrayList\u003cOrderItem\u003e orderItemsStub \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":225,"author":{"gitId":"pPris"},"content":"        ModelStubWithOrder(Order order) {","lastModifiedDate":"2021-03-30"},{"lineNumber":226,"author":{"gitId":"pPris"},"content":"            requireNonNull(order);","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"pPris"},"content":"            this.order \u003d order;","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"pPris"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"pPris"},"content":"            requireNonNull(order);","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"pPris"},"content":"            return this.order.isSameOrder(order);","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"pPris"},"content":"        // These methods are called when the order descriptions are checked for adding into the order item model","lastModifiedDate":"2021-04-10"},{"lineNumber":237,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":238,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"pPris"},"content":"        public boolean hasOrderItem(OrderItem orderItem) {","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"pPris"},"content":"            requireNonNull(orderItem);","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"pPris"},"content":"            return orderItemsStub.contains(orderItem);","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"pPris"},"content":"        public void addOrderItem(OrderItem orderItem) {","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"pPris"},"content":"            orderItemsStub.add(orderItem);","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":248,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"pPris"},"content":"     * A Model stub that always accept the order being added.","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"pPris"},"content":"    private class ModelStubAcceptingOrderAdded extends ModelStub {","lastModifiedDate":"2021-03-30"},{"lineNumber":254,"author":{"gitId":"pPris"},"content":"        final ArrayList\u003cOrder\u003e ordersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"pPris"},"content":"        final ArrayList\u003cOrderItem\u003e orderItemsStub \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"pPris"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"pPris"},"content":"            requireNonNull(order);","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"pPris"},"content":"            return ordersAdded.stream().anyMatch(order::isSameOrder);","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"pPris"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"pPris"},"content":"            requireNonNull(order);","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"pPris"},"content":"            ordersAdded.add(order);","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":270,"author":{"gitId":"pPris"},"content":"        public ReadOnlyCakeCollate getCakeCollate() {","lastModifiedDate":"2021-03-30"},{"lineNumber":271,"author":{"gitId":"pPris"},"content":"            return new CakeCollate();","lastModifiedDate":"2021-03-30"},{"lineNumber":272,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":273,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"pPris"},"content":"        // \u003d\u003d\u003d\u003d\u003d\u003d\u003d NEEDED TO ADD NEW ORDER DESCRIPTIONS INTO ORDER ITEM MODEL","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"pPris"},"content":"        public boolean hasOrderItem(OrderItem item) {","lastModifiedDate":"2021-03-30"},{"lineNumber":278,"author":{"gitId":"pPris"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-03-30"},{"lineNumber":279,"author":{"gitId":"simran-bhadani3"},"content":"            return orderItemsStub.stream().anyMatch(item::equals);","lastModifiedDate":"2021-04-04"},{"lineNumber":280,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"pPris"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":283,"author":{"gitId":"pPris"},"content":"        public void addOrderItem(OrderItem item) {","lastModifiedDate":"2021-03-30"},{"lineNumber":284,"author":{"gitId":"pPris"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-04-10"},{"lineNumber":285,"author":{"gitId":"pPris"},"content":"            orderItemsStub.add(item);","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"pPris"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"pPris":272,"RuiXiong2211":10,"pavz02":5,"simran-bhadani3":1}},{"path":"src/test/java/seedu/cakecollate/logic/commands/AddOrderItemCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.testutil.OrderItemBuilder;","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"public class AddOrderItemCommandTest {","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"    public void constructor_nullOrderItem_throwsNullPointerException() {","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddOrderItemCommand(null));","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"    public void execute_orderItemAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"        ModelStubAcceptingOrderItemAdded modelStub \u003d new ModelStubAcceptingOrderItemAdded();","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem validOrderItem \u003d new OrderItemBuilder().build();","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        CommandResult commandResult \u003d new AddOrderItemCommand(validOrderItem).execute(modelStub);","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(String.format(AddOrderItemCommand.MESSAGE_SUCCESS, validOrderItem),","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"    public void execute_duplicateOrderItem_throwsCommandException() {","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem validOrderItem \u003d new OrderItemBuilder().build();","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"        AddOrderItemCommand addOrderItemCommand \u003d new AddOrderItemCommand(validOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        ModelStub modelStub \u003d new ModelStubWithOrderItem(validOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(CommandException.class, AddOrderItemCommand.MESSAGE_DUPLICATE_ORDER_ITEM, ()","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e addOrderItemCommand.execute(modelStub));","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"    public void equals() {","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem chocolate \u003d new OrderItemBuilder().withType(\"Chocolate\").build();","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem vanilla \u003d new OrderItemBuilder().withType(\"Vanilla\").build();","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"        AddOrderItemCommand addChocolateCommand \u003d new AddOrderItemCommand(chocolate);","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"        AddOrderItemCommand addVanillaCommand \u003d new AddOrderItemCommand(vanilla);","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(addChocolateCommand.equals(addChocolateCommand));","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"        AddOrderItemCommand addChocolateCommandCopy \u003d new AddOrderItemCommand(chocolate);","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(addChocolateCommand.equals(addChocolateCommandCopy));","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(addChocolateCommand.equals(1));","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(addChocolateCommand.equals(null));","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"        // different order item -\u003e returns false","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(addChocolateCommand.equals(addVanillaCommand));","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MODEL STUBS \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"     * A default model stub that has all of the methods failing.","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-04-12"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-04-12"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-04-12"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-04-12"},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":"        public Path getCakeCollateFilePath() {","lastModifiedDate":"2021-04-12"},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"        public void setCakeCollateFilePath(Path cakeCollateFilePath) {","lastModifiedDate":"2021-04-12"},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2021-04-12"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":"        public void setCakeCollate(ReadOnlyCakeCollate cakeCollate) {","lastModifiedDate":"2021-04-12"},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":124,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":125,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"        public ReadOnlyCakeCollate getCakeCollate() {","lastModifiedDate":"2021-04-12"},{"lineNumber":128,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":129,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":130,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":132,"author":{"gitId":"simran-bhadani3"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2021-04-12"},{"lineNumber":133,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":134,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":135,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":136,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":137,"author":{"gitId":"simran-bhadani3"},"content":"        public void deleteOrder(Order target) {","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":139,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":140,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":141,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":142,"author":{"gitId":"simran-bhadani3"},"content":"        public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-04-12"},{"lineNumber":143,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":144,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":145,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":146,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":147,"author":{"gitId":"simran-bhadani3"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-04-12"},{"lineNumber":148,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":149,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":150,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":151,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":152,"author":{"gitId":"simran-bhadani3"},"content":"        public void sortFilteredOrderList() {","lastModifiedDate":"2021-04-12"},{"lineNumber":153,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":154,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":155,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":156,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":157,"author":{"gitId":"simran-bhadani3"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2021-04-12"},{"lineNumber":158,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":159,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":160,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":161,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":162,"author":{"gitId":"simran-bhadani3"},"content":"        public void deleteOrderItem(OrderItem target) {","lastModifiedDate":"2021-04-12"},{"lineNumber":163,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":164,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":165,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":166,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":167,"author":{"gitId":"simran-bhadani3"},"content":"        public ObservableList\u003cOrderItem\u003e getFilteredOrderItemsList() {","lastModifiedDate":"2021-04-12"},{"lineNumber":168,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":169,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":170,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":171,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":172,"author":{"gitId":"simran-bhadani3"},"content":"        public void addOrderItem(OrderItem item) {","lastModifiedDate":"2021-04-12"},{"lineNumber":173,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":174,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":175,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":176,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":177,"author":{"gitId":"simran-bhadani3"},"content":"        public boolean hasOrderItem(OrderItem orderItem) {","lastModifiedDate":"2021-04-12"},{"lineNumber":178,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":179,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":180,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":181,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":182,"author":{"gitId":"simran-bhadani3"},"content":"        public ReadOnlyOrderItems getOrderItems() {","lastModifiedDate":"2021-04-12"},{"lineNumber":183,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":184,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":185,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":186,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":187,"author":{"gitId":"simran-bhadani3"},"content":"        public void setOrderItems(ReadOnlyOrderItems orderItems) {","lastModifiedDate":"2021-04-12"},{"lineNumber":188,"author":{"gitId":"simran-bhadani3"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":189,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":190,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":191,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":192,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":193,"author":{"gitId":"simran-bhadani3"},"content":"     * A Model stub that contains a single order item.","lastModifiedDate":"2021-04-12"},{"lineNumber":194,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":195,"author":{"gitId":"simran-bhadani3"},"content":"    private class ModelStubWithOrderItem extends AddOrderItemCommandTest.ModelStub {","lastModifiedDate":"2021-04-12"},{"lineNumber":196,"author":{"gitId":"simran-bhadani3"},"content":"        private final OrderItem orderItem;","lastModifiedDate":"2021-04-12"},{"lineNumber":197,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":198,"author":{"gitId":"simran-bhadani3"},"content":"        ModelStubWithOrderItem(OrderItem orderItem) {","lastModifiedDate":"2021-04-12"},{"lineNumber":199,"author":{"gitId":"simran-bhadani3"},"content":"            requireNonNull(orderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":200,"author":{"gitId":"simran-bhadani3"},"content":"            this.orderItem \u003d orderItem;","lastModifiedDate":"2021-04-12"},{"lineNumber":201,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":202,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":203,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":204,"author":{"gitId":"simran-bhadani3"},"content":"        public boolean hasOrderItem(OrderItem orderItem) {","lastModifiedDate":"2021-04-12"},{"lineNumber":205,"author":{"gitId":"simran-bhadani3"},"content":"            requireNonNull(orderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":206,"author":{"gitId":"simran-bhadani3"},"content":"            return this.orderItem.equals(orderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":207,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":208,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":209,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":210,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":211,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":212,"author":{"gitId":"simran-bhadani3"},"content":"     * A Model stub that always accepts the order item being added.","lastModifiedDate":"2021-04-12"},{"lineNumber":213,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":214,"author":{"gitId":"simran-bhadani3"},"content":"    private class ModelStubAcceptingOrderItemAdded extends AddOrderItemCommandTest.ModelStub {","lastModifiedDate":"2021-04-12"},{"lineNumber":215,"author":{"gitId":"simran-bhadani3"},"content":"        final ArrayList\u003cOrderItem\u003e orderItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":216,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":217,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":218,"author":{"gitId":"simran-bhadani3"},"content":"        public ReadOnlyOrderItems getOrderItems() {","lastModifiedDate":"2021-04-12"},{"lineNumber":219,"author":{"gitId":"simran-bhadani3"},"content":"            return new OrderItems();","lastModifiedDate":"2021-04-12"},{"lineNumber":220,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":221,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":222,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":223,"author":{"gitId":"simran-bhadani3"},"content":"        public boolean hasOrderItem(OrderItem item) {","lastModifiedDate":"2021-04-12"},{"lineNumber":224,"author":{"gitId":"simran-bhadani3"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-04-12"},{"lineNumber":225,"author":{"gitId":"simran-bhadani3"},"content":"            return orderItems.stream().anyMatch(item::equals);","lastModifiedDate":"2021-04-12"},{"lineNumber":226,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":227,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":228,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-12"},{"lineNumber":229,"author":{"gitId":"simran-bhadani3"},"content":"        public void addOrderItem(OrderItem item) {","lastModifiedDate":"2021-04-12"},{"lineNumber":230,"author":{"gitId":"simran-bhadani3"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-04-12"},{"lineNumber":231,"author":{"gitId":"simran-bhadani3"},"content":"            orderItems.add(item);","lastModifiedDate":"2021-04-12"},{"lineNumber":232,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":233,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":234,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":235,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"simran-bhadani3":235}},{"path":"src/test/java/seedu/cakecollate/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    public void execute_emptyCakeCollate_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    public void execute_nonEmptyCakeCollate_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        Model model \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"        expectedModel.setCakeCollate(new CakeCollate());","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"        expectedModel.setOrderItems(new OrderItems());","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"pavz02":2,"RuiXiong2211":5,"xiinweii98":10,"-":20}},{"path":"src/test/java/seedu/cakecollate/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"xiinweii98":1,"-":53}},{"path":"src/test/java/seedu/cakecollate/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_ITEM_IDX;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_THIRD_ORDER;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.Prefix;","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ContainsKeywordsPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    //the following variables are for an OrderItem","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String VALID_TYPE_CHOCOLATE \u003d \"Chocolate cake\";","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String VALID_TYPE_STRAWBERRY \u003d \"Strawberry cake\";","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"    //the following variables are for an Order","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"    public static final String VALID_CHOCOLATE_ORDER \u003d \"Amys Chocolate Cakes\";","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"pPris"},"content":"    public static final String VALID_BERRY_ORDER \u003d \"Bobs Berry Cakes\";","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"    public static final String VALID_DELIVERY_DATE_AMY \u003d \"01/01/2022\";","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"    public static final String VALID_DELIVERY_DATE_BOB \u003d \"02/01/2022\";","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String VALID_REQUEST_AMY \u003d \"More tomatoes.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String VALID_REQUEST_BOB \u003d \"Less sugar\";","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"    // these set of fields prefix the variables above with the right prefixes","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"    public static final String ORDER_DESC_AMY \u003d \" \" + PREFIX_ORDER_DESCRIPTION + VALID_CHOCOLATE_ORDER;","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"pPris"},"content":"    public static final String ORDER_DESC_BOB \u003d \" \" + PREFIX_ORDER_DESCRIPTION + VALID_BERRY_ORDER;","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"    public static final String DELIVERY_DATE_DESC_AMY \u003d \" \" + PREFIX_DATE + VALID_DELIVERY_DATE_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"    public static final String DELIVERY_DATE_DESC_BOB \u003d \" \" + PREFIX_DATE + VALID_DELIVERY_DATE_BOB;","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"pPris"},"content":"    // corresponding order item to add into order items model, needed for building expected models during testing","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"pPris"},"content":"    public static final OrderItem ORDER_ITEM_AMY \u003d new OrderItem(new Type(VALID_CHOCOLATE_ORDER));","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"    public static final OrderItem ORDER_ITEM_BOB \u003d new OrderItem(new Type(VALID_BERRY_ORDER));","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"pPris"},"content":"    public static final String INDEXES_2 \u003d \"1 3\";","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"pPris"},"content":"    public static final String ORDER_ITEM_INDEXES_1 \u003d \" \" + PREFIX_ORDER_ITEM_IDX + \"1 2 4\";","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"pPris"},"content":"    public static final String ORDER_ITEM_INDEXES_2 \u003d \" \" + PREFIX_ORDER_ITEM_IDX + INDEXES_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"pPris"},"content":"    // these are some user input fields with prefixes, invalid according to validation specified in model classes","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"pPris"},"content":"    public static final String INVALID_ORDER_DESC \u003d \" \" + PREFIX_ORDER_DESCRIPTION; // empty string not allowed","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"    public static final String INVALID_DELIVERY_DATE_DESC1 \u003d \" \" + PREFIX_DATE + \"2021/03/03\"; // invalid format","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"    public static final String INVALID_DELIVERY_DATE_DESC2 \u003d \" \" + PREFIX_DATE + \"01/01/2000\"; // invalid value","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"    public static final EditCommand.EditOrderDescriptor DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"    public static final EditCommand.EditOrderDescriptor DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"pPris"},"content":"    public static final IndexList ORDER_ITEM_INDEXLIST_2;","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"        DESC_AMY \u003d new EditOrderDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"pPris"},"content":"                .withOrderDescriptions(VALID_CHOCOLATE_ORDER).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"pPris"},"content":"                .withDeliveryDate(VALID_DELIVERY_DATE_AMY).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":"        DESC_BOB \u003d new EditOrderDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"pPris"},"content":"                .withOrderDescriptions(VALID_BERRY_ORDER).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"pPris"},"content":"                .withDeliveryDate(VALID_DELIVERY_DATE_BOB).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":115,"author":{"gitId":"pPris"},"content":"        List\u003cIndex\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-11"},{"lineNumber":116,"author":{"gitId":"pPris"},"content":"        l.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"pPris"},"content":"        l.add(INDEX_THIRD_ORDER);","lastModifiedDate":"2021-04-11"},{"lineNumber":118,"author":{"gitId":"pPris"},"content":"        ORDER_ITEM_INDEXLIST_2 \u003d new IndexList(l);","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"xiinweii98"},"content":"     * - the cakecollate, filtered order list and selected order in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate expectedCakeCollate \u003d new CakeCollate(actualModel.getCakeCollate());","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"xiinweii98"},"content":"        List\u003cOrder\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredOrderList());","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"pPris"},"content":"        OrderItems expectedOrderItems \u003d new OrderItems(actualModel.getOrderItems());","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"pPris"},"content":"        List\u003cOrderItem\u003e expectedOrderItemsList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredOrderItemsList());","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":163,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(expectedCakeCollate, actualModel.getCakeCollate());","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredOrderList());","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"pPris"},"content":"        assertEquals(expectedOrderItems, actualModel.getOrderItems());","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"pPris"},"content":"        assertEquals(expectedOrderItemsList, actualModel.getFilteredOrderItemsList());","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"xiinweii98"},"content":"     * Updates {@code model}\u0027s filtered list to show only the order at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"xiinweii98"},"content":"     * {@code model}\u0027s cakecollate.","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"xiinweii98"},"content":"    public static void showOrderAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredOrderList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":176,"author":{"gitId":"xiinweii98"},"content":"        Order order \u003d model.getFilteredOrderList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"xiinweii98"},"content":"        final String[] splitName \u003d order.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e mapping \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"xiinweii98"},"content":"        mapping.put(PREFIX_NAME, Arrays.asList(splitName[0]));","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"xiinweii98"},"content":"        model.updateFilteredOrderList(new ContainsKeywordsPredicate(mapping));","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":182,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(1, model.getFilteredOrderList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"pPris":38,"RuiXiong2211":2,"xiinweii98":43,"-":96,"simran-bhadani3":7}},{"path":"src/test/java/seedu/cakecollate/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_THIRD_ORDER;","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"    private Model model \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"            TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"        Order orderToDeleteOne \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        Order orderToDeleteTwo \u003d model.getFilteredOrderList().get(INDEX_THIRD_ORDER.getZeroBased());","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e arrayOrderItems \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        arrayOrderItems.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        arrayOrderItems.add(INDEX_THIRD_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexList \u003d new IndexList(arrayOrderItems);","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"        indexList.sortList();","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexList);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        String convertedToString \u003d \"\";","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        convertedToString \u003d convertedToString + String.format(\"\\n%1$s\", orderToDeleteTwo);","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        convertedToString \u003d convertedToString + String.format(\"\\n%1$s\", orderToDeleteOne);","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ORDERS_SUCCESS, convertedToString);","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"        expectedModel.deleteOrder(orderToDeleteTwo);","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"        expectedModel.deleteOrder(orderToDeleteOne);","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e array \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"        array.add(outOfBoundIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList outOfBoundIndexList \u003d new IndexList(array);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndexList);","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"        Order orderToDelete \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        arrayFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"        IndexList indexList \u003d new IndexList(arrayFirstOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexList);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-04-12"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"        showNoOrder(expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"        // ensures that outOfBoundIndex is still in bounds of CakeCollate list","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCakeCollate().getOrderList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e array \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"        array.add(outOfBoundIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList outOfBoundIndexList \u003d new IndexList(array);","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndexList);","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":"        arrayFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"        IndexList indexListFirstOrder \u003d new IndexList(arrayFirstOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"        ArrayList\u003cIndex\u003e arraySecondOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"        arraySecondOrder.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"        IndexList indexListSecondOrder \u003d new IndexList(arraySecondOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e arrayFirstAndSecondOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"        arrayFirstAndSecondOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"        arrayFirstAndSecondOrder.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexListFirstAndSecondOrder \u003d new IndexList(arrayFirstAndSecondOrder);","lastModifiedDate":"2021-04-12"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"        indexListFirstAndSecondOrder.sortList();","lastModifiedDate":"2021-04-12"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e arraySecondAndFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":"        arraySecondAndFirstOrder.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":124,"author":{"gitId":"simran-bhadani3"},"content":"        arraySecondAndFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":125,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexListSecondAndFirstOrder \u003d new IndexList(arraySecondAndFirstOrder);","lastModifiedDate":"2021-04-12"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"        indexListSecondAndFirstOrder.sortList();","lastModifiedDate":"2021-04-12"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":128,"author":{"gitId":"xiinweii98"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(indexListFirstOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(indexListSecondOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteCommand deleteFirstAndSecondOrder \u003d new DeleteCommand(indexListFirstAndSecondOrder);","lastModifiedDate":"2021-04-12"},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteCommand deleteSecondAndFirstOrder \u003d new DeleteCommand(indexListSecondAndFirstOrder);","lastModifiedDate":"2021-04-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e array \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"xiinweii98"},"content":"        array.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexList \u003d new IndexList(array);","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(indexList);","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(deleteFirstAndSecondOrder.equals(deleteSecondAndFirstOrder));","lastModifiedDate":"2021-04-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"xiinweii98"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"xiinweii98"},"content":"    private void showNoOrder(Model model) {","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"xiinweii98"},"content":"        model.updateFilteredOrderList(p -\u003e false);","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(model.getFilteredOrderList().isEmpty());","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"RuiXiong2211":2,"xiinweii98":41,"-":63,"simran-bhadani3":56}},{"path":"src/test/java/seedu/cakecollate/logic/commands/DeleteOrderItemCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_THIRD_ORDER;","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"public class DeleteOrderItemCommandTest {","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    private Model model \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"            TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem orderItemToDeleteOne \u003d model.getFilteredOrderItemsList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem orderItemToDeleteTwo \u003d model.getFilteredOrderItemsList().get(INDEX_THIRD_ORDER.getZeroBased());","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e arrayOrderItems \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        arrayOrderItems.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        arrayOrderItems.add(INDEX_THIRD_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexList \u003d new IndexList(arrayOrderItems);","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        indexList.sortList();","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteOrderItemCommand deleteOrderItemCommand \u003d new DeleteOrderItemCommand(indexList);","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        String convertedToString \u003d \"\";","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        convertedToString \u003d convertedToString + String.format(\"\\n%1$s\", orderItemToDeleteTwo);","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        convertedToString \u003d convertedToString + String.format(\"\\n%1$s\", orderItemToDeleteOne);","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"        String expectedMessage \u003d String.format(DeleteOrderItemCommand.MESSAGE_DELETE_ORDER_ITEMS_SUCCESS,","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"                convertedToString);","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"        expectedModel.deleteOrderItem(orderItemToDeleteTwo);","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"        expectedModel.deleteOrderItem(orderItemToDeleteOne);","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"        assertCommandSuccess(deleteOrderItemCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderItemsList().size() + 1);","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e array \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"        array.add(outOfBoundIndex);","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList outOfBoundIndexList \u003d new IndexList(array);","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteOrderItemCommand deleteOrderItemCommand \u003d new DeleteOrderItemCommand(outOfBoundIndexList);","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"        assertCommandFailure(deleteOrderItemCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"    public void equals() {","lastModifiedDate":"2021-04-12"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrderItem \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"        arrayFirstOrderItem.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexListFirstOrderItem \u003d new IndexList(arrayFirstOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e arraySecondOrderItem \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"        arraySecondOrderItem.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexListSecondOrderItem \u003d new IndexList(arraySecondOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e arrayFirstAndSecondOrderItem \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"        arrayFirstAndSecondOrderItem.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"        arrayFirstAndSecondOrderItem.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexListFirstAndSecondOrderItem \u003d new IndexList(arrayFirstAndSecondOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"        indexListFirstAndSecondOrderItem.sortList();","lastModifiedDate":"2021-04-12"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e arraySecondAndFirstOrderItem \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"        arraySecondAndFirstOrderItem.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"        arraySecondAndFirstOrderItem.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexListSecondAndFirstOrderItem \u003d new IndexList(arraySecondAndFirstOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"        indexListSecondAndFirstOrderItem.sortList();","lastModifiedDate":"2021-04-12"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteOrderItemCommand deleteFirstCommand \u003d new DeleteOrderItemCommand(indexListFirstOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteOrderItemCommand deleteSecondCommand \u003d new DeleteOrderItemCommand(indexListSecondOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteOrderItemCommand deleteFirstAndSecondOrder \u003d","lastModifiedDate":"2021-04-12"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"                new DeleteOrderItemCommand(indexListFirstAndSecondOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteOrderItemCommand deleteSecondAndFirstOrder \u003d","lastModifiedDate":"2021-04-12"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"                new DeleteOrderItemCommand(indexListSecondAndFirstOrderItem);","lastModifiedDate":"2021-04-12"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-12"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-04-12"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-12"},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e array \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"        array.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexList \u003d new IndexList(array);","lastModifiedDate":"2021-04-12"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"        DeleteOrderItemCommand deleteFirstCommandCopy \u003d new DeleteOrderItemCommand(indexList);","lastModifiedDate":"2021-04-12"},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-04-12"},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(deleteFirstAndSecondOrder.equals(deleteSecondAndFirstOrder));","lastModifiedDate":"2021-04-12"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-12"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-04-12"},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-12"},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-04-12"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"        // different order item -\u003e returns false","lastModifiedDate":"2021-04-12"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-04-12"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"simran-bhadani3":120}},{"path":"src/test/java/seedu/cakecollate/logic/commands/DeliveryStatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ALICE;","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.BOB;","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"import java.util.List;","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Status;","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"class DeliveryStatusCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    private Model model \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"            TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"    public void execute_validIndexUnfilteredListWithSameStatus_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"pavz02"},"content":"        Order orderToUpdate \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"pavz02"},"content":"        arrayFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"        IndexList indexList \u003d new IndexList(arrayFirstOrder);","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"        DeliveryStatusCommand deliveryStatusCommand \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"pavz02"},"content":"                new DeliveryStatusCommand(indexList, orderToUpdate.getDeliveryStatus());","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"        String expectedMessage \u003d String.format(DeliveryStatusCommand.MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_SAME,","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"pavz02"},"content":"                String.format(\"\\n%1$s\", orderToUpdate));","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(), model.getOrderItems());","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"pavz02"},"content":"        expectedModel.setOrder(expectedModel.getFilteredOrderList().get(0), orderToUpdate);","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"pavz02"},"content":"        assertCommandSuccess(deliveryStatusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"pavz02"},"content":"    public void execute_validIndexUnfilteredListWithDifferentStatus_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"pavz02"},"content":"        Order orderToUpdate \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"pavz02"},"content":"        Status status;","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"pavz02"},"content":"        if (orderToUpdate.getDeliveryStatus().equals(new DeliveryStatus())) {","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"pavz02"},"content":"            status \u003d Status.CANCELLED;","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"pavz02"},"content":"        } else {","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"pavz02"},"content":"            status \u003d Status.UNDELIVERED;","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"pavz02"},"content":"        Order updatedOrder \u003d new OrderBuilder(orderToUpdate).withDeliveryStatus(status).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"pavz02"},"content":"        String expectedMessage \u003d String.format(DeliveryStatusCommand.MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_UPDATED,","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"                String.format(\"\\n%1$s\", updatedOrder));","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"pavz02"},"content":"        arrayFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"pavz02"},"content":"        IndexList indexList \u003d new IndexList(arrayFirstOrder);","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"pavz02"},"content":"        DeliveryStatusCommand deliveryStatusCommand \u003d new DeliveryStatusCommand(indexList, new DeliveryStatus(status));","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(), model.getOrderItems());","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"pavz02"},"content":"        expectedModel.setOrder(expectedModel.getFilteredOrderList().get(0), updatedOrder);","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        assertCommandSuccess(deliveryStatusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"pavz02"},"content":"    public void execute_validIndexesUnfilteredListWithSameStatus_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"        Order orderToUpdateOne \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"pavz02"},"content":"        Order orderToUpdateTwo \u003d model.getFilteredOrderList().get(INDEX_SECOND_ORDER.getZeroBased());","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"pavz02"},"content":"        if (!orderToUpdateOne.getDeliveryStatus().equals(orderToUpdateTwo.getDeliveryStatus())) {","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"pavz02"},"content":"            orderToUpdateTwo \u003d new OrderBuilder(orderToUpdateTwo)","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"pavz02"},"content":"                    .withDeliveryStatus(orderToUpdateOne.getDeliveryStatus().getDeliveryStatus())","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"pavz02"},"content":"                    .build();","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e indexArrayList \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"pavz02"},"content":"        indexArrayList.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"pavz02"},"content":"        indexArrayList.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"pavz02"},"content":"        IndexList indexList \u003d new IndexList(indexArrayList);","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"pavz02"},"content":"        DeliveryStatusCommand deliveryStatusCommand \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"pavz02"},"content":"                new DeliveryStatusCommand(indexList, orderToUpdateOne.getDeliveryStatus());","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"pavz02"},"content":"        String result \u003d String.format(\"\\n%1$s\", orderToUpdateOne) + String.format(\"\\n%1$s\", orderToUpdateTwo);","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"pavz02"},"content":"        String expectedMessage \u003d String.format(DeliveryStatusCommand.MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_SAME,","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"pavz02"},"content":"                result);","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"pavz02"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(), model.getOrderItems());","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"pavz02"},"content":"        expectedModel.setOrder(expectedModel.getFilteredOrderList().get(0), orderToUpdateOne);","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"pavz02"},"content":"        expectedModel.setOrder(expectedModel.getFilteredOrderList().get(1), orderToUpdateTwo);","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":110,"author":{"gitId":"pavz02"},"content":"        assertCommandSuccess(deliveryStatusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":111,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":112,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":113,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":114,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":115,"author":{"gitId":"pavz02"},"content":"    public void execute_validIndexesUnfilteredListWithDifferentStatus_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":116,"author":{"gitId":"pPris"},"content":"        Order order1 \u003d new OrderBuilder(ALICE).withDeliveryStatus(Status.UNDELIVERED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":117,"author":{"gitId":"pPris"},"content":"        Order order2 \u003d new OrderBuilder(BOB).withDeliveryStatus(Status.DELIVERED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":118,"author":{"gitId":"pPris"},"content":"        Order updatedOrder2 \u003d new OrderBuilder(BOB).withDeliveryStatus(Status.UNDELIVERED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":119,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":120,"author":{"gitId":"pPris"},"content":"        List\u003cOrder\u003e list \u003d new ArrayList\u003cOrder\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":121,"author":{"gitId":"pPris"},"content":"        list.add(order1);","lastModifiedDate":"2021-04-12"},{"lineNumber":122,"author":{"gitId":"pPris"},"content":"        list.add(order2);","lastModifiedDate":"2021-04-12"},{"lineNumber":123,"author":{"gitId":"pPris"},"content":"        CakeCollate c \u003d new CakeCollate();","lastModifiedDate":"2021-04-12"},{"lineNumber":124,"author":{"gitId":"pPris"},"content":"        c.setOrders(list);","lastModifiedDate":"2021-04-12"},{"lineNumber":125,"author":{"gitId":"pPris"},"content":"        Model modelWithTwoOrders \u003d new ModelManager(c, new UserPrefs(), TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-04-12"},{"lineNumber":126,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":127,"author":{"gitId":"pPris"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-04-12"},{"lineNumber":128,"author":{"gitId":"pPris"},"content":"                modelWithTwoOrders.getCakeCollate(),","lastModifiedDate":"2021-04-12"},{"lineNumber":129,"author":{"gitId":"pPris"},"content":"                new UserPrefs(),","lastModifiedDate":"2021-04-12"},{"lineNumber":130,"author":{"gitId":"pPris"},"content":"                modelWithTwoOrders.getOrderItems());","lastModifiedDate":"2021-04-12"},{"lineNumber":131,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":132,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":133,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e indexArrayList \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-11"},{"lineNumber":134,"author":{"gitId":"pavz02"},"content":"        indexArrayList.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-11"},{"lineNumber":135,"author":{"gitId":"pavz02"},"content":"        indexArrayList.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-04-11"},{"lineNumber":136,"author":{"gitId":"pavz02"},"content":"        IndexList indexList \u003d new IndexList(indexArrayList);","lastModifiedDate":"2021-04-11"},{"lineNumber":137,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":138,"author":{"gitId":"pavz02"},"content":"        DeliveryStatusCommand deliveryStatusCommand \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":139,"author":{"gitId":"pPris"},"content":"                new DeliveryStatusCommand(indexList, order1.getDeliveryStatus());","lastModifiedDate":"2021-04-12"},{"lineNumber":140,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":141,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":142,"author":{"gitId":"pavz02"},"content":"        String expectedMessage \u003d String.format(DeliveryStatusCommand.MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_UPDATED,","lastModifiedDate":"2021-04-11"},{"lineNumber":143,"author":{"gitId":"pPris"},"content":"                String.format(\"\\n%1$s\", updatedOrder2));","lastModifiedDate":"2021-04-12"},{"lineNumber":144,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":145,"author":{"gitId":"pavz02"},"content":"        expectedMessage +\u003d \"\\n\\n\" + String.format(DeliveryStatusCommand.MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_SAME,","lastModifiedDate":"2021-04-11"},{"lineNumber":146,"author":{"gitId":"pPris"},"content":"                String.format(\"\\n%1$s\", order1));","lastModifiedDate":"2021-04-12"},{"lineNumber":147,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":148,"author":{"gitId":"pPris"},"content":"        expectedModel.setOrder(order1, order1);","lastModifiedDate":"2021-04-12"},{"lineNumber":149,"author":{"gitId":"pPris"},"content":"        expectedModel.setOrder(order2, updatedOrder2);","lastModifiedDate":"2021-04-12"},{"lineNumber":150,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":151,"author":{"gitId":"pPris"},"content":"        assertCommandSuccess(deliveryStatusCommand, modelWithTwoOrders, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-12"},{"lineNumber":152,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":153,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":154,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":156,"author":{"gitId":"pavz02"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"pavz02"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e array \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":159,"author":{"gitId":"pavz02"},"content":"        array.add(outOfBoundIndex);","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"pavz02"},"content":"        IndexList outOfBoundIndexList \u003d new IndexList(array);","lastModifiedDate":"2021-03-22"},{"lineNumber":161,"author":{"gitId":"pavz02"},"content":"        DeliveryStatusCommand deliveryStatusCommand \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"pavz02"},"content":"                new DeliveryStatusCommand(outOfBoundIndexList, new DeliveryStatus());","lastModifiedDate":"2021-03-22"},{"lineNumber":163,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"pavz02"},"content":"        assertCommandFailure(deliveryStatusCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":168,"author":{"gitId":"pavz02"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"pavz02"},"content":"        Order orderToUpdate \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":171,"author":{"gitId":"pavz02"},"content":"        arrayFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"pavz02"},"content":"        IndexList indexList \u003d new IndexList(arrayFirstOrder);","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"pavz02"},"content":"        DeliveryStatusCommand deliveryStatusCommand \u003d new DeliveryStatusCommand(indexList, new DeliveryStatus());","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"pavz02"},"content":"        String expectedMessage;","lastModifiedDate":"2021-04-07"},{"lineNumber":176,"author":{"gitId":"pavz02"},"content":"        if (orderToUpdate.getDeliveryStatus().equals(new DeliveryStatus())) {","lastModifiedDate":"2021-04-07"},{"lineNumber":177,"author":{"gitId":"pavz02"},"content":"            expectedMessage \u003d String.format(DeliveryStatusCommand.MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_SAME,","lastModifiedDate":"2021-04-07"},{"lineNumber":178,"author":{"gitId":"pavz02"},"content":"                    String.format(\"\\n%1$s\", orderToUpdate));","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"pavz02"},"content":"        } else {","lastModifiedDate":"2021-04-07"},{"lineNumber":180,"author":{"gitId":"pavz02"},"content":"            expectedMessage \u003d String.format(DeliveryStatusCommand.MESSAGE_DELIVERY_STATUS_ORDER_SUCCESS_UPDATED,","lastModifiedDate":"2021-04-07"},{"lineNumber":181,"author":{"gitId":"pavz02"},"content":"                    String.format(\"\\n%1$s\", orderToUpdate));","lastModifiedDate":"2021-04-07"},{"lineNumber":182,"author":{"gitId":"pavz02"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":183,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":184,"author":{"gitId":"RuiXiong2211"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(), model.getOrderItems());","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"pavz02"},"content":"        expectedModel.setOrder(expectedModel.getFilteredOrderList().get(0), orderToUpdate);","lastModifiedDate":"2021-03-22"},{"lineNumber":186,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":187,"author":{"gitId":"pavz02"},"content":"        assertCommandSuccess(deliveryStatusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-22"},{"lineNumber":188,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":189,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":190,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":191,"author":{"gitId":"pavz02"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":192,"author":{"gitId":"pavz02"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-22"},{"lineNumber":193,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":194,"author":{"gitId":"pavz02"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-22"},{"lineNumber":195,"author":{"gitId":"pavz02"},"content":"        // ensures that outOfBoundIndex is still in bounds of CakeCollate list","lastModifiedDate":"2021-03-22"},{"lineNumber":196,"author":{"gitId":"pavz02"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCakeCollate().getOrderList().size());","lastModifiedDate":"2021-03-22"},{"lineNumber":197,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e array \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":198,"author":{"gitId":"pavz02"},"content":"        array.add(outOfBoundIndex);","lastModifiedDate":"2021-03-22"},{"lineNumber":199,"author":{"gitId":"pavz02"},"content":"        IndexList outOfBoundIndexList \u003d new IndexList(array);","lastModifiedDate":"2021-03-22"},{"lineNumber":200,"author":{"gitId":"pavz02"},"content":"        DeliveryStatusCommand deliveryStatusCommand \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":201,"author":{"gitId":"pavz02"},"content":"                new DeliveryStatusCommand(outOfBoundIndexList, new DeliveryStatus());","lastModifiedDate":"2021-03-22"},{"lineNumber":202,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":203,"author":{"gitId":"pavz02"},"content":"        assertCommandFailure(deliveryStatusCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":204,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":205,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":206,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":207,"author":{"gitId":"pavz02"},"content":"    public void equals() {","lastModifiedDate":"2021-03-22"},{"lineNumber":208,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":209,"author":{"gitId":"pavz02"},"content":"        arrayFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-22"},{"lineNumber":210,"author":{"gitId":"pavz02"},"content":"        IndexList indexListFirstOrder \u003d new IndexList(arrayFirstOrder);","lastModifiedDate":"2021-03-22"},{"lineNumber":211,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":212,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e arraySecondOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":213,"author":{"gitId":"pavz02"},"content":"        arraySecondOrder.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-03-22"},{"lineNumber":214,"author":{"gitId":"pavz02"},"content":"        IndexList indexListSecondOrder \u003d new IndexList(arraySecondOrder);","lastModifiedDate":"2021-03-22"},{"lineNumber":215,"author":{"gitId":"pavz02"},"content":"        DeliveryStatusCommand deliveryStatusFirstCommand \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":216,"author":{"gitId":"pavz02"},"content":"                new DeliveryStatusCommand(indexListFirstOrder, new DeliveryStatus());","lastModifiedDate":"2021-03-22"},{"lineNumber":217,"author":{"gitId":"pavz02"},"content":"        DeliveryStatusCommand deliveryStatusSecondCommand \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":218,"author":{"gitId":"pavz02"},"content":"                new DeliveryStatusCommand(indexListSecondOrder, new DeliveryStatus());","lastModifiedDate":"2021-03-22"},{"lineNumber":219,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":220,"author":{"gitId":"pavz02"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":221,"author":{"gitId":"pavz02"},"content":"        assertTrue(deliveryStatusFirstCommand.equals(deliveryStatusFirstCommand));","lastModifiedDate":"2021-03-22"},{"lineNumber":222,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":223,"author":{"gitId":"pavz02"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":224,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e array \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":225,"author":{"gitId":"pavz02"},"content":"        array.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-22"},{"lineNumber":226,"author":{"gitId":"pavz02"},"content":"        IndexList indexList \u003d new IndexList(array);","lastModifiedDate":"2021-03-22"},{"lineNumber":227,"author":{"gitId":"pavz02"},"content":"        DeliveryStatusCommand deliveryStatusFirstCommandCopy \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":228,"author":{"gitId":"pavz02"},"content":"                new DeliveryStatusCommand(indexList, new DeliveryStatus());","lastModifiedDate":"2021-03-22"},{"lineNumber":229,"author":{"gitId":"pavz02"},"content":"        assertTrue(deliveryStatusFirstCommand.equals(deliveryStatusFirstCommandCopy));","lastModifiedDate":"2021-03-22"},{"lineNumber":230,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":231,"author":{"gitId":"pavz02"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":232,"author":{"gitId":"pavz02"},"content":"        assertFalse(deliveryStatusFirstCommand.equals(1));","lastModifiedDate":"2021-03-22"},{"lineNumber":233,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":234,"author":{"gitId":"pavz02"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":235,"author":{"gitId":"pavz02"},"content":"        assertFalse(deliveryStatusFirstCommand.equals(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":236,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":237,"author":{"gitId":"pavz02"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":238,"author":{"gitId":"pavz02"},"content":"        assertFalse(deliveryStatusFirstCommand.equals(deliveryStatusSecondCommand));","lastModifiedDate":"2021-03-22"},{"lineNumber":239,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":240,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":241,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"pPris":25,"pavz02":211,"RuiXiong2211":5}},{"path":"src/test/java/seedu/cakecollate/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TestUtil.stringify;","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.ATYPICAL_ORDER_ITEM;","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.EditCommand.EditOrderDescriptor;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"    private Model model \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"            TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        Order editedOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        EditCommand.EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder(editedOrder).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ORDER, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"        Model expectedModel \u003d new ModelManager(new CakeCollate(model.getCakeCollate()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"        Index indexLastOrder \u003d Index.fromOneBased(model.getFilteredOrderList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"        Order lastOrder \u003d model.getFilteredOrderList().get(indexLastOrder.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"        OrderBuilder orderInList \u003d new OrderBuilder(lastOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"        Order editedOrder \u003d orderInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastOrder, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"        Model expectedModel \u003d new ModelManager(new CakeCollate(model.getCakeCollate()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"        expectedModel.setOrder(lastOrder, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ORDER, new EditCommand.EditOrderDescriptor());","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"        Order orderInFilteredList \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"        Order editedOrder \u003d new OrderBuilder(orderInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ORDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"                new EditOrderDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"        Model expectedModel \u003d new ModelManager(new CakeCollate(model.getCakeCollate()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"    public void execute_duplicateOrderUnfilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"        Order firstOrder \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"        EditCommand.EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder(firstOrder).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_ORDER, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"    public void execute_duplicateOrderFilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"xiinweii98"},"content":"        // edit order in filtered list into a duplicate in cakecollate","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"xiinweii98"},"content":"        Order orderInList \u003d model.getCakeCollate().getOrderList().get(INDEX_SECOND_ORDER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ORDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"xiinweii98"},"content":"                new EditOrderDescriptorBuilder(orderInList).build());","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"xiinweii98"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"xiinweii98"},"content":"    public void execute_invalidOrderIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"xiinweii98"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"xiinweii98"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"xiinweii98"},"content":"     * but smaller than size of cakecollate","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"xiinweii98"},"content":"    public void execute_invalidOrderIndexFilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"xiinweii98"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"xiinweii98"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"xiinweii98"},"content":"        // ensures that outOfBoundIndex is still in bounds of cakecollate list","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCakeCollate().getOrderList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"                new EditOrderDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"xiinweii98"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"xiinweii98"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_ORDER, DESC_AMY);","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"xiinweii98"},"content":"        EditCommand.EditOrderDescriptor copyDescriptor \u003d new EditOrderDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_ORDER, copyDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_ORDER, DESC_AMY)));","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_ORDER, DESC_BOB)));","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":175,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":176,"author":{"gitId":"pPris"},"content":"     * This test involves using an order description that does not already correspond to an order item table entry. This","lastModifiedDate":"2021-04-12"},{"lineNumber":177,"author":{"gitId":"pPris"},"content":"     * checks whether that order description is added to the order item model or not.","lastModifiedDate":"2021-04-12"},{"lineNumber":178,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":179,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":180,"author":{"gitId":"pPris"},"content":"    public void execute_addToOrderItemsModel_addedSuccessfully() {","lastModifiedDate":"2021-04-12"},{"lineNumber":181,"author":{"gitId":"pPris"},"content":"        assert !model.getFilteredOrderItemsList().contains(ATYPICAL_ORDER_ITEM)","lastModifiedDate":"2021-04-12"},{"lineNumber":182,"author":{"gitId":"pPris"},"content":"                : \"choose an order item that\u0027s not in the model for testing (check TypicalOrderItems.java)\";","lastModifiedDate":"2021-04-12"},{"lineNumber":183,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":184,"author":{"gitId":"pPris"},"content":"        Index indexLastOrder \u003d Index.fromOneBased(model.getFilteredOrderList().size());","lastModifiedDate":"2021-04-12"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"        Order lastOrder \u003d model.getFilteredOrderList().get(indexLastOrder.getZeroBased());","lastModifiedDate":"2021-04-12"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"        Order editedOrder \u003d new OrderBuilder(lastOrder).withOrderDescriptions(stringify(ATYPICAL_ORDER_ITEM)).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":187,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":188,"author":{"gitId":"pPris"},"content":"        EditCommand.EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder(lastOrder)","lastModifiedDate":"2021-04-12"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"                .withOrderDescriptions(stringify(ATYPICAL_ORDER_ITEM)).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":191,"author":{"gitId":"pPris"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ORDER, descriptor);","lastModifiedDate":"2021-04-12"},{"lineNumber":192,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":193,"author":{"gitId":"pPris"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-04-12"},{"lineNumber":194,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":195,"author":{"gitId":"pPris"},"content":"        Model expectedModel \u003d new ModelManager(new CakeCollate(model.getCakeCollate()), new UserPrefs(),","lastModifiedDate":"2021-04-12"},{"lineNumber":196,"author":{"gitId":"pPris"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-04-12"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"        expectedModel.addOrderItem(ATYPICAL_ORDER_ITEM);","lastModifiedDate":"2021-04-12"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedOrder);","lastModifiedDate":"2021-04-12"},{"lineNumber":200,"author":{"gitId":"pPris"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-12"},{"lineNumber":201,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"pPris":31,"RuiXiong2211":10,"xiinweii98":74,"-":88}},{"path":"src/test/java/seedu/cakecollate/logic/commands/EditOrderDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_BERRY_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_CHOCOLATE_ORDER;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_DELIVERY_DATE_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"public class EditOrderDescriptorTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"    public void withOrderDescriptions_addDuplicateDescriptions_addsAll() {","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"        EditCommand.EditOrderDescriptor e1 \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"                .withOrderDescriptions(VALID_CHOCOLATE_ORDER, VALID_CHOCOLATE_ORDER).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"        EditCommand.EditOrderDescriptor e2 \u003d new EditCommand.EditOrderDescriptor();","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"        Map\u003cOrderDescription, Integer\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"        map.put(new OrderDescription(VALID_CHOCOLATE_ORDER), 2);","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"        e2.setOrderDescriptions(map);","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"        assertEquals(e1, e2);","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        EditCommand.EditOrderDescriptor descriptorWithSameValues \u003d new EditCommand.EditOrderDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"        EditCommand.EditOrderDescriptor editedAmy \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"                new EditOrderDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        editedAmy \u003d new EditOrderDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        editedAmy \u003d new EditOrderDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"        // different cakecollate -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"        editedAmy \u003d new EditOrderDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"pPris"},"content":"        // different order descriptions -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        editedAmy \u003d new EditOrderDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"pPris"},"content":"                .withOrderDescriptions(VALID_BERRY_ORDER)","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"pPris"},"content":"                .build();","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        editedAmy \u003d new EditOrderDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"        // different delivery date -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"        editedAmy \u003d new EditOrderDescriptorBuilder(DESC_AMY).withDeliveryDate(VALID_DELIVERY_DATE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"pPris":25,"xiinweii98":25,"-":40}},{"path":"src/test/java/seedu/cakecollate/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"xiinweii98":5,"-":15}},{"path":"src/test/java/seedu/cakecollate/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_ORDERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.CARL;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ELLE;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.FIONA;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.Prefix;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ContainsKeywordsPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    private Model model \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"            TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"            TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map1 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        map1.put(PREFIX_NAME, Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map2 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"        map1.put(PREFIX_NAME, Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate firstPredicate \u003d new ContainsKeywordsPredicate(map1);","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate secondPredicate \u003d new ContainsKeywordsPredicate(map2);","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"    public void execute_zeroKeywords_noOrderFound() {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredOrderList());","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"    public void execute_multipleKeywords_multipleOrdersFound() {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"pPris"},"content":"        assertEquals(","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"pPris"},"content":"                // ordered by delivery date, because model is configured to always sort by date","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"pPris"},"content":"                Arrays.asList(CARL, FIONA, ELLE),","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"pPris"},"content":"                model.getFilteredOrderList()","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"pPris"},"content":"        );","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"     * Parses {@code userInput} into a {@code ContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"    private ContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"        return new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"pPris":5,"RuiXiong2211":5,"xiinweii98":36,"-":52}},{"path":"src/test/java/seedu/cakecollate/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_ORDERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"    public void execute_mainToHelp_success() {","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"    public void execute_helpToHelp_success() {","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"        HelpCommand helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"        helpCommand.execute(model);","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"    public void execute_mainToHelpViaList_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"                new CommandResult(String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size()));","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"pavz02"},"content":"        HelpCommand helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"pavz02"},"content":"        helpCommand.execute(model);","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"pavz02"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"pavz02":19,"xiinweii98":5,"-":14}},{"path":"src/test/java/seedu/cakecollate/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_ORDERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        model \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        expectedModel \u003d new ModelManager(model.getCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size());","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size());","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"pPris":5,"RuiXiong2211":5,"xiinweii98":9,"-":26}},{"path":"src/test/java/seedu/cakecollate/logic/commands/RemindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_ORDERS_REMINDER_OVERVIEW;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ALICE;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.BENSON;","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.CARL;","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.DANIEL;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ELLE;","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.FIONA;","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.GEORGE;","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ReminderDatePredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":" * Contains integration tests (interaction with the Model) for {@code RemindCommand}.","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"public class RemindCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    private Model model \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"            TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"            TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate firstPredicate \u003d new ReminderDatePredicate(1);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate secondPredicate \u003d new ReminderDatePredicate(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"        RemindCommand remindFirstCommand \u003d new RemindCommand(firstPredicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"        RemindCommand remindSecondCommand \u003d new RemindCommand(secondPredicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"        // same object return true","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(remindFirstCommand.equals(remindFirstCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"        // same values return true","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"        RemindCommand copy \u003d new RemindCommand(firstPredicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(remindFirstCommand.equals(copy));","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"        // different types return false","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(remindFirstCommand.equals(\"1\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(remindFirstCommand.equals(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"        // different predicate returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(remindFirstCommand.equals(remindSecondCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"    public void execute_invalidRange_noOrderFound() {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_REMINDER_OVERVIEW, 0, -1);","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate predicate \u003d new ReminderDatePredicate(-1);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"        RemindCommand command \u003d new RemindCommand(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredOrderList());","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"    public void execute_smallRange_noOrderFound() {","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_REMINDER_OVERVIEW, 0, 10);","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate predicate \u003d new ReminderDatePredicate(10);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"        RemindCommand command \u003d new RemindCommand(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredOrderList());","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"    public void execute_largeRange_allOrdersFound() {","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_REMINDER_OVERVIEW, 7, 69420);","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate predicate \u003d new ReminderDatePredicate(69420);","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"        RemindCommand command \u003d new RemindCommand(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-02"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(","lastModifiedDate":"2021-04-02"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"                Arrays.asList(ALICE, BENSON, CARL, DANIEL, FIONA, GEORGE, ELLE),","lastModifiedDate":"2021-04-02"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"                model.getFilteredOrderList());","lastModifiedDate":"2021-04-02"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"    // This JUnit test will fail if the date of testing is 138 days after 2/4/2021.","lastModifiedDate":"2021-04-02"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"    public void execute_largeRange_mostOrdersFound() {","lastModifiedDate":"2021-04-02"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_REMINDER_OVERVIEW, 6, 500);","lastModifiedDate":"2021-04-02"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate predicate \u003d new ReminderDatePredicate(500);","lastModifiedDate":"2021-04-02"},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"        RemindCommand command \u003d new RemindCommand(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-02"},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(","lastModifiedDate":"2021-04-02"},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"                Arrays.asList(ALICE, BENSON, CARL, DANIEL, FIONA, GEORGE),","lastModifiedDate":"2021-04-02"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"                model.getFilteredOrderList());","lastModifiedDate":"2021-04-02"},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"RuiXiong2211":94,"xiinweii98":14}},{"path":"src/test/java/seedu/cakecollate/logic/commands/RequestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_REQUEST_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_REQUEST_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RequestCommand.","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"public class RequestCommandTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String REQUEST_STUB \u003d \"Some request\";","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String REQUEST_STUB_EMPTY \u003d \"\";","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    private Model model \u003d new ModelManager(getTypicalCakeCollate(), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"            TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    public void execute_addRequestUnfilteredList_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"        Order firstOrder \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"        Order editedOrder \u003d new OrderBuilder(firstOrder).withRequest(REQUEST_STUB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"        editedOrder \u003d new OrderBuilder(editedOrder).withRequest(REQUEST_STUB_EMPTY).build();","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"        editedOrder \u003d new OrderBuilder(editedOrder).withRequest(REQUEST_STUB_EMPTY).build();","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"        editedOrder \u003d new OrderBuilder(editedOrder).withRequest(REQUEST_STUB).build();","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"        RequestCommand requestCommand \u003d new RequestCommand(INDEX_FIRST_ORDER,","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"                new Request(editedOrder.getRequest().toString()));","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"        String expectedMessage \u003d String.format(RequestCommand.MESSAGE_ADD_REQUEST_SUCCESS, editedOrder);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"        Model expectedModel \u003d new ModelManager(new CakeCollate(model.getCakeCollate()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"        expectedModel.setOrder(firstOrder, editedOrder);","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"        assertCommandSuccess(requestCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"        Order firstOrder \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"        Order editedOrder \u003d new OrderBuilder(model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased()))","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"                .withRequest(REQUEST_STUB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"        RequestCommand requestCommand \u003d new RequestCommand(INDEX_FIRST_ORDER,","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"                new Request(editedOrder.getRequest().value));","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"        String expectedMessage \u003d String.format(RequestCommand.MESSAGE_ADD_REQUEST_SUCCESS, editedOrder);","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"        Model expectedModel \u003d new ModelManager(new CakeCollate(model.getCakeCollate()), new UserPrefs(),","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"                TypicalOrderItems.getTypicalOrderItemsModel());","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"        expectedModel.setOrder(firstOrder, editedOrder);","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"        assertCommandSuccess(requestCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"    public void execute_invalidOrderIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"        RequestCommand requestCommand \u003d new RequestCommand(outOfBoundIndex, new Request(VALID_REQUEST_BOB));","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"        assertCommandFailure(requestCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"     * but smaller than size of CakeCollate","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"    public void execute_invalidOrderIndexFilteredList_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"        // ensures that outOfBoundIndex is still in bounds of CakeCollate list","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCakeCollate().getOrderList().size());","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"        RequestCommand requestCommand \u003d new RequestCommand(outOfBoundIndex, new Request(VALID_REQUEST_BOB));","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"        assertCommandFailure(requestCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"        final RequestCommand standardCommand \u003d new RequestCommand(INDEX_FIRST_ORDER,","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"                new Request(VALID_REQUEST_AMY));","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"RuiXiong2211"},"content":"        RequestCommand commandWithSameValues \u003d new RequestCommand(INDEX_FIRST_ORDER,","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"RuiXiong2211"},"content":"                new Request(VALID_REQUEST_AMY));","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"RuiXiong2211"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"RuiXiong2211"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"RuiXiong2211"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"RuiXiong2211"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(standardCommand.equals(new RequestCommand(INDEX_SECOND_ORDER,","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"RuiXiong2211"},"content":"                new Request(VALID_REQUEST_AMY))));","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"RuiXiong2211"},"content":"        // different Request -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(standardCommand.equals(new RequestCommand(INDEX_FIRST_ORDER,","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"RuiXiong2211"},"content":"                new Request(VALID_REQUEST_BOB))));","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"RuiXiong2211":128}},{"path":"src/test/java/seedu/cakecollate/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.DELIVERY_DATE_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.DELIVERY_DATE_DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_DELIVERY_DATE_DESC1;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_ORDER_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_DESC_BOB;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_ITEM_INDEXES_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_ITEM_INDEXES_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_ITEM_INDEXLIST_2;","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_BERRY_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_CHOCOLATE_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_DELIVERY_DATE_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_ITEM_IDX;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.AddCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.testutil.AddOrderDescriptorBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        Order expectedOrder \u003d new OrderBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(expectedOrder).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"        IndexList indexList \u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"pPris"},"content":"                        + ADDRESS_DESC_BOB + ORDER_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"pPris"},"content":"                new AddCommand(indexList, descriptor));","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"                        + ADDRESS_DESC_BOB + ORDER_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"pPris"},"content":"                new AddCommand(indexList, descriptor));","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"pPris"},"content":"                        + ADDRESS_DESC_BOB + ORDER_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"pPris"},"content":"                new AddCommand(indexList, descriptor));","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"pPris"},"content":"                        + ADDRESS_DESC_BOB + ORDER_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"pPris"},"content":"                new AddCommand(indexList, descriptor));","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"pPris"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"pPris"},"content":"                        + ADDRESS_DESC_BOB + ORDER_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"pPris"},"content":"                new AddCommand(indexList, descriptor));","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"pPris"},"content":"        //  multiple order descriptions - all accepted","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"        Order expectedOrderMultipleOrderDescriptions \u003d new OrderBuilder(BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"pPris"},"content":"                .withOrderDescriptions(VALID_CHOCOLATE_ORDER, VALID_BERRY_ORDER)","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"pPris"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"pPris"},"content":"                .build();","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptorMultipleDesc \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"pPris"},"content":"                new AddOrderDescriptorBuilder(expectedOrderMultipleOrderDescriptions).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"pPris"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"pPris"},"content":"                        + ORDER_DESC_AMY + ORDER_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"pPris"},"content":"                new AddCommand(indexList, descriptorMultipleDesc));","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"        Order expectedOrderMultipleTags \u003d new OrderBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":114,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptorMultipleTags \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"pPris"},"content":"                new AddOrderDescriptorBuilder(expectedOrderMultipleTags).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"pPris"},"content":"                        + ORDER_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"pPris"},"content":"                new AddCommand(indexList, descriptorMultipleTags));","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"pPris"},"content":"        //  multiple delivery dates - last accepted","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"pPris"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"pPris"},"content":"                        + ORDER_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_AMY + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"pPris"},"content":"                new AddCommand(indexList, descriptor));","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":127,"author":{"gitId":"pPris"},"content":"        IndexList lastIndexList \u003d ORDER_ITEM_INDEXLIST_2;","lastModifiedDate":"2021-04-11"},{"lineNumber":128,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":129,"author":{"gitId":"pPris"},"content":"        // multiple order indexes - only last prefix accepted","lastModifiedDate":"2021-04-10"},{"lineNumber":130,"author":{"gitId":"pPris"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-04-10"},{"lineNumber":131,"author":{"gitId":"pPris"},"content":"                        + ORDER_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB","lastModifiedDate":"2021-04-10"},{"lineNumber":132,"author":{"gitId":"pPris"},"content":"                        + ORDER_ITEM_INDEXES_1 + ORDER_ITEM_INDEXES_2,","lastModifiedDate":"2021-04-10"},{"lineNumber":133,"author":{"gitId":"pPris"},"content":"                new AddCommand(lastIndexList, descriptor));","lastModifiedDate":"2021-04-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"xiinweii98"},"content":"        Order expectedOrder \u003d new OrderBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(expectedOrder).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"pPris"},"content":"        IndexList indexList \u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"xiinweii98"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"pPris"},"content":"                + ORDER_DESC_AMY + DELIVERY_DATE_DESC_AMY, new AddCommand(indexList, descriptor));","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"xiinweii98"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":153,"author":{"gitId":"pPris"},"content":"                + ORDER_DESC_BOB + DELIVERY_DATE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":157,"author":{"gitId":"pPris"},"content":"                + ORDER_DESC_BOB + DELIVERY_DATE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"xiinweii98"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":161,"author":{"gitId":"pPris"},"content":"                + ORDER_DESC_BOB + DELIVERY_DATE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":163,"author":{"gitId":"pPris"},"content":"        // missing address prefix","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"xiinweii98"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":165,"author":{"gitId":"pPris"},"content":"                + ORDER_DESC_BOB + DELIVERY_DATE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"pPris"},"content":"        // missing order description prefix","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"pPris"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"pPris"},"content":"                + VALID_BERRY_ORDER + DELIVERY_DATE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":171,"author":{"gitId":"xiinweii98"},"content":"        // missing delivery date prefix","lastModifiedDate":"2021-03-09"},{"lineNumber":172,"author":{"gitId":"xiinweii98"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":173,"author":{"gitId":"pPris"},"content":"                + ORDER_DESC_BOB + VALID_DELIVERY_DATE_BOB, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"pPris"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"xiinweii98"},"content":"                + VALID_ADDRESS_BOB + VALID_BERRY_ORDER + VALID_DELIVERY_DATE_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":184,"author":{"gitId":"pPris"},"content":"                        + ORDER_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"                        + ORDER_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"pPris"},"content":"                        + ORDER_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"pPris"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"RuiXiong2211"},"content":"        // invalid address","lastModifiedDate":"2021-04-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"                        + ORDER_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"RuiXiong2211"},"content":"                Address.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-07"},{"lineNumber":201,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"        // invalid order description","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"pPris"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"pPris"},"content":"                        + INVALID_ORDER_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"RuiXiong2211"},"content":"                OrderDescription.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":209,"author":{"gitId":"pPris"},"content":"                        + ORDER_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"pPris"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":212,"author":{"gitId":"xiinweii98"},"content":"        // invalid delivery date","lastModifiedDate":"2021-03-09"},{"lineNumber":213,"author":{"gitId":"xiinweii98"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":214,"author":{"gitId":"pPris"},"content":"                        + ORDER_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INVALID_DELIVERY_DATE_DESC1,","lastModifiedDate":"2021-04-01"},{"lineNumber":215,"author":{"gitId":"xiinweii98"},"content":"                DeliveryDate.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"pPris"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-10"},{"lineNumber":220,"author":{"gitId":"pPris"},"content":"                + ORDER_DESC_BOB + DELIVERY_DATE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":224,"author":{"gitId":"pPris"},"content":"                        + ADDRESS_DESC_BOB + ORDER_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"pPris"},"content":"                        + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"pPris"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TESTS WITH INDEX LIST \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"pPris"},"content":"    public void parse_withOrderItemIndexAndDesc_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"pPris"},"content":"        Order expectedOrder \u003d new OrderBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(expectedOrder).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"pPris"},"content":"        IndexList indexList \u003d new IndexList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"pPris"},"content":"        indexList.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"pPris"},"content":"        indexList.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"pPris"},"content":"        String orderItemIndex \u003d \" \" + PREFIX_ORDER_ITEM_IDX + \" 1 2 \";","lastModifiedDate":"2021-04-10"},{"lineNumber":241,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"pPris"},"content":"        // 1 order and a set of indices","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"pPris"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"pPris"},"content":"                        + ADDRESS_DESC_BOB + ORDER_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB + orderItemIndex,","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"pPris"},"content":"                new AddCommand(indexList, descriptor));","lastModifiedDate":"2021-03-29"},{"lineNumber":246,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"pPris"},"content":"    public void parse_withOrderItemIndexAndNoDesc_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"pPris"},"content":"        Order expectedOrder \u003d new OrderBuilder(BOB).withTags(VALID_TAG_FRIEND).withOrderDescriptions().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(expectedOrder).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"pPris"},"content":"        // doesn\u0027t matter if this index doesn\u0027t exist in order items model; this test is independent of model","lastModifiedDate":"2021-04-10"},{"lineNumber":254,"author":{"gitId":"pPris"},"content":"        IndexList indexList \u003d new IndexList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"pPris"},"content":"        indexList.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"pPris"},"content":"        indexList.add(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":258,"author":{"gitId":"pPris"},"content":"        String orderItemIndex \u003d \" \" + PREFIX_ORDER_ITEM_IDX + \" 1 2 \";","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"pPris"},"content":"        // 1 order and a set of indices","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"pPris"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"pPris"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB + orderItemIndex,","lastModifiedDate":"2021-03-29"},{"lineNumber":263,"author":{"gitId":"pPris"},"content":"                new AddCommand(indexList, descriptor));","lastModifiedDate":"2021-03-29"},{"lineNumber":264,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":265,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":266,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":267,"author":{"gitId":"pPris"},"content":"    public void parse_withNeitherIndexListNorOrderDesc_failure() {","lastModifiedDate":"2021-04-12"},{"lineNumber":268,"author":{"gitId":"pPris"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-04-12"},{"lineNumber":269,"author":{"gitId":"pPris"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB,","lastModifiedDate":"2021-04-12"},{"lineNumber":270,"author":{"gitId":"pPris"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":271,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":272,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":273,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":274,"author":{"gitId":"pPris"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TESTS RELATED TO ADDING MULTIPLE CAKES TO THE SAME ORDER \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":275,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":276,"author":{"gitId":"pPris"},"content":"    public void parse_recogniseDuplicateIndex_success() {","lastModifiedDate":"2021-04-10"},{"lineNumber":277,"author":{"gitId":"pPris"},"content":"        Order expectedOrder \u003d new OrderBuilder(BOB).withTags(VALID_TAG_FRIEND).withOrderDescriptions().build();","lastModifiedDate":"2021-04-10"},{"lineNumber":278,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(expectedOrder).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":279,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":280,"author":{"gitId":"pPris"},"content":"        IndexList expectedList \u003d new IndexList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":281,"author":{"gitId":"pPris"},"content":"        expectedList.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-10"},{"lineNumber":282,"author":{"gitId":"pPris"},"content":"        expectedList.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-10"},{"lineNumber":283,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":284,"author":{"gitId":"pPris"},"content":"        String orderItemIndex \u003d \" \" + PREFIX_ORDER_ITEM_IDX + \" 1 1 \";","lastModifiedDate":"2021-04-10"},{"lineNumber":285,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":286,"author":{"gitId":"pPris"},"content":"        // 1 order and a set of indices","lastModifiedDate":"2021-04-10"},{"lineNumber":287,"author":{"gitId":"pPris"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-04-10"},{"lineNumber":288,"author":{"gitId":"pPris"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + DELIVERY_DATE_DESC_BOB + orderItemIndex,","lastModifiedDate":"2021-04-10"},{"lineNumber":289,"author":{"gitId":"pPris"},"content":"                new AddCommand(expectedList, descriptor));","lastModifiedDate":"2021-04-10"},{"lineNumber":290,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":291,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"pPris":156,"RuiXiong2211":3,"xiinweii98":64,"-":69}},{"path":"src/test/java/seedu/cakecollate/logic/parser/AddOrderItemCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.commands.AddOrderItemCommand;","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"public class AddOrderItemCommandParserTest {","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    private AddOrderItemCommandParser parser \u003d new AddOrderItemCommandParser();","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    public void parse_validArgs_returnsAddOrderItemCommand() {","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"        Type chocolate \u003d new Type(\"Chocolate\");","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem chocolateItem \u003d new OrderItem(chocolate);","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"        assertParseSuccess(parser, \"Chocolate\", new AddOrderItemCommand(chocolateItem));","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        assertParseFailure(parser, \"123\", \"Order description should only contain alphabets.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"simran-bhadani3":27}},{"path":"src/test/java/seedu/cakecollate/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"xiinweii98":1,"-":149}},{"path":"src/test/java/seedu/cakecollate/logic/parser/CakeCollateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ALL;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.logic.commands.AddCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.EditCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.EditCommand.EditOrderDescriptor;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.FindCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.ListCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.RemindCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.commands.RequestCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ContainsKeywordsPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ReminderDatePredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.testutil.AddOrderDescriptorBuilder;","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.OrderUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"public class CakeCollateParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"    private final CakeCollateParser parser \u003d new CakeCollateParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"pPris"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"pPris"},"content":"        Order order \u003d new OrderBuilder().build();","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"pPris"},"content":"        AddCommand.AddOrderDescriptor descriptor \u003d new AddOrderDescriptorBuilder(order).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"pPris"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(OrderUtil.getAddCommand(order));","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"pPris"},"content":"        assertEquals(new AddCommand(null, descriptor), command);","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ORDER.getOneBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"        arrayFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        IndexList indexList \u003d new IndexList(arrayFirstOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(new DeleteCommand(indexList), command);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"        Order order \u003d new OrderBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder(order).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"                + INDEX_FIRST_ORDER.getOneBased() + \" \" + OrderUtil.getEditOrderDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_ORDER, descriptor), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ALL, keywords);","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(new FindCommand(new ContainsKeywordsPredicate(map)), command);","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseCommand_remind() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"RuiXiong2211"},"content":"        RemindCommand command \u003d (RemindCommand) parser.parseCommand(","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"RuiXiong2211"},"content":"                RemindCommand.COMMAND_WORD + \" \" + 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(new RemindCommand(new ReminderDatePredicate(1)), command);","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"RuiXiong2211"},"content":"        final Request request \u003d new Request(\"Some request.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"RuiXiong2211"},"content":"        RequestCommand command \u003d (RequestCommand) parser.parseCommand(RequestCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"RuiXiong2211"},"content":"                + INDEX_FIRST_ORDER.getOneBased() + \" \" + PREFIX_REQUEST + request.toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(new RequestCommand(INDEX_FIRST_ORDER, request), command);","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"pPris":11,"RuiXiong2211":18,"xiinweii98":38,"-":66,"simran-bhadani3":2}},{"path":"src/test/java/seedu/cakecollate/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.Command;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"xiinweii98":3,"-":35}},{"path":"src/test/java/seedu/cakecollate/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"        arrayFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"        IndexList indexList \u003d new IndexList(arrayFirstOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(indexList));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"xiinweii98":11,"-":18,"simran-bhadani3":3}},{"path":"src/test/java/seedu/cakecollate/logic/parser/DeleteOrderItemCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.logic.commands.DeleteOrderItemCommand;","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"public class DeleteOrderItemCommandParserTest {","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    private DeleteOrderItemCommandParser parser \u003d new DeleteOrderItemCommandParser();","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"    public void parse_validArgs_returnsDeleteOrderItemCommand() {","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"        arrayFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList indexList \u003d new IndexList(arrayFirstOrder);","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        assertParseSuccess(parser, \"1\", new DeleteOrderItemCommand(indexList));","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"                DeleteOrderItemCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"simran-bhadani3":33}},{"path":"src/test/java/seedu/cakecollate/logic/parser/DeliveryStatusCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pavz02"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.logic.commands.DeliveryStatusCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"class DeliveryStatusCommandParserTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":"    private DeliveryStatusCommandParser parser \u003d new DeliveryStatusCommandParser(new DeliveryStatus());","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"    public void parse_validArgs_returnsDeliveryStatusCommand() {","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"pavz02"},"content":"        ArrayList\u003cIndex\u003e arrayFirstOrder \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"pavz02"},"content":"        arrayFirstOrder.add(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"pavz02"},"content":"        IndexList indexList \u003d new IndexList(arrayFirstOrder);","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"pavz02"},"content":"        assertParseSuccess(parser, \"1\", new DeliveryStatusCommand(indexList, new DeliveryStatus()));","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"pavz02"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"pavz02"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"pavz02"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"pavz02"},"content":"                DeliveryStatusCommand.getMessageUsage(new DeliveryStatus().toString())));","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"pavz02"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"pavz02":33}},{"path":"src/test/java/seedu/cakecollate/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_NEGATIVE_INDEX;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.DELIVERY_DATE_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.DELIVERY_DATE_DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_DELIVERY_DATE_DESC2;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.ORDER_DESC_BOB;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_BERRY_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_CHOCOLATE_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_DELIVERY_DATE_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_DELIVERY_DATE_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_THIRD_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.EditCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.EditCommand.EditOrderDescriptor;","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"    private static final String ORDER_DESC_EMPTY \u003d \" \" + PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_NEGATIVE_INDEX);","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_EMPTY); // invalid address","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DELIVERY_DATE_DESC2,","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"                String.format(DeliveryDate.MESSAGE_CONSTRAINTS_VALUE, \"01/01/2000\")); // invalid delivery date","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Order} being edited,","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"pPris"},"content":"        // order description","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"pPris"},"content":"        assertParseFailure(parser, \"1\" + ORDER_DESC_AMY + ORDER_DESC_BOB + ORDER_DESC_EMPTY,","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"RuiXiong2211"},"content":"                OrderDescription.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-12"},{"lineNumber":122,"author":{"gitId":"pPris"},"content":"        assertParseFailure(parser, \"1\" + ORDER_DESC_AMY + ORDER_DESC_EMPTY + ORDER_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"RuiXiong2211"},"content":"                OrderDescription.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-12"},{"lineNumber":124,"author":{"gitId":"pPris"},"content":"        assertParseFailure(parser, \"1\" + ORDER_DESC_EMPTY + ORDER_DESC_AMY + ORDER_DESC_BOB,","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"RuiXiong2211"},"content":"                OrderDescription.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-12"},{"lineNumber":126,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseFailure(parser, \"1\" + ORDER_DESC_EMPTY, OrderDescription.MESSAGE_EMPTY);","lastModifiedDate":"2021-04-12"},{"lineNumber":127,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"xiinweii98"},"content":"        Index targetIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":137,"author":{"gitId":"pPris"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"pPris"},"content":"                + ORDER_DESC_AMY + ORDER_DESC_BOB + DELIVERY_DATE_DESC_AMY","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"pPris"},"content":"                + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"xiinweii98"},"content":"        EditCommand.EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"pPris"},"content":"                .withOrderDescriptions(VALID_CHOCOLATE_ORDER, VALID_BERRY_ORDER)","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withDeliveryDate(VALID_DELIVERY_DATE_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"xiinweii98"},"content":"        Index targetIndex \u003d INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"xiinweii98"},"content":"        Index targetIndex \u003d INDEX_THIRD_ORDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"xiinweii98"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"xiinweii98"},"content":"        descriptor \u003d new EditOrderDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"xiinweii98"},"content":"        descriptor \u003d new EditOrderDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"xiinweii98"},"content":"        // cakecollate","lastModifiedDate":"2021-03-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"xiinweii98"},"content":"        descriptor \u003d new EditOrderDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"        // order description","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"        userInput \u003d targetIndex.getOneBased() + ORDER_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"xiinweii98"},"content":"        descriptor \u003d new EditOrderDescriptorBuilder().withOrderDescriptions(VALID_CHOCOLATE_ORDER).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"pPris"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"pPris"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"xiinweii98"},"content":"        descriptor \u003d new EditOrderDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"xiinweii98"},"content":"        // delivery date","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"xiinweii98"},"content":"        userInput \u003d targetIndex.getOneBased() + DELIVERY_DATE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"xiinweii98"},"content":"        descriptor \u003d new EditOrderDescriptorBuilder().withDeliveryDate(VALID_DELIVERY_DATE_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"xiinweii98"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"xiinweii98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":210,"author":{"gitId":"xiinweii98"},"content":"        Index targetIndex \u003d INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":212,"author":{"gitId":"xiinweii98"},"content":"                + DELIVERY_DATE_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"xiinweii98"},"content":"                + DELIVERY_DATE_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"xiinweii98"},"content":"                + DELIVERY_DATE_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"xiinweii98"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"xiinweii98"},"content":"                .withDeliveryDate(VALID_DELIVERY_DATE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"xiinweii98"},"content":"        Index targetIndex \u003d INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":229,"author":{"gitId":"xiinweii98"},"content":"        EditCommand.EditOrderDescriptor descriptor \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"xiinweii98"},"content":"                new EditOrderDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":237,"author":{"gitId":"xiinweii98"},"content":"        descriptor \u003d new EditOrderDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":245,"author":{"gitId":"xiinweii98"},"content":"        Index targetIndex \u003d INDEX_THIRD_ORDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"xiinweii98"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":254,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":255,"author":{"gitId":"pPris"},"content":"    public void parse_duplicateOrderDescriptions_allAdded() {","lastModifiedDate":"2021-04-10"},{"lineNumber":256,"author":{"gitId":"pPris"},"content":"        Index targetIndex \u003d INDEX_THIRD_ORDER;","lastModifiedDate":"2021-04-10"},{"lineNumber":257,"author":{"gitId":"pPris"},"content":"        String userInput \u003d targetIndex.getOneBased() + ORDER_DESC_AMY + ORDER_DESC_AMY;","lastModifiedDate":"2021-04-10"},{"lineNumber":258,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":259,"author":{"gitId":"pPris"},"content":"        EditCommand.EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-10"},{"lineNumber":260,"author":{"gitId":"pPris"},"content":"                .withOrderDescriptions(VALID_CHOCOLATE_ORDER, VALID_CHOCOLATE_ORDER).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":261,"author":{"gitId":"pPris"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-10"},{"lineNumber":262,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":263,"author":{"gitId":"pPris"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-10"},{"lineNumber":264,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"pPris":29,"RuiXiong2211":5,"xiinweii98":85,"-":144,"simran-bhadani3":2}},{"path":"src/test/java/seedu/cakecollate/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ALL;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.FindCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ContainsKeywordsPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        assertParseFailure(parser, \" n/\",","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        assertParseFailure(parser, \" a/       \\n\",","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"                new FindCommand(new ContainsKeywordsPredicate(map));","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"        assertParseSuccess(parser, \" n/ \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"        // multiple prefixes","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_PHONE, Arrays.asList(\"12345678\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ORDER_DESCRIPTION, Arrays.asList(\"Chocolate\", \"Cake\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"        expectedFindCommand \u003d new FindCommand(new ContainsKeywordsPredicate(map));","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"        assertParseSuccess(parser, \" n/Alice Bob p/12345678 o/Chocolate Cake\", expectedFindCommand);","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"        // no prefixes","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ALL, Arrays.asList(\"Alice\", \"Bob\", \"12345678\", \"Chocolate\", \"Cake\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"        expectedFindCommand \u003d new FindCommand(new ContainsKeywordsPredicate(map));","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"        assertParseSuccess(parser, \"Alice Bob 12345678 Chocolate Cake\", expectedFindCommand);","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"xiinweii98":37,"-":24}},{"path":"src/test/java/seedu/cakecollate/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_NEGATIVE_INDEX;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.core.Messages;","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.commons.core.index.IndexList;","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String OVERFLOW_NAME \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"            \"REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\";","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String OVERFLOW_PHONE \u003d \"999999999999999999999999999999999999\";","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String OVERFLOW_TAGS \u003d \"THIS TAG IS TOO LOOOOOOOOOOOOOONG\";","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String OVERFLOW_ORDER_DESCRIPTION \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"            \"THIS ORDERDESCRIPTION IS TOO LOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONG\";","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"    private static final String INVALID_ORDER_DESC \u003d \" \";","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    private static final String INVALID_DELIVERY_DATE \u003d \"12122012\";","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String INVALID_DAYS \u003d \"-1\";","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String INVALID_DAYS_MULTIPLE \u003d \"-1\";","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"pPris"},"content":"    private static final String VALID_ORDER_DESC_1 \u003d \"Chocolate Mousse\";","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"pPris"},"content":"    private static final String VALID_ORDER_DESC_2 \u003d \"Strawberry Thing\";","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"    private static final String VALID_DELIVERY_DATE \u003d \"01/01/2022\";","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String VALID_DAYS \u003d \"1\";","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_ONE_INDEX \u003d \"1\";","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_TWO_INDEXES \u003d \"1 2\";","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_THREE_INDEXES \u003d \"1 2 3\";","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_ONE_INDEX_AND_EXTRA_WHITESPACE_AT_FRONT \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"            \" 1\";","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_ONE_INDEX_AND_EXTRA_WHITESPACE_AT_BACK \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"            \"1 \";","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_ONE_INDEX_AND_EXTRA_WHITESPACES_AT_FRONT_AND_BACK \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"            \" 1 \";","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_EXTRA_WHITESPACE_AT_FRONT \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"            \" 1 2\";","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_EXTRA_WHITESPACE_AT_BACK \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"            \"1 2 \";","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_EXTRA_WHITESPACES_AT_FRONT_AND_BACK \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"            \" 1 2 \";","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_EXTRA_WHITESPACE_AT_FRONT \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"            \" 1 2 3\";","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_EXTRA_WHITESPACE_AT_BACK \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"            \"1 2 3 \";","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_EXTRA_WHITESPACES_AT_FRONT_AND_BACK \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"            \" 1 2 3 \";","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_ONE_INDEX_AND_MULTIPLE_WHITESPACES_1 \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"            \"   1   \";","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_ONE_INDEX_AND_MULTIPLE_WHITESPACES_2 \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"            \"            1     \";","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_ONE_INDEX_AND_MULTIPLE_WHITESPACES_3 \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"            \"                                1                 \";","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_MULTIPLE_WHITESPACES_1 \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"            \"  1  2  \";","lastModifiedDate":"2021-04-10"},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_MULTIPLE_WHITESPACES_2 \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"            \"  1          2     \";","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_MULTIPLE_WHITESPACES_3 \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"            \"             1                   2                 \";","lastModifiedDate":"2021-04-10"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_MULTIPLE_WHITESPACES_1 \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"            \"  1  2  3  \";","lastModifiedDate":"2021-04-10"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_MULTIPLE_WHITESPACES_2 \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"            \"  1          2           3  \";","lastModifiedDate":"2021-04-10"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_MULTIPLE_WHITESPACES_3 \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"            \"             1                   2          3              \";","lastModifiedDate":"2021-04-10"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_RANDOM_ORDER_1 \u003d \" 3 2 1 \";","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_RANDOM_ORDER_2 \u003d \" 3 1 \";","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String VALID_INDEX_LIST_WITH_RANDOM_ORDER_3 \u003d \" 2 1 3\";","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_ONE_INDEX \u003d \"-1\";","lastModifiedDate":"2021-04-10"},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_TWO_INDEXES \u003d \"-1 -2\";","lastModifiedDate":"2021-04-10"},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_THREE_INDEXES \u003d \"-1 -2 -3\";","lastModifiedDate":"2021-04-10"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_ONE_INDEX_AND_MULTIPLE_SPACES \u003d \"  -1  \";","lastModifiedDate":"2021-04-10"},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_TWO_INDEXES_AND_MULTIPLE_SPACES \u003d \"    -1    -2   \";","lastModifiedDate":"2021-04-10"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_THREE_INDEXES_AND_MULTIPLE_SPACES \u003d \"   -1    -2    -3   \";","lastModifiedDate":"2021-04-10"},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_SINGLE_WHITESPACE \u003d \" \";","lastModifiedDate":"2021-04-10"},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_MULTIPLE_WHITESPACES \u003d \"     \";","lastModifiedDate":"2021-04-10"},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_COMMAS \u003d \"1, 2, 3\";","lastModifiedDate":"2021-04-11"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_MIXED_INTEGERS_1 \u003d \"2 -1 3\";","lastModifiedDate":"2021-04-11"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_MIXED_INTEGERS_2 \u003d \"2 -1    -3\";","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_MIXED_INTEGERS_3 \u003d \"-1     3    2\";","lastModifiedDate":"2021-04-11"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_ALPHABETS_1 \u003d \"1 2 A\";","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_ALPHABETS_2 \u003d \"  a 2 A   \";","lastModifiedDate":"2021-04-11"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"    private static final String INVALID_INDEX_LIST_WITH_ALPHABETS_3 \u003d \"  aaaaa 2  1  ABBB   \";","lastModifiedDate":"2021-04-11"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":124,"author":{"gitId":"pPris"},"content":"    private static final String WRONG_CASE_ORDER_DESC_1 \u003d \"chocolate moussE\";","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"pPris"},"content":"    private static final String WRONG_CASE_ORDER_DESC_2 \u003d \"ChoColatE moUssE\";","lastModifiedDate":"2021-04-11"},{"lineNumber":126,"author":{"gitId":"pPris"},"content":"    private static final String EXPECTED_CASE_ORDER_DESC \u003d \"Chocolate Mousse\";","lastModifiedDate":"2021-04-11"},{"lineNumber":127,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10aaaaa111111111111a\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, MESSAGE_NEGATIVE_INDEX, ()","lastModifiedDate":"2021-04-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX, ()","lastModifiedDate":"2021-04-08"},{"lineNumber":139,"author":{"gitId":"RuiXiong2211"},"content":"            -\u003e ParserUtil.parseIndex(\"111111111111111111111111111111111\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":145,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(INDEX_FIRST_ORDER, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":148,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(INDEX_FIRST_ORDER, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":153,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2021-04-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":162,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseName_overflowInput_throwsParseException() {","lastModifiedDate":"2021-04-09"},{"lineNumber":163,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(OVERFLOW_NAME));","lastModifiedDate":"2021-04-09"},{"lineNumber":164,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":165,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2021-04-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":203,"author":{"gitId":"RuiXiong2211"},"content":"    public void parsePhone_overflowInput_throwsParseException() {","lastModifiedDate":"2021-04-09"},{"lineNumber":204,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(OVERFLOW_PHONE));","lastModifiedDate":"2021-04-09"},{"lineNumber":205,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":206,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2021-04-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2021-04-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":254,"author":{"gitId":"pPris"},"content":"    public void parseOrderDescription_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":255,"author":{"gitId":"pPris"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOrderDescription(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":256,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":257,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":258,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":259,"author":{"gitId":"pPris"},"content":"    public void parseOrderDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":260,"author":{"gitId":"pPris"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOrderDescription(INVALID_ORDER_DESC));","lastModifiedDate":"2021-03-13"},{"lineNumber":261,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":262,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":263,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":264,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseOrderDescription_overflowInput_throwsParseException() {","lastModifiedDate":"2021-04-09"},{"lineNumber":265,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOrderDescription(OVERFLOW_ORDER_DESCRIPTION));","lastModifiedDate":"2021-04-09"},{"lineNumber":266,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":267,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":268,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":269,"author":{"gitId":"pPris"},"content":"    public void parseOrderDescription_validValue_returnsOrderDescription() throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":270,"author":{"gitId":"pPris"},"content":"        OrderDescription expectedOrderDescription \u003d new OrderDescription(VALID_ORDER_DESC_1);","lastModifiedDate":"2021-03-13"},{"lineNumber":271,"author":{"gitId":"pPris"},"content":"        assertEquals(expectedOrderDescription, ParserUtil.parseOrderDescription(VALID_ORDER_DESC_1));","lastModifiedDate":"2021-03-13"},{"lineNumber":272,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":273,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":274,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":275,"author":{"gitId":"pPris"},"content":"    public void parseOrderDescription_validValueWithWhitespace_returnsTrimmedOrderDescription() throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":276,"author":{"gitId":"pPris"},"content":"        String untrimmed \u003d WHITESPACE + VALID_ORDER_DESC_1 + WHITESPACE;","lastModifiedDate":"2021-03-13"},{"lineNumber":277,"author":{"gitId":"pPris"},"content":"        OrderDescription expectedOrderDescription \u003d new OrderDescription(VALID_ORDER_DESC_1);","lastModifiedDate":"2021-03-13"},{"lineNumber":278,"author":{"gitId":"pPris"},"content":"        assertEquals(expectedOrderDescription, ParserUtil.parseOrderDescription(untrimmed));","lastModifiedDate":"2021-03-13"},{"lineNumber":279,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":280,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":281,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":282,"author":{"gitId":"pPris"},"content":"    public void parseOrderDescription_collectionWithInvalidOrderDescription_throwsParseException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":283,"author":{"gitId":"pPris"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOrderDescriptions(Arrays.asList(VALID_ORDER_DESC_1,","lastModifiedDate":"2021-03-13"},{"lineNumber":284,"author":{"gitId":"pPris"},"content":"                INVALID_ORDER_DESC)));","lastModifiedDate":"2021-03-13"},{"lineNumber":285,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":286,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":287,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":288,"author":{"gitId":"pPris"},"content":"    public void parseOrderDescription_collectionWithValidOrderDescription_returnsSet() throws Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":289,"author":{"gitId":"pPris"},"content":"        Map\u003cOrderDescription, Integer\u003e actualOrderDescriptionSet \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":290,"author":{"gitId":"pPris"},"content":"                ParserUtil.parseOrderDescriptions(Arrays.asList(VALID_ORDER_DESC_1, VALID_ORDER_DESC_2));","lastModifiedDate":"2021-03-13"},{"lineNumber":291,"author":{"gitId":"pPris"},"content":"        Map\u003cOrderDescription, Integer\u003e expectedOrderDescriptionSet \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":292,"author":{"gitId":"pPris"},"content":"        expectedOrderDescriptionSet.put(new OrderDescription(VALID_ORDER_DESC_1), 1);","lastModifiedDate":"2021-04-10"},{"lineNumber":293,"author":{"gitId":"pPris"},"content":"        expectedOrderDescriptionSet.put(new OrderDescription(VALID_ORDER_DESC_2), 1);","lastModifiedDate":"2021-04-10"},{"lineNumber":294,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":295,"author":{"gitId":"pPris"},"content":"        assertEquals(expectedOrderDescriptionSet, actualOrderDescriptionSet);","lastModifiedDate":"2021-03-13"},{"lineNumber":296,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":297,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":308,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":309,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseTag_overflowInput_throwsParseException() {","lastModifiedDate":"2021-04-09"},{"lineNumber":310,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(OVERFLOW_TAGS));","lastModifiedDate":"2021-04-09"},{"lineNumber":311,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":312,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":348,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":349,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":350,"author":{"gitId":"xiinweii98"},"content":"    public void parseDeliveryDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":351,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDeliveryDate(null));","lastModifiedDate":"2021-04-10"},{"lineNumber":352,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":353,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":354,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":355,"author":{"gitId":"xiinweii98"},"content":"    public void parseDeliveryDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":356,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeliveryDate(INVALID_DELIVERY_DATE));","lastModifiedDate":"2021-03-17"},{"lineNumber":357,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":358,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":359,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":360,"author":{"gitId":"xiinweii98"},"content":"    public void parseDeliveryDate_validValueWithoutWhitespace_returnsDeliveryDate() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":361,"author":{"gitId":"xiinweii98"},"content":"        DeliveryDate expectedDeliveryDate \u003d new DeliveryDate(VALID_DELIVERY_DATE);","lastModifiedDate":"2021-03-17"},{"lineNumber":362,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(expectedDeliveryDate, ParserUtil.parseDeliveryDate(VALID_DELIVERY_DATE));","lastModifiedDate":"2021-03-17"},{"lineNumber":363,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":364,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":365,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":366,"author":{"gitId":"xiinweii98"},"content":"    public void parseDeliveryDate_validValueWithWhitespace_returnsTrimmedDeliveryDate() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":367,"author":{"gitId":"xiinweii98"},"content":"        String deliveryDateWithWhitespace \u003d WHITESPACE + VALID_DELIVERY_DATE + WHITESPACE;","lastModifiedDate":"2021-03-17"},{"lineNumber":368,"author":{"gitId":"xiinweii98"},"content":"        DeliveryDate expectedDeliveryDate \u003d new DeliveryDate(VALID_DELIVERY_DATE);","lastModifiedDate":"2021-03-17"},{"lineNumber":369,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(expectedDeliveryDate, ParserUtil.parseDeliveryDate(deliveryDateWithWhitespace));","lastModifiedDate":"2021-03-17"},{"lineNumber":370,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":371,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":372,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":373,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_validValueWithoutWhitespace_returnsValidIndexList() throws Exception {","lastModifiedDate":"2021-04-10"},{"lineNumber":374,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-04-10"},{"lineNumber":375,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexTwo \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-04-10"},{"lineNumber":376,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexThree \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-04-10"},{"lineNumber":377,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":378,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with one index","lastModifiedDate":"2021-04-10"},{"lineNumber":379,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithOneIndex \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":380,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithOneIndex.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":381,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithOneIndex, ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_ONE_INDEX));","lastModifiedDate":"2021-04-10"},{"lineNumber":382,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":383,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with two indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":384,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithTwoIndexes \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":385,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexes.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":386,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexes.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":387,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithTwoIndexes, ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_TWO_INDEXES));","lastModifiedDate":"2021-04-10"},{"lineNumber":388,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":389,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with three indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":390,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithThreeIndexes \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":391,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":392,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":393,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexThree);","lastModifiedDate":"2021-04-10"},{"lineNumber":394,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithThreeIndexes, ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_THREE_INDEXES));","lastModifiedDate":"2021-04-10"},{"lineNumber":395,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":396,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":397,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":398,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_validValueWithExtraWhitespaceAtFront_returnsValidIndexList() throws Exception {","lastModifiedDate":"2021-04-10"},{"lineNumber":399,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-04-10"},{"lineNumber":400,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexTwo \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-04-10"},{"lineNumber":401,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexThree \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-04-10"},{"lineNumber":402,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":403,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with one index","lastModifiedDate":"2021-04-10"},{"lineNumber":404,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithOneIndex \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":405,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithOneIndex.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":406,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithOneIndex, ParserUtil.parseIndexList(","lastModifiedDate":"2021-04-10"},{"lineNumber":407,"author":{"gitId":"simran-bhadani3"},"content":"                VALID_INDEX_LIST_WITH_ONE_INDEX_AND_EXTRA_WHITESPACE_AT_FRONT));","lastModifiedDate":"2021-04-10"},{"lineNumber":408,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":409,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with two indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":410,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithTwoIndexes \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":411,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexes.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":412,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexes.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":413,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithTwoIndexes,","lastModifiedDate":"2021-04-10"},{"lineNumber":414,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_EXTRA_WHITESPACE_AT_FRONT));","lastModifiedDate":"2021-04-10"},{"lineNumber":415,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":416,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with three indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":417,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithThreeIndexes \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":418,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":419,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":420,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexThree);","lastModifiedDate":"2021-04-10"},{"lineNumber":421,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithThreeIndexes,","lastModifiedDate":"2021-04-10"},{"lineNumber":422,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_EXTRA_WHITESPACE_AT_FRONT));","lastModifiedDate":"2021-04-10"},{"lineNumber":423,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":424,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":425,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":426,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_validValueWithExtraWhitespaceAtBack_returnsValidIndexList() throws Exception {","lastModifiedDate":"2021-04-10"},{"lineNumber":427,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-04-10"},{"lineNumber":428,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexTwo \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-04-10"},{"lineNumber":429,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexThree \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-04-10"},{"lineNumber":430,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":431,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with one index","lastModifiedDate":"2021-04-10"},{"lineNumber":432,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithOneIndex \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":433,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithOneIndex.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":434,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithOneIndex,","lastModifiedDate":"2021-04-10"},{"lineNumber":435,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_ONE_INDEX_AND_EXTRA_WHITESPACE_AT_BACK));","lastModifiedDate":"2021-04-10"},{"lineNumber":436,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":437,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with two indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":438,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithTwoIndexes \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":439,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexes.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":440,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexes.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":441,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithTwoIndexes,","lastModifiedDate":"2021-04-10"},{"lineNumber":442,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_EXTRA_WHITESPACE_AT_BACK));","lastModifiedDate":"2021-04-10"},{"lineNumber":443,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":444,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with three indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":445,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithThreeIndexes \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":446,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":447,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":448,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexThree);","lastModifiedDate":"2021-04-10"},{"lineNumber":449,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithThreeIndexes,","lastModifiedDate":"2021-04-10"},{"lineNumber":450,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_EXTRA_WHITESPACE_AT_BACK));","lastModifiedDate":"2021-04-10"},{"lineNumber":451,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":452,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":453,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":454,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_validValueWithExtraWhitespaceAtFrontAndBack_returnsValidIndexList() throws Exception {","lastModifiedDate":"2021-04-10"},{"lineNumber":455,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-04-10"},{"lineNumber":456,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexTwo \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-04-10"},{"lineNumber":457,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexThree \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-04-10"},{"lineNumber":458,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":459,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with one index","lastModifiedDate":"2021-04-10"},{"lineNumber":460,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithOneIndex \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":461,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithOneIndex.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":462,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithOneIndex,","lastModifiedDate":"2021-04-10"},{"lineNumber":463,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_ONE_INDEX_AND_EXTRA_WHITESPACES_AT_FRONT_AND_BACK));","lastModifiedDate":"2021-04-10"},{"lineNumber":464,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":465,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with two indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":466,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithTwoIndexes \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":467,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexes.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":468,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexes.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":469,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithTwoIndexes,","lastModifiedDate":"2021-04-10"},{"lineNumber":470,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_EXTRA_WHITESPACES_AT_FRONT_AND_BACK));","lastModifiedDate":"2021-04-10"},{"lineNumber":471,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":472,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with three indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":473,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithThreeIndexes \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":474,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":475,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":476,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexes.add(indexThree);","lastModifiedDate":"2021-04-10"},{"lineNumber":477,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithThreeIndexes,","lastModifiedDate":"2021-04-10"},{"lineNumber":478,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_EXTRA_WHITESPACES_AT_FRONT_AND_BACK));","lastModifiedDate":"2021-04-10"},{"lineNumber":479,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":480,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":481,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":482,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_validValueWithMultipleWhitespaces_returnsValidIndexList() throws Exception {","lastModifiedDate":"2021-04-10"},{"lineNumber":483,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-04-10"},{"lineNumber":484,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexTwo \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-04-10"},{"lineNumber":485,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexThree \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-04-10"},{"lineNumber":486,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":487,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with one index","lastModifiedDate":"2021-04-10"},{"lineNumber":488,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithOneIndexOne \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":489,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithOneIndexOne.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":490,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithOneIndexOne,","lastModifiedDate":"2021-04-10"},{"lineNumber":491,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_ONE_INDEX_AND_MULTIPLE_WHITESPACES_1));","lastModifiedDate":"2021-04-10"},{"lineNumber":492,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":493,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithOneIndexTwo \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":494,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithOneIndexTwo.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":495,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithOneIndexTwo,","lastModifiedDate":"2021-04-10"},{"lineNumber":496,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_ONE_INDEX_AND_MULTIPLE_WHITESPACES_2));","lastModifiedDate":"2021-04-10"},{"lineNumber":497,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":498,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithOneIndexThree \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":499,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithOneIndexThree.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":500,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithOneIndexThree,","lastModifiedDate":"2021-04-10"},{"lineNumber":501,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_ONE_INDEX_AND_MULTIPLE_WHITESPACES_3));","lastModifiedDate":"2021-04-10"},{"lineNumber":502,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":503,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with two indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":504,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithTwoIndexesOne \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":505,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexesOne.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":506,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexesOne.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":507,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithTwoIndexesOne,","lastModifiedDate":"2021-04-10"},{"lineNumber":508,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_MULTIPLE_WHITESPACES_1));","lastModifiedDate":"2021-04-10"},{"lineNumber":509,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":510,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithTwoIndexesTwo \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":511,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexesTwo.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":512,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexesTwo.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":513,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithTwoIndexesTwo,","lastModifiedDate":"2021-04-10"},{"lineNumber":514,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_MULTIPLE_WHITESPACES_2));","lastModifiedDate":"2021-04-10"},{"lineNumber":515,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":516,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithTwoIndexesThree \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":517,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexesThree.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":518,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithTwoIndexesThree.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":519,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithTwoIndexesThree,","lastModifiedDate":"2021-04-10"},{"lineNumber":520,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_TWO_INDEXES_AND_MULTIPLE_WHITESPACES_3));","lastModifiedDate":"2021-04-10"},{"lineNumber":521,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":522,"author":{"gitId":"simran-bhadani3"},"content":"        //index list with three indexes","lastModifiedDate":"2021-04-10"},{"lineNumber":523,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithThreeIndexesOne \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":524,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexesOne.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":525,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexesOne.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":526,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexesOne.add(indexThree);","lastModifiedDate":"2021-04-10"},{"lineNumber":527,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithThreeIndexesOne,","lastModifiedDate":"2021-04-10"},{"lineNumber":528,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_MULTIPLE_WHITESPACES_1));","lastModifiedDate":"2021-04-10"},{"lineNumber":529,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":530,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithThreeIndexesTwo \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":531,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexesTwo.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":532,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexesTwo.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":533,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexesTwo.add(indexThree);","lastModifiedDate":"2021-04-10"},{"lineNumber":534,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithThreeIndexesTwo,","lastModifiedDate":"2021-04-10"},{"lineNumber":535,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_MULTIPLE_WHITESPACES_2));","lastModifiedDate":"2021-04-10"},{"lineNumber":536,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":537,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListWithThreeIndexesThree \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-10"},{"lineNumber":538,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexesThree.add(indexOne);","lastModifiedDate":"2021-04-10"},{"lineNumber":539,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexesThree.add(indexTwo);","lastModifiedDate":"2021-04-10"},{"lineNumber":540,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListWithThreeIndexesThree.add(indexThree);","lastModifiedDate":"2021-04-10"},{"lineNumber":541,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListWithThreeIndexesThree,","lastModifiedDate":"2021-04-10"},{"lineNumber":542,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_THREE_INDEXES_AND_MULTIPLE_WHITESPACES_3));","lastModifiedDate":"2021-04-10"},{"lineNumber":543,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":544,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":545,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":546,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_validValueWithIndexesInRandomOrder_returnsIndexListWithCorrectOrder() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":547,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-04-11"},{"lineNumber":548,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexTwo \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-04-11"},{"lineNumber":549,"author":{"gitId":"simran-bhadani3"},"content":"        Index indexThree \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-04-11"},{"lineNumber":550,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":551,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListRandomOrderOne \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-11"},{"lineNumber":552,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderOne.add(indexOne);","lastModifiedDate":"2021-04-11"},{"lineNumber":553,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderOne.add(indexTwo);","lastModifiedDate":"2021-04-11"},{"lineNumber":554,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderOne.add(indexThree);","lastModifiedDate":"2021-04-11"},{"lineNumber":555,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderOne.sortList();","lastModifiedDate":"2021-04-11"},{"lineNumber":556,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListRandomOrderOne,","lastModifiedDate":"2021-04-11"},{"lineNumber":557,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_RANDOM_ORDER_1));","lastModifiedDate":"2021-04-11"},{"lineNumber":558,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":559,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListRandomOrderTwo \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-11"},{"lineNumber":560,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderTwo.add(indexOne);","lastModifiedDate":"2021-04-11"},{"lineNumber":561,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderTwo.add(indexThree);","lastModifiedDate":"2021-04-11"},{"lineNumber":562,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderTwo.sortList();","lastModifiedDate":"2021-04-11"},{"lineNumber":563,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListRandomOrderTwo,","lastModifiedDate":"2021-04-11"},{"lineNumber":564,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_RANDOM_ORDER_2));","lastModifiedDate":"2021-04-11"},{"lineNumber":565,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":566,"author":{"gitId":"simran-bhadani3"},"content":"        IndexList expectedIndexListRandomOrderThree \u003d new IndexList(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2021-04-11"},{"lineNumber":567,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderThree.add(indexOne);","lastModifiedDate":"2021-04-11"},{"lineNumber":568,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderThree.add(indexTwo);","lastModifiedDate":"2021-04-11"},{"lineNumber":569,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderThree.add(indexThree);","lastModifiedDate":"2021-04-11"},{"lineNumber":570,"author":{"gitId":"simran-bhadani3"},"content":"        expectedIndexListRandomOrderThree.sortList();","lastModifiedDate":"2021-04-11"},{"lineNumber":571,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedIndexListRandomOrderThree,","lastModifiedDate":"2021-04-11"},{"lineNumber":572,"author":{"gitId":"simran-bhadani3"},"content":"                ParserUtil.parseIndexList(VALID_INDEX_LIST_WITH_RANDOM_ORDER_3));","lastModifiedDate":"2021-04-11"},{"lineNumber":573,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":574,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":575,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":576,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_invalidIndexListWithOneIndex_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":577,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-10"},{"lineNumber":578,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_ONE_INDEX));","lastModifiedDate":"2021-04-10"},{"lineNumber":579,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":580,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":581,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":582,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_invalidIndexListWithTwoIndexes_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":583,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-10"},{"lineNumber":584,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_TWO_INDEXES));","lastModifiedDate":"2021-04-10"},{"lineNumber":585,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":586,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":587,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":588,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_invalidIndexListWithThreeIndexes_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":589,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-10"},{"lineNumber":590,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_THREE_INDEXES));","lastModifiedDate":"2021-04-10"},{"lineNumber":591,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":592,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":593,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":594,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_invalidIndexListWithOneIndexAndMultipleSpaces_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":595,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-10"},{"lineNumber":596,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_ONE_INDEX_AND_MULTIPLE_SPACES));","lastModifiedDate":"2021-04-10"},{"lineNumber":597,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":598,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":599,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":600,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_invalidIndexListWithTwoIndexesAndMultipleSpaces_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":601,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-10"},{"lineNumber":602,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_TWO_INDEXES_AND_MULTIPLE_SPACES));","lastModifiedDate":"2021-04-10"},{"lineNumber":603,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":604,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":605,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":606,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_invalidIndexListWithThreeIndexesAndMultipleSpaces_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":607,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-10"},{"lineNumber":608,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_THREE_INDEXES_AND_MULTIPLE_SPACES));","lastModifiedDate":"2021-04-10"},{"lineNumber":609,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":610,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":611,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":612,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":613,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-04-10"},{"lineNumber":614,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(null));","lastModifiedDate":"2021-04-10"},{"lineNumber":615,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":616,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":617,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":618,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_singleWhitespace_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":619,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-10"},{"lineNumber":620,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_SINGLE_WHITESPACE));","lastModifiedDate":"2021-04-10"},{"lineNumber":621,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":622,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":623,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":624,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_multipleWhitespaces_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":625,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-10"},{"lineNumber":626,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_MULTIPLE_WHITESPACES));","lastModifiedDate":"2021-04-10"},{"lineNumber":627,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":628,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":629,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":630,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_commas_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":631,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-11"},{"lineNumber":632,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_COMMAS));","lastModifiedDate":"2021-04-11"},{"lineNumber":633,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":634,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":635,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":636,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_capitalAlphabet_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":637,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-11"},{"lineNumber":638,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_ALPHABETS_1));","lastModifiedDate":"2021-04-11"},{"lineNumber":639,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":640,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":641,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":642,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_mixedAlphabets_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":643,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-11"},{"lineNumber":644,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_ALPHABETS_2));","lastModifiedDate":"2021-04-11"},{"lineNumber":645,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":646,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":647,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":648,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_multipleAlphabets_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":649,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-11"},{"lineNumber":650,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_ALPHABETS_3));","lastModifiedDate":"2021-04-11"},{"lineNumber":651,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":652,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":653,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":654,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_positiveAndNegativeIntegersOne_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":655,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-11"},{"lineNumber":656,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_MIXED_INTEGERS_1));","lastModifiedDate":"2021-04-11"},{"lineNumber":657,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":658,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":659,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":660,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_positiveAndNegativeIntegersTwo_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":661,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-11"},{"lineNumber":662,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_MIXED_INTEGERS_2));","lastModifiedDate":"2021-04-11"},{"lineNumber":663,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":664,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":665,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":666,"author":{"gitId":"simran-bhadani3"},"content":"    public void parseIndexList_positiveAndNegativeIntegersThree_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":667,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-11"},{"lineNumber":668,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e ParserUtil.parseIndexList(INVALID_INDEX_LIST_WITH_MIXED_INTEGERS_3));","lastModifiedDate":"2021-04-11"},{"lineNumber":669,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":670,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":671,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":672,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseOrderItem_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":673,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOrderItem(null));","lastModifiedDate":"2021-04-11"},{"lineNumber":674,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":675,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":676,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":677,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseOrderItem_invalidValue_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":678,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOrderItem(INVALID_ORDER_DESC));","lastModifiedDate":"2021-04-11"},{"lineNumber":679,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":680,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":681,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":682,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseOrderItem_overflowInput_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":683,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOrderItem(OVERFLOW_ORDER_DESCRIPTION));","lastModifiedDate":"2021-04-11"},{"lineNumber":684,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":685,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":686,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":687,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseOrderItem_validValue_returnsOrderDescription() throws ParseException {","lastModifiedDate":"2021-04-11"},{"lineNumber":688,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItem expectedOrderItem \u003d new OrderItem(new Type(VALID_ORDER_DESC_1));","lastModifiedDate":"2021-04-11"},{"lineNumber":689,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(expectedOrderItem, ParserUtil.parseOrderItem(VALID_ORDER_DESC_1));","lastModifiedDate":"2021-04-11"},{"lineNumber":690,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":691,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":692,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":693,"author":{"gitId":"pPris"},"content":"    public void parserOrderItem_wrongCases_forcedToExpectedCase() throws ParseException {","lastModifiedDate":"2021-04-11"},{"lineNumber":694,"author":{"gitId":"pPris"},"content":"        // this test checks if order item parser method forces case for order item","lastModifiedDate":"2021-04-11"},{"lineNumber":695,"author":{"gitId":"pPris"},"content":"        // expected case: each first letter is capital, rest is lower case","lastModifiedDate":"2021-04-11"},{"lineNumber":696,"author":{"gitId":"pPris"},"content":"        OrderItem expectedOrderItem \u003d new OrderItem(new Type(EXPECTED_CASE_ORDER_DESC));","lastModifiedDate":"2021-04-11"},{"lineNumber":697,"author":{"gitId":"pPris"},"content":"        assertEquals(expectedOrderItem, ParserUtil.parseOrderItem(WRONG_CASE_ORDER_DESC_1));","lastModifiedDate":"2021-04-11"},{"lineNumber":698,"author":{"gitId":"pPris"},"content":"        assertEquals(expectedOrderItem, ParserUtil.parseOrderItem(WRONG_CASE_ORDER_DESC_2));","lastModifiedDate":"2021-04-11"},{"lineNumber":699,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":700,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":701,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":702,"author":{"gitId":"pPris"},"content":"    public void parserOrderDescription_wrongCases_forcedToExpectedCase() throws ParseException {","lastModifiedDate":"2021-04-11"},{"lineNumber":703,"author":{"gitId":"pPris"},"content":"        // this test checks if order description parser method forces case for order description","lastModifiedDate":"2021-04-11"},{"lineNumber":704,"author":{"gitId":"pPris"},"content":"        // expected case: each first letter is capital, rest is lower case","lastModifiedDate":"2021-04-11"},{"lineNumber":705,"author":{"gitId":"pPris"},"content":"        OrderDescription expectedOrderItem \u003d new OrderDescription(EXPECTED_CASE_ORDER_DESC);","lastModifiedDate":"2021-04-11"},{"lineNumber":706,"author":{"gitId":"pPris"},"content":"        assertEquals(expectedOrderItem, ParserUtil.parseOrderDescription(WRONG_CASE_ORDER_DESC_1));","lastModifiedDate":"2021-04-11"},{"lineNumber":707,"author":{"gitId":"pPris"},"content":"        assertEquals(expectedOrderItem, ParserUtil.parseOrderDescription(WRONG_CASE_ORDER_DESC_2));","lastModifiedDate":"2021-04-11"},{"lineNumber":708,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":709,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":710,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":711,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseDays_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":712,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDays(null));","lastModifiedDate":"2021-04-11"},{"lineNumber":713,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":714,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":715,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":716,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseDays_invalidValue_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":717,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDays(INVALID_DAYS));","lastModifiedDate":"2021-04-11"},{"lineNumber":718,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDays(INVALID_DAYS_MULTIPLE));","lastModifiedDate":"2021-04-11"},{"lineNumber":719,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":720,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":721,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":722,"author":{"gitId":"RuiXiong2211"},"content":"    public void parseDays_validValue_returnsOrderDescription() throws ParseException {","lastModifiedDate":"2021-04-11"},{"lineNumber":723,"author":{"gitId":"RuiXiong2211"},"content":"        int expectedDays \u003d Integer.parseInt(VALID_DAYS);","lastModifiedDate":"2021-04-11"},{"lineNumber":724,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(expectedDays, ParserUtil.parseDays(VALID_DAYS));","lastModifiedDate":"2021-04-11"},{"lineNumber":725,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":726,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"pPris":68,"RuiXiong2211":73,"xiinweii98":37,"-":179,"simran-bhadani3":369}},{"path":"src/test/java/seedu/cakecollate/logic/parser/RemindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.RemindCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ReminderDatePredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"public class RemindCommandParserTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    private RemindCommandParser parser \u003d new RemindCommandParser();","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseFailure(parser, \"1     1\", RemindCommand.MESSAGE_MULTIPLE_INPUTS);","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseFailure(parser, \" 1 a\", RemindCommand.MESSAGE_MULTIPLE_INPUTS);","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseFailure(parser, \"100000000000000000\",","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    public void parse_validArgs_returnsRemindCommand() {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseSuccess(parser, \"1\", new RemindCommand(new ReminderDatePredicate(1)));","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseSuccess(parser, \"0\", new RemindCommand(new ReminderDatePredicate(0)));","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseSuccess(parser, \"2147483647\", new RemindCommand(new ReminderDatePredicate(2147483647)));","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"RuiXiong2211":26,"xiinweii98":6}},{"path":"src/test/java/seedu/cakecollate/logic/parser/RequestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.logic.commands.RequestCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"public class RequestCommandParserTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    private RequestCommandParser parser \u003d new RequestCommandParser();","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    private final String nonEmptyRequest \u003d \"Some request.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        // have Request","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        Index targetIndex \u003d INDEX_FIRST_ORDER;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REQUEST + nonEmptyRequest;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        RequestCommand expectedCommand \u003d new RequestCommand(INDEX_FIRST_ORDER, new Request(nonEmptyRequest));","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        // no Request","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REQUEST;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        expectedCommand \u003d new RequestCommand(INDEX_FIRST_ORDER, new Request(\"\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RequestCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"        // no parameters","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseFailure(parser, RequestCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ORDER","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"                + \" \" + PREFIX_REQUEST , expectedMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"        // no index","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"        assertParseFailure(parser, RequestCommand.COMMAND_WORD + \" \" + PREFIX_REQUEST","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"                + nonEmptyRequest, expectedMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"RuiXiong2211":45}},{"path":"src/test/java/seedu/cakecollate/model/CakeCollateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ALICE;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"public class CakeCollateTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    private final CakeCollate cakeCollate \u003d new CakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(Collections.emptyList(), cakeCollate.getOrderList());","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e cakeCollate.resetData(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"    public void resetData_withValidReadOnlyCakeCollate_replacesData() {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate newData \u003d getTypicalCakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"        cakeCollate.resetData(newData);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(newData, cakeCollate);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"    public void resetData_withDuplicateOrders_throwsDuplicateOrderException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"        // Two orders with the same identity fields","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"        Order editedAlice \u003d new OrderBuilder(ALICE).build();","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        List\u003cOrder\u003e newOrders \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"        CakeCollateStub newData \u003d new CakeCollateStub(newOrders);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(DuplicateOrderException.class, () -\u003e cakeCollate.resetData(newData));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"    public void hasOrder_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e cakeCollate.hasOrder(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"    public void hasOrder_orderNotInCakeCollate_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(cakeCollate.hasOrder(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"    public void hasOrder_orderInCakeCollate_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"        cakeCollate.addOrder(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(cakeCollate.hasOrder(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"    public void hasOrder_orderWithDifferentIdentityFieldsInCakeCollate_returnsFalse() {","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        cakeCollate.addOrder(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"        Order editedAlice \u003d new OrderBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(cakeCollate.hasOrder(editedAlice));","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"    public void getOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e cakeCollate.getOrderList().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"     * A stub ReadOnlyCakeCollate whose orders list can violate interface constraints.","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"    private static class CakeCollateStub implements ReadOnlyCakeCollate {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"        private final ObservableList\u003cOrder\u003e orders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"        CakeCollateStub(Collection\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"            this.orders.setAll(orders);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"            return orders;","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"xiinweii98":43,"-":57}},{"path":"src/test/java/seedu/cakecollate/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.BUTTERSCOTCH;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.CHOCOLATE;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.CHOCOLATE_MUD;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ALICE;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.BENSON;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.BOB;","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.CARL;","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ELLE;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.GEORGE;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.Prefix;","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.ContainsKeywordsPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.Status;","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.CakeCollateBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.OrderItemsBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(new CakeCollate(), new CakeCollate(modelManager.getCakeCollate()));","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        userPrefs.setCakeCollateFilePath(Paths.get(\"cakecollate/book/file/path\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        userPrefs.setCakeCollateFilePath(Paths.get(\"new/cakecollate/book/file/path\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"    public void setCakeCollateFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setCakeCollateFilePath(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"    public void setCakeCollateFilePath_validPath_setsCakeCollateFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"        Path path \u003d Paths.get(\"cakecollate/book/file/path\");","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"        modelManager.setCakeCollateFilePath(path);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(path, modelManager.getCakeCollateFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"    public void hasOrder_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasOrder(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"    public void hasOrder_orderNotInCakeCollate_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(modelManager.hasOrder(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"    public void hasOrder_orderInCakeCollate_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"        modelManager.addOrder(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(modelManager.hasOrder(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredOrderList().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate cakeCollate \u003d new CakeCollateBuilder().withOrder(ALICE).withOrder(BENSON).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate differentCakeCollate \u003d new CakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItems orderItems \u003d new OrderItemsBuilder().withOrderItem(BUTTERSCOTCH).withOrderItem(CHOCOLATE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItems differentOrderItems \u003d new OrderItemsBuilder().withOrderItem(BUTTERSCOTCH)","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"RuiXiong2211"},"content":"                .withOrderItem(CHOCOLATE_MUD).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"RuiXiong2211"},"content":"        modelManager \u003d new ModelManager(cakeCollate, userPrefs, orderItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"RuiXiong2211"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(cakeCollate, userPrefs, orderItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"xiinweii98"},"content":"        // different cakeCollate -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentCakeCollate, userPrefs, orderItems)));","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"RuiXiong2211"},"content":"        // different orderItems -\u003e return false","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(modelManager.equals(new ModelManager(cakeCollate, userPrefs, differentOrderItems)));","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":141,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Arrays.asList(keywords));","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"        modelManager.updateFilteredOrderList(new ContainsKeywordsPredicate(map));","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(modelManager.equals(new ModelManager(cakeCollate, userPrefs, orderItems)));","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":148,"author":{"gitId":"xiinweii98"},"content":"        modelManager.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"xiinweii98"},"content":"        differentUserPrefs.setCakeCollateFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(modelManager.equals(new ModelManager(cakeCollate, differentUserPrefs, orderItems)));","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"pPris"},"content":"     * Ensure that when an order with an earlier delivery date is added after one with a later delivery date,","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"pPris"},"content":"     * their orders are swapped in the model, which should always be sorted.","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"pPris"},"content":"    public void getFilteredOrderList_addOrdersNotSorted_modelShouldBeSorted() {","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"pPris"},"content":"        assert ELLE.getDeliveryDate().compareTo(GEORGE.getDeliveryDate()) \u003e 0","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"pPris"},"content":"                : \"Use different orders for this test case.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"pPris"},"content":"        CakeCollate cakeCollate \u003d new CakeCollateBuilder().withOrder(ELLE).withOrder(GEORGE).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"pPris"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItems orderItems \u003d new OrderItems();","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"RuiXiong2211"},"content":"        modelManager \u003d new ModelManager(cakeCollate, userPrefs, orderItems);","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"pPris"},"content":"        assertEquals(modelManager.getFilteredOrderList(),","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"pPris"},"content":"                Arrays.asList(GEORGE, ELLE));","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":174,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":175,"author":{"gitId":"pPris"},"content":"     * Ensure that when an order with different status are added, they\u0027re always sorted by","lastModifiedDate":"2021-04-12"},{"lineNumber":176,"author":{"gitId":"pPris"},"content":"     * undelivered, cancelled and delivered.","lastModifiedDate":"2021-04-12"},{"lineNumber":177,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":178,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":179,"author":{"gitId":"pPris"},"content":"    public void getFilteredOrderList_addOrdersOutOfOrderStatus_modelShouldBeSorted() {","lastModifiedDate":"2021-04-12"},{"lineNumber":180,"author":{"gitId":"pPris"},"content":"        String s \u003d \"31/12/2022\";","lastModifiedDate":"2021-04-12"},{"lineNumber":181,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":182,"author":{"gitId":"pPris"},"content":"        Order order1 \u003d new OrderBuilder(ALICE).withDeliveryDate(s).withDeliveryStatus(Status.UNDELIVERED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":183,"author":{"gitId":"pPris"},"content":"        Order order2 \u003d new OrderBuilder(BOB).withDeliveryDate(s).withDeliveryStatus(Status.CANCELLED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":184,"author":{"gitId":"pPris"},"content":"        Order order3 \u003d new OrderBuilder(CARL).withDeliveryDate(s).withDeliveryStatus(Status.DELIVERED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":185,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":186,"author":{"gitId":"pPris"},"content":"        CakeCollate cakeCollate \u003d","lastModifiedDate":"2021-04-12"},{"lineNumber":187,"author":{"gitId":"pPris"},"content":"                new CakeCollateBuilder().withOrder(order3).withOrder(order1).withOrder(order2).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":188,"author":{"gitId":"pPris"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-04-12"},{"lineNumber":189,"author":{"gitId":"pPris"},"content":"        OrderItems orderItems \u003d new OrderItems();","lastModifiedDate":"2021-04-12"},{"lineNumber":190,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":191,"author":{"gitId":"pPris"},"content":"        modelManager \u003d new ModelManager(cakeCollate, userPrefs, orderItems);","lastModifiedDate":"2021-04-12"},{"lineNumber":192,"author":{"gitId":"pPris"},"content":"        assertEquals(modelManager.getFilteredOrderList(),","lastModifiedDate":"2021-04-12"},{"lineNumber":193,"author":{"gitId":"pPris"},"content":"                Arrays.asList(order1, order2, order3));","lastModifiedDate":"2021-04-12"},{"lineNumber":194,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":195,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":196,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":197,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":198,"author":{"gitId":"pPris"},"content":"     * Ensures that when orders of different statuses, and some orders of the same status but different dates,","lastModifiedDate":"2021-04-12"},{"lineNumber":199,"author":{"gitId":"pPris"},"content":"     * are sorted correctly.","lastModifiedDate":"2021-04-12"},{"lineNumber":200,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":201,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":202,"author":{"gitId":"pPris"},"content":"    public void getFilteredOrderList_addOrdersOutOfOrderStatusAndDate_modelShouldBeSorted() {","lastModifiedDate":"2021-04-12"},{"lineNumber":203,"author":{"gitId":"pPris"},"content":"        String d1 \u003d \"31/12/2022\";","lastModifiedDate":"2021-04-12"},{"lineNumber":204,"author":{"gitId":"pPris"},"content":"        String d2 \u003d \"01/04/2023\";","lastModifiedDate":"2021-04-12"},{"lineNumber":205,"author":{"gitId":"pPris"},"content":"        String d3 \u003d \"01/05/2024\";","lastModifiedDate":"2021-04-12"},{"lineNumber":206,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":207,"author":{"gitId":"pPris"},"content":"        Order order1 \u003d new OrderBuilder(ALICE).withDeliveryDate(d1).withDeliveryStatus(Status.UNDELIVERED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":208,"author":{"gitId":"pPris"},"content":"        Order order2 \u003d new OrderBuilder(ALICE).withDeliveryDate(d2).withDeliveryStatus(Status.UNDELIVERED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":209,"author":{"gitId":"pPris"},"content":"        Order order3 \u003d new OrderBuilder(BOB).withDeliveryDate(d2).withDeliveryStatus(Status.CANCELLED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":210,"author":{"gitId":"pPris"},"content":"        Order order4 \u003d new OrderBuilder(BOB).withDeliveryDate(d3).withDeliveryStatus(Status.CANCELLED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":211,"author":{"gitId":"pPris"},"content":"        Order order5 \u003d new OrderBuilder(CARL).withDeliveryDate(d1).withDeliveryStatus(Status.DELIVERED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":212,"author":{"gitId":"pPris"},"content":"        Order order6 \u003d new OrderBuilder(CARL).withDeliveryDate(d3).withDeliveryStatus(Status.DELIVERED).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":213,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":214,"author":{"gitId":"pPris"},"content":"        CakeCollate cakeCollate \u003d new CakeCollateBuilder()","lastModifiedDate":"2021-04-12"},{"lineNumber":215,"author":{"gitId":"pPris"},"content":"                .withOrder(order6)","lastModifiedDate":"2021-04-12"},{"lineNumber":216,"author":{"gitId":"pPris"},"content":"                .withOrder(order1)","lastModifiedDate":"2021-04-12"},{"lineNumber":217,"author":{"gitId":"pPris"},"content":"                .withOrder(order4)","lastModifiedDate":"2021-04-12"},{"lineNumber":218,"author":{"gitId":"pPris"},"content":"                .withOrder(order2)","lastModifiedDate":"2021-04-12"},{"lineNumber":219,"author":{"gitId":"pPris"},"content":"                .withOrder(order5)","lastModifiedDate":"2021-04-12"},{"lineNumber":220,"author":{"gitId":"pPris"},"content":"                .withOrder(order3)","lastModifiedDate":"2021-04-12"},{"lineNumber":221,"author":{"gitId":"pPris"},"content":"                .build();","lastModifiedDate":"2021-04-12"},{"lineNumber":222,"author":{"gitId":"pPris"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-04-12"},{"lineNumber":223,"author":{"gitId":"pPris"},"content":"        OrderItems orderItems \u003d new OrderItems();","lastModifiedDate":"2021-04-12"},{"lineNumber":224,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":225,"author":{"gitId":"pPris"},"content":"        modelManager \u003d new ModelManager(cakeCollate, userPrefs, orderItems);","lastModifiedDate":"2021-04-12"},{"lineNumber":226,"author":{"gitId":"pPris"},"content":"        assertEquals(modelManager.getFilteredOrderList(),","lastModifiedDate":"2021-04-12"},{"lineNumber":227,"author":{"gitId":"pPris"},"content":"                Arrays.asList(order1, order2, order3, order4, order5, order6));","lastModifiedDate":"2021-04-12"},{"lineNumber":228,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"pPris":79,"RuiXiong2211":18,"xiinweii98":38,"-":94}},{"path":"src/test/java/seedu/cakecollate/model/OrderItemsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.CHOCOLATE;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.getTypicalOrderItemsModel;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Collection;","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.exceptions.DuplicateOrderItemException;","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.testutil.OrderItemBuilder;","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"public class OrderItemsTest {","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    private final OrderItems orderItems \u003d new OrderItems();","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    public void constructor() {","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(Collections.emptyList(), orderItems.getOrderItemList());","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e orderItems.resetData(null));","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"    public void resetData_withValidReadOnlyOrderItems_replacesData() {","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItems newData \u003d getTypicalOrderItemsModel();","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        orderItems.resetData(newData);","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(newData, orderItems);","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"    public void resetData_withDuplicateOrderItems_throwsDuplicateOrderItemsException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem editedChocolate \u003d new OrderItemBuilder(CHOCOLATE).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"        List\u003cOrderItem\u003e newOrderItems \u003d Arrays.asList(CHOCOLATE, editedChocolate);","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        seedu.cakecollate.model.OrderItemsTest.OrderItemsStub newData \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"                new seedu.cakecollate.model.OrderItemsTest.OrderItemsStub(newOrderItems);","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(DuplicateOrderItemException.class, () -\u003e orderItems.resetData(newData));","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"    public void hasOrderItem_nullOrderItem_throwsNullPointerException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e orderItems.hasOrderItem(null));","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"    public void hasOrderItem_orderNotInOrderItems_returnsFalse() {","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(orderItems.hasOrderItem(TypicalOrderItems.CHOCOLATE));","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"    public void hasOrderItem_orderItemInOrderItems_returnsTrue() {","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"        orderItems.addOrderItem(TypicalOrderItems.CHOCOLATE);","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(orderItems.hasOrderItem(CHOCOLATE));","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"    public void hasOrderItem_orderItemWithDifferentTypeFieldInOrderItemsList_returnsFalse() {","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"        orderItems.addOrderItem(CHOCOLATE);","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem editedChocolate \u003d new OrderItemBuilder(CHOCOLATE).withType(\"Strawberry\")","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"                .build();","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(orderItems.hasOrderItem(editedChocolate));","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"    public void getOrderItemsList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e orderItems.getOrderItemList().remove(0));","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"     * A stub OrderItemsStub whose order items list can violate interface constraints.","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"    private static class OrderItemsStub implements ReadOnlyOrderItems {","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"        private final ObservableList\u003cOrderItem\u003e orderItems \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItemsStub(Collection\u003cOrderItem\u003e orderItems) {","lastModifiedDate":"2021-04-10"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"            this.orderItems.setAll(orderItems);","lastModifiedDate":"2021-04-10"},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"        @Override","lastModifiedDate":"2021-04-10"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"        public ObservableList\u003cOrderItem\u003e getOrderItemList() {","lastModifiedDate":"2021-04-10"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"            return orderItems;","lastModifiedDate":"2021-04-10"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"simran-bhadani3":100}},{"path":"src/test/java/seedu/cakecollate/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    public void setCakeCollateFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setCakeCollateFilePath(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"xiinweii98":4,"-":17}},{"path":"src/test/java/seedu/cakecollate/model/order/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"        // null cakecollate","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(Address","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"                .isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"xiinweii98":5,"-":32}},{"path":"src/test/java/seedu/cakecollate/model/order/ContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ALL;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DELIVERY_STATUS;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ALICE;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.parser.Prefix;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"public class ContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map1 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"        map1.put(PREFIX_NAME, firstPredicateKeywordList);","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map2 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"        map1.put(PREFIX_NAME, secondPredicateKeywordList);","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate firstPredicate \u003d new ContainsKeywordsPredicate(map1);","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate secondPredicate \u003d new ContainsKeywordsPredicate(map2);","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate firstPredicateCopy \u003d new ContainsKeywordsPredicate(map1);","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"        // Sub keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Collections.singletonList(\"ice\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"        // One keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_PHONE, Collections.singletonList(\"12345678\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"        // Sub keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_PHONE, Arrays.asList(\"123\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"        // Sub keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_PHONE, Arrays.asList(\"123\", \"456\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"        // Only one matching sub keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_PHONE, Arrays.asList(\"123\", \"910\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"xiinweii98"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"xiinweii98"},"content":"        // One keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_EMAIL, Collections.singletonList(\"alice@example.com\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"        // Sub keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_EMAIL, Arrays.asList(\"alice\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"xiinweii98"},"content":"        // Sub keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_EMAIL, Arrays.asList(\"alice\", \"@example\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"xiinweii98"},"content":"        // Only one matching sub keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_EMAIL, Arrays.asList(\".com\", \".sg\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"xiinweii98"},"content":"        // Mixed-case sub keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_EMAIL, Arrays.asList(\"aLIce\", \"eXAMplE\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"xiinweii98"},"content":"        // Mixed-case keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_EMAIL, Arrays.asList(\"aLIce@eXAMplE.Com\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"xiinweii98"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"xiinweii98"},"content":"        // One keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ADDRESS, Collections.singletonList(\"Jurong\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withAddress(\"123, Jurong West Ave 6, #08-111\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"xiinweii98"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ADDRESS, Arrays.asList(\"123,\", \"Jurong\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withAddress(\"123, Jurong West Ave 6, #08-111\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"xiinweii98"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ADDRESS, Arrays.asList(\"Singapore\", \"West\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withAddress(\"123, Jurong West Ave 6, #08-111\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"xiinweii98"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ADDRESS, Arrays.asList(\"AVE\", \"JurONG\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withAddress(\"123, Jurong West Ave 6, #08-111\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"xiinweii98"},"content":"        // Sub keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ADDRESS, Arrays.asList(\"8-11\", \"rOng\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withAddress(\"123, Jurong West Ave 6, #08-111\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"xiinweii98"},"content":"    public void test_orderDescriptionContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"xiinweii98"},"content":"        // One keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"simran-bhadani3"},"content":"        map.put(PREFIX_ORDER_DESCRIPTION, Arrays.asList(\"Strawberry\", \"Cakes\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":200,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(predicate.test(new OrderBuilder().withOrderDescriptions(\"Strawberry Cakes\").build()));","lastModifiedDate":"2021-04-11"},{"lineNumber":202,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"xiinweii98"},"content":"        // One keyword, two order descriptions","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"simran-bhadani3"},"content":"        map.put(PREFIX_ORDER_DESCRIPTION, Arrays.asList(\"Chocolate\", \"Cakes\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":205,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"simran-bhadani3"},"content":"                .withOrderDescriptions(\"Strawberry Cakes\", \"Chocolate Cakes\").build()));","lastModifiedDate":"2021-04-11"},{"lineNumber":208,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"xiinweii98"},"content":"        //Multiple keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"simran-bhadani3"},"content":"        map.put(PREFIX_ORDER_DESCRIPTION, Arrays.asList(\"Strawberry\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":212,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(predicate.test(new OrderBuilder().withOrderDescriptions(\"Strawberry Cakes\").build()));","lastModifiedDate":"2021-04-11"},{"lineNumber":214,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"xiinweii98"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ORDER_DESCRIPTION, Arrays.asList(\"Strawberry\", \"Chocolate\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(predicate.test(new OrderBuilder().withOrderDescriptions(\"Strawberry Cakes\").build()));","lastModifiedDate":"2021-04-11"},{"lineNumber":220,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":221,"author":{"gitId":"xiinweii98"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ORDER_DESCRIPTION, Arrays.asList(\"strAwBerRy\", \"CAKES\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":224,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(predicate.test(new OrderBuilder().withOrderDescriptions(\"Strawberry Cakes\").build()));","lastModifiedDate":"2021-04-11"},{"lineNumber":226,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"xiinweii98"},"content":"        // Sub keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ORDER_DESCRIPTION, Arrays.asList(\"berry\", \"ake\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":230,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(predicate.test(new OrderBuilder().withOrderDescriptions(\"Strawberry Cakes\").build()));","lastModifiedDate":"2021-04-11"},{"lineNumber":232,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":233,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":234,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":235,"author":{"gitId":"xiinweii98"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":236,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":237,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":238,"author":{"gitId":"xiinweii98"},"content":"        // One keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":239,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_TAG, Collections.singletonList(\"friends\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":240,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":241,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":242,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":243,"author":{"gitId":"xiinweii98"},"content":"        // One keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":244,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_TAG, Collections.singletonList(\"husband\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":245,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":246,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withTags(\"friends\", \"husband\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":247,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":248,"author":{"gitId":"xiinweii98"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":249,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":250,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_TAG, Arrays.asList(\"friEndS\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":251,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":252,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":253,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":254,"author":{"gitId":"xiinweii98"},"content":"        // Sub keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":255,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":256,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_TAG, Arrays.asList(\"ends\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":258,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":259,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":260,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":261,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":262,"author":{"gitId":"xiinweii98"},"content":"    public void test_deliveryDateContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":263,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":264,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":265,"author":{"gitId":"xiinweii98"},"content":"        // day match","lastModifiedDate":"2021-03-27"},{"lineNumber":266,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DATE, Collections.singletonList(\"1\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":267,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":268,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryDate(\"01/02/2022\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":269,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":270,"author":{"gitId":"xiinweii98"},"content":"        // month match numeral","lastModifiedDate":"2021-03-27"},{"lineNumber":271,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DATE, Collections.singletonList(\"2\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":272,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryDate(\"01/02/2022\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":275,"author":{"gitId":"xiinweii98"},"content":"        // month match name","lastModifiedDate":"2021-03-27"},{"lineNumber":276,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":277,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DATE, Arrays.asList(\"February\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":278,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":279,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryDate(\"01/02/2022\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":280,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":281,"author":{"gitId":"xiinweii98"},"content":"        // year match","lastModifiedDate":"2021-03-27"},{"lineNumber":282,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":283,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DATE, Arrays.asList(\"2022\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":284,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":285,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryDate(\"01/02/2022\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":286,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":287,"author":{"gitId":"xiinweii98"},"content":"        // format dd/MM/yyyy","lastModifiedDate":"2021-03-27"},{"lineNumber":288,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":289,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DATE, Arrays.asList(\"01/02/2022\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":290,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":291,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryDate(\"01/02/2022\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":292,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":293,"author":{"gitId":"xiinweii98"},"content":"        // format dd-MM-yyyy","lastModifiedDate":"2021-03-27"},{"lineNumber":294,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":295,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DATE, Arrays.asList(\"01-02-2022\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":296,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":297,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryDate(\"01/02/2022\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":298,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":299,"author":{"gitId":"xiinweii98"},"content":"        // format dd.MM.yyyy","lastModifiedDate":"2021-03-27"},{"lineNumber":300,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":301,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DATE, Arrays.asList(\"01.02.2022\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":302,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":303,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryDate(\"01/02/2022\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":304,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":305,"author":{"gitId":"xiinweii98"},"content":"        // format dd MMM yyyy","lastModifiedDate":"2021-03-27"},{"lineNumber":306,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":307,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DATE, Arrays.asList(\"01\", \"Feb\", \"2022\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":308,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":309,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryDate(\"01/02/2022\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":310,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":311,"author":{"gitId":"xiinweii98"},"content":"        // sub keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":312,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":313,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DATE, Arrays.asList(\"ruary\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":314,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":315,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryDate(\"01/02/2022\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":316,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":317,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":318,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DATE, Arrays.asList(\"022\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":319,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":320,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryDate(\"01/02/2022\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":321,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":322,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":323,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":324,"author":{"gitId":"xiinweii98"},"content":"    public void test_requestContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":325,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":326,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":327,"author":{"gitId":"xiinweii98"},"content":"        // One keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":328,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_REQUEST, Collections.singletonList(\"cake\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":329,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":330,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withRequest(\"Custom cake decoration, diamond hands\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":331,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":332,"author":{"gitId":"xiinweii98"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":333,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":334,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_REQUEST, Arrays.asList(\"Custom\", \"hands\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":335,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":336,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withRequest(\"Custom cake decoration, diamond hands\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":337,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":338,"author":{"gitId":"xiinweii98"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":339,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":340,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_REQUEST, Arrays.asList(\"paper\", \"diamond\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":341,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":342,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withRequest(\"Custom cake decoration, diamond hands\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":343,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":344,"author":{"gitId":"xiinweii98"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":345,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":346,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_REQUEST, Arrays.asList(\"CuStOm\", \"decoRATion\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":347,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":348,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withRequest(\"Custom cake decoration, diamond hands\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":349,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":350,"author":{"gitId":"xiinweii98"},"content":"        // Sub keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":351,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":352,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_REQUEST, Arrays.asList(\"ake\", \"dia\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":353,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":354,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withRequest(\"Custom cake decoration, diamond hands\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":355,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":356,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":357,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":358,"author":{"gitId":"xiinweii98"},"content":"    public void test_deliveryStatusContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":359,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":360,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":361,"author":{"gitId":"xiinweii98"},"content":"        // One keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":362,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DELIVERY_STATUS, Collections.singletonList(\"UNDELIVERED\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":363,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":364,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryStatus().build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":365,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":366,"author":{"gitId":"xiinweii98"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":367,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":368,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DELIVERY_STATUS, Arrays.asList(\"UNDELIVERED\", \"CANCELLED\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":369,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":370,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryStatus(Status.UNDELIVERED).build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":371,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":372,"author":{"gitId":"xiinweii98"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":373,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":374,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DELIVERY_STATUS, Arrays.asList(\"DELivEREd\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":375,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":376,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryStatus(Status.DELIVERED).build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":377,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":378,"author":{"gitId":"xiinweii98"},"content":"        // Sub keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":379,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":380,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_DELIVERY_STATUS, Arrays.asList(\"can\", \"lEd\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":381,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":382,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(new OrderBuilder().withDeliveryStatus(Status.CANCELLED).build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":383,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":384,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":385,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":386,"author":{"gitId":"xiinweii98"},"content":"    public void test_orderContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":387,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":388,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":389,"author":{"gitId":"xiinweii98"},"content":"        // One keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":390,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ALL, Collections.singletonList(\"alice\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":391,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":392,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(ALICE));","lastModifiedDate":"2021-03-27"},{"lineNumber":393,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":394,"author":{"gitId":"xiinweii98"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":395,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":396,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ALL, Arrays.asList(\"Jurong\", \"example\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":397,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":398,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(ALICE));","lastModifiedDate":"2021-03-27"},{"lineNumber":399,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":400,"author":{"gitId":"xiinweii98"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":401,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":402,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ALL, Arrays.asList(\"1253\", \"6969\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":403,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":404,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(ALICE));","lastModifiedDate":"2021-03-27"},{"lineNumber":405,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":406,"author":{"gitId":"xiinweii98"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":407,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":408,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ALL, Arrays.asList(\"StraWberRy\", \"friEndS\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":409,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":410,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(ALICE));","lastModifiedDate":"2021-03-27"},{"lineNumber":411,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":412,"author":{"gitId":"xiinweii98"},"content":"        // Sub keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":413,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":414,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_ALL, Arrays.asList(\"Janua\", \"paul\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":415,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":416,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(predicate.test(ALICE));","lastModifiedDate":"2021-03-27"},{"lineNumber":417,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":418,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":420,"author":{"gitId":"xiinweii98"},"content":"    public void test_doesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-27"},{"lineNumber":421,"author":{"gitId":"xiinweii98"},"content":"        HashMap\u003cPrefix, List\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":422,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":424,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":425,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Collections.emptyList());","lastModifiedDate":"2021-03-27"},{"lineNumber":426,"author":{"gitId":"xiinweii98"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":427,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(predicate.test(new OrderBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":430,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":431,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":432,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":433,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(predicate.test(new OrderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":435,"author":{"gitId":"xiinweii98"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2021-03-27"},{"lineNumber":436,"author":{"gitId":"xiinweii98"},"content":"        map.clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":437,"author":{"gitId":"xiinweii98"},"content":"        map.put(PREFIX_NAME, Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":438,"author":{"gitId":"xiinweii98"},"content":"        predicate \u003d new ContainsKeywordsPredicate(map);","lastModifiedDate":"2021-03-27"},{"lineNumber":439,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(predicate.test(new OrderBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-17"},{"lineNumber":440,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":442,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"xiinweii98":382,"-":51,"simran-bhadani3":9}},{"path":"src/test/java/seedu/cakecollate/model/order/DeliveryDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"public class DeliveryDateTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeliveryDate(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    public void constructor_invalidDeliveryDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"        String invalidDeliveryDate \u003d \"2021/01\";","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DeliveryDate(invalidDeliveryDate));","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    public void equals() {","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        LocalDate validDeliveryDate \u003d LocalDate.now().plusDays(5L);","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"        DateTimeFormatter format2 \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"        DateTimeFormatter format3 \u003d DateTimeFormatter.ofPattern(\"dd.MM.yyyy\");","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        DateTimeFormatter format4 \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(new DeliveryDate(format1.format(validDeliveryDate)),","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"                new DeliveryDate(format2.format(validDeliveryDate)));","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(new DeliveryDate(format2.format(validDeliveryDate)),","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"                new DeliveryDate(format3.format(validDeliveryDate)));","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(new DeliveryDate(format3.format(validDeliveryDate)),","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"                new DeliveryDate(format4.format(validDeliveryDate)));","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"    public void isValidFormat() {","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        // null delivery date","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e DeliveryDate.isValidFormat(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"        // invalid delivery dates","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(\"01/13/2022\")); // invalid month","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(\"32/01/2022\")); // invalid day","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(\"01/01/202020\")); // invalid year","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(\"01,01,2022\")); // invalid delimiter","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(\"01:01:2022\")); // invalid delimiter","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(\"01/01-2022\")); // inconsistent delimiter","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(\"2022/12/31\")); // invalid format","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(\"29 Feb 2022\")); // non-leap year","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(LocalDate.now().toString())); // Invalid in-build LocalDate format","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"        // valid delivery dates","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(DeliveryDate.isValidFormat(\"02/02/2022\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(DeliveryDate.isValidFormat(\"02-02-2022\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(DeliveryDate.isValidFormat(\"02.02.2022\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(DeliveryDate.isValidFormat(\"02 Feb 2022\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(DeliveryDate.isValidFormat(\"29/02/2024\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"[dd/MM/yyyy]\");","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        // 3 working days from current date","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(DeliveryDate.isValidFormat(dateFormat.format(LocalDate.now().plusDays(3L))));","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"    public void isXDaysLater() {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"        String yesterday \u003d DateTimeFormatter.ofPattern(\"[dd/MM/yyyy]\").format(LocalDate.now().plusDays(-1L));","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"        String today \u003d DateTimeFormatter.ofPattern(\"[dd/MM/yyyy]\").format(LocalDate.now());","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"        String tomorrow \u003d DateTimeFormatter.ofPattern(\"[dd/MM/yyyy]\").format(LocalDate.now().plusDays(1L));","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"        // isValidFormat should be called before isXDaysLater","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(\"2020/13/40\") \u0026\u0026 DeliveryDate.isXDaysLater(today, 0L));","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"        // date is in the past","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(DeliveryDate.isValidFormat(yesterday) \u0026\u0026 DeliveryDate.isXDaysLater(yesterday, 0L));","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        // date is today or in the future","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(DeliveryDate.isValidFormat(today) \u0026\u0026 DeliveryDate.isXDaysLater(today, 0L));","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(DeliveryDate.isValidFormat(tomorrow) \u0026\u0026 DeliveryDate.isXDaysLater(tomorrow, 0L));","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(DeliveryDate.isValidFormat(tomorrow) \u0026\u0026 DeliveryDate.isXDaysLater(tomorrow, 1L));","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"xiinweii98":84}},{"path":"src/test/java/seedu/cakecollate/model/order/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"xiinweii98":2,"-":59}},{"path":"src/test/java/seedu/cakecollate/model/order/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"xiinweii98":2,"-":38}},{"path":"src/test/java/seedu/cakecollate/model/order/OrderDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"public class OrderDescriptionTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"        assertThrows(NullPointerException.class, () -\u003e new OrderDescription(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"    public void constructor_invalidOrderDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new OrderDescription(\" \"));","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new OrderDescription(\"\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"    public void isValidOrderDescription() {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"        // null order descriptions","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"pPris"},"content":"        assertThrows(NullPointerException.class, () -\u003e OrderDescription.isValidOrderDescription(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"        // invalid order descriptions","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"        assertFalse(OrderDescription.isValidOrderDescription(\"\")); // empty string","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"        assertFalse(OrderDescription.isValidOrderDescription(\" \")); // spaces only","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(OrderDescription.isValidOrderDescription(\" \\t  \\n   \\r \")); // spaces","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"        assertFalse(OrderDescription.isValidOrderDescription(\"Cake##\")); // with special characters excluding \"","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(OrderDescription.isValidOrderDescription(\"12345\")); // numbers","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(OrderDescription.isValidOrderDescription(\"2 x Chocolate cake\")); // numbers","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"        // valid order descriptions","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"        assertTrue(OrderDescription.isValidOrderDescription(\"chocolate cake\")); // alphabets only","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"pPris":34,"xiinweii98":3,"simran-bhadani3":2}},{"path":"src/test/java/seedu/cakecollate/model/order/OrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_BERRY_ORDER;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_DELIVERY_DATE_BOB;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_REQUEST_BOB;","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ALICE;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"public class OrderTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"        Order order \u003d new OrderBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e order.getTags().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    public void isSameOrder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(ALICE.isSameOrder(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(ALICE.isSameOrder(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"        // same name, address, order description, delivery date, all other attributes different -\u003e returns true","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        Order editedAlice \u003d new OrderBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(ALICE.isSameOrder(editedAlice));","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(ALICE.isSameOrder(editedAlice));","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"        // different address, all other attributes same -\u003e returns false","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(ALICE.isSameOrder(editedAlice));","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        // different order description, all other attributes same -\u003e returns false","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withOrderDescriptions(VALID_BERRY_ORDER).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(ALICE.isSameOrder(editedAlice));","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"        // different delivery date, all other attributes same -\u003e returns false","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withDeliveryDate(VALID_DELIVERY_DATE_BOB).build();","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(ALICE.isSameOrder(editedAlice));","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"        Order editedBob \u003d new OrderBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(BOB.isSameOrder(editedBob));","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        editedBob \u003d new OrderBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(BOB.isSameOrder(editedBob));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"        Order aliceCopy \u003d new OrderBuilder(ALICE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"        Order editedAlice \u003d new OrderBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-04-12"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-04-12"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"        // different order description -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withOrderDescriptions(VALID_BERRY_ORDER).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-04-10"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"        // different delivery date -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":111,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withDeliveryDate(VALID_DELIVERY_DATE_BOB).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-04-10"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"        // different delivery status -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":115,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withDeliveryStatus(Status.CANCELLED).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":116,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-04-10"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":118,"author":{"gitId":"xiinweii98"},"content":"        // different request -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":119,"author":{"gitId":"xiinweii98"},"content":"        editedAlice \u003d new OrderBuilder(ALICE).withRequest(VALID_REQUEST_BOB).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"xiinweii98":66,"-":56}},{"path":"src/test/java/seedu/cakecollate/model/order/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"xiinweii98":2,"-":38}},{"path":"src/test/java/seedu/cakecollate/model/order/ReminderDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"public class ReminderDatePredicateTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        long zeroDays \u003d 0L;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        long fiveDays \u003d 5L;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate firstPredicate \u003d new ReminderDatePredicate(zeroDays);","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate secondPredicate \u003d new ReminderDatePredicate(fiveDays);","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"        //same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        // same values -\u003e return true","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate firstPredicateCopy \u003d new ReminderDatePredicate(zeroDays);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        //different types -\u003e return false","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"        //null-\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"        //different condition","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"    public void test_nameDateWithin_returnsTrue() {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"        DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"        LocalDate testDate1 \u003d LocalDate.now().plusDays(4L);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"        // within 5 day from now, return true","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate fiveDays \u003d new ReminderDatePredicate(5L);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(fiveDays.test(new OrderBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"                .withDeliveryDate(testDate1.format(format1)).build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"        // within 4 days from now, return true","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate zeroDays \u003d new ReminderDatePredicate(4L);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(zeroDays.test(new OrderBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"                .withDeliveryDate(testDate1.format(format1)).build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"    public void test_nameDateNotWithin_returnsFalse() {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"        DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"        LocalDate testDate1 \u003d LocalDate.now().plusDays(6L);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"        LocalDate testDate2 \u003d LocalDate.now().plusDays(5L);","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"        // within 5 days from now, return false","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate fiveDays \u003d new ReminderDatePredicate(5L);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(fiveDays.test(new OrderBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"                .withDeliveryDate(testDate1.format(format1)).build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"        // within 0 days from now, return true","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"        ReminderDatePredicate zeroDays \u003d new ReminderDatePredicate(0L);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(zeroDays.test(new OrderBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"                .withDeliveryDate(testDate2.format(format1)).build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"RuiXiong2211":66,"xiinweii98":6}},{"path":"src/test/java/seedu/cakecollate/model/order/RequestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"public class RequestTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        Request request \u003d new Request(\"Hello\");","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(request.equals(request));","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        Request requestCopy \u003d new Request(request.value);","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        assertTrue(request.equals(requestCopy));","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(request.equals(1));","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(request.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        // different request -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        Request differentRequest \u003d new Request(\"Bye\");","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(request.equals(differentRequest));","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"RuiXiong2211":32}},{"path":"src/test/java/seedu/cakecollate/model/order/UniqueOrderListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.order;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ALICE;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.exceptions.OrderNotFoundException;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.OrderBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"public class UniqueOrderListTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    private final UniqueOrderList uniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"    public void contains_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.contains(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    public void contains_orderNotInList_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(uniqueOrderList.contains(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"    public void contains_orderInList_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(uniqueOrderList.contains(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"    public void contains_orderWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        Order editedAlice \u003d new OrderBuilder(ALICE).build();","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"        assertTrue(uniqueOrderList.contains(editedAlice));","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"    public void add_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.add(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"    public void add_duplicateOrder_throwsDuplicateOrderException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(DuplicateOrderException.class, () -\u003e uniqueOrderList.add(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"    public void setOrder_nullTargetOrder_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrder(null, ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"    public void setOrder_nullEditedOrder_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrder(ALICE, null));","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"    public void setOrder_targetOrderNotInList_throwsOrderNotFoundException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(OrderNotFoundException.class, () -\u003e uniqueOrderList.setOrder(ALICE, ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"    public void setOrder_editedOrderIsSameOrder_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.setOrder(ALICE, ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"        expectedUniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"    public void setOrder_editedOrderHasSameIdentity_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"        Order editedAlice \u003d new OrderBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.setOrder(ALICE, editedAlice);","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"        expectedUniqueOrderList.add(editedAlice);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"    public void setOrder_editedOrderHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.setOrder(ALICE, BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"        expectedUniqueOrderList.add(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"    public void setOrder_editedOrderHasNonUniqueIdentity_throwsDuplicateOrderException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(DuplicateOrderException.class, () -\u003e uniqueOrderList.setOrder(ALICE, BOB));","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"    public void remove_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.remove(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"    public void remove_orderDoesNotExist_throwsOrderNotFoundException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(OrderNotFoundException.class, () -\u003e uniqueOrderList.remove(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"xiinweii98"},"content":"    public void remove_existingOrder_removesOrder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.remove(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"xiinweii98"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"xiinweii98"},"content":"    public void setOrders_nullUniqueOrderList_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrders((UniqueOrderList) null));","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"xiinweii98"},"content":"    public void setOrders_uniqueOrderList_replacesOwnListWithProvidedUniqueOrderList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"xiinweii98"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"xiinweii98"},"content":"        expectedUniqueOrderList.add(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.setOrders(expectedUniqueOrderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"    public void setOrders_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrders((List\u003cOrder\u003e) null));","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"xiinweii98"},"content":"    public void setOrders_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"xiinweii98"},"content":"        List\u003cOrder\u003e orderList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"xiinweii98"},"content":"        uniqueOrderList.setOrders(orderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"xiinweii98"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"xiinweii98"},"content":"        expectedUniqueOrderList.add(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"xiinweii98"},"content":"    public void setOrders_listWithDuplicateOrders_throwsDuplicateOrderException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"xiinweii98"},"content":"        List\u003cOrder\u003e listWithDuplicateOrders \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(DuplicateOrderException.class, () -\u003e uniqueOrderList.setOrders(listWithDuplicateOrders));","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"xiinweii98"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"xiinweii98"},"content":"            -\u003e uniqueOrderList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"xiinweii98"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"xiinweii98":169}},{"path":"src/test/java/seedu/cakecollate/model/orderitem/OrderItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model.orderitem;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TYPE_STRAWBERRY;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.CHOCOLATE;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.STRAWBERRY;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.testutil.OrderItemBuilder;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"public class OrderItemTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    public void equals() {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"        //same values -\u003e return true","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem chocolateCopy \u003d new OrderItemBuilder(CHOCOLATE).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(CHOCOLATE.equals(chocolateCopy));","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"        //same object -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(CHOCOLATE.equals(CHOCOLATE));","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"        //null -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(CHOCOLATE.equals(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"        //different data type -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(CHOCOLATE.equals(5));","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"        //different order item -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(CHOCOLATE.equals(STRAWBERRY));","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem editedChocolate \u003d new OrderItemBuilder(CHOCOLATE).withType(VALID_TYPE_STRAWBERRY).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(CHOCOLATE.equals(editedChocolate));","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        //different type of object -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(CHOCOLATE.equals(\"Chocolate\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"    public void hashCode_sameTypeDifferentObject_sameHashCode() {","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        //same type -\u003e returns true","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem chocolateCopy \u003d new OrderItemBuilder(CHOCOLATE).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(chocolateCopy.hashCode(), CHOCOLATE.hashCode());","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    public void hashCode_differentType_differentHashCode() {","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"        //different type -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"        assertNotEquals(STRAWBERRY.hashCode(), CHOCOLATE.hashCode());","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"    public void toString_chocolateCake_expectedString() {","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"        String type \u003d CHOCOLATE.getType().toString();","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"        String expected \u003d type;","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expected, CHOCOLATE.toString());","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"    public void toString_extraWhitespace_invalidExpectedString() {","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"        String type \u003d CHOCOLATE.getType().toString();","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"        String expected \u003d \" \" + type;","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"        assertNotEquals(expected, CHOCOLATE.toString());","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"simran-bhadani3":73}},{"path":"src/test/java/seedu/cakecollate/model/orderitem/TypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model.orderitem;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"public class TypeTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Type(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    public void constructor_invalidType_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"        String invalidType \u003d \"\";","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Type(invalidType));","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    public void isValid() {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"        // null type","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e Type.isValidType(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"        // valid types","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(Type.isValidType(\"Strawberry cake\")); //typical order type","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(Type.isValidType(\"s\")); // one character","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(Type.isValidType(\"really really really long type with a really long cake description\"","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"                + \" such as seven layered colourful rainbow cake with violet indigo blue green\"","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"                + \" yellow orange and red\")); //really long type","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"        // invalid types","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"???\")); //special characters","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"({\")); //special characters","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"+++\")); //special characters","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"--\")); //special characters","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"*\")); //special characters","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"###\")); //special characters","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"@@@\")); //special characters","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"contains, commas\")); //special characters","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"--))((\u003d\u003d**\u0026\u0026^^!!@@\")); //mixed special characters","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"///strawberry cake ???\")); //special characters","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"123456\")); //contains numbers","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"123abc\")); //contains numbers","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"                .isValidType(\"8 \\\" large black forest cake with \"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"                        + \"buttercream frosting and chocolate drizzle topping\")); //contains special characters","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\"\")); // empty string","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(Type.isValidType(\" strawberry cake\")); //starting with a space","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"    public void equals() {","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"        Type typeOne \u003d new Type(\"strawberry cake\");","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"        Type typeTwo \u003d new Type(\"Strawberry Cake\");","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"        Type typeThree \u003d new Type(\"strawberry cake\");","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(typeOne, typeThree); //same value for type","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(typeOne, typeTwo); //type is case insensitive","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"    public void toStringMethod() {","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"        String expectedString \u003d \"Strawberry Cake\";","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"        Type strawberryCake \u003d new Type(\"Strawberry Cake\");","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedString, strawberryCake.toString());","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"    public void toHashcodeMethod() {","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"        //same type -\u003e same hashcode","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"        Type chocolateOne \u003d new Type(\"Chocolate Cake\");","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        Type chocolateTwo \u003d new Type(\"Chocolate Cake\");","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(chocolateOne.hashCode(), chocolateTwo.hashCode());","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"    public void getValue() {","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"        Type chocolate \u003d new Type(\"Chocolate Cake\");","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"Chocolate Cake\", chocolate.getValue());","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"simran-bhadani3":85}},{"path":"src/test/java/seedu/cakecollate/model/orderitem/UniqueOrderItemListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.model.orderitem;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.CHOCOLATE;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.STRAWBERRY;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.exceptions.DuplicateOrderItemException;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.exceptions.OrderItemNotFoundException;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.testutil.OrderItemBuilder;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"public class UniqueOrderItemListTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    private final UniqueOrderItemList uniqueOrderItemList \u003d new UniqueOrderItemList();","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    public void contains_nullOrderItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderItemList.contains(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"    public void contains_orderItemNotInList_returnsFalse() {","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"        assertFalse(uniqueOrderItemList.contains(CHOCOLATE));","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"    public void contains_orderItemInList_returnsTrue() {","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(uniqueOrderItemList.contains(CHOCOLATE));","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"    public void contains_orderItemWithSameTypeInList_returnsTrue() {","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem editedChocolate \u003d new OrderItemBuilder(CHOCOLATE).build();","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        assertTrue(uniqueOrderItemList.contains(editedChocolate));","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"    public void add_nullOrderItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderItemList.add(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    public void add_duplicateOrderItem_throwsDuplicateOrderItemException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(DuplicateOrderItemException.class, () -\u003e uniqueOrderItemList.add(CHOCOLATE));","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItem_nullTargetOrderItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderItemList.setOrderItem(null, CHOCOLATE));","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItem_nullEditedOrderItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderItemList.setOrderItem(CHOCOLATE, null));","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItem_targetOrderItemNotInList_throwsOrderItemNotFoundException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(OrderItemNotFoundException.class, () -\u003e uniqueOrderItemList.setOrderItem(CHOCOLATE, CHOCOLATE));","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItem_editedOrderItemIsSameOrder_success() {","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.setOrderItem(CHOCOLATE, CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"        UniqueOrderItemList expectedUniqueOrderItemList \u003d new UniqueOrderItemList();","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"        expectedUniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedUniqueOrderItemList, uniqueOrderItemList);","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItem_editedOrderItemHasSameType_success() {","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"        OrderItem editedChocolate \u003d new OrderItemBuilder(CHOCOLATE).build();","lastModifiedDate":"2021-04-04"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.setOrderItem(CHOCOLATE, editedChocolate);","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"        UniqueOrderItemList expectedUniqueOrderItemList \u003d new UniqueOrderItemList();","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"        expectedUniqueOrderItemList.add(editedChocolate);","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedUniqueOrderItemList, uniqueOrderItemList);","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItem_editedOrderItemHasDifferentType_success() {","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.setOrderItem(CHOCOLATE, STRAWBERRY);","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"        UniqueOrderItemList expectedUniqueOrderList \u003d new UniqueOrderItemList();","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"        expectedUniqueOrderList.add(STRAWBERRY);","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderItemList);","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItem_editedOrderItemHasNonUniqueType_throwsDuplicateOrderItemException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(STRAWBERRY);","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(DuplicateOrderItemException.class, () -\u003e uniqueOrderItemList.setOrderItem(CHOCOLATE, STRAWBERRY));","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"    public void remove_nullOrderItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderItemList.remove(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":"    public void remove_orderItemDoesNotExist_throwsOrderItemNotFoundException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(OrderItemNotFoundException.class, () -\u003e uniqueOrderItemList.remove(CHOCOLATE));","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"    public void remove_existingOrderItem_removesOrderItem() {","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.remove(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":"        UniqueOrderItemList expectedUniqueOrderList \u003d new UniqueOrderItemList();","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderItemList);","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItems_nullUniqueOrderItemList_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":128,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderItemList.setOrderItems((UniqueOrderItemList) null));","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItems_uniqueOrderItemList_replacesOwnListWithProvidedUniqueOrderItemList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":134,"author":{"gitId":"simran-bhadani3"},"content":"        UniqueOrderItemList expectedUniqueOrderItemList \u003d new UniqueOrderItemList();","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"simran-bhadani3"},"content":"        expectedUniqueOrderItemList.add(STRAWBERRY);","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.setOrderItems(expectedUniqueOrderItemList);","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedUniqueOrderItemList, uniqueOrderItemList);","lastModifiedDate":"2021-03-22"},{"lineNumber":138,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":139,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":140,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":141,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItems_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":142,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderItemList.setOrderItems((List\u003cOrderItem\u003e) null));","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItems_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.add(CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":148,"author":{"gitId":"simran-bhadani3"},"content":"        List\u003cOrderItem\u003e orderItemList \u003d Collections.singletonList(STRAWBERRY);","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemList.setOrderItems(orderItemList);","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"simran-bhadani3"},"content":"        UniqueOrderItemList expectedUniqueOrderList \u003d new UniqueOrderItemList();","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"simran-bhadani3"},"content":"        expectedUniqueOrderList.add(STRAWBERRY);","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderItemList);","lastModifiedDate":"2021-03-22"},{"lineNumber":153,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":154,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":156,"author":{"gitId":"simran-bhadani3"},"content":"    public void setOrderItems_listWithDuplicateOrderItems_throwsDuplicateOrderItemException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"simran-bhadani3"},"content":"        List\u003cOrderItem\u003e listWithDuplicateOrderItems \u003d Arrays.asList(CHOCOLATE, CHOCOLATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(DuplicateOrderItemException.class, ()","lastModifiedDate":"2021-03-22"},{"lineNumber":159,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e uniqueOrderItemList.setOrderItems(listWithDuplicateOrderItems));","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":161,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":163,"author":{"gitId":"simran-bhadani3"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"simran-bhadani3"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"simran-bhadani3"},"content":"            -\u003e uniqueOrderItemList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":168,"author":{"gitId":"simran-bhadani3"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":169,"author":{"gitId":"simran-bhadani3"},"content":"    public void hashCode_sameInternalList_sameHashcode() {","lastModifiedDate":"2021-04-10"},{"lineNumber":170,"author":{"gitId":"simran-bhadani3"},"content":"        List\u003cOrderItem\u003e orderItemList \u003d Collections.singletonList(STRAWBERRY);","lastModifiedDate":"2021-04-10"},{"lineNumber":171,"author":{"gitId":"simran-bhadani3"},"content":"        UniqueOrderItemList uniqueOrderItemListOne \u003d new UniqueOrderItemList();","lastModifiedDate":"2021-04-10"},{"lineNumber":172,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemListOne.setOrderItems(orderItemList);","lastModifiedDate":"2021-04-10"},{"lineNumber":173,"author":{"gitId":"simran-bhadani3"},"content":"        UniqueOrderItemList uniqueOrderItemListTwo \u003d new UniqueOrderItemList();","lastModifiedDate":"2021-04-10"},{"lineNumber":174,"author":{"gitId":"simran-bhadani3"},"content":"        uniqueOrderItemListTwo.setOrderItems(orderItemList);","lastModifiedDate":"2021-04-10"},{"lineNumber":175,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(uniqueOrderItemListOne.hashCode(), uniqueOrderItemListTwo.hashCode());","lastModifiedDate":"2021-04-10"},{"lineNumber":176,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":177,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"simran-bhadani3":177}},{"path":"src/test/java/seedu/cakecollate/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.model.tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"xiinweii98":2,"-":24}},{"path":"src/test/java/seedu/cakecollate/storage/JsonAdaptedOrderItemsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.storage.JsonAdaptedOrderItems.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.CHOCOLATE_MUD;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"public class JsonAdaptedOrderItemsTest {","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String INVALID_TYPE \u003d \"\";","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    public void toModelType_validOrderItem_returnsOrderItem() throws Exception {","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        JsonAdaptedOrderItems orderItem \u003d new JsonAdaptedOrderItems(CHOCOLATE_MUD);","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(CHOCOLATE_MUD, orderItem.toModelType());","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    public void toModelType_invalidType_throwsIllegalValueException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        JsonAdaptedOrderItems orderItem \u003d new JsonAdaptedOrderItems(INVALID_TYPE);","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        String expectedMsg \u003d Type.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(IllegalValueException.class, expectedMsg, orderItem::toModelType);","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    public void toModelType_nullType_throwsIllegalValueException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"        JsonAdaptedOrderItems orderItem \u003d new JsonAdaptedOrderItems((String) null);","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        String expectedMsg \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Type.class.getSimpleName());","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(IllegalValueException.class, expectedMsg, orderItem::toModelType);","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"RuiXiong2211":38}},{"path":"src/test/java/seedu/cakecollate/storage/JsonAdaptedOrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.storage.JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.BENSON;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.Status;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"public class JsonAdaptedOrderTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"    private static final String INVALID_ORDER_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    private static final String INVALID_DELIVERY_DATE \u003d \"31/31/2100\";","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"    private static final List\u003cJsonAdaptedOrderDescription\u003e VALID_ORDER_DESC \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"            BENSON.getOrderDescriptions().keySet().stream()","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"                .map(JsonAdaptedOrderDescription::new)","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"    private static final String VALID_DELIVERY_DATE \u003d BENSON.getDeliveryDate().toString();","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"    private static final Status VALID_DELIVERY_STATUS \u003d BENSON.getDeliveryStatus().getDeliveryStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"    private static final String VALID_REQUEST \u003d BENSON.getRequest().toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    public void toModelType_validOrderDetails_returnsOrder() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(BENSON);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(BENSON, order.toModelType());","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"                VALID_ORDER_DESC, VALID_TAGS, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"                VALID_ORDER_DESC, VALID_TAGS, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"                new JsonAdaptedOrder(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ORDER_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"                        VALID_TAGS, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"                VALID_ORDER_DESC, VALID_TAGS, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"                VALID_ORDER_DESC, VALID_TAGS, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"                VALID_ORDER_DESC, VALID_TAGS, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"                VALID_ORDER_DESC, VALID_TAGS, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"RuiXiong2211"},"content":"                VALID_ORDER_DESC, VALID_TAGS, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"xiinweii98"},"content":"                new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ORDER_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"RuiXiong2211"},"content":"                        invalidTags, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"pPris"},"content":"    public void toModelType_nullOrderDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"RuiXiong2211"},"content":"                null, VALID_TAGS, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"pPris"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, OrderDescription.class.getSimpleName());","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"pPris"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"pPris"},"content":"    public void toModelType_invalidOrderDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"pPris"},"content":"        List\u003cJsonAdaptedOrderDescription\u003e invalidOrderDescs \u003d new ArrayList\u003c\u003e(VALID_ORDER_DESC);","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"pPris"},"content":"        invalidOrderDescs.add(new JsonAdaptedOrderDescription(INVALID_ORDER_DESCRIPTION));","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"RuiXiong2211"},"content":"                invalidOrderDescs, VALID_TAGS, VALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"xiinweii98"},"content":"    public void toModelType_invalidDeliveryDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"xiinweii98"},"content":"                new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ORDER_DESC, VALID_TAGS,","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"RuiXiong2211"},"content":"                        INVALID_DELIVERY_DATE, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"xiinweii98"},"content":"        String expectedMessage \u003d DeliveryDate.MESSAGE_CONSTRAINTS_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":157,"author":{"gitId":"xiinweii98"},"content":"    public void toModelType_nullDeliveryDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":158,"author":{"gitId":"xiinweii98"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"RuiXiong2211"},"content":"                VALID_ORDER_DESC, VALID_TAGS, null, VALID_DELIVERY_STATUS, VALID_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"xiinweii98"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DeliveryDate.class.getSimpleName());","lastModifiedDate":"2021-03-09"},{"lineNumber":161,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"pPris":18,"pavz02":2,"RuiXiong2211":14,"xiinweii98":57,"-":73}},{"path":"src/test/java/seedu/cakecollate/storage/JsonCakeCollateStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.ALICE;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.HOON;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.IDA;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"public class JsonCakeCollateStorageTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonCakeCollateStorageTest\");","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"    @TempDir","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    public void readCakeCollate_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e readCakeCollate(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    private java.util.Optional\u003cReadOnlyCakeCollate\u003e readCakeCollate(String filePath) throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"        return new JsonCakeCollateStorage(Paths.get(filePath)).readCakeCollate(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"                : null;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        assertFalse(readCakeCollate(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(DataConversionException.class, () -\u003e readCakeCollate(\"notJsonFormatCakeCollate.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"    public void readCakeCollate_invalidOrderCakeCollate_throwDataConversionException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(DataConversionException.class, () -\u003e readCakeCollate(\"invalidOrderCakeCollate.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"    public void readCakeCollate_invalidAndValidOrderCakeCollate_throwDataConversionException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(DataConversionException.class, () -\u003e readCakeCollate(\"invalidAndValidOrderCakeCollate.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"    public void readAndSaveCakeCollate_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        Path filePath \u003d testFolder.resolve(\"TempCakeCollate.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate original \u003d getTypicalCakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"        JsonCakeCollateStorage jsonCakeCollateStorage \u003d new JsonCakeCollateStorage(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"        jsonCakeCollateStorage.saveCakeCollate(original, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"        ReadOnlyCakeCollate readBack \u003d jsonCakeCollateStorage.readCakeCollate(filePath).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(original, new CakeCollate(readBack));","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"        original.addOrder(HOON);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"        original.removeOrder(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        jsonCakeCollateStorage.saveCakeCollate(original, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"        readBack \u003d jsonCakeCollateStorage.readCakeCollate(filePath).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(original, new CakeCollate(readBack));","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"        original.addOrder(IDA);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"        jsonCakeCollateStorage.saveCakeCollate(original); // file path not specified","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"        readBack \u003d jsonCakeCollateStorage.readCakeCollate().get(); // file path not specified","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(original, new CakeCollate(readBack));","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"    public void saveCakeCollate_nullCakeCollate_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveCakeCollate(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"     * Saves {@code cakeCollate} at the specified {@code filePath}.","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"    private void saveCakeCollate(ReadOnlyCakeCollate cakeCollate, String filePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"            new JsonCakeCollateStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"                    .saveCakeCollate(cakeCollate, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"    public void saveCakeCollate_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveCakeCollate(new CakeCollate(), null));","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"xiinweii98":110}},{"path":"src/test/java/seedu/cakecollate/storage/JsonOrderItemsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.CHENDOL;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.CHOCOLATE;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.DURIAN;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.getTypicalOrderItemsModel;","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import java.io.IOException;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"public class JsonOrderItemsStorageTest {","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonOrderItemsStorageTest\");","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    @TempDir","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"    public Path testFolder;","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"    public void readOrderItems_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(NullPointerException.class, () -\u003e readOrderItems(null));","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    private java.util.Optional\u003cReadOnlyOrderItems\u003e readOrderItems(String filePath) throws Exception {","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        return new JsonOrderItemsStorage(Paths.get(filePath)).readOrderItems(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"                : null;","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"        assertFalse(readOrderItems(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(DataConversionException.class, () -\u003e readOrderItems(\"notJsonFormatOrderItems.json\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"    public void readOrderItems_invalidOrderItems_throwDataConversionException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(DataConversionException.class, () -\u003e readOrderItems(\"invalidOrderItems.json\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"    public void readOrderItems_invalidAndValidOrderItems_throwDataConversionException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(DataConversionException.class, () -\u003e readOrderItems(\"invalidAndValidOrderItems.json\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"    public void readAndSaveOrderItems_allInOrder_success() throws Exception {","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"        Path filePath \u003d testFolder.resolve(\"TempOrderItems.json\");","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItems original \u003d getTypicalOrderItemsModel();","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"        JsonOrderItemsStorage jsonOrderItemsStorage \u003d new JsonOrderItemsStorage(filePath);","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"        jsonOrderItemsStorage.saveOrderItems(original, filePath);","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"        ReadOnlyOrderItems readBack \u003d jsonOrderItemsStorage.readOrderItems(filePath).get();","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(original, new OrderItems(readBack));","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"        original.addOrderItem(DURIAN);","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"        original.removeOrderItem(CHOCOLATE);","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"        jsonOrderItemsStorage.saveOrderItems(original, filePath);","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"        readBack \u003d jsonOrderItemsStorage.readOrderItems(filePath).get();","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(original, new OrderItems(readBack));","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"        original.addOrderItem(CHENDOL);","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"        jsonOrderItemsStorage.saveOrderItems(original); // file path not specified","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"        readBack \u003d jsonOrderItemsStorage.readOrderItems().get(); // file path not specified","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(original, new OrderItems(readBack));","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"    public void saveOrderItems_nullOrderItems_throwsNullPointerException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveOrderItems(null, \"SomeFile.json\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-04-02"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"     * Saves {@code cakeCollate} at the specified {@code filePath}.","lastModifiedDate":"2021-04-02"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-04-02"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"    private void saveOrderItems(ReadOnlyOrderItems orderItems, String filePath) {","lastModifiedDate":"2021-04-02"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"        try {","lastModifiedDate":"2021-04-02"},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"            new JsonOrderItemsStorage(Paths.get(filePath))","lastModifiedDate":"2021-04-02"},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"                    .saveOrderItems(orderItems, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-04-02"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-04-02"},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-04-02"},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":107,"author":{"gitId":"RuiXiong2211"},"content":"    public void saveOrderItems_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":108,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveOrderItems(new OrderItems(), null));","lastModifiedDate":"2021-04-02"},{"lineNumber":109,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":110,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"RuiXiong2211":110}},{"path":"src/test/java/seedu/cakecollate/storage/JsonSerializableCakeCollateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.util.JsonUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.testutil.TypicalOrders;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"public class JsonSerializableCakeCollateTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableCakeCollateTest\");","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    private static final Path TYPICAL_ORDERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalOrdersCakeCollate.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"    private static final Path INVALID_ORDER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderCakeCollate.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    private static final Path DUPLICATE_ORDER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateOrderCakeCollate.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    public void toModelType_typicalOrdersFile_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"        JsonSerializableCakeCollate dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_ORDERS_FILE,","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"                JsonSerializableCakeCollate.class).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate cakeCollateFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate typicalOrdersCakeCollate \u003d TypicalOrders.getTypicalCakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(cakeCollateFromFile, typicalOrdersCakeCollate);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    public void toModelType_invalidOrderFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"        JsonSerializableCakeCollate dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_FILE,","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"                JsonSerializableCakeCollate.class).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"    public void toModelType_duplicateOrders_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"        JsonSerializableCakeCollate dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ORDER_FILE,","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"                JsonSerializableCakeCollate.class).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableCakeCollate.MESSAGE_DUPLICATE_ORDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xiinweii98":24,"-":23}},{"path":"src/test/java/seedu/cakecollate/storage/JsonSerializableOrderItemsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.commons.util.JsonUtil;","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"public class JsonSerializableOrderItemsTest {","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"            \"JsonSerializableOrderItemsTest\");","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    private static final Path TYPICAL_ORDER_ITEMS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalOrderItems.json\");","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"    private static final Path INVALID_ORDER_ITEMS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderItems.json\");","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"    private static final Path DUPLICATE_ORDER_ITEMS_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateOrderItems.json\");","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    public void toModelType_typicalOrderItemsFile_success() throws Exception {","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        JsonSerializableOrderItems dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_ORDER_ITEMS_FILE,","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"                JsonSerializableOrderItems.class).get();","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItems orderItemsFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItems typicalOrdersCakeCollate \u003d TypicalOrderItems.getTypicalOrderItemsModel();","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(orderItemsFromFile, typicalOrdersCakeCollate);","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    public void toModelType_invalidOrderItemsFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        JsonSerializableOrderItems dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_ITEMS_FILE,","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"                JsonSerializableOrderItems.class).get();","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"    public void toModelType_duplicateOrderItems_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"        JsonSerializableOrderItems dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ORDER_ITEMS_FILE,","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"                JsonSerializableOrderItems.class).get();","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableOrderItems.MESSAGE_DUPLICATE_ORDER_ITEMS,","lastModifiedDate":"2021-04-03"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"RuiXiong2211":46}},{"path":"src/test/java/seedu/cakecollate/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"        userPrefs.setCakeCollateFilePath(Paths.get(\"cakecollate.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xiinweii98":6,"-":117}},{"path":"src/test/java/seedu/cakecollate/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.TypicalOrders.getTypicalCakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyCakeCollate;","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.ReadOnlyOrderItems;","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.UserPrefs;","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.testutil.TypicalOrderItems;","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"        JsonCakeCollateStorage cakeCollateStorage \u003d new JsonCakeCollateStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        JsonOrderItemsStorage orderItemsStorage \u003d new JsonOrderItemsStorage(getTempFilePath(\"item\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        storageManager \u003d new StorageManager(cakeCollateStorage, userPrefsStorage, orderItemsStorage);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"    public void cakeCollateReadSave() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"         * {@link JsonCakeCollateStorage} class.","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonCakeCollateStorageTest} class.","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate original \u003d getTypicalCakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"        storageManager.saveCakeCollate(original);","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        ReadOnlyCakeCollate retrieved \u003d storageManager.readCakeCollate().get();","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"        assertEquals(original, new CakeCollate(retrieved));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"    public void getCakeCollateFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"        assertNotNull(storageManager.getCakeCollateFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"    public void orderItemReadSave() throws Exception {","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"        /*","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"         * {@link JsonOrderItems} class.","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonOrderItemsStorageTest} class.","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"         */","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItems original \u003d TypicalOrderItems.getTypicalOrderItemsModel();","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"        storageManager.saveOrderItems(original);","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"        ReadOnlyOrderItems retrieved \u003d storageManager.readOrderItems().get();","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(original, new OrderItems(retrieved));","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"    public void getOrderItemsFilePath() {","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"        assertNotNull(storageManager.getOrderItemsFilePath());","lastModifiedDate":"2021-04-02"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RuiXiong2211":27,"xiinweii98":13,"-":51}},{"path":"src/test/java/seedu/cakecollate/testutil/AddOrderDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pPris"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.logic.commands.AddCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"public class AddOrderDescriptorBuilder {","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"pPris"},"content":"    private AddCommand.AddOrderDescriptor descriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"pPris"},"content":"    public AddOrderDescriptorBuilder() {","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"pPris"},"content":"        descriptor \u003d new AddCommand.AddOrderDescriptor();","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"    public AddOrderDescriptorBuilder(AddCommand.AddOrderDescriptor a) {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"        descriptor \u003d new AddCommand.AddOrderDescriptor(a);","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"pPris"},"content":"     * Builds a descriptor based on an existing order object\u0027s fields","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"     * @param order","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"    public AddOrderDescriptorBuilder(Order order) {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"pPris"},"content":"        descriptor \u003d new AddCommand.AddOrderDescriptor();","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"pPris"},"content":"        // check these","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"pPris"},"content":"        descriptor.setName(order.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"pPris"},"content":"        descriptor.setPhone(order.getPhone());","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"pPris"},"content":"        descriptor.setEmail(order.getEmail());","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"pPris"},"content":"        descriptor.setAddress(order.getAddress());","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"pPris"},"content":"        descriptor.setOrderDescriptions(order.getOrderDescriptions());","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"pPris"},"content":"        descriptor.setTags(order.getTags());","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"pPris"},"content":"        descriptor.setDeliveryDate(order.getDeliveryDate());","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"pPris"},"content":"        descriptor.setRequest(order.getRequest());","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"    public AddCommand.AddOrderDescriptor build() {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"        return descriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"pPris":38}},{"path":"src/test/java/seedu/cakecollate/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"xiinweii98":1,"-":33}},{"path":"src/test/java/seedu/cakecollate/testutil/CakeCollateBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":" * A utility class to help with building CakeCollate objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":" *     {@code CakeCollate ab \u003d new CakeCollateBuilder().withOrder(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"public class CakeCollateBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"    private CakeCollate cakeCollate;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"    public CakeCollateBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"        cakeCollate \u003d new CakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    public CakeCollateBuilder(CakeCollate cakeCollate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"        this.cakeCollate \u003d cakeCollate;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"     * Adds a new {@code Order} to the {@code CakeCollate} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    public CakeCollateBuilder withOrder(Order order) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        cakeCollate.addOrder(order);","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    public CakeCollate build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"        return cakeCollate;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"xiinweii98":34}},{"path":"src/test/java/seedu/cakecollate/testutil/EditOrderDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.EditCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":" * A utility class to help with building EditOrderDescriptor objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"public class EditOrderDescriptorBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    private EditCommand.EditOrderDescriptor descriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"    public EditOrderDescriptorBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"        descriptor \u003d new EditCommand.EditOrderDescriptor();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"    public EditOrderDescriptorBuilder(EditCommand.EditOrderDescriptor descriptor) {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"        this.descriptor \u003d new EditCommand.EditOrderDescriptor(descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"     * Returns an {@code EditOrderDescriptor} with fields containing {@code order}\u0027s details","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"    public EditOrderDescriptorBuilder(Order order) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        descriptor \u003d new EditCommand.EditOrderDescriptor();","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setName(order.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setPhone(order.getPhone());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setEmail(order.getEmail());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setAddress(order.getAddress());","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setOrderDescriptions(order.getOrderDescriptions());","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setTags(order.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setDeliveryDate(order.getDeliveryDate());","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setRequest(order.getRequest());","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code Name} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"xiinweii98"},"content":"    public EditOrderDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code Phone} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"xiinweii98"},"content":"    public EditOrderDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code Email} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"    public EditOrderDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code Address} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"    public EditOrderDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code OrderDescription} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"xiinweii98"},"content":"    public EditOrderDescriptorBuilder withOrderDescriptions(String... orderDescriptions) {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"pPris"},"content":"        Map\u003cOrderDescription, Integer\u003e orderDescriptionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"pPris"},"content":"        Stream.of(orderDescriptions)","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"pPris"},"content":"            .map(OrderDescription::new)","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"pPris"},"content":"            .forEach(o -\u003e orderDescriptionMap.put(o, 1 + orderDescriptionMap.getOrDefault(o, 0)));","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"pPris"},"content":"        descriptor.setOrderDescriptions(orderDescriptionMap);","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"xiinweii98"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditOrderDescriptor}","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"     * that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"    public EditOrderDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"xiinweii98"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code DeliveryDate} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"xiinweii98"},"content":"    public EditOrderDescriptorBuilder withDeliveryDate(String deliveryDate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"        descriptor.setDeliveryDate(new DeliveryDate(deliveryDate));","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"xiinweii98"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"xiinweii98"},"content":"    public EditCommand.EditOrderDescriptor build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"xiinweii98"},"content":"        return descriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"xiinweii98"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"pPris":7,"xiinweii98":107}},{"path":"src/test/java/seedu/cakecollate/testutil/OrderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TestUtil.stringify;","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"pPris"},"content":"import static seedu.cakecollate.testutil.TypicalOrderItems.BLACK_FOREST;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"pPris"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Address;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.DeliveryDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"import seedu.cakecollate.model.order.DeliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Email;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Name;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Phone;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.order.Request;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Status;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":" * A utility class to help with building Order objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"public class OrderBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"pPris"},"content":"    // ensures that default order description is always in the model","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"pPris"},"content":"    // this makes sense bc for every order descriptions to add, there should be a corresponding entry in order items","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"pPris"},"content":"    // model. and some tests add this order to the orders model without adding the order item --\u003e errors are thrown","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"pPris"},"content":"    // as expected order item will be lacking compared to actual order item","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"pPris"},"content":"    public static final String DEFAULT_ORDER_DESCRIPTION \u003d stringify(BLACK_FOREST);","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"    public static final String DEFAULT_DELIVERY_DATE \u003d \"01/01/2022\";","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"    public static final String DEFAULT_REQUEST \u003d \"\";","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"    private HashMap\u003cOrderDescription, Integer\u003e orderDescriptions;","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"    private DeliveryDate deliveryDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"    private DeliveryStatus deliveryStatus;","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"    private Request request;","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"     * Creates a {@code OrderBuilder} with the default details.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"    public OrderBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"        orderDescriptions \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"        orderDescriptions.put(new OrderDescription(DEFAULT_ORDER_DESCRIPTION), 1);","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"xiinweii98"},"content":"        deliveryDate \u003d new DeliveryDate(DEFAULT_DELIVERY_DATE);","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"pavz02"},"content":"        deliveryStatus \u003d new DeliveryStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"        request \u003d new Request(DEFAULT_REQUEST);","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"xiinweii98"},"content":"     * Initializes the OrderBuilder with the data of {@code orderToCopy}.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"    public OrderBuilder(Order orderToCopy) {","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"xiinweii98"},"content":"        name \u003d orderToCopy.getName();","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"xiinweii98"},"content":"        phone \u003d orderToCopy.getPhone();","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"xiinweii98"},"content":"        email \u003d orderToCopy.getEmail();","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"xiinweii98"},"content":"        address \u003d orderToCopy.getAddress();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"pPris"},"content":"        orderDescriptions \u003d new HashMap\u003c\u003e(orderToCopy.getOrderDescriptions());","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"        tags \u003d new HashSet\u003c\u003e(orderToCopy.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"        deliveryDate \u003d orderToCopy.getDeliveryDate();","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"pavz02"},"content":"        deliveryStatus \u003d orderToCopy.getDeliveryStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"        request \u003d orderToCopy.getRequest();","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":84,"author":{"gitId":"pPris"},"content":"    public static OrderItem getDefaultOrderItem() {","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"pPris"},"content":"        return new OrderItem(new Type(DEFAULT_ORDER_DESCRIPTION));","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code Name} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"    public OrderBuilder withName(String name) {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Order} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"xiinweii98"},"content":"    public OrderBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code Address} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"xiinweii98"},"content":"    public OrderBuilder withAddress(String address) {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code Phone} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"xiinweii98"},"content":"    public OrderBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code Email} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"xiinweii98"},"content":"    public OrderBuilder withEmail(String email) {","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"pPris"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"pPris"},"content":"     * Sets the {@code OrderDescription} of the {@code OrderDescription} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"pPris"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"xiinweii98"},"content":"    public OrderBuilder withOrderDescriptions(String ... orderDescriptions) {","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"pPris"},"content":"        this.orderDescriptions \u003d SampleDataUtil.getOrderDescriptionMap(orderDescriptions);","lastModifiedDate":"2021-04-10"},{"lineNumber":132,"author":{"gitId":"pPris"},"content":"        return this;","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code DeliveryDate} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"xiinweii98"},"content":"    public OrderBuilder withDeliveryDate(String deliveryDate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"xiinweii98"},"content":"        this.deliveryDate \u003d new DeliveryDate(deliveryDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"xiinweii98"},"content":"        return this;","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"pavz02"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"pavz02"},"content":"     * Sets the {@code DeliveryStatus} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"pavz02"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"pavz02"},"content":"    public OrderBuilder withDeliveryStatus() {","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"pavz02"},"content":"        this.deliveryStatus \u003d new DeliveryStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":148,"author":{"gitId":"pavz02"},"content":"        return this;","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"pavz02"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"pavz02"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"xiinweii98"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"xiinweii98"},"content":"     * Sets the {@code DeliveryStatus} of the {@code Order} that we are building with specified Status.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"xiinweii98"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"xiinweii98"},"content":"    public OrderBuilder withDeliveryStatus(Status status) {","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"xiinweii98"},"content":"        this.deliveryStatus \u003d new DeliveryStatus(status);","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"xiinweii98"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"xiinweii98"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"xiinweii98"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"RuiXiong2211"},"content":"     * Sets the {@code Request} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"RuiXiong2211"},"content":"    public OrderBuilder withRequest(String request) {","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"RuiXiong2211"},"content":"        this.request \u003d new Request(request);","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"RuiXiong2211"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"xiinweii98"},"content":"    public Order build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"RuiXiong2211"},"content":"        return new Order(name, phone, email, address, orderDescriptions, tags, deliveryDate, deliveryStatus, request);","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"pPris":27,"pavz02":12,"RuiXiong2211":14,"xiinweii98":54,"-":64}},{"path":"src/test/java/seedu/cakecollate/testutil/OrderItemBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":" * A utility class to help with building Order Item objects.","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"public class OrderItemBuilder {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"    public static final String DEFAULT_TYPE \u003d \"Strawberry Cake\";","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    private Type type;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"     * Creates a {@code OrderItemBuilder} with the default details.","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    public OrderItemBuilder() {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"        type \u003d new Type(DEFAULT_TYPE);","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"     * Initializes the OrderBuilder with the data of {@code orderToCopy}.","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    public OrderItemBuilder(OrderItem orderItemToCopy) {","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        type \u003d orderItemToCopy.getType();","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"     * Sets the {@code Type} of the {@code OrderItem} that we are building.","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"    public OrderItemBuilder withType(String type) {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"        this.type \u003d new Type(type);","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"        return this;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"    public OrderItem build() {","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        return new OrderItem(type);","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"simran-bhadani3":40}},{"path":"src/test/java/seedu/cakecollate/testutil/OrderItemsBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"public class OrderItemsBuilder {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    private OrderItems orderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    public OrderItemsBuilder() {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        orderItems \u003d new OrderItems();","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    public OrderItemsBuilder(OrderItems orderItems) {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        this.orderItems \u003d orderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"     * Adds a new {@code OrderItem} to the {@code OrderItems} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    public OrderItemsBuilder withOrderItem(OrderItem item) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        orderItems.addOrderItem(item);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    public OrderItems build() {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        return orderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"RuiXiong2211":31}},{"path":"src/test/java/seedu/cakecollate/testutil/OrderUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_ORDER_DESCRIPTION;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.AddCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.logic.commands.EditCommand.EditOrderDescriptor;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":" * A utility class for Order.","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"public class OrderUtil {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"     * Returns an add command string for adding the {@code order}.","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"    public static String getAddCommand(Order order) {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getOrderDetails(order);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"     * Returns the part of command string for the given {@code order}\u0027s details.","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"    public static String getOrderDetails(Order order) {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"        sb.append(PREFIX_NAME + order.getName().fullName + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"        sb.append(PREFIX_PHONE + order.getPhone().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"        sb.append(PREFIX_EMAIL + order.getEmail().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"        sb.append(PREFIX_ADDRESS + order.getAddress().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"pPris"},"content":"        // for each order description in map, for quantity number of times, add order description to command string","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"pPris"},"content":"        for (Map.Entry\u003cOrderDescription, Integer\u003e entry : order.getOrderDescriptions().entrySet()) {","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"pPris"},"content":"            OrderDescription o \u003d entry.getKey();","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"            for (int i \u003d 0; i \u003c entry.getValue(); i++) {","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"pPris"},"content":"                sb.append(PREFIX_ORDER_DESCRIPTION + o.value + \" \");","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"pPris"},"content":"            }","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"xiinweii98"},"content":"        order.getTags().stream().forEach(","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"xiinweii98"},"content":"        sb.append(PREFIX_DATE + order.getDeliveryDate().toString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"xiinweii98"},"content":"     * Returns the part of command string for the given {@code EditOrderDescriptor}\u0027s details.","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"xiinweii98"},"content":"    public static String getEditOrderDescriptorDetails(EditOrderDescriptor descriptor) {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"pPris"},"content":"        if (descriptor.getOrderDescriptions().isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"pPris"},"content":"            Map\u003cOrderDescription, Integer\u003e orderDescriptionMap \u003d descriptor.getOrderDescriptions().get();","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"            if (orderDescriptionMap.isEmpty()) {","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"                sb.append(PREFIX_ORDER_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"pPris"},"content":"            } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"                // for each order description in map, for quantity times, add order description to command string","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"pPris"},"content":"                for (Map.Entry\u003cOrderDescription, Integer\u003e entry : orderDescriptionMap.entrySet()) {","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"pPris"},"content":"                    OrderDescription o \u003d entry.getKey();","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"pPris"},"content":"                    for (int i \u003d 0; i \u003c entry.getValue(); i++) {","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"pPris"},"content":"                        sb.append(PREFIX_ORDER_DESCRIPTION + o.value + \" \");","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"pPris"},"content":"                    }","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"pPris"},"content":"                }","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"pPris"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"xiinweii98"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":91,"author":{"gitId":"xiinweii98"},"content":"        descriptor.getDeliveryDate()","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"xiinweii98"},"content":"                .ifPresent(deliveryDate -\u003e sb.append(PREFIX_DATE).append(deliveryDate.toString()).append(\" \"));","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"pPris":27,"xiinweii98":31,"-":37}},{"path":"src/test/java/seedu/cakecollate/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiinweii98":1,"-":71}},{"path":"src/test/java/seedu/cakecollate/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.order.OrderDescription;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"pPris"},"content":"import seedu.cakecollate.model.orderitem.Type;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"     * Returns the middle index of the order in the {@code model}\u0027s order list.","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"        return Index.fromOneBased(model.getFilteredOrderList().size() / 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"     * Returns the last index of the order in the {@code model}\u0027s order list.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"xiinweii98"},"content":"        return Index.fromOneBased(model.getFilteredOrderList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"     * Returns the order in the {@code model}\u0027s order list at {@code index}.","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"xiinweii98"},"content":"    public static Order getOrder(Model model, Index index) {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"xiinweii98"},"content":"        return model.getFilteredOrderList().get(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":58,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"pPris"},"content":"    public static OrderItem convertToOrderItem(OrderDescription o) {","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"pPris"},"content":"        return new OrderItem(new Type(stringify(o)));","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"pPris"},"content":"    public static OrderDescription convertToOrderDescription(OrderItem o) {","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"pPris"},"content":"        return new OrderDescription(stringify(o));","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"pPris"},"content":"    public static String stringify(OrderItem o) {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"pPris"},"content":"        return o.getType().getValue();","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"pPris"},"content":"    public static String stringify(OrderDescription o) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"pPris"},"content":"        return o.getValue();","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pPris":19,"xiinweii98":11,"-":44}},{"path":"src/test/java/seedu/cakecollate/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.commons.core.index.Index;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"    public static final Index INDEX_FIRST_ORDER \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"    public static final Index INDEX_SECOND_ORDER \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"    public static final Index INDEX_THIRD_ORDER \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"xiinweii98":5,"-":7}},{"path":"src/test/java/seedu/cakecollate/testutil/TypicalOrderItems.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TYPE_CHOCOLATE;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TYPE_STRAWBERRY;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"import seedu.cakecollate.model.OrderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"import seedu.cakecollate.model.orderitem.OrderItem;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"public class TypicalOrderItems {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    public static final OrderItem BLACK_FOREST \u003d new OrderItemBuilder()","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"            .withType(\"Black Forest\")","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"            .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    public static final OrderItem RED_VELVET \u003d new OrderItemBuilder()","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"            .withType(\"Red Velvet Cake\")","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"            .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    public static final OrderItem CHOCOLATE_MUD \u003d new OrderItemBuilder()","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"            .withType(\"Chocolate Mud Cake\")","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"            .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    public static final OrderItem OREO_CHEESE \u003d new OrderItemBuilder()","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"            .withType(\"Oreo Cheesecake\")","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"            .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"    public static final OrderItem BUTTERSCOTCH \u003d new OrderItemBuilder()","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"            .withType(\"Butterscotch Cake\")","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"            .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    public static final OrderItem STRAWBERRY \u003d new OrderItemBuilder()","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"            .withType(VALID_TYPE_STRAWBERRY)","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"            .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    public static final OrderItem CHOCOLATE \u003d new OrderItemBuilder()","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"            .withType(VALID_TYPE_CHOCOLATE)","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"            .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"    // manually added for testing","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"    public static final OrderItem DURIAN \u003d new OrderItemBuilder()","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"            .withType(\"Durian\")","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"            .build();","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"    public static final OrderItem CHENDOL \u003d new OrderItemBuilder()","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"            .withType(\"Chendol\")","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"            .build();","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"pPris"},"content":"    public static final OrderItem ATYPICAL_ORDER_ITEM \u003d new OrderItemBuilder()","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"pPris"},"content":"            .withType(\"Unicorn\")","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"pPris"},"content":"            .build();","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    private TypicalOrderItems() {","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"    } //prevents instantiation","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"    public static List\u003cOrderItem\u003e getTypicalOrderItems() {","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BLACK_FOREST, RED_VELVET,","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"                CHOCOLATE_MUD, OREO_CHEESE, BUTTERSCOTCH, STRAWBERRY, CHOCOLATE));","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"     * Returns an {@code OrderItems} with all the typical order items.","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"    public static OrderItems getTypicalOrderItemsModel() {","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"        OrderItems orderItems \u003d new OrderItems();","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"        for (OrderItem orderItem : getTypicalOrderItems()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"            orderItems.addOrderItem(orderItem);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"        return orderItems;","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"pPris":4,"RuiXiong2211":23,"simran-bhadani3":46}},{"path":"src/test/java/seedu/cakecollate/testutil/TypicalOrders.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.testutil;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_BERRY_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_CHOCOLATE_ORDER;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_DELIVERY_DATE_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_DELIVERY_DATE_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.CakeCollate;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.model.order.Order;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"pPris"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":" * A utility class containing a list of {@code Order} objects to be used in tests.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"public class TypicalOrders {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"    // needs to correspond to typicalOrdersCakeCollate","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"    public static final Order ALICE \u003d new OrderBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"pPris"},"content":"            .withPhone(\"94351253\").withOrderDescriptions(\"Strawberry Cake\").withTags(\"friends\")","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"            .withDeliveryDate(\"01/01/2022\").withDeliveryStatus()","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"            .withRequest(\"\").build();","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"    public static final Order BENSON \u003d new OrderBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"pPris"},"content":"            .withOrderDescriptions(\"Chocolate Cake\")","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"            .withDeliveryDate(\"01-01-2022\").withDeliveryStatus()","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"            .withRequest(\"More pineapples\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"    public static final Order CARL \u003d new OrderBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"pPris"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withOrderDescriptions(\"Vanilla Cake\")","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"            .withDeliveryDate(\"01.01.2022\").withDeliveryStatus()","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"            .withRequest(\"Custom cake decoration, diamond hands.\").build();","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"    public static final Order DANIEL \u003d new OrderBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"            .withEmail(\"cornelia@example.com\").withDeliveryStatus().withAddress(\"10th street\")","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"pPris"},"content":"            .withOrderDescriptions(\"Chocolate Chip Muffin\", \"Chocolate Chip Muffin\").withTags(\"friends\")","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"            .withDeliveryDate(\"01 Jan 2022\").withDeliveryStatus()","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"            .withRequest(\"\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"xiinweii98"},"content":"    public static final Order ELLE \u003d new OrderBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"pPris"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"pPris"},"content":"            .withOrderDescriptions(\"Raisin Cake\", \"Blackforest cake\", \"Vanilla Cake\")","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"            .withDeliveryDate(\"31/12/2022\").withDeliveryStatus()","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"            .withRequest(\"\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"xiinweii98"},"content":"    public static final Order FIONA \u003d new OrderBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"pPris"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"pPris"},"content":"            .withOrderDescriptions(\"Vanilla cakes\").withDeliveryDate(\"28-02-2022\").withDeliveryStatus()","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"            .withRequest(\"Replace vanilla essence with banana essence.\").build();","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"xiinweii98"},"content":"    public static final Order GEORGE \u003d new OrderBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"pPris"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"pPris"},"content":"            .withOrderDescriptions(\"lava cake\").withDeliveryDate(\"06.03.2022\").withDeliveryStatus()","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"            .withRequest(\"\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"xiinweii98"},"content":"    public static final Order HOON \u003d new OrderBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"pPris"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withOrderDescriptions(\"jelly hearts\")","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"pPris"},"content":"            .withOrderDescriptions(\"mango cake\").withDeliveryDate(\"01/01/2022\").withDeliveryStatus()","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"            .withRequest(\"More sugar, he wants diabetus.\").build();","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"xiinweii98"},"content":"    public static final Order IDA \u003d new OrderBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"pPris"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withOrderDescriptions(\"a mango cake\")","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"pavz02"},"content":"            .withOrderDescriptions(\"vanilla with lemon zest\").withDeliveryDate(\"01/01/2022\")","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"            .withDeliveryStatus()","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"            .withRequest(\"Mangoes to be diced.\").build();","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":78,"author":{"gitId":"xiinweii98"},"content":"    // Manually added - Order\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"xiinweii98"},"content":"    public static final Order AMY \u003d new OrderBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"pPris"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withOrderDescriptions(VALID_CHOCOLATE_ORDER)","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"pavz02"},"content":"            .withTags(VALID_TAG_FRIEND).withDeliveryDate(VALID_DELIVERY_DATE_AMY).withDeliveryStatus().build();","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"xiinweii98"},"content":"    public static final Order BOB \u003d new OrderBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"pPris"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withOrderDescriptions(VALID_BERRY_ORDER)","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"pPris"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withDeliveryDate(VALID_DELIVERY_DATE_BOB)","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"pavz02"},"content":"            .withDeliveryStatus().build();","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"    private TypicalOrders() {} // prevents instantiation","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"xiinweii98"},"content":"     * Returns an {@code CakeCollate} with all the typical orders.","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"xiinweii98"},"content":"    public static CakeCollate getTypicalCakeCollate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"xiinweii98"},"content":"        CakeCollate ab \u003d new CakeCollate();","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"xiinweii98"},"content":"        for (Order order : getTypicalOrders()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"xiinweii98"},"content":"            ab.addOrder(order);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":103,"author":{"gitId":"xiinweii98"},"content":"    public static List\u003cOrder\u003e getTypicalOrders() {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"pPris":17,"RuiXiong2211":15,"pavz02":4,"xiinweii98":40,"-":30}},{"path":"src/test/java/seedu/cakecollate/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"xiinweii98":1,"-":34}},{"path":"src/test/java/seedu/cakecollate/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"package seedu.cakecollate.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":"import static seedu.cakecollate.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"import seedu.cakecollate.MainApp;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"xiinweii98":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"\u003c?import seedu.cakecollate.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"xiinweii98":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"\u003cfx:root type\u003d\"seedu.cakecollate.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"xiinweii98":1,"-":5}}]
