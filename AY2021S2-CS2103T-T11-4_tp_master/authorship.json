[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"# CakeCollate"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml)"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003dHVE6WF4JMI)](https://codecov.io/gh/AY2021S2-CS2103T-T11-4/tp)"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"pavz02"},"content":"### **CakeCollate**"},{"lineNumber":9,"author":{"gitId":"pavz02"},"content":"* CakeCollate is a command line based application for home bakers with small businesses."},{"lineNumber":10,"author":{"gitId":"pavz02"},"content":"* You can consolidate all your orders in one application and easily track customer details,"},{"lineNumber":11,"author":{"gitId":"pavz02"},"content":"order details and delivery dates in this application! "},{"lineNumber":12,"author":{"gitId":"pavz02"},"content":"\u003cbr\u003e"},{"lineNumber":13,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"### **Useful Links**"},{"lineNumber":15,"author":{"gitId":"pavz02"},"content":"* [User guide](https://ay2021s2-cs2103t-t11-4.github.io/tp/UserGuide.html)"},{"lineNumber":16,"author":{"gitId":"pavz02"},"content":"* [Developer guide](https://ay2021s2-cs2103t-t11-4.github.io/tp/DeveloperGuide.html)"},{"lineNumber":17,"author":{"gitId":"pavz02"},"content":"\u003cbr\u003e"},{"lineNumber":18,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":19,"author":{"gitId":"pavz02"},"content":"### **Acknowledgements**"},{"lineNumber":20,"author":{"gitId":"pavz02"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"* Libraries used"},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"    * [JavaFX](https://openjfx.io/)"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":"    * [Jackson](https://github.com/FasterXML/jackson)"},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"    * [JUnit5](https://github.com/junit-team/junit5)"}],"authorContributionMap":{"pavz02":12,"xiinweii98":9,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"pPris"},"content":"### Priscilla"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"pPris"},"content":"\u003cimg src\u003d\"images/ppris.png\" width\u003d\"200px\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"pPris"},"content":"[[github](http://github.com/ppris)]"},{"lineNumber":17,"author":{"gitId":"pPris"},"content":"[[portfolio](team/ppris.md)]"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"pPris"},"content":"* Role: Team Lead, Deliverables and Scheduling "},{"lineNumber":20,"author":{"gitId":"pPris"},"content":"* Responsibilities: Model"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"### Soh Xin Wei"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"\u003cimg src\u003d\"images/xiinweii98.png\" width\u003d\"200px\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":"[[github](http://github.com/xiinweii98)]"},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"[[portfolio](team/xiinweii98.md)]"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"* Role: Developer, Testing"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":"* Responsibilities: Logic"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"### Lim Rui Xiong"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"\u003cimg src\u003d\"images/ruixiong2211.png\" width\u003d\"200px\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"[[github](http://github.com/RuiXiong2211)] [[portfolio](team/RuiXiong2211)]"},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":"[[portfolio](team/ruixiong2211.md)]"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"* Role: Developer, Documentation"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"* Responsibilities: Commons"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"pavz02"},"content":"### Pavitra"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"pavz02"},"content":"\u003cimg src\u003d\"images/pavz02.png\" width\u003d\"200px\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"pavz02"},"content":"[[github](http://github.com/pavz02)]"},{"lineNumber":47,"author":{"gitId":"pavz02"},"content":"[[portfolio](team/pavz02.md)]"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"pavz02"},"content":"* Role: Developer, Code quality"},{"lineNumber":50,"author":{"gitId":"pavz02"},"content":"* Responsibilities: Ui and JavaFX"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"### Bhadani Simran"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"\u003cimg src\u003d\"images/simran-bhadani3.png\" width\u003d\"200px\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"[[github](http://github.com/simran-bhadani3)]"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"[[portfolio](team/simran-bhadani3)]"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"* Responsibilities: Integration"}],"authorContributionMap":{"pPris":6,"RuiXiong2211":2,"pavz02":6,"xiinweii98":10,"-":31,"simran-bhadani3":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other."},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App."},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor."},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory."},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component."},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command."},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`."},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person)."},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences."},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data."},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back."},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### Proposed Implementation"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history."},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history."},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history."},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather"},{"lineNumber":171,"author":{"gitId":"-"},"content":"than attempting to perform the undo."},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow."},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Design consideration:"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book."},{"lineNumber":206,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement."},{"lineNumber":207,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage."},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  itself."},{"lineNumber":211,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."},{"lineNumber":212,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct."},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Product scope"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Target user profile**:"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"simran-bhadani3"},"content":"* small-time, home-based cake seller"},{"lineNumber":240,"author":{"gitId":"simran-bhadani3"},"content":"* has a lot of orders to keep track of"},{"lineNumber":241,"author":{"gitId":"simran-bhadani3"},"content":"* sells cakes on multiple platforms and wants to collect all orders in one place"},{"lineNumber":242,"author":{"gitId":"simran-bhadani3"},"content":"* prefers desktop apps over other types"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* can type fast"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"simran-bhadani3"},"content":"**Value proposition**: keep track of and manage all orders placed on various online selling platforms in one place"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"### User stories"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"pPris"},"content":"| Priority| As a …​                                   | I can …​                                                        | So that …​                                                                                |"},{"lineNumber":255,"author":{"gitId":"pPris"},"content":"|---------|----------------------------------------------|--------------------------------------------------------------------|----------------------------------------------------------------------------------------------|"},{"lineNumber":256,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | view all the possible commands that I can execute                  | I know what functionalities I can make use of when using the program                         |"},{"lineNumber":257,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | add orders for the day                                             | I can add new orders to my database                                                          |"},{"lineNumber":258,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | delete orders for the day                                          | I can remove unnecessary orders from my database                                             |"},{"lineNumber":259,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | list all my orders for the day                                     | I can view what orders I have to fulfil for the day                                          |"},{"lineNumber":260,"author":{"gitId":"pPris"},"content":"| `***`   | User                                         | retrieve data stored in the previous sessions                      | -                                                                                            |"},{"lineNumber":261,"author":{"gitId":"pPris"},"content":"| `***`   | User logging in after a long time            | delete all orders, reset the application                           | I can start on a clean slate since the previous orders are now meaningless to me             |"},{"lineNumber":262,"author":{"gitId":"pPris"},"content":"| `**`    | Advanced user                                | set up shortcuts and short forms                                   | I can reduce the time it takes to enter orders                                               |"},{"lineNumber":263,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | receive reminders for the orders due soon                          | I remember and complete them on time                                                         |"},{"lineNumber":264,"author":{"gitId":"pPris"},"content":"| `**`    | User who\u0027s at least slightly experienced     | delete multiple orders at one go                                   | I can reflect mass cancellations in my database if they occur                                |"},{"lineNumber":265,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | sort the orders according to which one needs to be completed first | I can prioritise the orders to work on for that day                                          |"},{"lineNumber":266,"author":{"gitId":"pPris"},"content":"| `**`    | User that works a lot at night               | set the application to dark mode                                   | my eyes remain healthy                                                                       |"},{"lineNumber":267,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | add recipes                                                        | I know what ingredients are required for a particular order                                  |"},{"lineNumber":268,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | edit individual orders                                             | I can update orders if a customer changes it instead of deleting and adding another order    |"},{"lineNumber":269,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | add notes and special requests for orders                          | details on customized orders can be mentioned together with the main order                   |"},{"lineNumber":270,"author":{"gitId":"pPris"},"content":"| `**`    | User who loves statistics                    | view my most ordered products                                      | I know what to products to promote more                                                      |"},{"lineNumber":271,"author":{"gitId":"pPris"},"content":"| `**`    | Regular user                                 | be warned of duplicate orders I might have accidentally entered    | I can avoid making more than necessary, which may waste time and resources                   |"},{"lineNumber":272,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | find the orders made by a certain customer                         | I can retrieve information about the orders that this customer have made before, if needed   |"},{"lineNumber":273,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | input multiple order descriptions at one go                        | I don\u0027t need to input multiple entries for customers who order more than one type of cake    |"},{"lineNumber":274,"author":{"gitId":"pPris"},"content":"| `**`    | User                                         | set prices and costs of orders                                     | I can note how much profit I am earning                                                      |"},{"lineNumber":275,"author":{"gitId":"pPris"},"content":"| `*`     | User who does delivery                       | group orders by location                                           | I can deliver more efficiently                                                               |"},{"lineNumber":276,"author":{"gitId":"pPris"},"content":"| `*`     | User who does delivery                       | view a suggested delivery route or delivery plan                   | I don\u0027t need to compute dijkstra\u0027s algorithm by myself                                       |"},{"lineNumber":277,"author":{"gitId":"pPris"},"content":"| `*`     | User                                         | load the app quickly                                               | I can access the data quickly in case I forgot to prepare any                                |"},{"lineNumber":278,"author":{"gitId":"pPris"},"content":"| `*`     | Cautious User                                | sync my data to other services                                     | I won\u0027t lose my data if I forget my password or if I wipe my hard disk                       |"},{"lineNumber":279,"author":{"gitId":"pPris"},"content":"| `*`     | User                                         | save a particular customer\u0027s information                           | I can quickly add another order from this customer next time                                 |"},{"lineNumber":280,"author":{"gitId":"pPris"},"content":"| `*`     | User logging in after a long time            | refresher on the advanced commands                                 | -                                                                                            |"},{"lineNumber":281,"author":{"gitId":"pPris"},"content":"| `*`     | Regular user                                 | keep track of the money paid or owed by the customer               | I can ensure that all my dues have been received                                             |"},{"lineNumber":282,"author":{"gitId":"pPris"},"content":"| `*`     | User who wants to reward loyal customers     | view a list of repeating customers                                 | I can reward loyal customers with discounts                                                  |"},{"lineNumber":283,"author":{"gitId":"pPris"},"content":"| `*`     | User who finds social media platforms tiring | view the platforms that most of my orders come from                | I know which platform I should spend more time promoting on                                  |"},{"lineNumber":284,"author":{"gitId":"pPris"},"content":"| `*`     | Advanced user                                | add promo codes and minimum order discounts                        | I know what discounts to give to those who meet the mentioned criteria only                  |"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"pPris"},"content":""},{"lineNumber":289,"author":{"gitId":"pPris"},"content":"[comment]: \u003c\u003e (| `**`    | User                                         | keep track of how many times a user has ordered with the company   | I can give discounts if they have ordered more than a certain number of time                 |)"},{"lineNumber":290,"author":{"gitId":"pPris"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"### Use cases"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"RuiXiong2211"},"content":"(For all use cases below, the **System** is `CakeCollate` and the **Actor** is the `user`, unless specified otherwise)"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"RuiXiong2211"},"content":"**Use case: Delete an order**"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"RuiXiong2211"},"content":"1.  User requests to list order"},{"lineNumber":300,"author":{"gitId":"RuiXiong2211"},"content":"2.  CakeCollate shows a list of orders"},{"lineNumber":301,"author":{"gitId":"RuiXiong2211"},"content":"3.  User requests to delete a specific order in the list"},{"lineNumber":302,"author":{"gitId":"RuiXiong2211"},"content":"4.  CakeCollate deletes the order"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"    Use case ends."},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"* 2a. The list is empty."},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"  Use case ends."},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"RuiXiong2211"},"content":"    * 3a1. CakeCollate shows an error message."},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"      Use case resumes at step 2."},{"lineNumber":317,"author":{"gitId":"-"},"content":"      "},{"lineNumber":318,"author":{"gitId":"RuiXiong2211"},"content":"**Use case: Add an order**"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"RuiXiong2211"},"content":"**MSS**"},{"lineNumber":321,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":322,"author":{"gitId":"RuiXiong2211"},"content":"1.  User requests to list order"},{"lineNumber":323,"author":{"gitId":"RuiXiong2211"},"content":"2.  CakeCollate shows a list of orders"},{"lineNumber":324,"author":{"gitId":"RuiXiong2211"},"content":"3.  User requests to add a specific order in the list"},{"lineNumber":325,"author":{"gitId":"RuiXiong2211"},"content":"4.  CakeCollate adds the order"},{"lineNumber":326,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":327,"author":{"gitId":"RuiXiong2211"},"content":"    Use case ends."},{"lineNumber":328,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":329,"author":{"gitId":"RuiXiong2211"},"content":"**Use case: Edit an order**"},{"lineNumber":330,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":331,"author":{"gitId":"RuiXiong2211"},"content":"**MSS**"},{"lineNumber":332,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":333,"author":{"gitId":"RuiXiong2211"},"content":"1.  User requests to list order"},{"lineNumber":334,"author":{"gitId":"RuiXiong2211"},"content":"2.  CakeCollate shows a list of orders"},{"lineNumber":335,"author":{"gitId":"RuiXiong2211"},"content":"3.  User requests to edit a specific order in the list"},{"lineNumber":336,"author":{"gitId":"RuiXiong2211"},"content":"4.  CakeCollate edits the order"},{"lineNumber":337,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":338,"author":{"gitId":"RuiXiong2211"},"content":"    Use case ends."},{"lineNumber":339,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":340,"author":{"gitId":"RuiXiong2211"},"content":"**Extensions**"},{"lineNumber":341,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":342,"author":{"gitId":"RuiXiong2211"},"content":"* 2a. The list is empty."},{"lineNumber":343,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":344,"author":{"gitId":"RuiXiong2211"},"content":"  Use case ends."},{"lineNumber":345,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":346,"author":{"gitId":"RuiXiong2211"},"content":"* 3a. The given index is invalid."},{"lineNumber":347,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":348,"author":{"gitId":"RuiXiong2211"},"content":"    * 3a1. CakeCollate shows an error message."},{"lineNumber":349,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":350,"author":{"gitId":"RuiXiong2211"},"content":"      Use case resumes at step 2."},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"### Non-Functional Requirements"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"xiinweii98"},"content":"* Constraints:"},{"lineNumber":355,"author":{"gitId":"xiinweii98"},"content":"    * CakeCollate should be backward compatible with data produced by earlier releases."},{"lineNumber":356,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":357,"author":{"gitId":"xiinweii98"},"content":"* Technical requirements:"},{"lineNumber":358,"author":{"gitId":"xiinweii98"},"content":"    * CakeCollate should work on any _mainstream OS_ on both 32-bit and 64-bit environments with Java `11` or above installed."},{"lineNumber":359,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":360,"author":{"gitId":"xiinweii98"},"content":"* Performance requirements:"},{"lineNumber":361,"author":{"gitId":"xiinweii98"},"content":"    * CakeCollate should be able to hold up to 1000 orders without a noticeable sluggishness in performance for typical usage."},{"lineNumber":362,"author":{"gitId":"xiinweii98"},"content":"    * CakeCollate should response within two seconds for all commands."},{"lineNumber":363,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":364,"author":{"gitId":"xiinweii98"},"content":"* Quality requirements:"},{"lineNumber":365,"author":{"gitId":"xiinweii98"},"content":"    * A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":366,"author":{"gitId":"xiinweii98"},"content":"    * A user who does not have much experience with command line interface tools should still be able to use CakeCollate with the help of the _[User guide](UserGuide.md)_ and the `help` command in CakeCollate."},{"lineNumber":367,"author":{"gitId":"xiinweii98"},"content":"    * A user who is experienced with command line interface tools should find CakeCollate commands easy to use."},{"lineNumber":368,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":369,"author":{"gitId":"xiinweii98"},"content":"* Process requirements:"},{"lineNumber":370,"author":{"gitId":"xiinweii98"},"content":"    * The project is expected to adhere to a schedule that delivers a feature set every two weeks."},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"### Glossary"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others"},{"lineNumber":378,"author":{"gitId":"pavz02"},"content":"* **MSS**: Main success scenario, lists the steps of a typical usage of the application by the user"},{"lineNumber":379,"author":{"gitId":"pavz02"},"content":"* **Feature set**: A list of specifications and functionalities of the application"},{"lineNumber":380,"author":{"gitId":"pavz02"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing."},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Launch and shutdown"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"1. Initial launch"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"1. Saving window preferences"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"},{"lineNumber":406,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained."},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Deleting a person"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list."},{"lineNumber":415,"author":{"gitId":"-"},"content":""},{"lineNumber":416,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e"},{"lineNumber":420,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      Expected: Similar to previous."},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"### Saving data"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"}],"authorContributionMap":{"pPris":34,"RuiXiong2211":39,"pavz02":3,"xiinweii98":17,"-":335,"simran-bhadani3":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"CakeCollate is a **desktop app for managing cake orders, optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CakeCollate can get your order management tasks done faster than traditional GUI apps."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"1. Download the latest `cakecollate.jar` from [here](https://github.com/AY2021S2-CS2103T-T11-4/tp/releases)."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your CakeCollate."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will display the help window.\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"   * **`list`** : Lists all orders in the CakeCollate database."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/13-05-2021 /o strawberry cake 3` : Adds an order with a contact named `John Doe` to the CakeCollate."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"   * **`delete`**`3` : Deletes the 3rd order shown in the current list."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"   * **`clear`** : Deletes all order in the CakeCollate database."},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`."},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken."},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"pavz02"},"content":"Gives instructions on how to enter orders into the CLI."},{"lineNumber":70,"author":{"gitId":"pavz02"},"content":"Displays a message with a list of all available commands and their format."},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"### Adding an order: `add`"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"Adds an order to the CakeCollate database."},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG] d/DELIVERY_DATE o/ORDER_DESCRIPTION`"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/13-05-2021 /o strawberry cake 3`"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"* `add n/Betsy Crowe t/daughter e/betsycrowe@example.com a/Newgate Prison p/1234567 t/friend d/13-05-2100 /o chocolate cake 5 durian cake 10 mochi cake 100`"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"xiinweii98"},"content":"### List all existing orders : `list`"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"xiinweii98"},"content":"Shows a list of all orders in the CakeCollate database."},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"Format: `list`"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"### Editing an order : `edit`"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"Edits an existing order in the CakeCollate database."},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG] [d/DELIVERY_DATE] [o/ORDER_DESCRIPTION]​`"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"* Edits the order at the specified `INDEX`. The index refers to the index number shown in the displayed order list. The index **must be a positive integer** 1, 2, 3, …​"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided."},{"lineNumber":102,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values."},{"lineNumber":103,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative."},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"* You can remove all the order’s tags by typing `t/` without"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    specifying any tags after it."},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":108,"author":{"gitId":"RuiXiong2211"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st order to be `91234567` and `johndoe@example.com` respectively."},{"lineNumber":109,"author":{"gitId":"RuiXiong2211"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd order to be `Betsy Crower` and clears all existing tags."},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords."},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* Only the name is searched."},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search)."},{"lineNumber":122,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"simran-bhadani3"},"content":"### Deleting an order : `delete`"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"Deletes the specified order from the CakeCollate database."},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"simran-bhadani3"},"content":"Format: `delete ID...`"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"simran-bhadani3"},"content":"* Deletes the orders with the specified ids."},{"lineNumber":136,"author":{"gitId":"simran-bhadani3"},"content":"* The `ID` refers to the order `ID` number shown in the list of orders."},{"lineNumber":137,"author":{"gitId":"simran-bhadani3"},"content":"* One or more ids can be entered."},{"lineNumber":138,"author":{"gitId":"simran-bhadani3"},"content":"* The `ID` **must be valid**."},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":141,"author":{"gitId":"simran-bhadani3"},"content":"* `list` followed by `delete 2` deletes the order with `ID` 2 from the CakeCollate database."},{"lineNumber":142,"author":{"gitId":"simran-bhadani3"},"content":"* `delete 2 3` deletes the orders with ids 2 and 3 from the CakeCollate database."},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"pPris"},"content":"### Clearing all existing orders: `clear`"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"pPris"},"content":"Deletes all existing orders in the CakeCollate database."},{"lineNumber":147,"author":{"gitId":"pPris"},"content":""},{"lineNumber":148,"author":{"gitId":"pPris"},"content":"Warning: this is an undo-able operation."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Format: `clear`"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Exits the program."},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"Format: `exit`"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Saving the data"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"simran-bhadani3"},"content":"CakeCollate data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"### Editing the data file"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"simran-bhadani3"},"content":"CakeCollate data is saved as a JSON file `[JAR file location]/data/cakecollate.json`. Advanced users are welcome to update data directly by editing that data file."},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**"},{"lineNumber":167,"author":{"gitId":"simran-bhadani3"},"content":"If your changes to the data file makes its format invalid, CakeCollate will discard all data and start with an empty data file at the next run."},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"_Details coming soon ..._"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e"},{"lineNumber":179,"author":{"gitId":"simran-bhadani3"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CakeCollate home folder."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"## Command summary"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"Action | Format, Examples"},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------|------------------"},{"lineNumber":187,"author":{"gitId":"RuiXiong2211"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG] d/DELIVERY_DATE o/ORDER_TYPE` \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/13-05-2021 /o strawberry cake 3`"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Clear** | `clear`"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`"},{"lineNumber":190,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`"},{"lineNumber":191,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**List** | `list`"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**Help** | `help`"},{"lineNumber":194,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":195,"author":{"gitId":"xiinweii98"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":196,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":197,"author":{"gitId":"xiinweii98"},"content":"## Acknowledgements"},{"lineNumber":198,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":199,"author":{"gitId":"xiinweii98"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."}],"authorContributionMap":{"pPris":4,"pavz02":2,"RuiXiong2211":13,"xiinweii98":16,"-":151,"simran-bhadani3":13}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"title: CakeCollate"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml)"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003dHVE6WF4JMI)](https://codecov.io/gh/AY2021S2-CS2103T-T11-4/tp)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"**CakeCollate is a desktop application for managing your order details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface)."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"* If you are interested in using CakeCollate, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start)."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":"* If you are interested about developing CakeCollate, the [**Developer Guide**](DeveloperGuide.html) is a good place to start."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**"},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"* Libraries used"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":"    * [JavaFX](https://openjfx.io/)"},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"    * [Jackson](https://github.com/FasterXML/jackson)"},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":"    * [JUnit5](https://github.com/junit-team/junit5)"}],"authorContributionMap":{"xiinweii98":11,"-":10}},{"path":"docs/team/pavz02.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"pavz02"},"content":"title: Pavitra\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"pavz02"},"content":"## Project: CakeCollate"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands."},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command."},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them."},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands."},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys."},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_"}],"authorContributionMap":{"pavz02":2,"-":44}},{"path":"docs/team/ruixiong2211.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"---"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"title: Lim Rui Xiong\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"---"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"## Project: CakeCollate"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"CakeCollate is a desktop order book application used for tracking cake orders. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"### to edit closer to end of project"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"Given below are my contributions to the project."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"* **New Feature**: Added the ability to undo/redo previous commands."},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command."},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them."},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands."},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys."},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"* **Code contributed**: [RepoSense link]()"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"* **Project management**:"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"* **Enhancements to existing features**:"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"* **Documentation**:"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"  * User Guide:"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"  * Developer Guide:"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"    * Added implementation details of the `delete` feature."},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"* **Community**:"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"* **Tools**:"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"* _{you can add/remove categories in the list above}_"}],"authorContributionMap":{"xiinweii98":48}},{"path":"docs/team/xiinweii98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiinweii98"},"content":"---"},{"lineNumber":2,"author":{"gitId":"xiinweii98"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"xiinweii98"},"content":"title: Soh Xin Wei\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"xiinweii98"},"content":"---"},{"lineNumber":5,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":6,"author":{"gitId":"xiinweii98"},"content":"## Project: CakeCollate"},{"lineNumber":7,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":8,"author":{"gitId":"xiinweii98"},"content":"CakeCollate is a desktop order book application used for tracking cake orders. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":9,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":10,"author":{"gitId":"xiinweii98"},"content":"### to edit closer to end of project"},{"lineNumber":11,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":12,"author":{"gitId":"xiinweii98"},"content":"Given below are my contributions to the project."},{"lineNumber":13,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":14,"author":{"gitId":"xiinweii98"},"content":"* **New Feature**: Added the ability to undo/redo previous commands."},{"lineNumber":15,"author":{"gitId":"xiinweii98"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command."},{"lineNumber":16,"author":{"gitId":"xiinweii98"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them."},{"lineNumber":17,"author":{"gitId":"xiinweii98"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands."},{"lineNumber":18,"author":{"gitId":"xiinweii98"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*"},{"lineNumber":19,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":20,"author":{"gitId":"xiinweii98"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys."},{"lineNumber":21,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":22,"author":{"gitId":"xiinweii98"},"content":"* **Code contributed**: [RepoSense link]()"},{"lineNumber":23,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":24,"author":{"gitId":"xiinweii98"},"content":"* **Project management**:"},{"lineNumber":25,"author":{"gitId":"xiinweii98"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"},{"lineNumber":26,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":27,"author":{"gitId":"xiinweii98"},"content":"* **Enhancements to existing features**:"},{"lineNumber":28,"author":{"gitId":"xiinweii98"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())"},{"lineNumber":29,"author":{"gitId":"xiinweii98"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())"},{"lineNumber":30,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":31,"author":{"gitId":"xiinweii98"},"content":"* **Documentation**:"},{"lineNumber":32,"author":{"gitId":"xiinweii98"},"content":"  * User Guide:"},{"lineNumber":33,"author":{"gitId":"xiinweii98"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()"},{"lineNumber":34,"author":{"gitId":"xiinweii98"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()"},{"lineNumber":35,"author":{"gitId":"xiinweii98"},"content":"  * Developer Guide:"},{"lineNumber":36,"author":{"gitId":"xiinweii98"},"content":"    * Added implementation details of the `delete` feature."},{"lineNumber":37,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":38,"author":{"gitId":"xiinweii98"},"content":"* **Community**:"},{"lineNumber":39,"author":{"gitId":"xiinweii98"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()"},{"lineNumber":40,"author":{"gitId":"xiinweii98"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())"},{"lineNumber":41,"author":{"gitId":"xiinweii98"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())"},{"lineNumber":42,"author":{"gitId":"xiinweii98"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())"},{"lineNumber":43,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":44,"author":{"gitId":"xiinweii98"},"content":"* **Tools**:"},{"lineNumber":45,"author":{"gitId":"xiinweii98"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())"},{"lineNumber":46,"author":{"gitId":"xiinweii98"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo"},{"lineNumber":47,"author":{"gitId":"xiinweii98"},"content":""},{"lineNumber":48,"author":{"gitId":"xiinweii98"},"content":"* _{you can add/remove categories in the list above}_"}],"authorContributionMap":{"xiinweii98":48}}]
