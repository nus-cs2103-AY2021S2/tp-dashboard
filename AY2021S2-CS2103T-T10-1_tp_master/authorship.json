[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Pawbook","lastModifiedDate":"2021-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Java CI](https://github.com/AY2021S2-CS2103T-T10-1/tp/workflows/Java%20CI/badge.svg) [![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T10-1/tp/branch/master/graph/badge.svg?token\u003d6D9NPVXEYL)](https://codecov.io/gh/AY2021S2-CS2103T-T10-1/tp)","lastModifiedDate":"2021-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"In Singapore, dog schools are popular among dog owners. Besides day care, they also provide training, grooming and workshops. With many moving parts daily, managing operations  can get overwhelming. PawBook is an all-in-one management system to help dog school managers keep track of attendance, scheduling and services and maintain organisation.","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"### Acknowledgement","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"shaelynl":1,"kouyk":3,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"mainClassName \u003d \u0027dog.pawbook.Main\u0027","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"run {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"    archiveBaseName.set(\u0027pawbook\u0027)","lastModifiedDate":"2021-03-05"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"    archiveClassifier.set(\u0027\u0027)","lastModifiedDate":"2021-03-05"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"    archiveVersion.set(\u0027v1.3.0\u0027)","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kouyk":8,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"CharlesLee01"},"content":"### Charles Lee Lin Ta","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"CharlesLee01"},"content":"\u003cimg src\u003d\"images/charleslee01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"CharlesLee01"},"content":"[[github](https://github.com/CharlesLee01)]","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"[[portfolio](team/charleslee.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"CharlesLee01"},"content":"* Role: Developer","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"CharlesLee01"},"content":"* Responsibilities: Add command","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"### John Alec Mendoza Branzuela","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"\u003cimg src\u003d\"images/branzuelajohn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"[[github](http://github.com/branzuelajohn)]","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"[[portfolio](team/branzuelajohn.md)]","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"* Role: Developer","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"* Responsibilities: Command Summary","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"### Kou Yong Kang","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"\u003cimg src\u003d\"images/kouyk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"[[github](http://github.com/kouyk)] [[portfolio](team/yongkang.md)]","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"### Lam Xuan Yi, Shaelyn","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"\u003cimg src\u003d\"images/shaelynl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"[[github](http://github.com/shaelynl)]","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"[[portfolio](team/shaelynlam.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"* Responsibilities: Help command","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"### Wei Yutong","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"\u003cimg src\u003d\"images/wei-yutong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"[[github](http://github.com/wei-yutong)]","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"[[portfolio](team/weiyutong.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"* Responsibilities: Exit Command","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":59,"author":{"gitId":"ZhangAnli"},"content":"### Zhang Anli","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":61,"author":{"gitId":"ZhangAnli"},"content":"\u003cimg src\u003d\"images/zhanganli.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"ZhangAnli"},"content":"[[github](http://github.com/ZhangAnli)]","lastModifiedDate":"2021-02-27"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"[[portfolio](team/zhanganli.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-27"},{"lineNumber":67,"author":{"gitId":"ZhangAnli"},"content":"* Responsibilities: Delete command","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"CharlesLee01":5,"shaelynl":4,"branzuelajohn":6,"ZhangAnli":4,"wei-yutong":8,"kouyk":3,"-":37}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"## **Target User Profile**","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"ZhangAnli"},"content":"The target user profile are dog school managers that own and manage the daily operations of the dog schools. They ","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"handle a wide range of operations such as keeping track of the dogs under their care, arranging classes and taking care ","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"of the dogs on a daily basis. They need a systematic way of maintaining their handle on the operations of their school ","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"at all times.","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"## **Value Proposition**","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"In Singapore, dog schools are popular among dog owners. Besides day care, they also provide training,","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"ZhangAnli"},"content":"grooming and workshops. With many moving parts daily, managing operations  can get overwhelming.","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"PawBook is an all-in-one management system to help dog school managers keep track of attendance, scheduling and services","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"and maintain organisation. At present, there is no such application to help dog school owners to organise and","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"ZhangAnli"},"content":"manage their dog school currently. This application serves to increase the effectiveness and efficacy of dog schools","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"which in turn allows dog schools and its owners to take in more dogs. This application is necessary to help organise the","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"school\u0027s system. By increasing the intake of dogs in dog schools, this increases the number of trained dogs in Singapore","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"in general which solves the general problem of untrained dogs in Singapore being a nuisance to the public.","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2021S2-CS2103T-T10-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2021S2-CS2103T-T10-1/tp/blob/master/src/main/java/dog/pawbook/Main.java) and [`MainApp`](https://github.com/AY2021S2-CS2103T-T10-1/tp/blob/master/src/main/java/dog/pawbook/MainApp.java). It is responsible for,","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-T10-1/tp/blob/master/src/main/java/dog/pawbook/ui/Ui.java)","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `EntityListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2021S2-CS2103T-T10-1/tp/blob/master/src/main/java/dog/pawbook/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103T-T10-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103T-T10-1/tp/blob/master/src/main/java/dog/pawbook/logic/Logic.java)","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"1. `Logic` uses the `PawbookParser` class to parse the user command.","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"wei-yutong"},"content":"1. The command execution can affect the `Model` (e.g. adding a owner).","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete owner 1\")` API call.","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"![Interactions Inside the Logic Component for the `delete owner 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"**API** : [`Model.java`](https://github.com/AY2021S2-CS2103T-T10-1/tp/blob/master/src/main/java/dog/pawbook/model/Model.java)","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"* exposes an unmodifiable `ObservableList\u003cEntity\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Entity` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Entity` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103T-T10-1/tp/blob/master/src/main/java/dog/pawbook/storage/Storage.java)","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":"Classes used by multiple components are in the `pawbook.commons` package.","lastModifiedDate":"2021-03-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"kouyk"},"content":"### Adding/deleting feature","lastModifiedDate":"2021-03-21"},{"lineNumber":156,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"branzuelajohn"},"content":"#### What it is","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"kouyk"},"content":"Pawbook manages more than one type of entity, each with their own unique attributes. An OOP approach is used here whereby both the `AddCommand` and `DeleteCommand` are generic classes that extends the `Command` class. This way any number of other classes extending `Entity` can be added/deleted as well.","lastModifiedDate":"2021-03-21"},{"lineNumber":160,"author":{"gitId":"branzuelajohn"},"content":"Example: `add owner n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]..`","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"branzuelajohn"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"kouyk"},"content":"The actual execution of these commands are largely the same and can be easily reimplemented to include more verification to the data if necessary, e.g. verifying that the owner ID refers to an actual owner instead of taking in an arbitrary number.","lastModifiedDate":"2021-03-21"},{"lineNumber":165,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":166,"author":{"gitId":"kouyk"},"content":"In order to generate the respective commands, the raw input needs to be parsed first. It is required that the user provide a second keyword right after the `add`/`delete` command keyword to indicate the correct entity type to be added. Using this information, the arguments can be forwarded to the correct parser from within `PawbookParser` to be further processed. ","lastModifiedDate":"2021-03-21"},{"lineNumber":167,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"branzuelajohn"},"content":"Given below is an example usage scenario and how the add command behaves at each step.","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"branzuelajohn"},"content":"Step 1. The user launches the application and executes `add owner n/BRUCE p/92019201 e/bruce@example.com a/BLK 123 Adam Road t/friendly` to save an owner.","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"branzuelajohn"},"content":"Step 2. The owner  is added to the model.","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"branzuelajohn"},"content":"Below is an example activity diagram for a valid add command from the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"branzuelajohn"},"content":"![AddActivityDiagram](images/AddActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":178,"author":{"gitId":"branzuelajohn"},"content":"Below is an example activity diagram for a valid delete command from the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":180,"author":{"gitId":"branzuelajohn"},"content":"![DeleteActivityDiagram](diagrams/DeleteActivityDiagram.puml)","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"CharlesLee01"},"content":"### Edit feature","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"CharlesLee01"},"content":"Pawbook allows the user to `edit` an entity. For instance, the user may want to `edit`  some features of an owner. By entering the edit command with the correct identification number of the owner to be edited, the specified features of the owner will be modified accordingly.","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"CharlesLee01"},"content":"In order to generate the respective commands, the raw input needs to be parsed first. It is required that the user provide a second keyword right after the `edit` command keyword to indicate the correct entity type to be edited. Using this information, the arguments can be forwarded to the correct parser from within `PawbookParser` to be further processed.","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"CharlesLee01"},"content":"Below is an example activitiy diagram for a valid view command from the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"CharlesLee01"},"content":"![EditActivityDiagram](images/EditActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"ZhangAnli"},"content":"### Find feature ","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"ZhangAnli"},"content":"Pawbook allows the users to `find` an entity based on keyword searches. The `find` function entertains multiple keyword ","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"ZhangAnli"},"content":"searches and reveals the entire list of commands that match one or more of the results. ","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"ZhangAnli"},"content":"When the user enters a valid command with the keyword searches, the arguments are parsed by the `FindCommmandParser` that ","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"ZhangAnli"},"content":"converts the string of arguments into a list, that is subsequently passed on to a `NameContainsKeywordsPredicate` instance ","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"ZhangAnli"},"content":"that uses the list of keywords to find the search results based on the supplied keywords. ","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"ZhangAnli"},"content":"This predicate is passed into the `ModelManager`\u0027s `updateFilteredEntityList()` method and subsequently generates the ","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"ZhangAnli"},"content":"CommandResult instance that is then passed on in the LogicManager. ","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"ZhangAnli"},"content":"![FindActivityDiagram](images/FindActivityDiagram.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"ZhangAnli"},"content":"### View feature ","lastModifiedDate":"2021-03-25"},{"lineNumber":204,"author":{"gitId":"ZhangAnli"},"content":"Pawbook allows the user to `view` an entity and all its related entities. For instance, the user may want to `view` all the dogs of one particular owner or all the dogs enrolled in a program. By entering the correct view command with the correct identification number, the entire list will be generated. ","lastModifiedDate":"2021-03-25"},{"lineNumber":205,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"ZhangAnli"},"content":"When the user enters a valid command with the target entity ID, the ViewCommandParser will firstly parse the command and store the ID as an integer that is then passed on to as a parameter into the constructor method of a new ViewCommand instance.","lastModifiedDate":"2021-03-25"},{"lineNumber":207,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":208,"author":{"gitId":"ZhangAnli"},"content":"Subsequently, once the new `ViewCommand` instance has been created, in its execute method, it will retrieve the entity via the ID that was passed in, from the `ModelManager`. With a handle on the target entity now, we build a list consisting of the entity IDs that are to be shown as search results. ","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":210,"author":{"gitId":"ZhangAnli"},"content":"Based on the class type of the target entity, we will reveal the search results accordingly. If the target entity is a `Dog`, then we will show the relevant owner profile. If the target entity is a `Owner`, then we will list out all of the owner\u0027s dogs. Similar to owner, for `Program`, we will reveal the full list of dogs enrolled in that program. ","lastModifiedDate":"2021-03-25"},{"lineNumber":211,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":212,"author":{"gitId":"ZhangAnli"},"content":"This list is subsequently passed on to the `RelatedEntityPredicate` that will later be used in the ModelManager\u0027s `updatefilteredEntityList())` method to finally reveal the search results.","lastModifiedDate":"2021-03-25"},{"lineNumber":213,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":214,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":215,"author":{"gitId":"ZhangAnli"},"content":"Below is an example activitiy diagram for a valid view command from the user. ","lastModifiedDate":"2021-03-25"},{"lineNumber":216,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":217,"author":{"gitId":"ZhangAnli"},"content":"![ViewActivityDiagram](images/ViewActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"shaelynl"},"content":"### Drop feature","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"shaelynl"},"content":"While Pawbook allows the enrolling of dogs into programs, conversely it supports dropping previously-enrolled dogs from the programs.","lastModifiedDate":"2021-03-25"},{"lineNumber":221,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":222,"author":{"gitId":"shaelynl"},"content":"To drop a dog from a program, the raw input is parsed and goes through several checks to ensure that the provided dog and program IDs are both valid and are indeed referring to dog and program objects respectively. Subsequently, the arguments will be forwarded to `DropCommandParser` followed by `PawbookParser` where they are converted from the String input to int.","lastModifiedDate":"2021-03-25"},{"lineNumber":223,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":224,"author":{"gitId":"shaelynl"},"content":"Below is an example activity diagram for a valid drop command from the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":225,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":226,"author":{"gitId":"shaelynl"},"content":"![DropActivityDiagram](images/DropActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":227,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":228,"author":{"gitId":"kouyk"},"content":"#### Alternate implementations","lastModifiedDate":"2021-03-21"},{"lineNumber":229,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":230,"author":{"gitId":"wei-yutong"},"content":"### Enrol feature","lastModifiedDate":"2021-03-25"},{"lineNumber":231,"author":{"gitId":"wei-yutong"},"content":"Pawbook supports the enrolling of specific dogs into specific programs. ","lastModifiedDate":"2021-03-25"},{"lineNumber":232,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":233,"author":{"gitId":"wei-yutong"},"content":"In order to enrol a dog into a program, the raw input needs to be parsed first. It is required that the user provides 2 parameters, namely `dogId` and `programId`. These inputs have the prefix `/d` and `/p`, and is followed by an integer. Using this information, the arguments will be forwarded to the `EnrolCommandParser` from within `PawbookParser`, which converts the String input to int. ","lastModifiedDate":"2021-03-25"},{"lineNumber":234,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":235,"author":{"gitId":"wei-yutong"},"content":"Below is an example activity diagram for a valid enrol command from the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":236,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":237,"author":{"gitId":"wei-yutong"},"content":"![EnrolActivityDiagram](images/EnrolActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":238,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"wei-yutong"},"content":"### Alternate implementations","lastModifiedDate":"2021-03-25"},{"lineNumber":240,"author":{"gitId":"wei-yutong"},"content":"As dogs and programs can also be identified by their respective names instead of IDs, another implementation could be replacing the parameters of `dogId` and `programId` with their respective names.","lastModifiedDate":"2021-03-25"},{"lineNumber":241,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":242,"author":{"gitId":"wei-yutong"},"content":"However, this requires there to be no duplicate dog or program names.","lastModifiedDate":"2021-03-25"},{"lineNumber":243,"author":{"gitId":"kouyk"},"content":" ","lastModifiedDate":"2021-03-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"wei-yutong"},"content":"Step 2. The user executes `delete 5` command to delete the 5th owner in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-03-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"wei-yutong"},"content":"Step 3. The user executes `add n/David …​` to add a new owner. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-03-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"wei-yutong"},"content":"Step 4. The user now decides that adding the owner was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-03-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"wei-yutong"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the owner being deleted).","lastModifiedDate":"2021-03-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"branzuelajohn"},"content":"### Product Scope","lastModifiedDate":"2021-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"branzuelajohn"},"content":"* has a need to manage a significant number of dogs and owners","lastModifiedDate":"2021-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"branzuelajohn"},"content":"* is a fast typist","lastModifiedDate":"2021-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"branzuelajohn"},"content":"**Value proposition**:","lastModifiedDate":"2021-03-02"},{"lineNumber":354,"author":{"gitId":"branzuelajohn"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-03-02"},{"lineNumber":355,"author":{"gitId":"branzuelajohn"},"content":"* saves significant time for the business owner, who beforehand had to manage the details of dogs and owners","lastModifiedDate":"2021-03-02"},{"lineNumber":356,"author":{"gitId":"branzuelajohn"},"content":"* consolidates information on dogs, owners and programs into one place","lastModifiedDate":"2021-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"branzuelajohn"},"content":"### User Stories","lastModifiedDate":"2021-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"branzuelajohn"},"content":"| `* * *`  | Dog school manager   | Create a list of dogs and their respective owners in the dog school        | Keep track of the dogs we are responsible for     |","lastModifiedDate":"2021-03-02"},{"lineNumber":366,"author":{"gitId":"wei-yutong"},"content":"| `* * *`  | Busy owner          | Delete dog profiles and owner profiles            | Remove dogs or owners that are no longer in the school                                                           |","lastModifiedDate":"2021-03-07"},{"lineNumber":367,"author":{"gitId":"branzuelajohn"},"content":"| `* * *`  | Dog school manager   | Add dog profiles and owner profiles             |  Add new dogs or owners that join the school         |","lastModifiedDate":"2021-03-02"},{"lineNumber":368,"author":{"gitId":"branzuelajohn"},"content":"| `* * *`  | Dog school manager   | Get instructions         | Get help when I do not know how to use the application |","lastModifiedDate":"2021-03-02"},{"lineNumber":369,"author":{"gitId":"branzuelajohn"},"content":"| `* * *`  | Dog school manager   | Exit the application   |           |","lastModifiedDate":"2021-03-02"},{"lineNumber":370,"author":{"gitId":"branzuelajohn"},"content":"| `* *`    | Dog school manager   | Edit a dog profile when the information is wrong/outdated |                                             |","lastModifiedDate":"2021-03-02"},{"lineNumber":371,"author":{"gitId":"branzuelajohn"},"content":"| `* *`    | Dog school manager   | Create a dog program for the dog students            |                                                  |","lastModifiedDate":"2021-03-02"},{"lineNumber":372,"author":{"gitId":"branzuelajohn"},"content":"| `* *`    | Dog school manager   | Enrol dogs into a specific dog program | Dogs who recently joined a program are added to the class list |","lastModifiedDate":"2021-03-02"},{"lineNumber":373,"author":{"gitId":"branzuelajohn"},"content":"| `* *`    | Dog school manager   | Drop dogs out of a specific dog program | Dogs that have left the class are no longer in the class list  |","lastModifiedDate":"2021-03-02"},{"lineNumber":374,"author":{"gitId":"branzuelajohn"},"content":"| `* *`    | Advanced user        | Edit in bulk quickly without having to be familiar with the app | Minimize chance of someone else seeing them by accident |","lastModifiedDate":"2021-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"CharlesLee01"},"content":"(For all use cases below, the **System** is the `Pawbook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-28"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"kouyk"},"content":"**Use case: UC01 - Add a dog/owner profile or program**","lastModifiedDate":"2021-02-28"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"kouyk"},"content":"1.  User request to add a dog/owner profile or program to the list.","lastModifiedDate":"2021-02-28"},{"lineNumber":387,"author":{"gitId":"kouyk"},"content":"2.  Pawbook adds the dog/owner.","lastModifiedDate":"2021-02-28"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"kouyk"},"content":"* 1a. Missing mandatory dog/owner/program details.","lastModifiedDate":"2021-02-28"},{"lineNumber":394,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":395,"author":{"gitId":"CharlesLee01"},"content":"    * 1a1. Pawbook shows an error message.","lastModifiedDate":"2021-02-28"},{"lineNumber":396,"author":{"gitId":"kouyk"},"content":"    * 1a2. User supplies missing details.","lastModifiedDate":"2021-02-28"},{"lineNumber":397,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":398,"author":{"gitId":"CharlesLee01"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-28"},{"lineNumber":399,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":400,"author":{"gitId":"kouyk"},"content":"*Note:* The mandatory details here refer to name, breed, owner ID for dogs; name, phone number, email and address for owners; name and time for programs.","lastModifiedDate":"2021-02-28"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":402,"author":{"gitId":"kouyk"},"content":"**Use case: UC02 - Delete a dog/owner profile or program**","lastModifiedDate":"2021-02-28"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":404,"author":{"gitId":"CharlesLee01"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":405,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":406,"author":{"gitId":"CharlesLee01"},"content":"1.  User requests to delete a specific dog/owner/program in the list.","lastModifiedDate":"2021-02-28"},{"lineNumber":407,"author":{"gitId":"CharlesLee01"},"content":"2.  Pawbook deletes the dog/owner/program.","lastModifiedDate":"2021-02-28"},{"lineNumber":408,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":409,"author":{"gitId":"CharlesLee01"},"content":"    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":410,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":411,"author":{"gitId":"CharlesLee01"},"content":"**Extensions**","lastModifiedDate":"2021-02-28"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":413,"author":{"gitId":"kouyk"},"content":"* 1a. The given dog/owner/program ID is invalid or not specified.","lastModifiedDate":"2021-02-28"},{"lineNumber":414,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":415,"author":{"gitId":"CharlesLee01"},"content":"    * 1a1. Pawbook shows an error message.","lastModifiedDate":"2021-02-28"},{"lineNumber":416,"author":{"gitId":"kouyk"},"content":"    * 1a2. User supplies the corrected dog/owner/program ID.","lastModifiedDate":"2021-02-28"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-28"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":420,"author":{"gitId":"kouyk"},"content":"**Use case: UC03 - List**","lastModifiedDate":"2021-02-28"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":422,"author":{"gitId":"CharlesLee01"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":423,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":424,"author":{"gitId":"kouyk"},"content":"1.  User requests to list dogs with a given tag.","lastModifiedDate":"2021-02-28"},{"lineNumber":425,"author":{"gitId":"CharlesLee01"},"content":"2.  Pawbook lists the related dogs.","lastModifiedDate":"2021-02-28"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"kouyk"},"content":"**Use case: UC04 - Enrol dog to a program**","lastModifiedDate":"2021-02-28"},{"lineNumber":430,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":431,"author":{"gitId":"CharlesLee01"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"CharlesLee01"},"content":"1.  User requests to enrol a dog to a program.","lastModifiedDate":"2021-02-28"},{"lineNumber":434,"author":{"gitId":"CharlesLee01"},"content":"2.  Pawbook enrol the dog to the correct program.","lastModifiedDate":"2021-02-28"},{"lineNumber":435,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":436,"author":{"gitId":"CharlesLee01"},"content":"    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":437,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":438,"author":{"gitId":"CharlesLee01"},"content":"**Extensions**","lastModifiedDate":"2021-02-28"},{"lineNumber":439,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":440,"author":{"gitId":"CharlesLee01"},"content":"* 1a. The program ID is invalid/not specified.","lastModifiedDate":"2021-02-28"},{"lineNumber":441,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":442,"author":{"gitId":"CharlesLee01"},"content":"    * 1a1. Pawbook shows an error message.","lastModifiedDate":"2021-02-28"},{"lineNumber":443,"author":{"gitId":"kouyk"},"content":"    * 1a2. User supplies correct program ID.","lastModifiedDate":"2021-02-28"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"kouyk"},"content":"**Use case: UC05 - Drop a dog from a program**","lastModifiedDate":"2021-02-28"},{"lineNumber":448,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":449,"author":{"gitId":"CharlesLee01"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":450,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":451,"author":{"gitId":"CharlesLee01"},"content":"1.  User requests to drop a dog from a program.","lastModifiedDate":"2021-02-28"},{"lineNumber":452,"author":{"gitId":"CharlesLee01"},"content":"2.  Pawbook drop a dog from a program.","lastModifiedDate":"2021-02-28"},{"lineNumber":453,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":454,"author":{"gitId":"CharlesLee01"},"content":"    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":455,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":456,"author":{"gitId":"CharlesLee01"},"content":"**Extensions**","lastModifiedDate":"2021-02-28"},{"lineNumber":457,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":458,"author":{"gitId":"kouyk"},"content":"* 1a. The dog/program ID is invalid/not specified.","lastModifiedDate":"2021-02-28"},{"lineNumber":459,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":460,"author":{"gitId":"CharlesLee01"},"content":"    * 1a1. Pawbook shows an error message.","lastModifiedDate":"2021-02-28"},{"lineNumber":461,"author":{"gitId":"kouyk"},"content":"    * 1a2. User supplies correct dog/program ID.","lastModifiedDate":"2021-02-28"},{"lineNumber":462,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":463,"author":{"gitId":"CharlesLee01"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-28"},{"lineNumber":464,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":465,"author":{"gitId":"kouyk"},"content":"**Use case: UC06 - View schedule**","lastModifiedDate":"2021-02-28"},{"lineNumber":466,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":467,"author":{"gitId":"CharlesLee01"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":468,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":469,"author":{"gitId":"CharlesLee01"},"content":"1.  User requests to view schedule.","lastModifiedDate":"2021-02-28"},{"lineNumber":470,"author":{"gitId":"CharlesLee01"},"content":"2.  Pawbook shows the schedule.","lastModifiedDate":"2021-02-28"},{"lineNumber":471,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":472,"author":{"gitId":"CharlesLee01"},"content":"    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":473,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":474,"author":{"gitId":"kouyk"},"content":"**Use case: UC07 - View instructions**","lastModifiedDate":"2021-02-28"},{"lineNumber":475,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":476,"author":{"gitId":"CharlesLee01"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":477,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":478,"author":{"gitId":"CharlesLee01"},"content":"1.  User requests to view instructions.","lastModifiedDate":"2021-02-28"},{"lineNumber":479,"author":{"gitId":"CharlesLee01"},"content":"2.  Pawbook shows the list of instructions available.","lastModifiedDate":"2021-02-28"},{"lineNumber":480,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":481,"author":{"gitId":"CharlesLee01"},"content":"    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":482,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":483,"author":{"gitId":"kouyk"},"content":"**Use case: UC08 - Exit**","lastModifiedDate":"2021-02-28"},{"lineNumber":484,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":485,"author":{"gitId":"CharlesLee01"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":486,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":487,"author":{"gitId":"CharlesLee01"},"content":"1.  User requests to exit the program.","lastModifiedDate":"2021-02-28"},{"lineNumber":488,"author":{"gitId":"CharlesLee01"},"content":"2.  Pawbook shows goodbye message.","lastModifiedDate":"2021-02-28"},{"lineNumber":489,"author":{"gitId":"kouyk"},"content":"3.  Pawbook terminates.","lastModifiedDate":"2021-02-28"},{"lineNumber":490,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":491,"author":{"gitId":"CharlesLee01"},"content":"    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":494,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"branzuelajohn"},"content":"1.  Should work on any _mainstream OS_ as long as it has `Java 11` or above installed.","lastModifiedDate":"2021-03-02"},{"lineNumber":499,"author":{"gitId":"shaelynl"},"content":"2.  Should be able to hold up to 1000 dogs, owners and dog programs without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-03-02"},{"lineNumber":500,"author":{"gitId":"shaelynl"},"content":"3.  Should be usable by a tech novice who is not familiar with CLI.","lastModifiedDate":"2021-02-28"},{"lineNumber":501,"author":{"gitId":"shaelynl"},"content":"4.  Should respond within 2 seconds.","lastModifiedDate":"2021-02-28"},{"lineNumber":502,"author":{"gitId":"shaelynl"},"content":"5.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-02-28"},{"lineNumber":503,"author":{"gitId":"branzuelajohn"},"content":"6.  A simple interface that is easy to navigate.","lastModifiedDate":"2021-03-02"},{"lineNumber":504,"author":{"gitId":"shaelynl"},"content":"7.  Not required to handle finance-related bookkeeping.","lastModifiedDate":"2021-02-28"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"wei-yutong"},"content":"### Deleting a owner","lastModifiedDate":"2021-03-07"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"wei-yutong"},"content":"1. Deleting a owner while all owners are being shown","lastModifiedDate":"2021-03-07"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"wei-yutong"},"content":"   1. Prerequisites: List all owners using the `list` command. Multiple owners in the list.","lastModifiedDate":"2021-03-07"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"wei-yutong"},"content":"      Expected: No owner is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-07"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CharlesLee01":79,"shaelynl":14,"ZhangAnli":47,"branzuelajohn":36,"wei-yutong":23,"kouyk":46,"-":316}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"   1. Run the `dog.pawbook.Main` and try a few commands.","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"kouyk":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"   e.g. `dog.pawbook.commons.StringUtilTest`","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"   e.g. `dog.pawbook.storage.StorageManagerTest`","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"   e.g. `dog.pawbook.logic.LogicManagerTest`","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"kouyk":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"# Overview","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"Welcome to the Pawbook User Guide! ","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"In this section, you will be given a brief overview of what Pawbook is all about and what you can takeaway from this document. ","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"We will guide you from a user\u0027s perspective as to how to use Pawbook. ","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"This user guide contains (but not limited to) a [quick start guide](#quick-start), a [features walkthrough](#commands) and a [command summary table](#command-summary) for easy reference. ","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"In each feature or functionality, we further provide command formats and command examples to ensure that users can become proficient in using Pawbook.","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"## Introduction","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"Managing a business is definitely not easy, so imagine if your business includes taking care of countless energetic ","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"furpals. That\u0027s right! We are talking about the job of dog school managers. \u003cbr\u003e ","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"As dog schools and dog day cares rise in popularity due to the hectic work life of dog owners, the operations of dog schools can get out of hand. But no worries, ","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"we have Pawbook to save the day!","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"With Pawbook, you can add and delete owner and dog profiles alike, to easily keep track of dogs and their respective owners.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"Pawbook also allows the managing of the various canine-training programs to cater to your furry customers.","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"With the many programs taking place in the school, Pawbook helps to condense your hectic schedule for you. ","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"By viewing your schedule, you are able to better plan for the day ahead.","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"Pawbook is a desktop application for dog school managers to facilitate their bookkeeping of puppies and dogs in the ","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"school, optimized for use via a **Command Line Interface (CLI)** which caters to fast-typers who prefer to use a keyboard. ","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"You can navigate the application with ease and execute instructions by typing text-based commands in the command box provided.","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"Pawbook also has the benefits of a **Graphical User Interface (GUI)** to provide you with a visually appealing view, thus bringing you the best user experience.","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"## Purpose","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"The aim of this user guide is to guide novel users on how to get started with Pawbook. ","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"It also aids more experienced users by providing a detailed explanation on the different features and components of Pawbook. ","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"This allows old and new users alike to easily use the various features and functionalities provided by Pawbook. ","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"ZhangAnli"},"content":"# About the User Guide ","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"ZhangAnli"},"content":"In this section, we will teach you everything you need to know to effectively use this user guide. ","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"## Contributors","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"This user guide is created by **CS2103T-T10-Group1**.","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"CharlesLee01"},"content":"* Charles Lee Lin Ta","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"CharlesLee01"},"content":"* John Alec Mendoza Branzuela","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"CharlesLee01"},"content":"* Kou Yong Kang","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"CharlesLee01"},"content":"* Lam Xuan Yi, Shaelyn","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"CharlesLee01"},"content":"* Wei Yutong","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"CharlesLee01"},"content":"* Zhang Anli","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"shaelynl"},"content":"## Navigating the User Guide","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"shaelynl"},"content":"This user guide provides you with all the information you need to utilise Pawbook. We understand the ","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"pains of using a Command Line Interface (CLI) program and have bested our efforts into ensuring a very readable guide","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"on how to use our program \u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"If you need help setting up Pawbook, you can go to the _[Quick Start](#quick-start)_ section. \u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"If you want to find out more about Pawbook\u0027s features and commands, you can go to the _[Commands](#commands)_ section. \u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"If you need an overview regarding the usage of Pawbook\u0027s commands, head on to the _[Command Summary](#command-summary)_ section. \u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"Here are some important syntax to take note of to facilitate your reading before continuing.","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"| **Symbol/Format** | **Meaning** |","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"| :------------------:|:-------------|","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"shaelynl"},"content":"|\u003ckbd\u003eEnter\u003c/kbd\u003e | Indicates the enter button on the user\u0027s keyboard |","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"shaelynl"},"content":"| `Markdown` | Example of what to type in the command textbox |","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"shaelynl"},"content":"| **Bold** | Note-worthy keywords |","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"| [Repeated Parameters] | Indicates the parameters/prefixes that may be repeated multiple times |","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"shaelynl"},"content":"| :bulb: | Indicates there is something important to take note of","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"ZhangAnli"},"content":"| :heavy_exclamation_mark: | Indicates something that the user should take caution of. |","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"shaelynl"},"content":"## Syntax Format","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"ZhangAnli"},"content":"Syntax | Meaning  | Example","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"ZhangAnli"},"content":"--------|------------------|----------","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"ZhangAnli"},"content":"**`lower_case/`** |  Prefix | `n/`, `p/`, `t/`","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"ZhangAnli"},"content":"**`[UPPER_CASE]`** |  Parameter | [keyword] [entity ID]","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"shaelynl"},"content":"## GUI Layout","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"ZhangAnli"},"content":"In this section, you will be given an introduction to the layout of Pawbook\u0027s Graphical User Interface (GUI). This will ","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"branzuelajohn"},"content":"help you better understand what each component that you observe on-screen represents. \u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"branzuelajohn"},"content":"There are a total of two pages that you can navigate to when using Pawbook:","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"* Main Page","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"* Help Page","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"### Main Page View","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"You will be directed to the main page upon launching Pawbook. On this page, you can see the list of owners, dogs and programs","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":"that are currently stored in Pawbook. \u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"shaelynl"},"content":"Here is how the main page looks like:","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"ZhangAnli"},"content":"![MainPageView](images/PawbookMainPageView.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"ZhangAnli"},"content":"Component | Purpose","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"ZhangAnli"},"content":"--------|-----------------","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"ZhangAnli"},"content":"**Menu Bar** | A menu bar that allows users to click on shortcuts. ","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"ZhangAnli"},"content":"**Dashboard** (Coming soon...) | A dashboard that shows the user the status of Pawbook. ","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"ZhangAnli"},"content":"**Main Display** | The main display that shows the results of each command.","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"ZhangAnli"},"content":"**Response Display** | A display that shows the response message from Pawbook after a command has been executed.","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"ZhangAnli"},"content":"**Card Component** | Each card component represents one entity profile (i.e. Dog, Owner, Program). ","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"ZhangAnli"},"content":"**Command Box** | A text field for the user to enter his/her command.","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"ZhangAnli"},"content":"### Help Page View","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"ZhangAnli"},"content":"This help page provides a short summary list of commands that you can use, as well as a link to this main user guide page.","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"ZhangAnli"},"content":"![HelpPageView](images/PawbookHelpPageView.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"---","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"shaelynl"},"content":"## Quick Start","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"shaelynl"},"content":"If this is your first time using Pawbook, follow these simple steps to jump straight into the action:","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"CharlesLee01"},"content":"1. Ensure you have **Java 11 or above** installed in your Computer.","lastModifiedDate":"2021-02-27"},{"lineNumber":124,"author":{"gitId":"branzuelajohn"},"content":"2. Download the **latest** pawbook.jar [here][insertlinkhere].","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"branzuelajohn"},"content":"3. Copy the _pawbook.jar_ file to the folder you want to use as the root directory for Pawbook.","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"shaelynl"},"content":"4. Double-click the file to start the app. The GUI should appear in a few seconds.","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"shaelynl"},"content":"5. Congratulations, you have successfully launched Pawbook! For new users, type `help` in the command box to view the instruction list","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"branzuelajohn"},"content":"6. Type the command in the command box and press \u003ckbd\u003eEnter\u003c/kbd\u003e to execute it. e.g.","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"branzuelajohn"},"content":"   typing `add` and pressing \u003ckbd\u003eEnter\u003c/kbd\u003e  will allow you to start adding information to","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"CharlesLee01"},"content":"   the database.","lastModifiedDate":"2021-02-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":132,"author":{"gitId":"shaelynl"},"content":":bulb: Please refer to the features below for details of each command.","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"ZhangAnli"},"content":":heavy_exclamation_mark: Ensure that the pawbook.json file is not corrupted. If corrupted, Pawbook ","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"ZhangAnli"},"content":"will not be able to use the data from JSON to build the list for usage. ","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":136,"author":{"gitId":"CharlesLee01"},"content":"----","lastModifiedDate":"2021-02-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":138,"author":{"gitId":"ZhangAnli"},"content":"# Commands ","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"shaelynl"},"content":"In this section, you will learn about the commands available in Pawbook and how to use them.","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"ZhangAnli"},"content":"### Add Command","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Adds a **dog/owner/program** to Pawbook.\u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: When you want to add an entity into Pawbook, you can simply use the add command. The add command adds the new entity at the end of the current list. ","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"ZhangAnli"},"content":"For instance, when a new dog arrives at the school with its owner, you will need to add the owner profile and the dog profile and store it in Pawbook. ","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":148,"author":{"gitId":"CharlesLee01"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":150,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":151,"author":{"gitId":"ZhangAnli"},"content":"add dog n/DOGNAME b/BREED d/DATEOFBIRTH s/SEX o/OWNERID t/TAG","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"ZhangAnli"},"content":"add owner n/OWNERNAME p/PHONE_NUMBER e/EMAIL a/ADDRESS","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"branzuelajohn"},"content":"add program n/PROGRAMNAME s/TIMEANDDATEOFSESSION t/TAG","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"ZhangAnli"},"content":"Note:","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"wei-yutong"},"content":"- Different prefixes should be used for the respective entities to specify details.","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"wei-yutong"},"content":"- Tags are optional.","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"shaelynl"},"content":"1. Adds an owner named John with the details provided in Pawbook. \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"ZhangAnli"},"content":"   Command: `add owner n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/friends t/owesMoney`","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"shaelynl"},"content":"2. Adds a dog named BRUCE belonging to owner with ID 1 in Pawbook. \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"shaelynl"},"content":"   Command: `add dog n/Bruce b/Chihuahua d/12-02-2019 s/Male o/1 t/playful t/active`","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"shaelynl"},"content":"3. Creates a program with Program ID 3. \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"shaelynl"},"content":"   Command: `add program n/3 s/02-02-2020 18:00 t/puppies`","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"ZhangAnli"},"content":"   ","lastModifiedDate":"2021-03-02"},{"lineNumber":169,"author":{"gitId":"shaelynl"},"content":":bulb: The order of the prefixes do not matter, feel free to add your information in any order that is convenient for you!","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"ZhangAnli"},"content":"![Add Command](images/AddCommandScreenshot1.png) ![Add Command Result](images/AddCommandScreenshot2.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"ZhangAnli"},"content":"### Delete Command","lastModifiedDate":"2021-03-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":175,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Deletes an entity (dog/owner/program) from Pawbook. \u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: When you want to delete an entity, you can use the delete command and delete the entity that you want via the ID number. ","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"ZhangAnli"},"content":"For instance, when a dog is no longer under your care, you can delete the dog\u0027s profile using this command. ","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"ZhangAnli"},"content":":heavy_exclamation_mark: Take note that deleting an owner will automatically delete all the dogs that belong to that owner as well. ","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"ZhangAnli"},"content":"We do not allow dogs in Pawbook to not have an owner tagged to it!","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":182,"author":{"gitId":"ZhangAnli"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":184,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":185,"author":{"gitId":"ZhangAnli"},"content":"delete dog [DOG ID]","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"ZhangAnli"},"content":"delete owner [OWNER ID]","lastModifiedDate":"2021-03-23"},{"lineNumber":187,"author":{"gitId":"ZhangAnli"},"content":"delete program [PROGRAM ID]","lastModifiedDate":"2021-03-23"},{"lineNumber":188,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"ZhangAnli"},"content":"Note: ","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":192,"author":{"gitId":"kouyk"},"content":"- The ID must be a positive integer 1, 2, 3 etc","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":194,"author":{"gitId":"ZhangAnli"},"content":"Examples:","lastModifiedDate":"2021-03-02"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"shaelynl"},"content":"1. Deletes the owner with ID 1 in Pawbook.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"shaelynl"},"content":"   Command: `delete owner 1`","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"shaelynl"},"content":"2. Deletes the dog with ID 2 in Pawbook.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"shaelynl"},"content":"   Command: `delete dog 2`","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"kouyk"},"content":"3. Deletes the program with ID 3 in Pawbook.\u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":201,"author":{"gitId":"ZhangAnli"},"content":"   Command: `delete program 3`","lastModifiedDate":"2021-03-23"},{"lineNumber":202,"author":{"gitId":"ZhangAnli"},"content":"   ","lastModifiedDate":"2021-03-02"},{"lineNumber":203,"author":{"gitId":"shaelynl"},"content":":bulb: Deleting using ID instead of name? Yes, all commands other than `add` and `find` uses the entity\u0027s ID. ","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"shaelynl"},"content":"When a new entity is added to Pawbook, the system assigns a unique ID to each entity and is given by the first number","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"shaelynl"},"content":"of each entity in the list.","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"ZhangAnli"},"content":"![Delete Command](images/DeleteCommandScreenshot1.png) ![Delete Command Result](images/DeleteCommandScreenshot2.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"CharlesLee01"},"content":"### Edit Command","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Edits a dog/owner/program from Pawbook.\u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: This command allows you to edit the information of the entity (dog/owner/program) in your Pawbook. Let\u0027s say ","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"ZhangAnli"},"content":"you just added an entry for a dog but you realised that you filled in the owner information wrongly. The edit command ","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"ZhangAnli"},"content":"allows you to quickly correct that mistake.  ","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"CharlesLee01"},"content":"Format:","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"CharlesLee01"},"content":"```","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"CharlesLee01"},"content":"edit dog d/[DOG ID] n/[NAME] b/[BREED] d/[DATEOFBIRTH] s/[SEX] o/[OWNERID] [t/TAGS]...","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"CharlesLee01"},"content":"edit owner o/[OWNER ID] n/[NAME] p/[PHONE] e/[EMAIL] a/[ADDRESS] [t/TAGS]...","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"CharlesLee01"},"content":"edit program o/[PROGRAM ID] n/[NAME] [s/SESSION]... [t/TAGS]...","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"CharlesLee01"},"content":"```","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":224,"author":{"gitId":"ZhangAnli"},"content":"Note: ","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"CharlesLee01"},"content":"- The ID must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"CharlesLee01"},"content":"- Only include the variables that need to be edited after the integer","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"shaelynl"},"content":"1. Edits the owner with ID 1 in Pawbook.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"shaelynl"},"content":"   Command: `edit owner 1 p/12345678`","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"shaelynl"},"content":"2. Edits the dog with ID 2 in Pawbook.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"shaelynl"},"content":"   Command: `edit dog 2 n/Bruce t/playful`","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"CharlesLee01"},"content":"3. Edits the program with ID 3 in Pawbook.\u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"CharlesLee01"},"content":"   Command: `edit program 3 t/learn`","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"ZhangAnli"},"content":"![Edit Command](images/EditCommandScreenshot1.png) ![Edit Command Result](images/EditCommandScreenshot2.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"wei-yutong"},"content":"   ","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"wei-yutong"},"content":"### Enrol Command","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Adds a specified dog to a specified program that the dog was previously not enrolled in. \u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: When you want to enrol a dog into a specific program, you can use this command. One instance is when after ","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"ZhangAnli"},"content":"a new dog Bruce has just joined the school and is enrolled for Obedience Training. You can then enrol Bruce into the ","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"ZhangAnli"},"content":"Obedience training program after you have added Bruce into the system. ","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"wei-yutong"},"content":"Format:","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"wei-yutong"},"content":"```","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"ZhangAnli"},"content":"enrol d/[DOG ID] p/[PROGRAM ID]","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"wei-yutong"},"content":"```","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"ZhangAnli"},"content":"Note: ","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"wei-yutong"},"content":"- The dog and program must both be valid.","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"shaelynl"},"content":"1. Enrol dog with Dog ID 2 into program with Program ID 3, assuming that Dog ID 2 was previously not enrolled in ","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"shaelynl"},"content":"   Program ID 3. \u003cbr\u003e ","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"shaelynl"},"content":"   Command: `enrol d/2 p/3`","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"wei-yutong"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":264,"author":{"gitId":"ZhangAnli"},"content":"![Enrol Command](images/EnrolCommandScreenshot1.png) ![Enrol Command Result](images/EnrolCommandScreenshot2.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"shaelynl"},"content":"### Drop Command","lastModifiedDate":"2021-03-29"},{"lineNumber":267,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Removes a specified dog from a specified program that the dog was previously enrolled in. \u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":269,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: After a dog has finished a program or has dropped out of the program, you can drop him from the program using","lastModifiedDate":"2021-03-31"},{"lineNumber":270,"author":{"gitId":"ZhangAnli"},"content":"this command. After a dog has been dropped from the program, the program will no longer have that dog ID stored. ","lastModifiedDate":"2021-03-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"shaelynl"},"content":"Format:","lastModifiedDate":"2021-03-29"},{"lineNumber":273,"author":{"gitId":"shaelynl"},"content":"```","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"ZhangAnli"},"content":"drop d/[DOG ID] p/[PROGRAM ID]","lastModifiedDate":"2021-03-29"},{"lineNumber":275,"author":{"gitId":"shaelynl"},"content":"```","lastModifiedDate":"2021-03-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"ZhangAnli"},"content":"Note:","lastModifiedDate":"2021-03-31"},{"lineNumber":278,"author":{"gitId":"wei-yutong"},"content":"- The dog and program must both be valid.","lastModifiedDate":"2021-03-30"},{"lineNumber":279,"author":{"gitId":"wei-yutong"},"content":"- Dog must be enrolled in the program.","lastModifiedDate":"2021-03-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":281,"author":{"gitId":"shaelynl"},"content":"Examples:","lastModifiedDate":"2021-03-29"},{"lineNumber":282,"author":{"gitId":"shaelynl"},"content":"1. Remove dog with Dog ID 2 from program with Program ID 3, assuming that Dog ID 2 was previously enrolled in ","lastModifiedDate":"2021-03-30"},{"lineNumber":283,"author":{"gitId":"shaelynl"},"content":"   Program ID 3. \u003cbr\u003e ","lastModifiedDate":"2021-03-30"},{"lineNumber":284,"author":{"gitId":"shaelynl"},"content":"   Command: `drop d/2 p/3`","lastModifiedDate":"2021-03-30"},{"lineNumber":285,"author":{"gitId":"ZhangAnli"},"content":"   ","lastModifiedDate":"2021-03-02"},{"lineNumber":286,"author":{"gitId":"ZhangAnli"},"content":"![Drop Command](images/DropCommandScreenshot1.png) ![Drop Command Result](images/DropCommandScreenshot2.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"ZhangAnli"},"content":"### Schedule Command ","lastModifiedDate":"2021-03-31"},{"lineNumber":289,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":290,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Display all programs happenings on the current day or any specified date. \u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":291,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: As a busy dog school manager, this allows you to view at one glance what are the programs that are ","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"ZhangAnli"},"content":"lined up on any given day. ","lastModifiedDate":"2021-03-31"},{"lineNumber":293,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"kouyk"},"content":"Format:","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"kouyk"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"kouyk"},"content":"schedule [date]","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"kouyk"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"ZhangAnli"},"content":"Note: ","lastModifiedDate":"2021-03-31"},{"lineNumber":299,"author":{"gitId":"kouyk"},"content":"- Date has to be specified in the `d-M-yyyy` format.","lastModifiedDate":"2021-03-30"},{"lineNumber":300,"author":{"gitId":"kouyk"},"content":"- If no date is provided, the schedule command will display all programs that occur on the current day.","lastModifiedDate":"2021-03-30"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":304,"author":{"gitId":"kouyk"},"content":"1. Display the schedule for today:","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"kouyk"},"content":"   Command: `schedule`","lastModifiedDate":"2021-03-30"},{"lineNumber":306,"author":{"gitId":"kouyk"},"content":"2. Display the schedule for 1st April 2021:","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"kouyk"},"content":"   Command: `schedule 1-4-2021`","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":309,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":310,"author":{"gitId":"kouyk"},"content":"### List Command","lastModifiedDate":"2021-03-29"},{"lineNumber":311,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":312,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Display entities filtered by type.","lastModifiedDate":"2021-03-31"},{"lineNumber":313,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: To see the three different types of entities (dog/owner/program), you can simply use this command. Let\u0027s say","lastModifiedDate":"2021-03-31"},{"lineNumber":314,"author":{"gitId":"ZhangAnli"},"content":"you want to see all the dogs that you are in-charge of. Simply list them and this command will provide you the full list. ","lastModifiedDate":"2021-03-31"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":316,"author":{"gitId":"kouyk"},"content":"Format:","lastModifiedDate":"2021-03-29"},{"lineNumber":317,"author":{"gitId":"kouyk"},"content":"```","lastModifiedDate":"2021-03-29"},{"lineNumber":318,"author":{"gitId":"shaelynl"},"content":"list [dog/owner/program]","lastModifiedDate":"2021-03-30"},{"lineNumber":319,"author":{"gitId":"kouyk"},"content":"```","lastModifiedDate":"2021-03-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":321,"author":{"gitId":"ZhangAnli"},"content":"Note:","lastModifiedDate":"2021-03-31"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":323,"author":{"gitId":"kouyk"},"content":"- At most one keyword needs to be provided","lastModifiedDate":"2021-03-29"},{"lineNumber":324,"author":{"gitId":"kouyk"},"content":"- If no keyword is provided, i.e. `list`, then all dogs/owner/program will be displayed","lastModifiedDate":"2021-03-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":328,"author":{"gitId":"kouyk"},"content":"1. List all dogs.\u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":329,"author":{"gitId":"kouyk"},"content":"   Command: `list dog`","lastModifiedDate":"2021-03-29"},{"lineNumber":330,"author":{"gitId":"kouyk"},"content":"2. List all owners.\u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":331,"author":{"gitId":"kouyk"},"content":"   Command: `list owner`","lastModifiedDate":"2021-03-29"},{"lineNumber":332,"author":{"gitId":"kouyk"},"content":"  ","lastModifiedDate":"2021-03-29"},{"lineNumber":333,"author":{"gitId":"ZhangAnli"},"content":"![List Command](images/ListCommandScreenshot1.png) ![List Command Result](images/ListCommandScreenshot2.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":334,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"ZhangAnli"},"content":"### Find Command ","lastModifiedDate":"2021-03-23"},{"lineNumber":336,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":337,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Shows the list of search results based on one/many keywords. ","lastModifiedDate":"2021-03-31"},{"lineNumber":338,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: When you want to find a particular entity (dog/owner/program), you can simply find them by their name. You","lastModifiedDate":"2021-03-31"},{"lineNumber":339,"author":{"gitId":"ZhangAnli"},"content":"can also find multiple entities by providing multiple keywords. This may be helpful when you want to see just one specific entity profile. ","lastModifiedDate":"2021-03-31"},{"lineNumber":340,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":341,"author":{"gitId":"ZhangAnli"},"content":"Format: ","lastModifiedDate":"2021-03-23"},{"lineNumber":342,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":343,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-23"},{"lineNumber":344,"author":{"gitId":"ZhangAnli"},"content":"find [KEYWORD1] ","lastModifiedDate":"2021-03-23"},{"lineNumber":345,"author":{"gitId":"ZhangAnli"},"content":"find [KEYWORD1] [KEYWORD2] ","lastModifiedDate":"2021-03-23"},{"lineNumber":346,"author":{"gitId":"ZhangAnli"},"content":"find [KEYWORD1] [KEYWORD2] [KEYWORD3] ","lastModifiedDate":"2021-03-23"},{"lineNumber":347,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":349,"author":{"gitId":"ZhangAnli"},"content":"Note: ","lastModifiedDate":"2021-03-31"},{"lineNumber":350,"author":{"gitId":"ZhangAnli"},"content":"- At least one keyword is needed. ","lastModifiedDate":"2021-03-31"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":352,"author":{"gitId":"ZhangAnli"},"content":"Examples: ","lastModifiedDate":"2021-03-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":354,"author":{"gitId":"ZhangAnli"},"content":"1. Find all entities with the name \u0027Alice\u0027. \u003cbr\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":355,"author":{"gitId":"ZhangAnli"},"content":"   Command: `find alice`","lastModifiedDate":"2021-03-23"},{"lineNumber":356,"author":{"gitId":"ZhangAnli"},"content":"2. Find all entities with the name \u0027Alice\u0027 or \u0027Bob\u0027 or \u0027Charlie\u0027.\u003cbr\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":357,"author":{"gitId":"ZhangAnli"},"content":"   Command: `find alice bob charlie`","lastModifiedDate":"2021-03-23"},{"lineNumber":358,"author":{"gitId":"ZhangAnli"},"content":"   ","lastModifiedDate":"2021-03-23"},{"lineNumber":359,"author":{"gitId":"shaelynl"},"content":":bulb: Find is able to take in multiple keywords and returns all results as long as the name contains any one of the keywords. ","lastModifiedDate":"2021-03-30"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":361,"author":{"gitId":"ZhangAnli"},"content":"![Find Command](images/FindCommandScreenshot1.png) ![Find Command Result](images/FindCommandScreenshot2.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":363,"author":{"gitId":"ZhangAnli"},"content":"### View Command ","lastModifiedDate":"2021-03-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":365,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Views the list of all entities related to the searched entity. \u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":366,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: When you want to have a more detailed view of a particular entity (dog/owner/program), you can use this command","lastModifiedDate":"2021-03-31"},{"lineNumber":367,"author":{"gitId":"ZhangAnli"},"content":"to see more details. At the top entry, it will be the profile of the entity you want to view. This is followed by the ","lastModifiedDate":"2021-03-31"},{"lineNumber":368,"author":{"gitId":"ZhangAnli"},"content":"all its related entities. For instance, when you view Bruce the dog, you will first see the his profile, followed by his ","lastModifiedDate":"2021-03-31"},{"lineNumber":369,"author":{"gitId":"ZhangAnli"},"content":"owner\u0027s profile and finally all the programs that Bruce is enrolled in. ","lastModifiedDate":"2021-03-31"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":371,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-23"},{"lineNumber":372,"author":{"gitId":"ZhangAnli"},"content":"view [ENTITY ID] ","lastModifiedDate":"2021-03-23"},{"lineNumber":373,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":375,"author":{"gitId":"wei-yutong"},"content":"You can use this command to have a quick overview of the entities related to each other.","lastModifiedDate":"2021-03-30"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":377,"author":{"gitId":"ZhangAnli"},"content":"Examples: ","lastModifiedDate":"2021-03-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":379,"author":{"gitId":"shaelynl"},"content":"1. If entity 1 is an owner, a list of the owner with Owner ID 1 and all his dogs will be displayed. \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":380,"author":{"gitId":"ZhangAnli"},"content":"   Command: `view 1` ","lastModifiedDate":"2021-03-23"},{"lineNumber":381,"author":{"gitId":"shaelynl"},"content":"2. If entity 2 is a dog, a list containing the dog with Dog ID 2 and its respective owner will be displayed. \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":382,"author":{"gitId":"ZhangAnli"},"content":"   Command: `view 2` ","lastModifiedDate":"2021-03-23"},{"lineNumber":383,"author":{"gitId":"shaelynl"},"content":"3. If entity 3 is a program, a list of the program with Program ID 3 and all the dogs enrolled in this program will be displayed. \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":384,"author":{"gitId":"ZhangAnli"},"content":"   Command: `view 3`","lastModifiedDate":"2021-03-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":386,"author":{"gitId":"ZhangAnli"},"content":"![View Command](images/ViewCommandScreenshot1.png) ![View Command Result](images/ViewCommandScreenshot2.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":388,"author":{"gitId":"ZhangAnli"},"content":"### Help Command","lastModifiedDate":"2021-03-02"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":390,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Shows the help page. \u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":391,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: If you are unsure about how to use Pawbook, execute this help command to view a complete list of application ","lastModifiedDate":"2021-03-31"},{"lineNumber":392,"author":{"gitId":"ZhangAnli"},"content":"instructions.","lastModifiedDate":"2021-03-31"},{"lineNumber":393,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":394,"author":{"gitId":"ZhangAnli"},"content":"Format: ","lastModifiedDate":"2021-03-31"},{"lineNumber":395,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-31"},{"lineNumber":396,"author":{"gitId":"ZhangAnli"},"content":"help","lastModifiedDate":"2021-03-31"},{"lineNumber":397,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-31"},{"lineNumber":398,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":399,"author":{"gitId":"ZhangAnli"},"content":"![Help Command](images/HelpCommandScreenshot1.png) ![Help Command Result](images/HelpCommandScreenshot2.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":400,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":401,"author":{"gitId":"ZhangAnli"},"content":"### Exit Command","lastModifiedDate":"2021-03-02"},{"lineNumber":402,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":403,"author":{"gitId":"ZhangAnli"},"content":"**Function**: Exit Program. \u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":404,"author":{"gitId":"ZhangAnli"},"content":"**Usage**: It\u0027s the end of the day and you want to close Pawbook. Simply use this command to exit. The data will be ","lastModifiedDate":"2021-03-31"},{"lineNumber":405,"author":{"gitId":"ZhangAnli"},"content":"automatically saved upon exit and will be ready for use the next time you reopen Pawbook. ","lastModifiedDate":"2021-03-31"},{"lineNumber":406,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":407,"author":{"gitId":"ZhangAnli"},"content":"Pawbook automatically saves the existing information of the dogs and will close the program.","lastModifiedDate":"2021-03-02"},{"lineNumber":408,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":409,"author":{"gitId":"ZhangAnli"},"content":"Format: ","lastModifiedDate":"2021-03-31"},{"lineNumber":410,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-31"},{"lineNumber":411,"author":{"gitId":"ZhangAnli"},"content":"exit","lastModifiedDate":"2021-03-31"},{"lineNumber":412,"author":{"gitId":"ZhangAnli"},"content":"```","lastModifiedDate":"2021-03-31"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"wei-yutong"},"content":"![Exit Command](images/ExitCommandScreenshot.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":415,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":416,"author":{"gitId":"CharlesLee01"},"content":"-----","lastModifiedDate":"2021-03-02"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":418,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-03-02"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":420,"author":{"gitId":"shaelynl"},"content":"Q: How do I transfer my data to another computer? \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":421,"author":{"gitId":"ZhangAnli"},"content":"A: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the ","lastModifiedDate":"2021-03-29"},{"lineNumber":422,"author":{"gitId":"ZhangAnli"},"content":"data of your previous Pawbook home folder.","lastModifiedDate":"2021-03-29"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":424,"author":{"gitId":"shaelynl"},"content":"Q: Where is my data saved? \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":425,"author":{"gitId":"shaelynl"},"content":"A: They are stored in the \u003ckbd\u003edata\u003c/kbd\u003e folder where the Pawbook application can be found.","lastModifiedDate":"2021-03-30"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":427,"author":{"gitId":"shaelynl"},"content":"Q: How can I make backups of my data in Pawbook? \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":428,"author":{"gitId":"shaelynl"},"content":"A: Copy and paste the \u003ckbd\u003edata\u003c/kbd\u003e folder located in the Pawbook home folder to somewhere safe and ","lastModifiedDate":"2021-03-30"},{"lineNumber":429,"author":{"gitId":"shaelynl"},"content":"easy to remember. ","lastModifiedDate":"2021-03-30"},{"lineNumber":430,"author":{"gitId":"shaelynl"},"content":"In order to restore the backup, copy the entire folder back into the same home folder and rewrite the existing folder.","lastModifiedDate":"2021-03-30"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":432,"author":{"gitId":"shaelynl"},"content":"Q: How do I delete all my data in Pawbook? \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":433,"author":{"gitId":"shaelynl"},"content":"A: Delete the \u003ckbd\u003edata\u003c/kbd\u003e folder in the Pawbook home folder.","lastModifiedDate":"2021-03-30"},{"lineNumber":434,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":435,"author":{"gitId":"shaelynl"},"content":"Q: Will my data be compromised? \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":436,"author":{"gitId":"shaelynl"},"content":"A: Fret not! All your data on Pawbook is stored in your local device and will not be transferred over the Internet.","lastModifiedDate":"2021-03-30"},{"lineNumber":437,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":438,"author":{"gitId":"shaelynl"},"content":"Q: Does Pawbook require an internet connection to function? \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":439,"author":{"gitId":"shaelynl"},"content":"A: Pawbook does not access any web services and can be run completely offline.","lastModifiedDate":"2021-03-30"},{"lineNumber":440,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":441,"author":{"gitId":"CharlesLee01"},"content":"-----","lastModifiedDate":"2021-02-27"},{"lineNumber":442,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":443,"author":{"gitId":"ZhangAnli"},"content":"## Command Summary","lastModifiedDate":"2021-03-02"},{"lineNumber":444,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":445,"author":{"gitId":"CharlesLee01"},"content":"Action | Format","lastModifiedDate":"2021-02-27"},{"lineNumber":446,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"branzuelajohn"},"content":"**Add** | 1. `add dog n/DOGNAME b/BREED d/DATE OF BIRTH s/SEX o/OWNERID t/TAG`\u003cbr\u003e 2. `add owner n/OWNERNAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...`\u003cbr\u003e 3. `add  program n/NAME [s/DATE OF SESSION]... [t/tag]...`","lastModifiedDate":"2021-03-24"},{"lineNumber":448,"author":{"gitId":"kouyk"},"content":"**Delete** | 1. `delete dog d/DOGID`\u003cbr\u003e 2. `delete owner o/OWNERID`\u003cbr\u003e 3. `delete program p/PROGRAMID`","lastModifiedDate":"2021-03-03"},{"lineNumber":449,"author":{"gitId":"CharlesLee01"},"content":"**Edit** | 1. `edit dog d/[DOG ID] n/[NAME] b/[BREED] d/[DATEOFBIRTH] s/[SEX] o/[OWNERID] [t/TAGS]...`\u003cbr\u003e 2. `edit owner o/[OWNER ID] n/[NAME] p/[PHONE] e/[EMAIL] a/[ADDRESS] [t/TAGS]...`\u003cbr\u003e 3. `edit program o/[PROGRAM ID] n/[NAME] [s/SESSION]... [t/TAGS]...`","lastModifiedDate":"2021-03-30"},{"lineNumber":450,"author":{"gitId":"ZhangAnli"},"content":"**Enrol** | `enrol d/[DOG ID] p/[PROGRAM ID]`","lastModifiedDate":"2021-03-29"},{"lineNumber":451,"author":{"gitId":"ZhangAnli"},"content":"**Drop** | `drop d/[DOG ID] p/[PROGRAM ID]`","lastModifiedDate":"2021-03-29"},{"lineNumber":452,"author":{"gitId":"shaelynl"},"content":"**List** | `list [dog/owner/program]`","lastModifiedDate":"2021-03-30"},{"lineNumber":453,"author":{"gitId":"ZhangAnli"},"content":"**Find** | `find [keyword1] [keyword2] [keyword3] ...`","lastModifiedDate":"2021-03-23"},{"lineNumber":454,"author":{"gitId":"ZhangAnli"},"content":"**View** | `view [ID number]`","lastModifiedDate":"2021-03-23"},{"lineNumber":455,"author":{"gitId":"kouyk"},"content":"**Schedule** | `schedule [DATE]`","lastModifiedDate":"2021-03-30"},{"lineNumber":456,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-03-02"},{"lineNumber":457,"author":{"gitId":"CharlesLee01"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-02-27"},{"lineNumber":458,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":459,"author":{"gitId":"shaelynl"},"content":"-----","lastModifiedDate":"2021-03-30"},{"lineNumber":460,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":461,"author":{"gitId":"shaelynl"},"content":"## Glossary ","lastModifiedDate":"2021-03-30"},{"lineNumber":462,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":463,"author":{"gitId":"ZhangAnli"},"content":"Term  | Explanation","lastModifiedDate":"2021-03-29"},{"lineNumber":464,"author":{"gitId":"ZhangAnli"},"content":"-----|------------------","lastModifiedDate":"2021-03-29"},{"lineNumber":465,"author":{"gitId":"ZhangAnli"},"content":"CLI | Short for Command Line Interface. CLI-based applications are primarily used through processing text commands. ","lastModifiedDate":"2021-03-29"},{"lineNumber":466,"author":{"gitId":"ZhangAnli"},"content":"GUI | Short for Graphical User Interface. GUIs work as the tangible user interface between program and user. Users interact with Pawbook through the GUI on their devices.","lastModifiedDate":"2021-03-29"},{"lineNumber":467,"author":{"gitId":"shaelynl"},"content":"Entity | Refers to either an owner, a dog or a program","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"CharlesLee01":29,"shaelynl":106,"ZhangAnli":163,"branzuelajohn":32,"wei-yutong":16,"kouyk":34,"-":87}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ZhangAnli"},"content":"    content: \"Pawbook\";","lastModifiedDate":"2021-03-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ZhangAnli":1,"-":293}},{"path":"docs/diagrams/AddDeleteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"@startuml","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"start","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":":User executes add command;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"if () then ([owner])","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":":AddOwnerCommandParser processes;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"elseif () then ([dog])","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":":AddDogCommandParser processes;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"else ([program])","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":":AddProgramCommandParser processes;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"endif","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"CharlesLee01"},"content":":Return AddCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"stop","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"@enduml","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"CharlesLee01":1,"kouyk":13}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteOwner(p)","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wei-yutong":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"AddressBook *-right-\u003e \"1\" UniqueOwnerList","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"UniqueTagList -[hidden]down- UniqueOwnerList","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"UniqueTagList -[hidden]down- UniqueOwnerList","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"UniqueOwnerList o-right-\u003e Owner","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"Owner -up-\u003e \"*\" Tag","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"Owner *--\u003e Name","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"Owner *--\u003e Phone","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"Owner *--\u003e Email","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"Owner *--\u003e Address","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wei-yutong":9,"-":12}},{"path":"docs/diagrams/DeleteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":":User executes delete command;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"if () then ([owner])","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":":DeleteOwnerCommandParser processes;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"elseif () then ([dog])","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":":DeleteDogCommandParser processes;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"else ([program])","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":":DeleteProgramCommandParser processes;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"endif","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":":returns DeleteCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"branzuelajohn":14}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"DeleteCommand -\u003e Model : deleteOwner(1)","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wei-yutong":1,"-":68}},{"path":"docs/diagrams/DropActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"repeat","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"  :User executes drop command;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"  backward:throws CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"repeat while () is ([else])","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"-\u003e[dogId valid \u0026\u0026 programId valid];","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":":DropCommandParser processes;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":":returns DropCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"shaelynl":10,"wei-yutong":4}},{"path":"docs/diagrams/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CharlesLee01"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"CharlesLee01"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"CharlesLee01"},"content":":User executes edit command;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"CharlesLee01"},"content":"if () then ([owner])","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"CharlesLee01"},"content":":EditOwnerCommandParser processes;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"CharlesLee01"},"content":"elseif () then ([dog])","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"CharlesLee01"},"content":":EditDogCommandParser processes;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"CharlesLee01"},"content":"else ([program])","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"CharlesLee01"},"content":":EditProgramCommandParser processes;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"CharlesLee01"},"content":"endif","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"CharlesLee01"},"content":":Return EditCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"CharlesLee01"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"CharlesLee01"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"CharlesLee01":15}},{"path":"docs/diagrams/EnrolActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"repeat","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"  :User executes enrol command;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"  backward:throws CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"repeat while () is ([else])","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"-\u003e[dogId valid \u0026\u0026 programId valid];","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":":EnrolCommandParser processes;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":":returns EnrolCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"wei-yutong":14}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"@startuml","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"ZhangAnli"},"content":"start","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"ZhangAnli"},"content":":User executes find command;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"ZhangAnli"},"content":"if () then ([missing keyword])","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"stop","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"else ([valid keyword])","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"ZhangAnli"},"content":":Find CommandParser processes to reveal search results;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"ZhangAnli"},"content":"endif","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"if () then ([found results])","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":":display search results;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"else ([no found results])","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":":show zero entities found;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"endif","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"stop","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"@enduml","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"ZhangAnli":20}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"Class UniqueEntityList","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"Package \"Managed Entity\" {","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"abstract Class Entity","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"Class Name","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"Package Owner {","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"Class Owner","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"Package Dog {","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"Class Dog","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"Class Breed","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"Class DateOfBirth","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"Class Sex","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"Package Program {","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"Class Program","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"Class Time","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"ModelManager o--\u003e \"1\" AddressBook","lastModifiedDate":"2019-07-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"AddressBook *--\u003e \"1\" UniqueEntityList","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"UniqueEntityList o--\u003e \"*\" Entity","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"Entity ^-- Owner","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"Entity ^-- Dog","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"Entity ^-- Program","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"Entity *-left-\u003e Name","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"Entity *-\u003e \"*\" Tag","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"Owner *--\u003e Phone","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"Owner *--\u003e Email","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"Owner *--\u003e Address","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"Dog *--\u003e Breed","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"Dog *--\u003e DateOfBirth","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"Dog *--\u003e Sex","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"Program *--\u003e Time","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"Sex -[hidden]right-\u003e Breed","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"Breed -[hidden]right-\u003e DateOfBirth","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"ModelManager ---\u003e\" ~* filtered list\" Entity","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wei-yutong":5,"kouyk":35,"-":45}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"Class OwnerListPanel","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"Class OwnerCard","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"MainWindow *-down-\u003e OwnerListPanel","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"OwnerListPanel -down-\u003e OwnerCard","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"OwnerListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"OwnerCard --|\u003e UiPart","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"OwnerCard ..\u003e Model","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"OwnerListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wei-yutong":8,"-":52}},{"path":"docs/diagrams/ViewActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"ZhangAnli"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"ZhangAnli"},"content":":User executes view command;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"ZhangAnli"},"content":"if () then ([dog])","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":":ViewCommandParser processes to show owner;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"elseif () then ([owner])","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"ZhangAnli"},"content":":ViewCommandParser processes to show all his dogs;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"ZhangAnli"},"content":"else ([program])","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":":ViewCommandParser processes to show all enrolled dogs;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"endif","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":":Return View Command;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"ZhangAnli"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"ZhangAnli":17}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"ecp -\u003e ec ++: index, editOwnerDescriptor","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"wei-yutong":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ZhangAnli"},"content":"title: PawBook ","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":"**PawBook is a desktop application to help dog schools manage their daily operations.** ","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"While it has a GUI, user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"* If you are interested in using PawBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"* If you are interested about developing PawBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ZhangAnli":5,"-":15}},{"path":"docs/team/branzuelajohn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"layout: page","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"title: John Alec Mendoza Branzuela\u0027s Project Portfolio","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"## Project: Pawbook","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"Pawbook is a desktop application an all-in-one management system to help dog school managers keep track of attendance, scheduling and services and maintain organisation. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"* **New Feature**:","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbranzuelajohn\u0026tabRepo\u003dAY2021S2-CS2103T-T10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d)","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"branzuelajohn":8,"wei-yutong":18}},{"path":"docs/team/charleslee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"title: Charles Lee\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"## Project: Pawbook","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"Pawbook is a desktop application an all-in-one management system to help dog school managers keep track of attendance, scheduling and services and maintain organisation. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"* **New Feature**:","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dCharlesLee01\u0026tabRepo\u003dAY2021S2-CS2103T-T10-1/tp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs)","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"wei-yutong":26}},{"path":"docs/team/shaelynlam.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"title: Shaelyn Lam\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"## Project: Pawbook","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"Pawbook is a desktop application an all-in-one management system to help dog school managers keep track of attendance, scheduling and services and maintain organisation. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"* **New Feature**:","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dshaelynl\u0026tabRepo\u003dAY2021S2-CS2103T-T10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs)","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"wei-yutong":26}},{"path":"docs/team/weiyutong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"title: Wei Yutong\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"## Project: Pawbook","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"Pawbook is a desktop application an all-in-one management system to help dog school managers keep track of attendance,","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"scheduling and services and maintain organisation. The user interacts with it using a CLI, and it has a GUI created with","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"JavaFX. It is written in Java.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"* **New Feature**:","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"* **New Feature**:","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dwei-yutong\u0026tabRepo\u003dAY2021S2-CS2103T-T10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d)","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"wei-yutong":30}},{"path":"docs/team/yongkang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"layout: page","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"title: Yong Kang\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"## Project: Pawbook","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"Pawbook is a desktop application an all-in-one management system to help dog school managers keep track of attendance, scheduling and services and maintain organisation. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"* **New Feature**:","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dkouyk\u0026tabRepo\u003dAY2021S2-CS2103T-T10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d)","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"* **Project management**:","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"  * User Guide:","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"* **Community**:","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"* **Tools**:","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"kouyk":26}},{"path":"docs/team/zhanganli.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"title: Zhang Anli\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"## Project: Pawbook","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"Pawbook is a desktop application an all-in-one management system to help dog school managers keep track of attendance, scheduling and services and maintain organisation. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"* **New Feature**:","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dZhangAnli\u0026tabRepo\u003dAY2021S2-CS2103T-T10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs)","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"wei-yutong":26}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":" * Changes the remark of an existing owner in the address book.","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the owner identified \"","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"            + \"by the index number used in the last owner listing. \"","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"wei-yutong"},"content":"     * @param index of the owner in the filtered owner list to edit the remark","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"wei-yutong"},"content":"     * @param remark of the owner to be updated to","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"wei-yutong"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of owner data. We achieve that by working with the `Owner` model. Each field in a Owner is implemented as a separate class (e.g. a `Name` object represents the owner’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a owner.","lastModifiedDate":"2021-03-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"wei-yutong"},"content":"Create a new `Remark` in `seedu.address.model.owner`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"wei-yutong"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each owner.","lastModifiedDate":"2021-03-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"kouyk"},"content":"Simply add the following to [`dog.pawbook.ui.EntityCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-16"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"wei-yutong"},"content":"**`OwnerCard.java`:**","lastModifiedDate":"2021-03-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"wei-yutong"},"content":"Then insert the following into [`main/resources/view/OwnerListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-03-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"wei-yutong"},"content":"**`OwnerListCard.fxml`:**","lastModifiedDate":"2021-03-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"wei-yutong"},"content":"## Modify `Owner` to support a `Remark` field","lastModifiedDate":"2021-03-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"wei-yutong"},"content":"Since `OwnerCard` displays data from a `Owner`, we need to update `Owner` to get our `Remark` displayed!","lastModifiedDate":"2021-03-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"wei-yutong"},"content":"### Modify `Owner`","lastModifiedDate":"2021-03-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"wei-yutong"},"content":"We change the constructor of `Owner` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-03-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"wei-yutong"},"content":"### Update other usages of `Owner`","lastModifiedDate":"2021-03-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"wei-yutong"},"content":"Unfortunately, a change to `Owner` will cause other commands to break, you will have to modify these commands to use the updated `Owner`!","lastModifiedDate":"2021-03-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"wei-yutong"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Owner` class to find these commands.","lastModifiedDate":"2021-03-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"wei-yutong"},"content":"AddressBook stores data by serializing `JsonAdaptedOwner` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedOwner` to work with our new `Owner`!","lastModifiedDate":"2021-03-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"wei-yutong"},"content":"Now that we have finalized the `Owner` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-03-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"wei-yutong"},"content":"**`OwnerCard.java`:**","lastModifiedDate":"2021-03-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"wei-yutong"},"content":"public OwnerCard(Owner owner, int displayedIndex) {","lastModifiedDate":"2021-03-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"wei-yutong"},"content":"    remark.setText(owner.getRemark().value);","lastModifiedDate":"2021-03-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"wei-yutong"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Owner`. Since all fields in a `Owner` are immutable, we create a new instance of a `Owner` with the values that we want and","lastModifiedDate":"2021-03-07"},{"lineNumber":326,"author":{"gitId":"wei-yutong"},"content":"save it with `Model#setOwner()`.","lastModifiedDate":"2021-03-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"wei-yutong"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Owner: %1$s\";","lastModifiedDate":"2021-03-07"},{"lineNumber":333,"author":{"gitId":"wei-yutong"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Owner: %1$s\";","lastModifiedDate":"2021-03-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"wei-yutong"},"content":"        List\u003cOwner\u003e lastShownList \u003d model.getFilteredOwnerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"wei-yutong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OWNER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"wei-yutong"},"content":"        Owner ownerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":344,"author":{"gitId":"wei-yutong"},"content":"        Owner editedOwner \u003d new Owner(ownerToEdit.getName(), ownerToEdit.getPhone(), ownerToEdit.getEmail(),","lastModifiedDate":"2021-03-07"},{"lineNumber":345,"author":{"gitId":"wei-yutong"},"content":"                ownerToEdit.getAddress(), remark, ownerToEdit.getTags());","lastModifiedDate":"2021-03-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"wei-yutong"},"content":"        model.setOwner(ownerToEdit, editedOwner);","lastModifiedDate":"2021-03-07"},{"lineNumber":348,"author":{"gitId":"wei-yutong"},"content":"        model.updateFilteredOwnerList(PREDICATE_SHOW_ALL_OWNERS);","lastModifiedDate":"2021-03-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"wei-yutong"},"content":"        return new CommandResult(generateSuccessMessage(editedOwner));","lastModifiedDate":"2021-03-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"wei-yutong"},"content":"     * {@code ownerToEdit}.","lastModifiedDate":"2021-03-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"wei-yutong"},"content":"    private String generateSuccessMessage(Owner ownerToEdit) {","lastModifiedDate":"2021-03-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"wei-yutong"},"content":"        return String.format(message, ownerToEdit);","lastModifiedDate":"2021-03-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"wei-yutong":38,"kouyk":3,"-":353}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Owner` model to suit your use case.","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Owner`.","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"The `address` field in `Owner` is actually an instance of the `dog.pawbook.model.managedentity.owner.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditOwnerDescriptor` may require more careful inspection.","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"Let’s try removing references to `Address` in `EditOwnerDescriptor`.","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"1. Safe delete the field `address` in `EditOwnerDescriptor`.","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Owner` class will require you to modify its constructor.","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `OwnerCard` that has not been removed nor identified.","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"A quick look at the `OwnerCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"**`OwnerCard.java`**","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"**`OwnerCard.fxml`**","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"branzuelajohn"},"content":"**`invalidOwnerDatabase.json`:**","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"wei-yutong"},"content":"  \"owners\": [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"wei-yutong"},"content":"    \"name\": \"Owner with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"branzuelajohn":1,"wei-yutong":12,"kouyk":1,"-":89}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `dog.pawbook.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"wei-yutong"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditOwnerDescriptor`. Recall that we can verify the contents of `editOwnerDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"wei-yutong"},"content":"       Owner ownerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"kouyk"},"content":"       Owner editedOwner \u003d createEditedOwner(ownerToEdit, editEntityDescriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"wei-yutong"},"content":"       if (!ownerToEdit.isSameOwner(editedOwner) \u0026\u0026 model.hasOwner(editedOwner)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"wei-yutong"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_OWNER);","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"wei-yutong"},"content":"       model.setOwner(ownerToEdit, editedOwner);","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"wei-yutong"},"content":"       model.updateFilteredOwnerList(PREDICATE_SHOW_ALL_OWNERS);","lastModifiedDate":"2021-03-07"},{"lineNumber":162,"author":{"gitId":"wei-yutong"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_OWNER_SUCCESS, editedOwner));","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"wei-yutong"},"content":"       owners.addAll(","lastModifiedDate":"2021-03-07"},{"lineNumber":184,"author":{"gitId":"wei-yutong"},"content":"           source.getOwnerList()","lastModifiedDate":"2021-03-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"wei-yutong"},"content":"                 .map(JsonAdaptedOwner::new)","lastModifiedDate":"2021-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"wei-yutong"},"content":"1. It appears that a `JsonAdaptedOwner` is created for each `Owner` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-03-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"wei-yutong"},"content":"    5.  Add a new field to `Owner`","lastModifiedDate":"2021-03-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wei-yutong":12,"kouyk":2,"-":236}},{"path":"src/main/java/dog/pawbook/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.FileUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"kouyk":3,"-":61}},{"path":"src/main/java/dog/pawbook/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"kouyk":1,"-":24}},{"path":"src/main/java/dog/pawbook/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Config;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Version;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.ConfigUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.StringUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.Logic;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.LogicManager;","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ModelManager;","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.storage.DatabaseStorage;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.storage.JsonDatabaseStorage;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.storage.Storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.storage.StorageManager;","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.ui.Ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.ui.UiManager;","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, false);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Database ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"ZhangAnli"},"content":"        DatabaseStorage databaseStorage \u003d new JsonDatabaseStorage(userPrefs.getDatabaseFilePath());","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"ZhangAnli"},"content":"        storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s database and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"     * The data from the sample database will be used instead if {@code storage}\u0027s database is not found,","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"     * or an empty database will be used instead if errors occur when reading {@code storage}\u0027s database.","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"        Optional\u003cReadOnlyDatabase\u003e databaseOptional;","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"ZhangAnli"},"content":"        ReadOnlyDatabase initialData;","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"            databaseOptional \u003d storage.readDatabase();","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":"            if (!databaseOptional.isPresent()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Database\");","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"            initialData \u003d databaseOptional.orElseGet(SampleDataUtil::getSampleDatabase);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Database\");","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"ZhangAnli"},"content":"            initialData \u003d new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Database\");","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"ZhangAnli"},"content":"            initialData \u003d new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"branzuelajohn"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Database\");","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"branzuelajohn"},"content":"        logger.info(\"Starting Database \" + MainApp.VERSION);","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"branzuelajohn"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Database ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhangAnli":9,"branzuelajohn":14,"kouyk":21,"-":139}},{"path":"src/main/java/dog/pawbook/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.core;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":1,"-":62}},{"path":"src/main/java/dog/pawbook/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.core;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":1,"-":78}},{"path":"src/main/java/dog/pawbook/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.core;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    private static final String LOG_FILE \u003d \"pawbook.log\";","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":2,"-":110}},{"path":"src/main/java/dog/pawbook/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.core;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    public static final String MESSAGE_UNKNOWN_ENTITY \u003d \"Unknown entity, supported entities include: dog/owner/program\";","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_DUPLICATE_ENTITY_FORMAT \u003d \"This %s already exists in Pawbook.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_DUPLICATE_OWNER \u003d String.format(MESSAGE_DUPLICATE_ENTITY_FORMAT,","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"            Owner.ENTITY_WORD);","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_DUPLICATE_DOG \u003d String.format(MESSAGE_DUPLICATE_ENTITY_FORMAT,","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"            Dog.ENTITY_WORD);","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_DUPLICATE_PROGRAM \u003d String.format(MESSAGE_DUPLICATE_ENTITY_FORMAT,","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"            Program.ENTITY_WORD);","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"    public static final String MESSAGE_INVALID_ENTITY_ID \u003d \"The entity ID provided is invalid.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"    public static final String MESSAGE_INVALID_OWNER_ID \u003d \"The owner ID provided is invalid.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"    public static final String MESSAGE_INVALID_PROGRAM_ID \u003d \"The program ID provided is invalid.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"ZhangAnli"},"content":"    public static final String MESSAGE_INVALID_DOG_ID \u003d \"The dog ID provided is invalid.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"    public static final String MESSAGE_ENTITIES_LISTED_OVERVIEW \u003d \"%1$d entities listed!\";","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"    public static final String MESSAGE_DOG_MISSING_OWNER_ID \u003d \"Dog to be added is missing owner ID.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shaelynl":1,"ZhangAnli":7,"kouyk":12,"-":8}},{"path":"src/main/java/dog/pawbook/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.core;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":1,"-":115}},{"path":"src/main/java/dog/pawbook/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.exceptions;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"ZhangAnli"},"content":" * Represents an error during conversion of data from one format to another.","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhangAnli":1,"kouyk":1,"-":9}},{"path":"src/main/java/dog/pawbook/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.exceptions;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kouyk":1,"-":20}},{"path":"src/main/java/dog/pawbook/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.MainApp;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kouyk":2,"-":40}},{"path":"src/main/java/dog/pawbook/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * Returns true if {@code items} contain elements that are all null.","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    public static boolean isAllNull(Object... items) {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).allMatch(Objects::isNull);","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kouyk":8,"-":34}},{"path":"src/main/java/dog/pawbook/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Config;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kouyk":3,"-":20}},{"path":"src/main/java/dog/pawbook/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"ZhangAnli"},"content":" * Writes and reads files.","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"ZhangAnli"},"content":"     * Creates parent directories of file if it has a parent directory.","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"ZhangAnli"},"content":"     * Assumes file exist.","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhangAnli":3,"kouyk":1,"-":79}},{"path":"src/main/java/dog/pawbook/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"ZhangAnli"},"content":"     * Converts a given string representation of a JSON data to instance of a class.","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"ZhangAnli"},"content":"     * Converts a given instance of a class into its JSON data string representation.","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"ZhangAnli"},"content":"         * Gets the logging level that matches loggingLevelString.","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhangAnli":3,"kouyk":3,"-":137}},{"path":"src/main/java/dog/pawbook/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":2,"-":66}},{"path":"src/main/java/dog/pawbook/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.CommandResult;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"     * Returns the Database.","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"     * @see dog.pawbook.model.Model#getDatabase()","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"ZhangAnli"},"content":"    ReadOnlyDatabase getDatabase();","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"     * Returns an unmodifiable view of the filtered list of entities.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getFilteredEntityList();","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"     * Returns the user prefs\u0027 database file path.","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"ZhangAnli"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"ZhangAnli"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ZhangAnli":5,"branzuelajohn":2,"kouyk":11,"-":35}},{"path":"src/main/java/dog/pawbook/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.Command;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.CommandResult;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.PawbookParser;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.storage.Storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    private final PawbookParser pawbookParser;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        pawbookParser \u003d new PawbookParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        Command command \u003d pawbookParser.parseCommand(commandText);","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"ZhangAnli"},"content":"            storage.saveDatabase(model.getDatabase());","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"ZhangAnli"},"content":"    public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"ZhangAnli"},"content":"        return model.getDatabase();","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"    public ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getFilteredEntityList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"        return model.getFilteredEntityList();","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"ZhangAnli"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"ZhangAnli"},"content":"        return model.getDatabaseFilePath();","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ZhangAnli":6,"kouyk":17,"-":59}},{"path":"src/main/java/dog/pawbook/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_BREED;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_OWNERID;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.IdMatchPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"public abstract class AddCommand\u003cT extends Entity\u003e extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a owner/dog/program to the database. \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            + \"Example for Owner: \" + COMMAND_WORD + \" \" + Owner.ENTITY_WORD + \" \"","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            + \"Example for Dog: \" + COMMAND_WORD + \" \" + Dog.ENTITY_WORD + \" \"","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_BREED + \"BREED \"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            + PREFIX_DOB + \"DATE OF BIRTH \"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_SEX + \"SEX \"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_OWNERID + \"OWNER ID \"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"            + \"Example for Program: \" + COMMAND_WORD + \" \" + Program.ENTITY_WORD + \" \"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_SESSION + \"SESSION \"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\";","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"New %s added: \";","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    protected final T toAdd;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    protected AddCommand(T toAdd) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"ZhangAnli"},"content":"     * Executes the adding of the entity into the model.","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"ZhangAnli"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     * @throws CommandException if entity already exists in the model.","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        executeAdd(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        return new CommandResult(getSuccessMessage());","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"ZhangAnli"},"content":"     * Adds the new entity into the model.","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"ZhangAnli"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"     * @return ID of the newly added entity.","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"     * @throws CommandException if entity already exists in the model.","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"    protected int executeAdd(Model model) throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        if (model.hasEntity(toAdd)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(getDuplicateMessage());","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"        int addedEntityId \u003d model.addEntity(toAdd);","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"ZhangAnli"},"content":"        model.updateFilteredEntityList(new IdMatchPredicate(addedEntityId));","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"ZhangAnli"},"content":"        return addedEntityId;","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"    protected abstract String getSuccessMessage();","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"    protected abstract String getDuplicateMessage();","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shaelynl":1,"branzuelajohn":20,"ZhangAnli":7,"kouyk":48,"-":8}},{"path":"src/main/java/dog/pawbook/logic/commands/AddDogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_BREED;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_OWNERID;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.dog.Dog.ENTITY_WORD;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":" * Adds a dog to the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"public class AddDogCommand extends AddCommand\u003cDog\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds dog to the database. \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_BREED + \"BREED \"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"            + PREFIX_DOB + \"DATE OF BIRTH \"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_SEX + \"SEX \"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_OWNERID + \"OWNER ID \"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + ENTITY_WORD + \" \"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_NAME + \"Bruce \"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_BREED + \"Chihuahua \"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"            + PREFIX_DOB + \"12-02-2019 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_SEX + \"Male \"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"CharlesLee01"},"content":"            + PREFIX_OWNERID + \"1 \"","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_TAG + \"playful \"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"            + PREFIX_TAG + \"active\";","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(MESSAGE_SUCCESS_FORMAT, ENTITY_WORD);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"     * Creates an AddCommand to add the specified {@code Dog}","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"    public AddDogCommand(Dog dog) {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        super(dog);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        return MESSAGE_SUCCESS + toAdd;","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"    protected String getDuplicateMessage() {","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        return Messages.MESSAGE_DUPLICATE_DOG;","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"        // Ensure that getOwnerId() is not null","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"ZhangAnli"},"content":"        if (toAdd.getOwnerId() \u003d\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"ZhangAnli"},"content":"            throw new CommandException(Messages.MESSAGE_DOG_MISSING_OWNER_ID);","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"ZhangAnli"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"ZhangAnli"},"content":"        // Ensure that the owner exists and retrieve it","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"        if (!model.hasEntity(toAdd.getOwnerId())) {","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OWNER_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"        Entity entity \u003d model.getEntity(toAdd.getOwnerId());","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        if (!(entity instanceof Owner)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OWNER_ID);","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"        Owner owner \u003d (Owner) entity;","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"ZhangAnli"},"content":"        // Adding the dog entity","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        int idNumber \u003d executeAdd(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"ZhangAnli"},"content":"        // Modify the owner accordingly","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"        Set\u003cInteger\u003e editedDogIdSet \u003d new HashSet\u003c\u003e(owner.getDogIdSet());","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"        editedDogIdSet.add(idNumber);","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"        Owner editedOwner \u003d new Owner(owner.getName(), owner.getPhone(), owner.getEmail(), owner.getAddress(),","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"                owner.getTags(), editedDogIdSet);","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"        model.setEntity(toAdd.getOwnerId(), editedOwner);","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"        return new CommandResult(getSuccessMessage());","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"                || (other instanceof AddDogCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 toAdd.equals(((AddDogCommand) other).toAdd));","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"CharlesLee01":1,"shaelynl":1,"branzuelajohn":57,"ZhangAnli":10,"kouyk":34}},{"path":"src/main/java/dog/pawbook/logic/commands/AddOwnerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.owner.Owner.ENTITY_WORD;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":" * Adds a owner to the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"public class AddOwnerCommand extends AddCommand\u003cOwner\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a owner to the database. \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + ENTITY_WORD + \" \"","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(MESSAGE_SUCCESS_FORMAT, ENTITY_WORD);","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"     * Creates an AddCommand to add the specified {@code Owner}","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    public AddOwnerCommand(Owner owner) {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        super(owner);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"                || (other instanceof AddOwnerCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 toAdd.equals(((AddOwnerCommand) other).toAdd));","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        return MESSAGE_SUCCESS + toAdd;","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"    protected String getDuplicateMessage() {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        return Messages.MESSAGE_DUPLICATE_OWNER;","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"shaelynl":1,"branzuelajohn":1,"kouyk":55}},{"path":"src/main/java/dog/pawbook/logic/commands/AddProgramCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.model.managedentity.program.Program.ENTITY_WORD;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"public class AddProgramCommand extends AddCommand\u003cProgram\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds program to the database. \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"        + \"Parameters: \"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"        + \"[\" + PREFIX_SESSION + \"DATE\u0026TIME OF SESSION]... \"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"        + \"Example: \" + COMMAND_WORD + \" \" + ENTITY_WORD + \" \"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"        + PREFIX_NAME + \"Obedience Training \"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"        + PREFIX_SESSION + \"01-02-2021 18:00 \"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"        + PREFIX_TAG + \"puppies\";","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(MESSAGE_SUCCESS_FORMAT, ENTITY_WORD);","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    public static final String MESSAGE_DUPLICATE_PROGRAM \u003d \"This \" + ENTITY_WORD + \" already exists\";","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"     * Creates an AddCommand to add the specified {@code program}","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    public AddProgramCommand(Program program) {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        super(program);","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"            || (other instanceof AddProgramCommand // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"            \u0026\u0026 toAdd.equals(((AddProgramCommand) other).toAdd));","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        return MESSAGE_SUCCESS + toAdd;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"    protected String getDuplicateMessage() {","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"        return MESSAGE_DUPLICATE_PROGRAM;","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"shaelynl":3,"branzuelajohn":43,"kouyk":1}},{"path":"src/main/java/dog/pawbook/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kouyk":3,"-":17}},{"path":"src/main/java/dog/pawbook/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kouyk":1,"-":70}},{"path":"src/main/java/dog/pawbook/logic/commands/CommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"public class CommandUtil {","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"     * Remove a {@code dogId} from an Owner matching the given {@code ownerId} stored in the {@code model}.","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    static void disconnectFromOwner(Model model, int ownerId, int dogId) {","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"        assert model.hasEntity(ownerId) \u0026\u0026 model.getEntity(ownerId) instanceof Owner : \"Owner ID is invalid!\";","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"        Owner owner \u003d (Owner) model.getEntity(ownerId);","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"        Set\u003cInteger\u003e newDogIdSet \u003d new HashSet\u003c\u003e(owner.getDogIdSet());","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        assert newDogIdSet.contains(dogId);","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        newDogIdSet.remove(dogId);","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        model.setEntity(ownerId, new Owner(owner.getName(), owner.getPhone(), owner.getEmail(),","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"                owner.getAddress(), owner.getTags(), newDogIdSet));","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"kouyk":25}},{"path":"src/main/java/dog/pawbook/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.Model.COMPARATOR_ID_ASCENDING_ORDER;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.Model.PREDICATE_SHOW_ALL_ENTITIES;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"            COMMAND_WORD + \": Deletes the owner/dog/program identified by ID. \\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"            + \"Parameters: ID (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + Owner.ENTITY_WORD + \" 1\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + Dog.ENTITY_WORD + \" 2\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + Program.ENTITY_WORD + \" 3\";","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_DELETE_SUCCESS_FORMAT \u003d \"Deleted %s: \";","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    protected final Integer targetId;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     * Create a new Delete command.","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public DeleteCommand(Integer id) {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        this.targetId \u003d id;","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     * Attempt to find the entity to be deleted.","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"    protected Entity getEntityToDelete(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        Entity entityToDelete;","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            entityToDelete \u003d model.getFilteredEntityList().stream()","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"                    .filter(p -\u003e p.getKey().equals(targetId))","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"                    .findFirst().orElseThrow()","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"                    .getValue();","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(getInvalidIdMessage());","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        return entityToDelete;","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"ZhangAnli"},"content":"     * Updates the filtered list and sorts it in the desired order.","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"    protected final void filteredListShowAllAscendingId(Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        model.updateFilteredEntityList(PREDICATE_SHOW_ALL_ENTITIES);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        model.sortEntities(COMPARATOR_ID_ASCENDING_ORDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"    protected abstract String getInvalidIdMessage();","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"branzuelajohn":3,"ZhangAnli":5,"kouyk":55}},{"path":"src/main/java/dog/pawbook/logic/commands/DeleteDogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_DOG_ID;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandUtil.disconnectFromOwner;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.dog.Dog.ENTITY_WORD;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":" * Deletes a owner identified using it\u0027s displayed index from the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"public class DeleteDogCommand extends DeleteCommand {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"            COMMAND_WORD + \": Deletes the dog identified by ID.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            + \"Parameters: ID (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + ENTITY_WORD + \" 1\";","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(MESSAGE_DELETE_SUCCESS_FORMAT, ENTITY_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    public DeleteDogCommand(Integer targetIndex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        super(targetIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        Entity entityToDelete \u003d getEntityToDelete(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        // if the id exists but doesn\u0027t belong to dog means it is invalid","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        if (!(entityToDelete instanceof Dog)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(MESSAGE_INVALID_DOG_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        Dog dogToDelete \u003d (Dog) entityToDelete;","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        int ownerId \u003d dogToDelete.getOwnerId();","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        // delete the ID of the dog from the owner first","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        disconnectFromOwner(model, ownerId, targetId);","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        // remove the dog ID from programs as well","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"        disconnectFromPrograms(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        // then actually delete the dog","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        model.deleteEntity(targetId);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        filteredListShowAllAscendingId(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        return new CommandResult(MESSAGE_SUCCESS + dogToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    private void disconnectFromPrograms(Model model) {","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        List\u003cPair\u003cInteger, Entity\u003e\u003e relatedPrograms \u003d model.getUnfilteredEntityList().stream()","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"                .filter(idEntityPair -\u003e idEntityPair.getValue() instanceof Program)","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"                .filter(idEntityPair -\u003e ((Program) idEntityPair.getValue()).getDogIdSet().contains(targetId))","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"                .collect(toList());","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        for (Pair\u003cInteger, Entity\u003e pair : relatedPrograms) {","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"            int programId \u003d pair.getKey();","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            Program program \u003d (Program) pair.getValue();","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            HashSet\u003cInteger\u003e newDogIdSet \u003d new HashSet\u003c\u003e(program.getDogIdSet());","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"            newDogIdSet.remove(targetId);","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"            model.setEntity(programId, new Program(program.getName(), program.getSessions(),","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"                    program.getTags(), newDogIdSet));","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"    protected String getInvalidIdMessage() {","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"        return MESSAGE_INVALID_DOG_ID;","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"                || (other instanceof DeleteDogCommand // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 targetId.equals(((DeleteDogCommand) other).targetId)); // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"ZhangAnli":1,"kouyk":90}},{"path":"src/main/java/dog/pawbook/logic/commands/DeleteOwnerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_OWNER_ID;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.owner.Owner.ENTITY_WORD;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":" * Deletes a owner identified using it\u0027s displayed index from the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"public class DeleteOwnerCommand extends DeleteCommand {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"            COMMAND_WORD + \": Deletes the owner identified by ID.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"            + \"Parameters: ID (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + ENTITY_WORD + \" 1\";","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(MESSAGE_DELETE_SUCCESS_FORMAT, ENTITY_WORD);","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    public DeleteOwnerCommand(Integer targetId) {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        super(targetId);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        Entity entityToDelete \u003d getEntityToDelete(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        // if the id exists but doesn\u0027t belong to owner means it is invalid","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        if (!(entityToDelete instanceof Owner)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(MESSAGE_INVALID_OWNER_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        Owner ownerToDelete \u003d (Owner) entityToDelete;","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        Set\u003cInteger\u003e dogsToDelete \u003d ownerToDelete.getDogIdSet();","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        // delete all the dogs owned by this owner first","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        for (int dogId : dogsToDelete) {","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            assert model.hasEntity(dogId) \u0026\u0026 model.getEntity(dogId) instanceof Dog : \"Dog ID is invalid!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"            model.deleteEntity(dogId);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        // remove all delete dogs from the programs","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        for (Pair\u003cInteger, Entity\u003e idEntityPair : model.getUnfilteredEntityList()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"            Entity entity \u003d idEntityPair.getValue();","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"            if (!(entity instanceof Program)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"                continue;","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            Program program \u003d (Program) entity;","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"            HashSet\u003cInteger\u003e updatedDogIdSet \u003d new HashSet\u003c\u003e(program.getDogIdSet());","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"            updatedDogIdSet.removeAll(dogsToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"            model.setEntity(idEntityPair.getKey(),","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"                    new Program(program.getName(), program.getSessions(), program.getTags(), updatedDogIdSet));","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        // then actually delete the owner","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        model.deleteEntity(targetId);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"        filteredListShowAllAscendingId(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        return new CommandResult(MESSAGE_SUCCESS + ownerToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"    protected String getInvalidIdMessage() {","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        return MESSAGE_INVALID_OWNER_ID;","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"ZhangAnli"},"content":"                || (other instanceof DeleteOwnerCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"ZhangAnli"},"content":"                \u0026\u0026 targetId.equals(((DeleteOwnerCommand) other).targetId));","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ZhangAnli":3,"branzuelajohn":1,"kouyk":59,"-":24}},{"path":"src/main/java/dog/pawbook/logic/commands/DeleteProgramCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_PROGRAM_ID;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.model.managedentity.program.Program.ENTITY_WORD;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":" * Deletes a program identified using it\u0027s displayed index from the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"public class DeleteProgramCommand extends DeleteCommand {","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        COMMAND_WORD + \": Deletes the program identified by ID.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"            + \"Parameters: ID (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + ENTITY_WORD + \" 1\";","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    public static final String MESSAGE_SUCCESS \u003d String.format(MESSAGE_DELETE_SUCCESS_FORMAT, ENTITY_WORD);","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    public DeleteProgramCommand(Integer targetIndex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        super(targetIndex);","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        Entity programToDelete \u003d getEntityToDelete(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        // if the id exists but doesn\u0027t belong to a program means it is invalid","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"        if (!(programToDelete instanceof Program)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(MESSAGE_INVALID_PROGRAM_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        model.deleteEntity(targetId);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        filteredListShowAllAscendingId(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"        return new CommandResult(MESSAGE_SUCCESS + programToDelete);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    protected String getInvalidIdMessage() {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        return MESSAGE_INVALID_PROGRAM_ID;","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"            || (other instanceof DeleteProgramCommand // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            \u0026\u0026 targetId.equals(((DeleteProgramCommand) other).targetId)); // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"branzuelajohn":39,"ZhangAnli":4,"kouyk":12}},{"path":"src/main/java/dog/pawbook/logic/commands/DropCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_DOGID;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PROGRAMID;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"public class DropCommand extends ProgramRegistrationCommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    public static final String COMMAND_WORD \u003d \"drop\";","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Drops a dog from a program.\"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"            + PREFIX_DOGID + \"DOG_ID \"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"            + PREFIX_PROGRAMID + \"PROGRAM_ID...\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"            + \"Example: \" + COMMAND_WORD + \" d/2 p/3\";","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"Dog %s has been dropped from program %s!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_NOT_ENROLLED_FORMAT \u003d \"One or more dogs was not enrolled in the program(s).\";","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"     * Constructor for Drop command to remove the specified dog from the specified program.","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     * @param dogIdSet Id of the dogs.","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * @param programIdSet Id of the programs.","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"    public DropCommand(Set\u003cInteger\u003e dogIdSet, Set\u003cInteger\u003e programIdSet) {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        super(dogIdSet, programIdSet, false);","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    protected String getSuccessMessageFormat() {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        return MESSAGE_SUCCESS_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    protected String getFailureMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        return MESSAGE_NOT_ENROLLED_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"shaelynl":27,"wei-yutong":4,"kouyk":9}},{"path":"src/main/java/dog/pawbook/logic/commands/EditDogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandUtil.disconnectFromOwner;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_BREED;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_OWNERID;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Breed;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.DateOfBirth;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Sex;","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"public class EditDogCommand extends EditEntityCommand {","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the \" + Dog.ENTITY_WORD","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            + \" identified by the ID number. \"","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"            + \"ID (must be a positive integer) \"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_BREED + \"BREED] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_DOB + \"DATE OF BIRTH] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_SEX + \"SEX] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_OWNERID + \"OWNER ID] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + Dog.ENTITY_WORD + \" 1 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            + PREFIX_NAME + \"Bruce \"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            + PREFIX_OWNERID + \"10\";","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_EDIT_DOG_SUCCESS \u003d \"Edited Dog: %1$s\";","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"     * @param id                of the dog in the entity list to edit","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"     * @param editDogDescriptor details to edit the dog with","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    public EditDogCommand(Integer id, EditDogDescriptor editDogDescriptor) {","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        super(id, editDogDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        if (!model.hasEntity(id)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOG_ID);","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        Entity targetEntity \u003d model.getEntity(id);","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        if (!(targetEntity instanceof Dog)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOG_ID);","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"        Dog targetDog \u003d (Dog) targetEntity;","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        Dog editedDog \u003d createEditedEntity(targetEntity, editEntityDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        if (!targetDog.equals(editedDog) \u0026\u0026 model.hasEntity(editedDog)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(getDuplicateEntityMessage());","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        // special handling of Owner ID change","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        int originalOwnerId \u003d targetDog.getOwnerId();","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"        int editedOwnerId \u003d editedDog.getOwnerId();","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        if (originalOwnerId !\u003d editedOwnerId) {","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"            changeOwner(model, originalOwnerId, editedOwnerId);","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"        model.setEntity(id, editedDog);","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"        return new CommandResult(getSuccessMessage(editedDog));","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"    private void changeOwner(Model model, int originalOwnerId, int editedOwnerId) throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"        // ensure that new owner exists first exists first","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"        if (!model.hasEntity(editedOwnerId)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OWNER_ID);","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"        Entity entity \u003d model.getEntity(editedOwnerId);","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"        if (!(entity instanceof Owner)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OWNER_ID);","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        Owner newOwner \u003d (Owner) entity;","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"        // delete the ID of the dog from the owner first","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"        disconnectFromOwner(model, originalOwnerId, id);","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"        // transfer to the new owner","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"        Set\u003cInteger\u003e editedDogIdSet \u003d new HashSet\u003c\u003e(newOwner.getDogIdSet());","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"        editedDogIdSet.add(id);","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"        Owner editedOwner \u003d new Owner(newOwner.getName(), newOwner.getPhone(), newOwner.getEmail(),","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"                newOwner.getAddress(), newOwner.getTags(), editedDogIdSet);","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"        model.setEntity(editedOwnerId, editedOwner);","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"    protected String getSuccessMessage(Entity editedEntity) {","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"        return String.format(MESSAGE_EDIT_DOG_SUCCESS, editedEntity);","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"    protected String getDuplicateEntityMessage() {","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"        return Messages.MESSAGE_DUPLICATE_DOG;","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"    protected String getInvalidIdMessage() {","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"        return Messages.MESSAGE_INVALID_DOG_ID;","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"     * Creates and returns an {@code Dog} with the details of {@code entityToEdit}","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"     * edited with {@code editEntityDescriptor}.","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"    protected Dog createEditedEntity(Entity entityToEdit, EditEntityDescriptor editEntityDescriptor)","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"        requireAllNonNull(entityToEdit, editEntityDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"        if (!(entityToEdit instanceof Dog)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOG_ID);","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"        assert editEntityDescriptor instanceof EditDogDescriptor;","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"        EditDogDescriptor editDogDescriptor \u003d (EditDogDescriptor) editEntityDescriptor;","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"        Dog dogToEdit \u003d (Dog) entityToEdit;","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"        Name updatedName \u003d editDogDescriptor.getName().orElse(dogToEdit.getName());","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"        Breed updatedBreed \u003d editDogDescriptor.getBreed().orElse(dogToEdit.getBreed());","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"        DateOfBirth updatedDob \u003d editDogDescriptor.getDob().orElse(dogToEdit.getDob());","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":"        Sex updatedSex \u003d editDogDescriptor.getSex().orElse(dogToEdit.getSex());","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"        Integer updatedOwnerId \u003d editDogDescriptor.getOwnerId().orElse(dogToEdit.getOwnerId());","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":"        Set\u003cTag\u003e updatedTags \u003d editDogDescriptor.getTags().orElse(dogToEdit.getTags());","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"        return new Dog(updatedName, updatedBreed, updatedDob, updatedSex, updatedOwnerId, updatedTags);","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":"    public static class EditDogDescriptor extends EditEntityDescriptor {","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"        private Breed breed;","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"        private DateOfBirth dob;","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"kouyk"},"content":"        private Sex sex;","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"kouyk"},"content":"        private Integer ownerID;","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"kouyk"},"content":"        public EditDogDescriptor() {}","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"kouyk"},"content":"        /**","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"kouyk"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"kouyk"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"kouyk"},"content":"         */","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"kouyk"},"content":"        public EditDogDescriptor(EditDogDescriptor toCopy) {","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"kouyk"},"content":"            super(toCopy);","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"kouyk"},"content":"            setBreed(toCopy.breed);","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"kouyk"},"content":"            setDob(toCopy.dob);","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"kouyk"},"content":"            setSex(toCopy.sex);","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"kouyk"},"content":"            setOwnerId(toCopy.ownerID);","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"kouyk"},"content":"        public boolean isNoFieldEdited() {","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"kouyk"},"content":"            return super.isNoFieldEdited()","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 CollectionUtil.isAllNull(breed, dob, sex, ownerID);","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"kouyk"},"content":"        public Optional\u003cBreed\u003e getBreed() {","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"kouyk"},"content":"            return Optional.ofNullable(breed);","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"kouyk"},"content":"        public void setBreed(Breed breed) {","lastModifiedDate":"2021-03-26"},{"lineNumber":183,"author":{"gitId":"kouyk"},"content":"            this.breed \u003d breed;","lastModifiedDate":"2021-03-26"},{"lineNumber":184,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"kouyk"},"content":"        public Optional\u003cDateOfBirth\u003e getDob() {","lastModifiedDate":"2021-03-26"},{"lineNumber":187,"author":{"gitId":"kouyk"},"content":"            return Optional.ofNullable(dob);","lastModifiedDate":"2021-03-26"},{"lineNumber":188,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"kouyk"},"content":"        public void setDob(DateOfBirth dob) {","lastModifiedDate":"2021-03-26"},{"lineNumber":191,"author":{"gitId":"kouyk"},"content":"            this.dob \u003d dob;","lastModifiedDate":"2021-03-26"},{"lineNumber":192,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":193,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":194,"author":{"gitId":"kouyk"},"content":"        public Optional\u003cSex\u003e getSex() {","lastModifiedDate":"2021-03-26"},{"lineNumber":195,"author":{"gitId":"kouyk"},"content":"            return Optional.ofNullable(sex);","lastModifiedDate":"2021-03-26"},{"lineNumber":196,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":197,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":198,"author":{"gitId":"kouyk"},"content":"        public void setSex(Sex sex) {","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"kouyk"},"content":"            this.sex \u003d sex;","lastModifiedDate":"2021-03-26"},{"lineNumber":200,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":202,"author":{"gitId":"kouyk"},"content":"        public Optional\u003cInteger\u003e getOwnerId() {","lastModifiedDate":"2021-03-26"},{"lineNumber":203,"author":{"gitId":"kouyk"},"content":"            return Optional.ofNullable(ownerID);","lastModifiedDate":"2021-03-26"},{"lineNumber":204,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":206,"author":{"gitId":"kouyk"},"content":"        public void setOwnerId(Integer ownerID) {","lastModifiedDate":"2021-03-26"},{"lineNumber":207,"author":{"gitId":"kouyk"},"content":"            this.ownerID \u003d ownerID;","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":209,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":210,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":211,"author":{"gitId":"kouyk"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":212,"author":{"gitId":"kouyk"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":213,"author":{"gitId":"kouyk"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-26"},{"lineNumber":214,"author":{"gitId":"kouyk"},"content":"                return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":215,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":216,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"kouyk"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":218,"author":{"gitId":"kouyk"},"content":"            if (!(other instanceof EditDogDescriptor)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":219,"author":{"gitId":"kouyk"},"content":"                return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":220,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":221,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":222,"author":{"gitId":"kouyk"},"content":"            // state check","lastModifiedDate":"2021-03-26"},{"lineNumber":223,"author":{"gitId":"kouyk"},"content":"            EditDogDescriptor e \u003d (EditDogDescriptor) other;","lastModifiedDate":"2021-03-26"},{"lineNumber":224,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":225,"author":{"gitId":"kouyk"},"content":"            return super.equals(e)","lastModifiedDate":"2021-03-26"},{"lineNumber":226,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 getBreed().equals(e.getBreed())","lastModifiedDate":"2021-03-26"},{"lineNumber":227,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 getDob().equals(e.getDob())","lastModifiedDate":"2021-03-26"},{"lineNumber":228,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 getSex().equals(e.getSex())","lastModifiedDate":"2021-03-26"},{"lineNumber":229,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 getOwnerId().equals(e.getOwnerId());","lastModifiedDate":"2021-03-26"},{"lineNumber":230,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":231,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":232,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"kouyk":232}},{"path":"src/main/java/dog/pawbook/logic/commands/EditEntityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_OWNERID;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.IdMatchPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"ZhangAnli"},"content":" * Edits the details of an existing owner in the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"public abstract class EditEntityCommand extends Command {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the entity identified \"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"            + \"by the ID number. \"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"            + \"Parameters: ENTITY_TYPE (owner|dog|program) \"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"            + \"ID (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + Owner.ENTITY_WORD + \" 1 \"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + Dog.ENTITY_WORD + \" 1 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            + PREFIX_NAME + \"Bruce \"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            + PREFIX_OWNERID + \"10\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + Program.ENTITY_WORD + \" 100 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"            + PREFIX_NAME + \"Obedience Training \"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"            + PREFIX_SESSION + \"01-02-2021 18:00 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            + PREFIX_SESSION + \"08-02-2021 18:00\";","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    protected final Integer id;","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    protected final EditEntityDescriptor editEntityDescriptor;","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"     * @param id of the owner in the filtered owner list to edit","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     * @param editEntityDescriptor details to edit the owner with","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"    protected EditEntityCommand(Integer id, EditEntityDescriptor editEntityDescriptor) {","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        requireAllNonNull(id, editEntityDescriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        this.editEntityDescriptor \u003d editEntityDescriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        if (!model.hasEntity(id)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(getInvalidIdMessage());","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        Entity targetEntity \u003d model.getEntity(id);","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        Entity editedEntity \u003d createEditedEntity(targetEntity, editEntityDescriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"        if (editedEntity.getClass() !\u003d targetEntity.getClass()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(\"Entity to edit does not match given entity type!\");","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"        if (!targetEntity.equals(editedEntity) \u0026\u0026 model.hasEntity(editedEntity)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(getDuplicateEntityMessage());","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"        model.setEntity(id, editedEntity);","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"ZhangAnli"},"content":"        model.updateFilteredEntityList(new IdMatchPredicate(id));","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"        return new CommandResult(getSuccessMessage(editedEntity));","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"    protected abstract String getDuplicateEntityMessage();","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"    protected abstract String getSuccessMessage(Entity editedEntity);","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"    protected abstract String getInvalidIdMessage();","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"     * Creates and returns an {@code Entity} with the details of {@code entityToEdit}","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"     * edited with {@code editEntityDescriptor}.","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"    protected abstract Entity createEditedEntity(Entity entityToEdit, EditEntityDescriptor editEntityDescriptor)","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"            throws CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"            return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"        if (!(other instanceof EditEntityCommand)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"        // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"        EditEntityCommand e \u003d (EditEntityCommand) other;","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"        return id.equals(e.id)","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 editEntityDescriptor.equals(e.editEntityDescriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"     * Stores the details to edit the owner with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"     * corresponding field value of the owner.","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"    public static class EditEntityDescriptor {","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"        protected Name name;","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"        protected Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"        public EditEntityDescriptor() {}","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"        /**","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"         */","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        public EditEntityDescriptor(EditEntityDescriptor toCopy) {","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"        /**","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":"         */","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"        public boolean isNoFieldEdited() {","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"            return CollectionUtil.isAllNull(name, tags);","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"kouyk"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"kouyk"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"        /**","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"kouyk"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"kouyk"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"kouyk"},"content":"         */","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"kouyk"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"kouyk"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"kouyk"},"content":"        /**","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"kouyk"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"kouyk"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"kouyk"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"kouyk"},"content":"         */","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"kouyk"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"kouyk"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"kouyk"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"kouyk"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"kouyk"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"kouyk"},"content":"                return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"kouyk"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"kouyk"},"content":"            if (!(other instanceof EditEntityDescriptor)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"kouyk"},"content":"                return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"kouyk"},"content":"            // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"kouyk"},"content":"            EditEntityDescriptor e \u003d (EditEntityDescriptor) other;","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"kouyk"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"ZhangAnli":3,"kouyk":187}},{"path":"src/main/java/dog/pawbook/logic/commands/EditOwnerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"public class EditOwnerCommand extends EditEntityCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the \" + Owner.ENTITY_WORD","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            + \" identified by the ID number. \"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"            + \"ID (must be a positive integer) \"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + Owner.ENTITY_WORD + \" 1 \"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_EDIT_OWNER_SUCCESS \u003d \"Edited Owner: %1$s\";","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"     * @param id                  of the owner in the entity list to edit","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"     * @param editOwnerDescriptor details to edit the owner with","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    public EditOwnerCommand(Integer id, EditOwnerDescriptor editOwnerDescriptor) {","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        super(id, editOwnerDescriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"    protected String getSuccessMessage(Entity editedEntity) {","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        return String.format(MESSAGE_EDIT_OWNER_SUCCESS, editedEntity);","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"    protected String getDuplicateEntityMessage() {","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        return Messages.MESSAGE_DUPLICATE_OWNER;","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"    protected String getInvalidIdMessage() {","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        return Messages.MESSAGE_INVALID_OWNER_ID;","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"     * Creates and returns an {@code Owner} with the details of {@code entityToEdit}","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"     * edited with {@code editEntityDescriptor}.","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"    protected Owner createEditedEntity(Entity entityToEdit, EditEntityDescriptor editEntityDescriptor)","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        requireAllNonNull(entityToEdit, editEntityDescriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        if (!(entityToEdit instanceof Owner)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OWNER_ID);","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"        assert editEntityDescriptor instanceof EditOwnerDescriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor editOwnerDescriptor \u003d (EditOwnerDescriptor) editEntityDescriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"        Owner ownerToEdit \u003d (Owner) entityToEdit;","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"        Name updatedName \u003d editOwnerDescriptor.getName().orElse(ownerToEdit.getName());","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"        Phone updatedPhone \u003d editOwnerDescriptor.getPhone().orElse(ownerToEdit.getPhone());","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"        Email updatedEmail \u003d editOwnerDescriptor.getEmail().orElse(ownerToEdit.getEmail());","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        Address updatedAddress \u003d editOwnerDescriptor.getAddress().orElse(ownerToEdit.getAddress());","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"        Set\u003cTag\u003e updatedTags \u003d editOwnerDescriptor.getTags().orElse(ownerToEdit.getTags());","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"        return new Owner(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"                ownerToEdit.getDogIdSet());","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"    public static class EditOwnerDescriptor extends EditEntityDescriptor {","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"        private Phone phone;","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        private Email email;","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"        private Address address;","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"        public EditOwnerDescriptor() {}","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"        /**","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"         */","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"        public EditOwnerDescriptor(EditOwnerDescriptor toCopy) {","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"            super(toCopy);","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"        public boolean isNoFieldEdited() {","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"            return super.isNoFieldEdited()","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 CollectionUtil.isAllNull(phone, email, address);","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"                return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"kouyk"},"content":"            if (!(other instanceof EditOwnerDescriptor)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"                return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":"            // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"            EditOwnerDescriptor e \u003d (EditOwnerDescriptor) other;","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"kouyk"},"content":"            return super.equals(e)","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress());","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"kouyk":161}},{"path":"src/main/java/dog/pawbook/logic/commands/EditProgramCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Session;","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"public class EditProgramCommand extends EditEntityCommand {","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the \" + Program.ENTITY_WORD","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"            + \" identified by the ID number. \"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"            + \"ID (must be a positive integer) \"","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_SESSION + \"DATE\u0026TIME OF SESSION]... \"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + Program.ENTITY_WORD + \" 100 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"            + PREFIX_NAME + \"Obedience Training \"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"            + PREFIX_SESSION + \"01-02-2021 18:00 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"            + PREFIX_SESSION + \"08-02-2021 18:00\";","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_EDIT_PROGRAM_SUCCESS \u003d \"Edited Program: %1$s\";","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"     * @param id                    of the program in the entity list to edit","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * @param editProgramDescriptor details to edit the program with","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    public EditProgramCommand(Integer id, EditProgramDescriptor editProgramDescriptor) {","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        super(id, editProgramDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    protected String getSuccessMessage(Entity editedEntity) {","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        return String.format(MESSAGE_EDIT_PROGRAM_SUCCESS, editedEntity);","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"    protected String getDuplicateEntityMessage() {","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        return Messages.MESSAGE_DUPLICATE_PROGRAM;","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"    protected String getInvalidIdMessage() {","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        return Messages.MESSAGE_INVALID_PROGRAM_ID;","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"     * Creates and returns an {@code Program} with the details of {@code entityToEdit}","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"     * edited with {@code editEntityDescriptor}.","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    protected Program createEditedEntity(Entity entityToEdit, EditEntityDescriptor editEntityDescriptor)","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"        requireAllNonNull(entityToEdit, editEntityDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"        if (!(entityToEdit instanceof Program)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROGRAM_ID);","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"        assert editEntityDescriptor instanceof EditProgramDescriptor;","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        EditProgramDescriptor editProgramDescriptor \u003d (EditProgramDescriptor) editEntityDescriptor;","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        Program programToEdit \u003d (Program) entityToEdit;","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        Name updatedName \u003d editProgramDescriptor.getName().orElse(programToEdit.getName());","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        Set\u003cSession\u003e updatedSessions \u003d editProgramDescriptor.getSessions().orElse(programToEdit.getSessions());","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"        Set\u003cTag\u003e updatedTags \u003d editProgramDescriptor.getTags().orElse(programToEdit.getTags());","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"        // enrolment and dropping of dogs are handled separately, thus not updated or editable.","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"        return new Program(updatedName, updatedSessions, updatedTags, programToEdit.getDogIdSet());","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"    public static class EditProgramDescriptor extends EditEntityDescriptor {","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"        private Set\u003cSession\u003e sessions;","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"        public EditProgramDescriptor() {}","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"        /**","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"         */","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        public EditProgramDescriptor(EditProgramDescriptor toCopy) {","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"            super(toCopy);","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"            setSessions(toCopy.sessions);","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"        public boolean isNoFieldEdited() {","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"            return super.isNoFieldEdited()","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 CollectionUtil.isAllNull(sessions);","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"        public Optional\u003cSet\u003cSession\u003e\u003e getSessions() {","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"            return Optional.ofNullable(sessions);","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"        public void setSessions(Set\u003cSession\u003e sessions) {","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"            this.sessions \u003d sessions;","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"                return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"            if (!(other instanceof EditProgramDescriptor)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"                return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"            // state check","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"            EditProgramDescriptor e \u003d (EditProgramDescriptor) other;","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"            return super.equals(e)","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"                    \u0026\u0026 getSessions().equals(e.getSessions());","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"kouyk":132}},{"path":"src/main/java/dog/pawbook/logic/commands/EnrolCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_DOGID;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PROGRAMID;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"public class EnrolCommand extends ProgramRegistrationCommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    public static final String COMMAND_WORD \u003d \"enrol\";","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Enrols a dog into a program.\"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"            + PREFIX_DOGID + \"DOG_ID \"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"            + PREFIX_PROGRAMID + \"PROGRAM_ID...\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"            + \"Example: \" + COMMAND_WORD + \" d/2 p/3\";","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"Dog %s enrolled in program %s!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_REPEATED_ENROLMENT_FORMAT \u003d \"One or more dogs has already been enrolled!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * Constructor for Enrol command to add the specified dog into the specified program.","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     * @param dogIdSet Id of the dogs.","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * @param programIdSet Id of the programs.","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"    public EnrolCommand(Set\u003cInteger\u003e dogIdSet, Set\u003cInteger\u003e programIdSet) {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        super(dogIdSet, programIdSet, true);","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    protected String getSuccessMessageFormat() {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        return MESSAGE_SUCCESS_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    protected String getFailureMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        return MESSAGE_REPEATED_ENROLMENT_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"shaelynl":3,"wei-yutong":27,"kouyk":9}},{"path":"src/main/java/dog/pawbook/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Pawbook as requested ...\";","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ZhangAnli":1,"kouyk":2,"-":16}},{"path":"src/main/java/dog/pawbook/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_ENTITIES_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.Model.COMPARATOR_ID_ASCENDING_ORDER;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":" * Finds and lists all owners in database whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"            + \": Finds all entities which contains the specified keywords. \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"ZhangAnli"},"content":"        model.updateFilteredEntityList(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        model.sortEntities(COMPARATOR_ID_ASCENDING_ORDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        return new CommandResult(String.format(MESSAGE_ENTITIES_LISTED_OVERVIEW, model.getFilteredEntityList().size()));","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"shaelynl":2,"ZhangAnli":5,"kouyk":6,"-":32}},{"path":"src/main/java/dog/pawbook/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kouyk":2,"-":19}},{"path":"src/main/java/dog/pawbook/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.Model.PREDICATE_SHOW_ALL_ENTITIES;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":" * Lists all owners in the database to the user.","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"            + \": List all entities or a specified entity only.\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"            + \"Parameters: ENTITY_TYPE\";","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"Listed all %s(s)\";","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    private final String entityName;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    private final Predicate\u003cPair\u003cInteger, Entity\u003e\u003e predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * Construct a list command that lists all entities.","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    public ListCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        entityName \u003d Entity.class.getSimpleName().toLowerCase();","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        predicate \u003d PREDICATE_SHOW_ALL_ENTITIES;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * Construct a list command that lists a specified entity only.","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    public ListCommand(Predicate\u003cPair\u003cInteger, Entity\u003e\u003e predicate, String entityType) {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        entityName \u003d entityType;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        model.updateFilteredEntityList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"ZhangAnli"},"content":"        model.sortEntities(model.COMPARATOR_ID_ASCENDING_ORDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_FORMAT, entityName));","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"ZhangAnli":4,"kouyk":49}},{"path":"src/main/java/dog/pawbook/logic/commands/ProgramRegistrationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.Model.COMPARATOR_ID_ASCENDING_ORDER;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.IdMatchPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"public abstract class ProgramRegistrationCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    private final Set\u003cInteger\u003e dogIdSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    private final Set\u003cInteger\u003e programIdSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    private final boolean enrol;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * Construct a program registration command that enrol or drop.","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    public ProgramRegistrationCommand(Set\u003cInteger\u003e dogIdSet, Set\u003cInteger\u003e programIdSet, boolean enrol) {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        requireAllNonNull(dogIdSet, programIdSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        this.dogIdSet \u003d dogIdSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        this.programIdSet \u003d programIdSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        this.enrol \u003d enrol;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"     * Checks whether the IDs entered by the user are valid.","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * @throws CommandException if IDs are not valid.","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    private void checkIdValidity(Model model) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        boolean dogIdsValid \u003d dogIdSet.stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"                .allMatch(id -\u003e model.hasEntity(id) \u0026\u0026 model.getEntity(id) instanceof Dog);","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        if (!dogIdsValid) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(\"One or more of the dog ID(s) provided are invalid!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        boolean programIdsValid \u003d programIdSet.stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"                .allMatch(id -\u003e model.hasEntity(id) \u0026\u0026 model.getEntity(id) instanceof Program);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        if (!programIdsValid) {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(\"One or more of the program ID(s) provided are invalid!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"     * Ensure that dogs are not already enrolled for enrol and dogs are enrolled for drop.","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    private boolean dogEnrollmentValid(Model model) {","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        return programIdSet.stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"                .map(model::getEntity)","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"                .map(Program.class::cast)","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"                .map(Program::getDogIdSet)","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"                .allMatch(enrolledIds -\u003e enrol","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"                        ? Collections.disjoint(enrolledIds, dogIdSet) // none of the dogs are already enrolled","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"                        : enrolledIds.containsAll(dogIdSet)); // all of the dogs are already enrolled","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"     * Executes enrol or drop command.","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"     * @throws CommandException if user input is not valid.","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        checkIdValidity(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"        if (!dogEnrollmentValid(model)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(getFailureMessage());","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"        // The parser should have ensured that only either dog or program is specified multiple times.","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"        assert dogIdSet.size() \u003d\u003d 1 || programIdSet.size() \u003d\u003d 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"        for (int programId : programIdSet) {","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"            Program program \u003d (Program) model.getEntity(programId);","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"            HashSet\u003cInteger\u003e updatedEnrolledDogs \u003d new HashSet\u003c\u003e(program.getDogIdSet());","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"            if (enrol) {","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"                updatedEnrolledDogs.addAll(dogIdSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"            } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"                updatedEnrolledDogs.removeAll(dogIdSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"            model.setEntity(programId,","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"                    new Program(program.getName(), program.getSessions(), program.getTags(), updatedEnrolledDogs));","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"        model.updateFilteredEntityList(new IdMatchPredicate(programIdSet));","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"        model.sortEntities(COMPARATOR_ID_ASCENDING_ORDER);","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"                String.format(getSuccessMessageFormat(),","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"                        dogIdSet.stream().map(String::valueOf).collect(Collectors.joining(\", \")),","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"                        programIdSet.stream().map(String::valueOf).collect(Collectors.joining(\", \"))));","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"    protected abstract String getSuccessMessageFormat();","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"     * Retrieves the failure message format, where failure is defined as repeated enrollment of dogs and removal of not","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"     * enrolled dogs.","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"    protected abstract String getFailureMessage();","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"wei-yutong"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"shaelynl":2,"wei-yutong":36,"kouyk":74}},{"path":"src/main/java/dog/pawbook/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.IsEntityPredicate.IS_PROGRAM_PREDICATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.ProgramOccursOnDatePredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays all programs on for the day or a given date.\"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"            + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"            + \"Parameters: [DATE]...\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"            + \"Example: \" + COMMAND_WORD + \" 01-04-2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here\u0027s your schedule!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    public ScheduleCommand(LocalDate date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        model.updateFilteredEntityList(IS_PROGRAM_PREDICATE.and(new ProgramOccursOnDatePredicate(date)));","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"kouyk":35}},{"path":"src/main/java/dog/pawbook/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_ENTITIES_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_ENTITY_ID;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"ZhangAnli"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.IdMatchPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.ViewCommandComparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":" * Shows all owners in database whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"ZhangAnli"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"            + \": Views all related entities of the specified ID. \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"            + \"Parameters: [ID]...\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"ZhangAnli"},"content":"    private final int targetEntityId;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"ZhangAnli"},"content":"    public ViewCommand(int targetEntityId) {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"        this.targetEntityId \u003d targetEntityId;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"ZhangAnli"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"ZhangAnli"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"ZhangAnli"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"ZhangAnli"},"content":"        if (!model.hasEntity(targetEntityId)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            throw new CommandException(MESSAGE_INVALID_ENTITY_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"ZhangAnli"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"ZhangAnli"},"content":"        Entity targetEntity \u003d model.getEntity(targetEntityId);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"ZhangAnli"},"content":"        ArrayList\u003cInteger\u003e targetIdList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"ZhangAnli"},"content":"        targetIdList.add(targetEntityId);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        targetIdList.addAll(targetEntity.getRelatedEntityIds());","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"ZhangAnli"},"content":"        List\u003cInteger\u003e enrolledPrograms \u003d model.getUnfilteredEntityList()","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"ZhangAnli"},"content":"                .stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"ZhangAnli"},"content":"                .filter(x -\u003e x.getValue() instanceof Program)","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"ZhangAnli"},"content":"                .filter(x -\u003e x.getValue().getRelatedEntityIds().contains(targetEntityId))","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"                .map(Pair::getKey)","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"ZhangAnli"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"ZhangAnli"},"content":"        targetIdList.addAll(enrolledPrograms);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"ZhangAnli"},"content":"        model.updateFilteredEntityList(new IdMatchPredicate(targetIdList));","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        model.sortEntities(new ViewCommandComparator(targetEntity.getClass()));","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        return new CommandResult(String.format(MESSAGE_ENTITIES_LISTED_OVERVIEW, model.getFilteredEntityList().size()));","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"ZhangAnli"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"ZhangAnli"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"ZhangAnli"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"ZhangAnli"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"ZhangAnli"},"content":"                \u0026\u0026 targetEntityId \u003d\u003d (((ViewCommand) other).targetEntityId)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"ZhangAnli"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"shaelynl":2,"ZhangAnli":60,"kouyk":10}},{"path":"src/main/java/dog/pawbook/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands.exceptions;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.Command;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kouyk":3,"-":16}},{"path":"src/main/java/dog/pawbook/logic/parser/AddDogCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_BREED;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_OWNERID;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.logic.commands.AddDogCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.dog.Breed;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.dog.DateOfBirth;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.dog.Sex;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"public class AddDogCommandParser extends CommandWithCompulsoryPrefixNoPreambleParser\u003cAddDogCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    private static final Prefix[] DOG_COMPULSORY_PREFIXES \u003d {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        PREFIX_NAME, PREFIX_BREED, PREFIX_DOB, PREFIX_OWNERID, PREFIX_SEX","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    };","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    private static final Prefix[] DOG_OPTIONAL_PREFIXES \u003d {PREFIX_TAG};","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    private static final Prefix[] DOG_ALL_PREFIXES \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"            Stream.of(DOG_COMPULSORY_PREFIXES, DOG_OPTIONAL_PREFIXES).flatMap(Stream::of).toArray(Prefix[]::new);","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    protected Prefix[] getCompulsoryPrefixes() {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        return DOG_COMPULSORY_PREFIXES;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"    protected Prefix[] getAllPrefixes() {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        return DOG_ALL_PREFIXES;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"    protected String getUsageText() {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"        return AddDogCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"    public AddDogCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"        ArgumentMultimap argMultimap \u003d extractArguments(args);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"        Breed breed \u003d ParserUtil.parseBreed(argMultimap.getValue(PREFIX_BREED).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        DateOfBirth dob \u003d ParserUtil.parseDob(argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        int ownerID \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_OWNERID).get());","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"        Sex sex \u003d ParserUtil.parseSex(argMultimap.getValue(PREFIX_SEX).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"        Dog dog \u003d new Dog(name, breed, dob, sex, ownerID, tagList);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"        return new AddDogCommand(dog);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"branzuelajohn":62,"kouyk":5}},{"path":"src/main/java/dog/pawbook/logic/parser/AddOwnerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.AddOwnerCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"public class AddOwnerCommandParser extends CommandWithCompulsoryPrefixNoPreambleParser\u003cAddOwnerCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    private static final Prefix[] OWNER_COMPULSORY_PREFIXES \u003d {PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL};","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    private static final Prefix[] OWNER_OPTIONAL_PREFIXES \u003d {PREFIX_TAG};","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    private static final Prefix[] OWNER_ALL_PREFIXES \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"            Stream.of(OWNER_COMPULSORY_PREFIXES, OWNER_OPTIONAL_PREFIXES).flatMap(Stream::of).toArray(Prefix[]::new);","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    protected Prefix[] getCompulsoryPrefixes() {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        return OWNER_COMPULSORY_PREFIXES;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    protected Prefix[] getAllPrefixes() {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        return OWNER_ALL_PREFIXES;","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"    protected String getUsageText() {","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        return AddOwnerCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    public AddOwnerCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        ArgumentMultimap argMultimap \u003d extractArguments(args);","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        Owner owner \u003d new Owner(name, phone, email, address, tagList);","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        return new AddOwnerCommand(owner);","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kouyk":64}},{"path":"src/main/java/dog/pawbook/logic/parser/AddProgramCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.logic.commands.AddProgramCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Session;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"public class AddProgramCommandParser extends CommandWithCompulsoryPrefixNoPreambleParser\u003cAddProgramCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    private static final Prefix[] PROGRAM_COMPULSORY_PREFIXES \u003d {PREFIX_NAME, PREFIX_SESSION};","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    private static final Prefix[] PROGRAM_OPTIONAL_PREFIXES \u003d {PREFIX_TAG};","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    private static final Prefix[] PROGRAM_ALL_PREFIXES \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        Stream.of(PROGRAM_COMPULSORY_PREFIXES, PROGRAM_OPTIONAL_PREFIXES).flatMap(Stream::of).toArray(Prefix[]::new);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    protected Prefix[] getCompulsoryPrefixes() {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        return PROGRAM_COMPULSORY_PREFIXES;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    protected Prefix[] getAllPrefixes() {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        return PROGRAM_ALL_PREFIXES;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"    protected String getUsageText() {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        return AddProgramCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"    public AddProgramCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"        ArgumentMultimap argMultimap \u003d extractArguments(args);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"        Set\u003cSession\u003e sessionList \u003d ParserUtil.parseSessions(argMultimap.getAllValues(PREFIX_SESSION));","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"        Program program \u003d new Program(name, sessionList, tagList);","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"        return new AddProgramCommand(program);","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"branzuelajohn":56,"kouyk":1}},{"path":"src/main/java/dog/pawbook/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"kouyk":1,"-":59}},{"path":"src/main/java/dog/pawbook/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"kouyk":1,"-":147}},{"path":"src/main/java/dog/pawbook/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    /* For Dog */","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    public static final Prefix PREFIX_BREED \u003d new Prefix(\"b/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    public static final Prefix PREFIX_OWNERID \u003d new Prefix(\"o/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    public static final Prefix PREFIX_SEX \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    /* For Program */","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    public static final Prefix PREFIX_SESSION \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    public static final Prefix PREFIX_DOGID \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    public static final Prefix PREFIX_PROGRAMID \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"branzuelajohn":8,"wei-yutong":2,"kouyk":2,"-":14}},{"path":"src/main/java/dog/pawbook/logic/parser/CommandWithCompulsoryPrefixNoPreambleParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.Command;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public abstract class CommandWithCompulsoryPrefixNoPreambleParser\u003cT extends Command\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"        extends CommandWithPrefixParser\u003cT\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * Returns an array containing all compulsory prefixes.","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    protected abstract Prefix[] getCompulsoryPrefixes();","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    protected final boolean areCompulsoryPrefixesPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        return Stream.of(getCompulsoryPrefixes()).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * Extracts all argument values tagged by the corresponding prefixes and guarantees that all compulsory arguments","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * are supplied.","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    protected ArgumentMultimap extractArguments(String args) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        ArgumentMultimap argMultimap \u003d super.extractArguments(args);","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        if (!areCompulsoryPrefixesPresent(argMultimap) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, getUsageText()));","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        return argMultimap;","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"kouyk":41}},{"path":"src/main/java/dog/pawbook/logic/parser/CommandWithPrefixParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.Command;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"public abstract class CommandWithPrefixParser\u003cT extends Command\u003e implements Parser\u003cT\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"     * Returns an array containing all accepted prefixes.","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    protected abstract Prefix[] getAllPrefixes();","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * Returns the help message for the add command.","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    protected abstract String getUsageText();","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * Extracts all argument values tagged by the corresponding prefixes.","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    protected ArgumentMultimap extractArguments(String args) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        return ArgumentTokenizer.tokenize(args, getAllPrefixes());","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kouyk":16,"-":8}},{"path":"src/main/java/dog/pawbook/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"public abstract class DeleteCommandParser\u003cT extends DeleteCommand\u003e implements Parser\u003cT\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"    private final Class\u003cT\u003e cls;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    public DeleteCommandParser(Class\u003cT\u003e cls) {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"        this.cls \u003d cls;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    protected abstract String getUsageText();","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    public T parse(String userInput) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"            Integer id \u003d Integer.parseInt(userInput.trim());","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"            try {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"                return cls.getDeclaredConstructor(Integer.class).newInstance(id);","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"                throw new AssertionError(\"All DeleteCommand child classes should have Integer constructor!\");","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(getUsageText(), e);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kouyk":34}},{"path":"src/main/java/dog/pawbook/logic/parser/DeleteDogCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.DeleteDogCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" * Parses input arguments and creates a new DeleteDogCommand object","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public class DeleteDogCommandParser extends DeleteCommandParser\u003cDeleteDogCommand\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    protected DeleteDogCommandParser() {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"        super(DeleteDogCommand.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    protected String getUsageText() {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"        return String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDogCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wei-yutong":1,"kouyk":20}},{"path":"src/main/java/dog/pawbook/logic/parser/DeleteOwnerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.DeleteOwnerCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" * Parses input arguments and creates a new DeleteOwnerCommand object","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public class DeleteOwnerCommandParser extends DeleteCommandParser\u003cDeleteOwnerCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    public DeleteOwnerCommandParser() {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"        super(DeleteOwnerCommand.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    protected String getUsageText() {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        return String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOwnerCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kouyk":12,"-":9}},{"path":"src/main/java/dog/pawbook/logic/parser/DeleteProgramCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.logic.commands.DeleteProgramCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":" * Parses input arguments and creates a new DeleteProgramCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"public class DeleteProgramCommandParser extends DeleteCommandParser\u003cDeleteProgramCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    public DeleteProgramCommandParser() {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"        super(DeleteProgramCommand.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    protected String getUsageText() {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        return String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteProgramCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"branzuelajohn":19,"kouyk":2}},{"path":"src/main/java/dog/pawbook/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditEntityCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"public abstract class EditCommandParser\u003cT extends EditEntityCommand\u003e extends CommandWithPrefixParser\u003cT\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    protected static final Prefix[] EDIT_COMMON_PREFIXES \u003d {PREFIX_NAME, PREFIX_TAG};","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    public final T parse(String args) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        ArgumentMultimap argMultimap \u003d extractArguments(args);","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        int id \u003d extractId(argMultimap);","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        return genEditCommand(id, argMultimap);","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    private static Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"     * Extract name and tags from provided arguments if possible and modify {@code editEntityDescriptor} accordingly.","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    protected static void fillCommonAttributes(EditEntityCommand.EditEntityDescriptor editEntityDescriptor,","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"            ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            editEntityDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editEntityDescriptor::setTags);","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"    private int extractId(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"        int id;","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"            id \u003d Integer.parseInt(argMultimap.getPreamble());","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, getUsageText()), e);","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        if (id \u003c 1) {","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, getUsageText()));","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        return id;","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"     * The child classes are responsible for creating their own entity-specific {@code EditDescriptor} for returning the","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"     * corresponding EditCommand at the end of parsing.","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"    protected abstract T genEditCommand(int id, ArgumentMultimap argMultimap) throws ParseException;","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"kouyk":83}},{"path":"src/main/java/dog/pawbook/logic/parser/EditDogCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_BREED;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_OWNERID;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditDogCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"public class EditDogCommandParser extends EditCommandParser\u003cEditDogCommand\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    private static final Prefix[] EDIT_DOG_SPECIFIC_PREFIXES \u003d {PREFIX_BREED, PREFIX_DOB, PREFIX_OWNERID, PREFIX_SEX};","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    private static final Prefix[] EDIT_DOG_ALL_PREFIXES \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"            Stream.of(EDIT_COMMON_PREFIXES, EDIT_DOG_SPECIFIC_PREFIXES).flatMap(Stream::of).toArray(Prefix[]::new);","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    protected Prefix[] getAllPrefixes() {","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        return EDIT_DOG_ALL_PREFIXES;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    protected String getUsageText() {","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        return EditDogCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    protected EditDogCommand genEditCommand(int id, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        EditDogCommand.EditDogDescriptor editDogDescriptor \u003d new EditDogCommand.EditDogDescriptor();","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        fillCommonAttributes(editDogDescriptor, argMultimap);","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        if (argMultimap.getValue(PREFIX_BREED).isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            editDogDescriptor.setBreed(ParserUtil.parseBreed(argMultimap.getValue(PREFIX_BREED).get()));","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        if (argMultimap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"            editDogDescriptor.setDob(ParserUtil.parseDob(argMultimap.getValue(PREFIX_DOB).get()));","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        if (argMultimap.getValue(PREFIX_OWNERID).isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            editDogDescriptor.setOwnerId(ParserUtil.parseId(argMultimap.getValue(PREFIX_OWNERID).get()));","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        if (argMultimap.getValue(PREFIX_SEX).isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            editDogDescriptor.setSex(ParserUtil.parseSex(argMultimap.getValue(PREFIX_SEX).get()));","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        if (editDogDescriptor.isNoFieldEdited()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(EditDogCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        return new EditDogCommand(id, editDogDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"kouyk":53}},{"path":"src/main/java/dog/pawbook/logic/parser/EditOwnerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditOwnerCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"public class EditOwnerCommandParser extends EditCommandParser\u003cEditOwnerCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    private static final Prefix[] EDIT_OWNER_SPECIFIC_PREFIXES \u003d {PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL};","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    private static final Prefix[] EDIT_OWNER_ALL_PREFIXES \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"            Stream.of(EDIT_COMMON_PREFIXES, EDIT_OWNER_SPECIFIC_PREFIXES).flatMap(Stream::of).toArray(Prefix[]::new);","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    protected Prefix[] getAllPrefixes() {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        return EDIT_OWNER_ALL_PREFIXES;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    protected String getUsageText() {","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        return EditOwnerCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    protected EditOwnerCommand genEditCommand(int id, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand.EditOwnerDescriptor editOwnerDescriptor \u003d new EditOwnerCommand.EditOwnerDescriptor();","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        fillCommonAttributes(editOwnerDescriptor, argMultimap);","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"            editOwnerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"            editOwnerDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"            editOwnerDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        if (editOwnerDescriptor.isNoFieldEdited()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(EditOwnerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        return new EditOwnerCommand(id, editOwnerDescriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"kouyk":49}},{"path":"src/main/java/dog/pawbook/logic/parser/EditProgramCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditProgramCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Session;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"public class EditProgramCommandParser extends EditCommandParser\u003cEditProgramCommand\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    private static final Prefix[] EDIT_PROGRAM_SPECIFIC_PREFIXES \u003d {PREFIX_SESSION};","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    private static final Prefix[] EDIT_PROGRAM_ALL_PREFIXES \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"            Stream.of(EDIT_COMMON_PREFIXES, EDIT_PROGRAM_SPECIFIC_PREFIXES).flatMap(Stream::of).toArray(Prefix[]::new);","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    protected Prefix[] getAllPrefixes() {","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        return EDIT_PROGRAM_ALL_PREFIXES;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    protected String getUsageText() {","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        return EditProgramCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    protected EditProgramCommand genEditCommand(int id, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        EditProgramCommand.EditProgramDescriptor editProgramDescriptor \u003d new EditProgramCommand.EditProgramDescriptor();","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        fillCommonAttributes(editProgramDescriptor, argMultimap);","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        parseSessionsForEdit(argMultimap.getAllValues(PREFIX_SESSION)).ifPresent(editProgramDescriptor::setSessions);","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        if (editProgramDescriptor.isNoFieldEdited()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(EditProgramCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        return new EditProgramCommand(id, editProgramDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"     * Parses {@code Collection\u003cString\u003e sessions} into a {@code Set\u003cSession\u003e} if {@code sessions} is non-empty.","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"     * If {@code sessions} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"     * {@code Set\u003cSession\u003e} containing zero sessions.","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    private static Optional\u003cSet\u003cSession\u003e\u003e parseSessionsForEdit(Collection\u003cString\u003e sessions) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        requireNonNull(sessions);","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        if (sessions.isEmpty()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        Collection\u003cString\u003e sessionSet \u003d sessions.size() \u003d\u003d 1 \u0026\u0026 sessions.contains(\"\")","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"                : sessions;","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        return Optional.of(ParserUtil.parseSessions(sessionSet));","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"kouyk":62}},{"path":"src/main/java/dog/pawbook/logic/parser/EnrolDropCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_DOGID;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PROGRAMID;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.DropCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EnrolCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.ProgramRegistrationCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":" * A parser capable of parsing for both enrol and drop commands.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"public class EnrolDropCommandParser extends CommandWithCompulsoryPrefixNoPreambleParser\u003cProgramRegistrationCommand\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_UNSUPPORTED_BATCH_OPERATION \u003d \"Only enrollment of multiple dogs into a single \"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"            + \"program or enrollment of a single dog into multiple programs are supported!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    private static final Prefix[] ENROL_COMPULSORY_PREFIXES \u003d { PREFIX_DOGID, PREFIX_PROGRAMID };","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    private final boolean enrol;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * Construct a parser for enrol and drop command, depending on the value of {@code enrol}.","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    public EnrolDropCommandParser(boolean enrol) {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        this.enrol \u003d enrol;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     * Returns an array containing all compulsory prefixes.","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    protected Prefix[] getCompulsoryPrefixes() {","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        return ENROL_COMPULSORY_PREFIXES;","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     * Returns an array containing all accepted prefixes.","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    protected Prefix[] getAllPrefixes() {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        return ENROL_COMPULSORY_PREFIXES;","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"     * Returns the help message for the add command.","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    protected String getUsageText() {","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        return EnrolCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"     * Parses the given {@code String} of arguments in the context of the EnrolCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"     * and returns an EnrolCommand object for execution.","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"    public ProgramRegistrationCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        ArgumentMultimap argMultimap \u003d extractArguments(args);","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        Set\u003cInteger\u003e dogIdList \u003d ParserUtil.parseIds(argMultimap.getAllValues(PREFIX_DOGID));","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        Set\u003cInteger\u003e programIdList \u003d ParserUtil.parseIds(argMultimap.getAllValues(PREFIX_PROGRAMID));","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        /*","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"         * Since we both prefixes are compulsory, it is safe to assume that number of both IDs are \u003e 1 respectively","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"         * but we don\u0027t support enrollment of multiple dogs into multiple programs since that is error-prone for the","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"         * user.","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"         */","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        if (dogIdList.size() \u003e 1 \u0026\u0026 programIdList.size() \u003e 1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(MESSAGE_UNSUPPORTED_BATCH_OPERATION);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        return enrol ? new EnrolCommand(dogIdList, programIdList) : new DropCommand(dogIdList, programIdList);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"kouyk":74}},{"path":"src/main/java/dog/pawbook/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"ZhangAnli"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.logic.commands.FindCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(nameKeywords);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"ZhangAnli":8,"-":25}},{"path":"src/main/java/dog/pawbook/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.Command;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kouyk":3,"-":13}},{"path":"src/main/java/dog/pawbook/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.dog.DateOfBirth.DATE_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.dog.DateOfBirth.DATE_FORMATTER;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.program.Session.DATETIME_FORMATTER;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.dog.Breed;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.dog.DateOfBirth;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.dog.Sex;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Session;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"     * Parses a {@code String breed} into a {@code Breed}.","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"     * @throws ParseException if the given {@code breed} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":"    public static Breed parseBreed(String breed) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"branzuelajohn"},"content":"        requireNonNull(breed);","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"branzuelajohn"},"content":"        String trimmedBreed \u003d breed.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"branzuelajohn"},"content":"        if (!Breed.isValidBreed(trimmedBreed)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"branzuelajohn"},"content":"            throw new ParseException(Breed.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"branzuelajohn"},"content":"        return new Breed(trimmedBreed);","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"     * Parses a {@code String dateString} into {@code LocalDate}.","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"     * @throws ParseException if the given {@code dateString} is not in a valid format.","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"    public static LocalDate parseDate(String dateString) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"        requireNonNull(dateString);","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"        LocalDate date;","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"            date \u003d LocalDate.parse(dateString.trim(), DATE_FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(\"Date should be in the \" + DATE_FORMAT + \" format\");","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"        return date;","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"branzuelajohn"},"content":"     * Parses a {@code String dob} into a {@code DateOfBirth}.","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"branzuelajohn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"branzuelajohn"},"content":"     * @throws ParseException if the given {@code dob} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"branzuelajohn"},"content":"    public static DateOfBirth parseDob(String dob) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"branzuelajohn"},"content":"        requireNonNull(dob);","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"        LocalDate localDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"            localDate \u003d parseDate(dob.trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"branzuelajohn"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"        return new DateOfBirth(localDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"branzuelajohn"},"content":"     * Parses a {@code String sex} into a {@code Sex}.","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"branzuelajohn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"branzuelajohn"},"content":"     * @throws ParseException if the given {@code sex} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"branzuelajohn"},"content":"    public static Sex parseSex(String sex) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"branzuelajohn"},"content":"        requireNonNull(sex);","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"branzuelajohn"},"content":"        String trimmedSex \u003d sex.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"branzuelajohn"},"content":"        if (!Sex.isValidSex(trimmedSex)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"branzuelajohn"},"content":"            throw new ParseException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"branzuelajohn"},"content":"        return new Sex(trimmedSex);","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"shaelynl"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"branzuelajohn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"shaelynl"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"shaelynl"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"shaelynl"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"shaelynl"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"shaelynl"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"shaelynl"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"shaelynl"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"shaelynl"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"shaelynl"},"content":"     * Parses a {@code String id} into a {@code int}.","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"shaelynl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":187,"author":{"gitId":"shaelynl"},"content":"    public static int parseId(String id) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"shaelynl"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"shaelynl"},"content":"        String trimmedOwnerId \u003d id.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"shaelynl"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"shaelynl"},"content":"            return Integer.parseInt(trimmedOwnerId);","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"shaelynl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"shaelynl"},"content":"            throw new ParseException(\"ID must be a positive integer!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"shaelynl"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"shaelynl"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"shaelynl"},"content":"     * Parses {@code Collection\u003cString\u003e id} into a {@code Set\u003cJsonTypeInfo.Id\u003e}.","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"shaelynl"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"shaelynl"},"content":"    public static Set\u003cInteger\u003e parseIds(Collection\u003cString\u003e ids) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"shaelynl"},"content":"        requireNonNull(ids);","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"shaelynl"},"content":"        final Set\u003cInteger\u003e idSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"shaelynl"},"content":"        for (String id : ids) {","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"shaelynl"},"content":"            idSet.add(parseId(id));","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"shaelynl"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"shaelynl"},"content":"        return idSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":208,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"kouyk"},"content":"     * Parses a {@code String dateTimeString} into a {@code Session}.","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"branzuelajohn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-23"},{"lineNumber":211,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"kouyk"},"content":"     * @throws ParseException if the given {@code dateTimeString} is invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"kouyk"},"content":"    public static Session parseSession(String dateTimeString) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"kouyk"},"content":"        requireNonNull(dateTimeString);","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"kouyk"},"content":"        String trimmedDateTime \u003d dateTimeString.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"kouyk"},"content":"        if (!Session.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"branzuelajohn"},"content":"            throw new ParseException(Session.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"kouyk"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(trimmedDateTime, DATETIME_FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"kouyk"},"content":"        return new Session(localDateTime);","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":223,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"shaelynl"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"shaelynl"},"content":"     * Parses {@code Collection\u003cString\u003e dop} into a {@code Set\u003cSession\u003e}.","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"shaelynl"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"shaelynl"},"content":"    public static Set\u003cSession\u003e parseSessions(Collection\u003cString\u003e sessions) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"shaelynl"},"content":"        requireNonNull(sessions);","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"shaelynl"},"content":"        final Set\u003cSession\u003e dateSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"shaelynl"},"content":"        for (String s : sessions) {","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"shaelynl"},"content":"            dateSet.add(parseSession(s));","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"shaelynl"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"shaelynl"},"content":"        return dateSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"shaelynl"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"shaelynl":43,"branzuelajohn":64,"kouyk":44,"-":85}},{"path":"src/main/java/dog/pawbook/logic/parser/PawbookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_UNKNOWN_ENTITY;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.IsEntityPredicate.IS_DOG_PREDICATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.IsEntityPredicate.IS_OWNER_PREDICATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.managedentity.IsEntityPredicate.IS_PROGRAM_PREDICATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.AddCommand;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.Command;","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"import dog.pawbook.logic.commands.DropCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditEntityCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.logic.commands.EnrolCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.logic.commands.FindCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.ListCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"public class PawbookParser {","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     * Used for initial separation of command word, entity type, and args.","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"    private static final Pattern TYPED_ARGUMENT_FORMAT \u003d","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            Pattern.compile(\"(?\u003centityType\u003e(?:owner|dog|program)+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        // for commands that require entity type to be specified","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        final Matcher secondaryMatcher \u003d TYPED_ARGUMENT_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        boolean hasEntityType \u003d secondaryMatcher.matches();","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"        final String entityType \u003d hasEntityType ? secondaryMatcher.group(\"entityType\") : \"\";","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        final String secondaryArguments \u003d hasEntityType ? secondaryMatcher.group(\"arguments\") : arguments;","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"shaelynl"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"            return generateAddCommand(entityType, secondaryArguments);","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        case EditEntityCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            return generateEditCommand(entityType, secondaryArguments);","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"shaelynl"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"            return generateDeleteCommand(entityType, secondaryArguments);","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"            return generateListCommand(entityType, secondaryArguments);","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"ZhangAnli"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"ZhangAnli"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"ZhangAnli"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"ZhangAnli"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":"        case EnrolCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"            return new EnrolDropCommandParser(true).parse(arguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"shaelynl"},"content":"        case DropCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"            return new EnrolDropCommandParser(false).parse(arguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"     * Generate an AddCommand according to type of entity.","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"    private AddCommand\u003c? extends Entity\u003e generateAddCommand(String entityType, String arguments) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"        if (entityType.isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"        switch (entityType) {","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"        case Owner.ENTITY_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"            return new AddOwnerCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"        case Dog.ENTITY_WORD:","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"branzuelajohn"},"content":"            return new AddDogCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"branzuelajohn"},"content":"        case Program.ENTITY_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"branzuelajohn"},"content":"            return new AddProgramCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"        default:","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"CharlesLee01"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_ENTITY);","lastModifiedDate":"2021-03-20"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"    private EditEntityCommand generateEditCommand(String entityType, String arguments) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"        if (entityType.isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEntityCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"        switch (entityType) {","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        case Owner.ENTITY_WORD:","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"            return new EditOwnerCommandParser().parse(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"        case Dog.ENTITY_WORD:","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"            return new EditDogCommandParser().parse(arguments);","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"        case Program.ENTITY_WORD:","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"            return new EditProgramCommandParser().parse(arguments);","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":"        default:","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_ENTITY);","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":"     * Generate a DeleteCommand according to type of entity.","lastModifiedDate":"2021-03-21"},{"lineNumber":148,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"    private DeleteCommand generateDeleteCommand(String entityType, String arguments) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":150,"author":{"gitId":"kouyk"},"content":"        if (entityType.isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":151,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"        switch (entityType) {","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"kouyk"},"content":"        case Owner.ENTITY_WORD:","lastModifiedDate":"2021-03-21"},{"lineNumber":156,"author":{"gitId":"kouyk"},"content":"            return new DeleteOwnerCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"kouyk"},"content":"        case Dog.ENTITY_WORD:","lastModifiedDate":"2021-03-21"},{"lineNumber":158,"author":{"gitId":"kouyk"},"content":"            return new DeleteDogCommandParser().parse(arguments);","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"branzuelajohn"},"content":"        case Program.ENTITY_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"branzuelajohn"},"content":"            return new DeleteProgramCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"kouyk"},"content":"        default:","lastModifiedDate":"2021-03-10"},{"lineNumber":163,"author":{"gitId":"CharlesLee01"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_ENTITY);","lastModifiedDate":"2021-03-20"},{"lineNumber":164,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"kouyk"},"content":"    private ListCommand generateListCommand(String entityType, String arguments) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"kouyk"},"content":"        if (!arguments.isBlank() \u0026\u0026 !Pattern.matches(\"^ s*\\\\s*$\", arguments)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":172,"author":{"gitId":"kouyk"},"content":"        // if no entity is specified, list everything","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"kouyk"},"content":"        if (entityType.isEmpty()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"kouyk"},"content":"            return new ListCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"kouyk"},"content":"        Predicate\u003cPair\u003cInteger, Entity\u003e\u003e predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"kouyk"},"content":"        switch (entityType) {","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"kouyk"},"content":"        case Owner.ENTITY_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"kouyk"},"content":"            predicate \u003d IS_OWNER_PREDICATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"kouyk"},"content":"            break;","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"kouyk"},"content":"        case Dog.ENTITY_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"kouyk"},"content":"            predicate \u003d IS_DOG_PREDICATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"kouyk"},"content":"            break;","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"kouyk"},"content":"        case Program.ENTITY_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"kouyk"},"content":"            predicate \u003d IS_PROGRAM_PREDICATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"kouyk"},"content":"            break;","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"kouyk"},"content":"        default:","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_ENTITY);","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"kouyk"},"content":"        return new ListCommand(predicate, entityType);","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CharlesLee01":3,"shaelynl":5,"ZhangAnli":8,"branzuelajohn":6,"wei-yutong":3,"kouyk":127,"-":42}},{"path":"src/main/java/dog/pawbook/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"kouyk":1,"-":38}},{"path":"src/main/java/dog/pawbook/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    public ScheduleCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"        if (userInput.isBlank()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"            return new ScheduleCommand(LocalDate.now());","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"        LocalDate localDate \u003d ParserUtil.parseDate(userInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"        return new ScheduleCommand(localDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"kouyk":18}},{"path":"src/main/java/dog/pawbook/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_ENTITY_ID;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"ZhangAnli"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":"        // Check if argument is empty","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"        // Check if string is an int","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        int id;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"ZhangAnli"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"            id \u003d Integer.parseInt(trimmedArgs);","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"            throw new ParseException(MESSAGE_INVALID_ENTITY_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"ZhangAnli"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        return new ViewCommand(id);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"ZhangAnli":26,"kouyk":9}},{"path":"src/main/java/dog/pawbook/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser.exceptions;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"kouyk":2,"-":15}},{"path":"src/main/java/dog/pawbook/model/Database.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.UniqueEntityList;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":" * Wraps all data at the database level","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"public class Database implements ReadOnlyDatabase {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    private final UniqueEntityList entities;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"        entities \u003d new UniqueEntityList();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"    public Database() {}","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"     * Creates a Database using the Entities in the {@code toBeCopied}","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"    public Database(ReadOnlyDatabase toBeCopied) {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"ZhangAnli"},"content":"    // list overwrite operations","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"     * Replaces the contents of the entity list with {@code owners}.","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"     * {@code entities} must not contain duplicate entities or invalid reference IDs.","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    public void setEntities(List\u003cPair\u003cInteger, Entity\u003e\u003e entities) {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"        this.entities.setEntities(entities);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"     * Resets the existing data of this {@code Database} with {@code newData}.","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"ZhangAnli"},"content":"    public void resetData(ReadOnlyDatabase newData) {","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"shaelynl"},"content":"        setEntities(newData.getEntityList());","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"ZhangAnli"},"content":"    // entity-level operations","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"     * Returns true if a entity {@code entity} exists in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"ZhangAnli"},"content":"    public boolean hasEntity(Entity entity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"ZhangAnli"},"content":"        requireNonNull(entity);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"ZhangAnli"},"content":"        return entities.contains(entity);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"     * Returns true if an entity with the same identity as {@code entity} exists in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"    public boolean hasEntity(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        return entities.contains(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"     * Adds a entity to the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"     * The entity must not already exist in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":"    public int addEntity(Entity p) {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"        return entities.add(p);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"     * Adds a entity with its ID to the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"branzuelajohn"},"content":"     * The entity must not already exist in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"    public void addEntityWithId(Entity entity, int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"        entities.add(entity, id);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"     * Replaces the given entity {@code targetId} in the list with {@code editedEntity}.","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"     * {@code targetId} must exist in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"     * The entity identity of {@code editedEntity} must not be the same as another existing entity in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"    public void setEntity(int targetId, Entity editedEntity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"shaelynl"},"content":"        requireNonNull(editedEntity);","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"        entities.setEntity(targetId, editedEntity);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":"     * Removes {@code id} from this {@code Database}.","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"branzuelajohn"},"content":"     * {@code id} must exist in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"    public void removeEntity(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"        entities.remove(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"     * Return the entity with the matching ID.","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"branzuelajohn"},"content":"     * {@code id} must exist in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"    public Entity getEntity(int targetID) {","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"        return entities.get(targetID);","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"     * Validate all links to other IDs from all entities.","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"    public boolean validateReferences() {","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"        return entities.validateReferences();","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"ZhangAnli"},"content":"    // util methods","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"shaelynl"},"content":"        return entities.asUnmodifiableObservableList().size() + \" owners\";","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"    public ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getEntityList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"shaelynl"},"content":"        return entities.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":140,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"ZhangAnli"},"content":"     * Calls the internal list to sort.","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"ZhangAnli"},"content":"    public void sortEntities(Comparator\u003cPair\u003cInteger, Entity\u003e\u003e comparator) {","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"        entities.sortEntitiesBy(comparator);","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"ZhangAnli"},"content":"                || (other instanceof Database // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"ZhangAnli"},"content":"                \u0026\u0026 entities.equals(((Database) other).entities));","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"shaelynl"},"content":"        return entities.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shaelynl":8,"ZhangAnli":27,"branzuelajohn":15,"kouyk":40,"-":68}},{"path":"src/main/java/dog/pawbook/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"ZhangAnli"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    Predicate\u003cPair\u003cInteger, Entity\u003e\u003e PREDICATE_SHOW_ALL_ENTITIES \u003d unused -\u003e true;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    Comparator\u003cPair\u003cInteger, Entity\u003e\u003e COMPARATOR_ID_ASCENDING_ORDER \u003d Comparator.comparingInt(Pair::getKey);","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"ZhangAnli"},"content":"     * Returns the user prefs\u0027 database file path.","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"ZhangAnli"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"ZhangAnli"},"content":"     * Sets the user prefs\u0027 database file path.","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"    void setDatabaseFilePath(Path databaseFilePath);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"ZhangAnli"},"content":"     * Replaces database data with the data in {@code database}.","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"ZhangAnli"},"content":"    void setDatabase(ReadOnlyDatabase database);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"ZhangAnli"},"content":"     * Returns the Database.","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"ZhangAnli"},"content":"    ReadOnlyDatabase getDatabase();","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"shaelynl"},"content":"     * Returns true if an entity with the same identity as {@code entity} exists in Pawbook.","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    boolean hasEntity(Entity entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"    boolean hasEntity(int id);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"shaelynl"},"content":"     * Deletes the given entity.","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"shaelynl"},"content":"     * The entity must exist in Pawbook.","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"    void deleteEntity(int targetID);","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"shaelynl"},"content":"     * Adds the given entity.","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"shaelynl"},"content":"     * {@code entity} must not already exist in Pawbook.","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"     * @return int The id of the entity.","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"    int addEntity(Entity entity);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"shaelynl"},"content":"     * Replaces the given entity {@code targetId} with {@code editedEntity}.","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"shaelynl"},"content":"     * {@code targetId} must exist in Pawbook.","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"ZhangAnli"},"content":"     * The entity identity of {@code editedEntity} must not be the same as another existing entity in the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"    void setEntity(int targetId, Entity editedEntity);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"     * Get the entity with the given ID.","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"shaelynl"},"content":"     * {@code targetId} must exist in Pawbook.","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"    Entity getEntity(int targetID);","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"shaelynl"},"content":"     * Returns an unmodifiable view of the filtered entity list","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"    ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getFilteredEntityList();","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"shaelynl"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"shaelynl"},"content":"     * Updates the filter of the filtered entity list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"shaelynl"},"content":"     * Returns an unmodifiable view of the unfiltered owner list","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"shaelynl"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"shaelynl"},"content":"    ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getUnfilteredEntityList();","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"shaelynl"},"content":"     * Updates the filter of the filtered entity list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"    void updateFilteredEntityList(Predicate\u003cPair\u003cInteger, Entity\u003e\u003e predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"     * Sorts the filtered entity list by the given {@code comparator}.","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"ZhangAnli"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"ZhangAnli"},"content":"    void sortEntities(Comparator\u003cPair\u003cInteger, Entity\u003e\u003e comparator);","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"shaelynl":16,"ZhangAnli":14,"branzuelajohn":3,"kouyk":22,"-":59}},{"path":"src/main/java/dog/pawbook/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":" * Represents the in-memory model of the database data.","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"    private final Database database;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    private final FilteredList\u003cPair\u003cInteger, Entity\u003e\u003e filteredEntities;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"     * Initializes a ModelManager with the given database and userPrefs.","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"    public ModelManager(ReadOnlyDatabase database, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"ZhangAnli"},"content":"        requireAllNonNull(database, userPrefs);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"        logger.fine(\"Initializing with database: \" + database + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"        this.database \u003d new Database(database);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"ZhangAnli"},"content":"        filteredEntities \u003d new FilteredList\u003c\u003e(this.database.getEntityList());","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"ZhangAnli"},"content":"        this(new Database(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"ZhangAnli"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"ZhangAnli"},"content":"        return userPrefs.getDatabaseFilePath();","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"ZhangAnli"},"content":"    public void setDatabaseFilePath(Path databaseFilePath) {","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"ZhangAnli"},"content":"        requireNonNull(databaseFilePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"ZhangAnli"},"content":"        userPrefs.setDatabaseFilePath(databaseFilePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Database \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"ZhangAnli"},"content":"    public void setDatabase(ReadOnlyDatabase database) {","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"ZhangAnli"},"content":"        this.database.resetData(database);","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"ZhangAnli"},"content":"    public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"ZhangAnli"},"content":"        return database;","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"    public boolean hasEntity(Entity entity) {","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"        requireNonNull(entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"ZhangAnli"},"content":"        return database.hasEntity(entity);","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"    public boolean hasEntity(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"ZhangAnli"},"content":"        return database.hasEntity(id);","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"    public Entity getEntity(int targetID) {","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"ZhangAnli"},"content":"        return database.getEntity(targetID);","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"    public void deleteEntity(int targetID) {","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"ZhangAnli"},"content":"        database.removeEntity(targetID);","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"branzuelajohn"},"content":"    public int addEntity(Entity entity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"ZhangAnli"},"content":"        return database.addEntity(entity);","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"    public void setEntity(int targetId, Entity editedEntity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"        requireAllNonNull(editedEntity);","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"ZhangAnli"},"content":"        database.setEntity(targetId, editedEntity);","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"wei-yutong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Owner List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"     * Returns an unmodifiable view of the list of {@code Entity} backed by the internal list of","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"branzuelajohn"},"content":"     * {@code versionedDatabase}","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"    public ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getFilteredEntityList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        return filteredEntities;","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"    public ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getUnfilteredEntityList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"ZhangAnli"},"content":"        return database.getEntityList();","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"    public void updateFilteredEntityList(Predicate\u003cPair\u003cInteger, Entity\u003e\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":"        filteredEntities.setPredicate(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"ZhangAnli"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"ZhangAnli"},"content":"    public void sortEntities(Comparator\u003cPair\u003cInteger, Entity\u003e\u003e comparator) {","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"ZhangAnli"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"ZhangAnli"},"content":"        database.sortEntities(comparator);","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"ZhangAnli"},"content":"        return database.equals(other.database)","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 filteredEntities.equals(other.filteredEntities);","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhangAnli":33,"branzuelajohn":3,"wei-yutong":1,"kouyk":30,"-":105}},{"path":"src/main/java/dog/pawbook/model/ReadOnlyDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":" * Unmodifiable view of a database","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"ZhangAnli"},"content":"public interface ReadOnlyDatabase {","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * Returns an unmodifiable view of the entity list.","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getEntityList();","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shaelynl":1,"branzuelajohn":1,"ZhangAnli":1,"kouyk":4,"-":10}},{"path":"src/main/java/dog/pawbook/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ZhangAnli":1,"kouyk":2,"-":13}},{"path":"src/main/java/dog/pawbook/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"ZhangAnli"},"content":"    private Path databaseFilepath \u003d Paths.get(\"data\" , \"pawbook.json\");","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"ZhangAnli"},"content":"        setDatabaseFilePath(newUserPrefs.getDatabaseFilePath());","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"ZhangAnli"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"ZhangAnli"},"content":"        return databaseFilepath;","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"ZhangAnli"},"content":"    public void setDatabaseFilePath(Path databaseFilePath) {","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"ZhangAnli"},"content":"        requireNonNull(databaseFilePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"ZhangAnli"},"content":"        this.databaseFilepath \u003d databaseFilePath;","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"ZhangAnli"},"content":"                \u0026\u0026 databaseFilepath.equals(o.databaseFilepath);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"ZhangAnli"},"content":"        return Objects.hash(guiSettings, databaseFilepath);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"ZhangAnli"},"content":"        sb.append(\"\\nLocal data file location : \" + databaseFilepath);","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhangAnli":10,"kouyk":2,"-":75}},{"path":"src/main/java/dog/pawbook/model/managedentity/Entity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"public abstract class Entity {","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    // Identity fields","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    protected final Name name;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    // Data fields","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    protected final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    public Entity(Name name, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        requireAllNonNull(name, tags);","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        return name;","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"     * Returns true if both entities have the same identity and data fields.","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"     * This defines a stronger notion of equality between two entities.","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"            return true;","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        if (!(other instanceof Entity)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"            return false;","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        Entity otherEntity \u003d (Entity) other;","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        return otherEntity.getName().equals(getName()) \u0026\u0026 otherEntity.getTags().equals(getTags());","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     * Returns an array of properties that should be displayed.","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"    public abstract Collection\u003cString\u003e getOtherPropertiesAsString();","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"     * Returns an array of IDs that are closely related to the entity.","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    public abstract Collection\u003cInteger\u003e getRelatedEntityIds();","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"shaelynl":1,"kouyk":63}},{"path":"src/main/java/dog/pawbook/model/managedentity/IdMatchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"package dog.pawbook.model.managedentity;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"ZhangAnli"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"ZhangAnli"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":" * Tests that the ID of an Entity is within a supplied list of IDs.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":"public class IdMatchPredicate implements Predicate\u003cPair\u003cInteger, Entity\u003e\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    private final Set\u003cInteger\u003e relatedIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * Construct a predicate from a list of IDs.","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public IdMatchPredicate(Collection\u003cInteger\u003e idList) {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        this.relatedIds.addAll(idList);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * Construct a predicate for a single ID.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    public IdMatchPredicate(Integer id) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        this.relatedIds.add(id);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public boolean test(Pair\u003cInteger, Entity\u003e idEntityPair) {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        return relatedIds.stream().anyMatch(id -\u003e idEntityPair.getKey().equals(id));","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"ZhangAnli"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"ZhangAnli"},"content":"                || (other instanceof IdMatchPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"ZhangAnli"},"content":"                \u0026\u0026 relatedIds.equals(((IdMatchPredicate) other).relatedIds)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"ZhangAnli"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"ZhangAnli":26,"kouyk":17}},{"path":"src/main/java/dog/pawbook/model/managedentity/IsEntityPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public class IsEntityPredicate implements Predicate\u003cPair\u003cInteger, Entity\u003e\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    public static final Predicate\u003cPair\u003cInteger, Entity\u003e\u003e IS_DOG_PREDICATE \u003d new IsEntityPredicate(Dog.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    public static final Predicate\u003cPair\u003cInteger, Entity\u003e\u003e IS_PROGRAM_PREDICATE \u003d new IsEntityPredicate(Program.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    public static final Predicate\u003cPair\u003cInteger, Entity\u003e\u003e IS_OWNER_PREDICATE \u003d new IsEntityPredicate(Owner.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    private final Class\u003c? extends Entity\u003e cls;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    private IsEntityPredicate(Class\u003c? extends Entity\u003e cls) {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        this.cls \u003d cls;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    public boolean test(Pair\u003cInteger, Entity\u003e integerEntityPair) {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        return cls.isInstance(integerEntityPair.getValue());","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"kouyk":25}},{"path":"src/main/java/dog/pawbook/model/managedentity/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":" * Represents a Owner\u0027s name in the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ZhangAnli":1,"kouyk":2,"-":56}},{"path":"src/main/java/dog/pawbook/model/managedentity/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"package dog.pawbook.model.managedentity;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.StringUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":" * Tests that a {@code Owner}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPair\u003cInteger, Entity\u003e\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public boolean test(Pair\u003cInteger, Entity\u003e integerEntityPair) {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(integerEntityPair.getValue()","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"                        .getName().fullName, keyword));","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ZhangAnli":1,"wei-yutong":1,"kouyk":6,"-":25}},{"path":"src/main/java/dog/pawbook/model/managedentity/ProgramOccursOnDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Session;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":" * Predicate to determine if a {@code Program} falls on a given date. To be used in conjunction with","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":" * {@code IS_PROGRAM_PREDICATE}.","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"public class ProgramOccursOnDatePredicate implements Predicate\u003cPair\u003cInteger, Entity\u003e\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     * Constructs a predicate that returns true for programs that occur on the given {@code date}.","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    public ProgramOccursOnDatePredicate(LocalDate date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    public boolean test(Pair\u003cInteger, Entity\u003e idEntityPair) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        assert idEntityPair.getValue() instanceof Program;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        Program program \u003d (Program) idEntityPair.getValue();","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        return program.getSessions().stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"                .map(Session::getDate)","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"                .map(LocalDateTime::toLocalDate)","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"                .anyMatch(date::equals);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"kouyk":34}},{"path":"src/main/java/dog/pawbook/model/managedentity/UniqueEntityList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.exceptions.BrokenReferencesException;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.exceptions.DuplicateEntityException;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.exceptions.EntityNotFoundException;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":" * A list of entities that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"public class UniqueEntityList implements Iterable\u003cPair\u003cInteger, Entity\u003e\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    private int newId \u003d 1; // id is never 0","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    private final ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    private final ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"     * Checks if list contains an entity of a particular id.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"ZhangAnli"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"ZhangAnli"},"content":"     * @param id entity id.","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"ZhangAnli"},"content":"     * @return boolean of whether entity exists.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    public boolean contains(Integer id) {","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        return internalList.stream().map(Pair::getKey).anyMatch(id::equals);","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"ZhangAnli"},"content":"     * Checks if list contains a particular entity","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"ZhangAnli"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"ZhangAnli"},"content":"     * @param toCheck entity","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"ZhangAnli"},"content":"     * @return boolean of whether entity exists.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"ZhangAnli"},"content":"    public boolean contains(Entity toCheck) {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"ZhangAnli"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        return internalList.stream().map(Pair::getValue).anyMatch(toCheck::equals);","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"     * Retrieve the index of an entity stored in the internal list.","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"     * @return the index if found, -1 otherwise.","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"ZhangAnli"},"content":"    private int getIndexOf(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        List\u003cPair\u003cInteger, Entity\u003e\u003e targets \u003d internalList.stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"                .filter(p -\u003e p.getKey() \u003d\u003d id)","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                .collect(toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        if (targets.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"            return -1;","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        // there should only be one match","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"        assert targets.size() \u003d\u003d 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        return internalList.indexOf(targets.get(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"    private int genID() {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        while (contains(newId)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"            ++newId;","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"        return newId;","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"shaelynl"},"content":"     * Adds an entity to the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"shaelynl"},"content":"     * The entity must not already exist in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"     * Must manually keep references of other related entities updated to avoid broken linkages.","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":"    public int add(Entity toAdd) {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"ZhangAnli"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"            throw new DuplicateEntityException();","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"        int idNumber \u003d genID();","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"        internalList.add(new Pair\u003c\u003e(idNumber, toAdd));","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":"        return idNumber;","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"     * Adds an entity to the list with a given id.","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"     * Both the entity and id should not already exist in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"    public void add(Entity toAdd, int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"ZhangAnli"},"content":"        if (contains(toAdd) || contains(id)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"            throw new DuplicateEntityException();","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"        internalList.add(new Pair\u003c\u003e(id, toAdd));","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"ZhangAnli"},"content":"     * Replaces the entity {@code target} in the list with {@code editedEntity}.","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"shaelynl"},"content":"     * The entity identity of {@code editedEntity} must not be the same as another existing entity in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"    public void setEntity(int targetID, Entity editedEntity) {","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"        requireNonNull(editedEntity);","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"        int index \u003d getIndexOf(targetID);","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"            throw new EntityNotFoundException();","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"        Entity originalEntity \u003d internalList.get(index).getValue();","lastModifiedDate":"2021-03-21"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"        if (!originalEntity.equals(editedEntity) \u0026\u0026 contains(editedEntity)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"            throw new DuplicateEntityException();","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"        assert editedEntity.getClass() \u003d\u003d originalEntity.getClass() : \"The entity should not change for the same ID!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        Pair\u003cInteger, Entity\u003e editedPair \u003d new Pair\u003c\u003e(targetID, editedEntity);","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"        internalList.set(index, editedPair);","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"     * Removes the entity with the given ID.","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":"     * Must manually keep references of other related entities updated to avoid broken linkages.","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"    public void remove(int toRemoveId) {","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"        int index \u003d getIndexOf(toRemoveId);","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"            throw new EntityNotFoundException();","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"        internalList.remove(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"     * Replace all entities stored with ones from inside {@code replacement}","lastModifiedDate":"2021-03-22"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"shaelynl"},"content":"    public void setEntities(UniqueEntityList replacement) {","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"shaelynl"},"content":"     * Replaces the contents of this list with {@code entities}.","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"kouyk"},"content":"     * {@code entities} must not contain duplicate entities, and all entries must have valid references to one another.","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"kouyk"},"content":"    public void setEntities(List\u003cPair\u003cInteger, Entity\u003e\u003e entities) {","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"kouyk"},"content":"        requireNonNull(entities);","lastModifiedDate":"2021-03-21"},{"lineNumber":167,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"kouyk"},"content":"        if (!entitiesAreUnique(entities.stream().map(Pair::getValue).collect(toList()))) {","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"kouyk"},"content":"            throw new DuplicateEntityException();","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":172,"author":{"gitId":"kouyk"},"content":"        if (!entitiesHaveValidReferences(entities)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"kouyk"},"content":"            throw new BrokenReferencesException();","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"kouyk"},"content":"        internalList.setAll(entities);","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":179,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"ZhangAnli"},"content":"     * Sorts the internal list.","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"ZhangAnli"},"content":"     * @param comparator compares based on class types.","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"kouyk"},"content":"    public void sortEntitiesBy(Comparator\u003cPair\u003cInteger, Entity\u003e\u003e comparator) {","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"ZhangAnli"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":188,"author":{"gitId":"kouyk"},"content":"     * Checks if all entities\u0027 reference to other entities are valid.","lastModifiedDate":"2021-03-22"},{"lineNumber":189,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":190,"author":{"gitId":"kouyk"},"content":"    private static boolean entitiesHaveValidReferences(List\u003cPair\u003cInteger, Entity\u003e\u003e entities) {","lastModifiedDate":"2021-03-22"},{"lineNumber":191,"author":{"gitId":"kouyk"},"content":"        // check that all owners\u0027 dogs are mutually exclusive","lastModifiedDate":"2021-03-22"},{"lineNumber":192,"author":{"gitId":"kouyk"},"content":"        boolean noDogOverlap \u003d entities.stream().map(Pair::getValue)","lastModifiedDate":"2021-03-22"},{"lineNumber":193,"author":{"gitId":"kouyk"},"content":"                .filter(Owner.class::isInstance).map(Owner.class::cast)","lastModifiedDate":"2021-03-22"},{"lineNumber":194,"author":{"gitId":"kouyk"},"content":"                .map(Owner::getDogIdSet)","lastModifiedDate":"2021-03-22"},{"lineNumber":195,"author":{"gitId":"kouyk"},"content":"                .flatMap(Collection::stream)","lastModifiedDate":"2021-03-22"},{"lineNumber":196,"author":{"gitId":"kouyk"},"content":"                .allMatch(new HashSet\u003c\u003e()::add);","lastModifiedDate":"2021-03-22"},{"lineNumber":197,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":198,"author":{"gitId":"kouyk"},"content":"        if (!noDogOverlap) {","lastModifiedDate":"2021-03-22"},{"lineNumber":199,"author":{"gitId":"kouyk"},"content":"            return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":200,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":201,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":202,"author":{"gitId":"kouyk"},"content":"        // finally check all the mutual links","lastModifiedDate":"2021-03-22"},{"lineNumber":203,"author":{"gitId":"kouyk"},"content":"        return entities.stream().allMatch(pair -\u003e referencedIdValid(pair, entities));","lastModifiedDate":"2021-03-22"},{"lineNumber":204,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":205,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":206,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":207,"author":{"gitId":"kouyk"},"content":"     * Checks if {@code referrer}\u0027s link to other entities are invalid or not mutual when necessary.","lastModifiedDate":"2021-03-23"},{"lineNumber":208,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":209,"author":{"gitId":"kouyk"},"content":"    private static boolean referencedIdValid(Pair\u003cInteger, Entity\u003e focus, List\u003cPair\u003cInteger, Entity\u003e\u003e entities) {","lastModifiedDate":"2021-03-22"},{"lineNumber":210,"author":{"gitId":"kouyk"},"content":"        int focusID \u003d focus.getKey();","lastModifiedDate":"2021-03-22"},{"lineNumber":211,"author":{"gitId":"kouyk"},"content":"        Entity focusEntity \u003d focus.getValue();","lastModifiedDate":"2021-03-22"},{"lineNumber":212,"author":{"gitId":"kouyk"},"content":"        if (focusEntity instanceof Owner) {","lastModifiedDate":"2021-03-22"},{"lineNumber":213,"author":{"gitId":"kouyk"},"content":"            Owner owner \u003d (Owner) focusEntity;","lastModifiedDate":"2021-03-22"},{"lineNumber":214,"author":{"gitId":"kouyk"},"content":"            Set\u003cInteger\u003e dogIdSet \u003d owner.getDogIdSet();","lastModifiedDate":"2021-03-22"},{"lineNumber":215,"author":{"gitId":"kouyk"},"content":"            if (dogIdSet.stream().anyMatch(id -\u003e id \u003c 1)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"kouyk"},"content":"                return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":217,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":218,"author":{"gitId":"kouyk"},"content":"            for (int dogId : dogIdSet) {","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"kouyk"},"content":"                List\u003cDog\u003e dogs \u003d getIdOfType(entities, dogId, Dog.class);","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"kouyk"},"content":"                if (dogs.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-22"},{"lineNumber":221,"author":{"gitId":"kouyk"},"content":"                    return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":222,"author":{"gitId":"kouyk"},"content":"                }","lastModifiedDate":"2021-03-22"},{"lineNumber":223,"author":{"gitId":"kouyk"},"content":"                assert dogs.size() \u003d\u003d 1 : \"There should only be exactly one matching dog\";","lastModifiedDate":"2021-03-22"},{"lineNumber":224,"author":{"gitId":"kouyk"},"content":"                Dog dog \u003d dogs.get(0);","lastModifiedDate":"2021-03-22"},{"lineNumber":225,"author":{"gitId":"kouyk"},"content":"                if (dog.getOwnerId() !\u003d focusID) {","lastModifiedDate":"2021-03-22"},{"lineNumber":226,"author":{"gitId":"kouyk"},"content":"                    return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":227,"author":{"gitId":"kouyk"},"content":"                }","lastModifiedDate":"2021-03-22"},{"lineNumber":228,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":229,"author":{"gitId":"kouyk"},"content":"            return true;","lastModifiedDate":"2021-03-22"},{"lineNumber":230,"author":{"gitId":"kouyk"},"content":"        } else if (focusEntity instanceof Dog) {","lastModifiedDate":"2021-03-22"},{"lineNumber":231,"author":{"gitId":"kouyk"},"content":"            Dog dog \u003d (Dog) focusEntity;","lastModifiedDate":"2021-03-22"},{"lineNumber":232,"author":{"gitId":"branzuelajohn"},"content":"            assert(dog.getOwnerId() !\u003d null) : \"OwnerID should not return a null\";","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"kouyk"},"content":"            int ownerId \u003d dog.getOwnerId();","lastModifiedDate":"2021-03-22"},{"lineNumber":234,"author":{"gitId":"kouyk"},"content":"            if (ownerId \u003c 1) {","lastModifiedDate":"2021-03-22"},{"lineNumber":235,"author":{"gitId":"kouyk"},"content":"                return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":236,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":237,"author":{"gitId":"kouyk"},"content":"            List\u003cOwner\u003e owners \u003d getIdOfType(entities, ownerId, Owner.class);","lastModifiedDate":"2021-03-23"},{"lineNumber":238,"author":{"gitId":"kouyk"},"content":"            if (owners.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-22"},{"lineNumber":239,"author":{"gitId":"kouyk"},"content":"                return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":240,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":241,"author":{"gitId":"kouyk"},"content":"            assert owners.size() \u003d\u003d 1 : \"There should only be exactly one matching owner\";","lastModifiedDate":"2021-03-22"},{"lineNumber":242,"author":{"gitId":"kouyk"},"content":"            Owner owner \u003d owners.get(0);","lastModifiedDate":"2021-03-22"},{"lineNumber":243,"author":{"gitId":"kouyk"},"content":"            return owner.getDogIdSet().contains(focusID);","lastModifiedDate":"2021-03-22"},{"lineNumber":244,"author":{"gitId":"kouyk"},"content":"        } else if (focusEntity instanceof Program) {","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"kouyk"},"content":"            Program program \u003d (Program) focusEntity;","lastModifiedDate":"2021-03-23"},{"lineNumber":246,"author":{"gitId":"kouyk"},"content":"            Set\u003cInteger\u003e dogIdSet \u003d program.getDogIdSet();","lastModifiedDate":"2021-03-23"},{"lineNumber":247,"author":{"gitId":"kouyk"},"content":"            if (dogIdSet.stream().anyMatch(id -\u003e id \u003c 1)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":248,"author":{"gitId":"kouyk"},"content":"                return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":249,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":250,"author":{"gitId":"kouyk"},"content":"            for (int dogId : dogIdSet) {","lastModifiedDate":"2021-03-23"},{"lineNumber":251,"author":{"gitId":"kouyk"},"content":"                List\u003cDog\u003e dogs \u003d getIdOfType(entities, dogId, Dog.class);","lastModifiedDate":"2021-03-23"},{"lineNumber":252,"author":{"gitId":"kouyk"},"content":"                if (dogs.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-23"},{"lineNumber":253,"author":{"gitId":"kouyk"},"content":"                    return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":254,"author":{"gitId":"kouyk"},"content":"                }","lastModifiedDate":"2021-03-23"},{"lineNumber":255,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":256,"author":{"gitId":"kouyk"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":257,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":258,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":259,"author":{"gitId":"kouyk"},"content":"        throw new AssertionError(\"Unknown entity type to verify!\");","lastModifiedDate":"2021-03-22"},{"lineNumber":260,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":261,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":262,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":263,"author":{"gitId":"kouyk"},"content":"     * Filters through an entity list to get entities of the {@code cls} with the given {@code id}.","lastModifiedDate":"2021-03-23"},{"lineNumber":264,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":265,"author":{"gitId":"kouyk"},"content":"    private static \u003cT extends Entity\u003e List\u003cT\u003e getIdOfType(List\u003cPair\u003cInteger, Entity\u003e\u003e entities, int id, Class\u003cT\u003e cls) {","lastModifiedDate":"2021-03-23"},{"lineNumber":266,"author":{"gitId":"kouyk"},"content":"        return entities.stream().filter(p -\u003e p.getKey() \u003d\u003d id).map(Pair::getValue)","lastModifiedDate":"2021-03-23"},{"lineNumber":267,"author":{"gitId":"kouyk"},"content":"                .filter(cls::isInstance).map(cls::cast).collect(toList());","lastModifiedDate":"2021-03-23"},{"lineNumber":268,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":269,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":270,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":271,"author":{"gitId":"kouyk"},"content":"     * Validate all links to other IDs from all entities.","lastModifiedDate":"2021-03-22"},{"lineNumber":272,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":273,"author":{"gitId":"kouyk"},"content":"    public boolean validateReferences() {","lastModifiedDate":"2021-03-22"},{"lineNumber":274,"author":{"gitId":"kouyk"},"content":"        return entitiesHaveValidReferences(internalList);","lastModifiedDate":"2021-03-22"},{"lineNumber":275,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":276,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":277,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":278,"author":{"gitId":"kouyk"},"content":"     * Returns the entity with the corresponding ID.","lastModifiedDate":"2021-03-21"},{"lineNumber":279,"author":{"gitId":"kouyk"},"content":"     * An entity with the ID must exist.","lastModifiedDate":"2021-03-21"},{"lineNumber":280,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":281,"author":{"gitId":"kouyk"},"content":"    public Entity get(int id) {","lastModifiedDate":"2021-03-21"},{"lineNumber":282,"author":{"gitId":"kouyk"},"content":"        int index \u003d getIndexOf(id);","lastModifiedDate":"2021-03-21"},{"lineNumber":283,"author":{"gitId":"kouyk"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-21"},{"lineNumber":284,"author":{"gitId":"kouyk"},"content":"            throw new EntityNotFoundException();","lastModifiedDate":"2021-03-21"},{"lineNumber":285,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":286,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":287,"author":{"gitId":"kouyk"},"content":"        return internalList.get(index).getValue();","lastModifiedDate":"2021-03-21"},{"lineNumber":288,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":289,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":293,"author":{"gitId":"kouyk"},"content":"    public ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":298,"author":{"gitId":"kouyk"},"content":"    public Iterator\u003cPair\u003cInteger, Entity\u003e\u003e iterator() {","lastModifiedDate":"2021-03-17"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":305,"author":{"gitId":"shaelynl"},"content":"                || (other instanceof UniqueEntityList // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":306,"author":{"gitId":"shaelynl"},"content":"                \u0026\u0026 internalList.equals(((UniqueEntityList) other).internalList));","lastModifiedDate":"2021-03-14"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":315,"author":{"gitId":"shaelynl"},"content":"     * Returns true if {@code entities} contains only unique entities.","lastModifiedDate":"2021-03-14"},{"lineNumber":316,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":317,"author":{"gitId":"kouyk"},"content":"    private boolean entitiesAreUnique(List\u003cEntity\u003e entities) {","lastModifiedDate":"2021-03-16"},{"lineNumber":318,"author":{"gitId":"shaelynl"},"content":"        for (int i \u003d 0; i \u003c entities.size() - 1; i++) {","lastModifiedDate":"2021-03-14"},{"lineNumber":319,"author":{"gitId":"shaelynl"},"content":"            for (int j \u003d i + 1; j \u003c entities.size(); j++) {","lastModifiedDate":"2021-03-14"},{"lineNumber":320,"author":{"gitId":"kouyk"},"content":"                if (entities.get(i).equals(entities.get(j))) {","lastModifiedDate":"2021-03-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shaelynl":11,"ZhangAnli":30,"branzuelajohn":5,"kouyk":207,"-":74}},{"path":"src/main/java/dog/pawbook/model/managedentity/ViewCommandComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"package dog.pawbook.model.managedentity;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"ZhangAnli"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"ZhangAnli"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"public class ViewCommandComparator implements Comparator\u003cPair\u003cInteger, Entity\u003e\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    private final Map\u003cClass\u003c? extends Entity\u003e, Integer\u003e classValueMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"     * Constructs a View Command Comparator.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"ZhangAnli"},"content":"     * @param targetEntityClass class of target entity.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"    public ViewCommandComparator(Class\u003c? extends Entity\u003e targetEntityClass) {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        classValueMap.put(targetEntityClass, 0);","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":"        if (targetEntityClass.equals(Dog.class)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"            classValueMap.put(Owner.class, 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"            classValueMap.put(Program.class, 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"        } else if (targetEntityClass.equals(Owner.class)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"            classValueMap.put(Dog.class, 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            classValueMap.put(Program.class, 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"            classValueMap.put(Dog.class, 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"            classValueMap.put(Owner.class, 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"ZhangAnli"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"ZhangAnli"},"content":"    public int compare(Pair\u003cInteger, Entity\u003e firstPair, Pair\u003cInteger, Entity\u003e secondPair) {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        Class\u003c? extends Entity\u003e firstEntityClass \u003d firstPair.getValue().getClass();","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        Class\u003c? extends Entity\u003e secondEntityClass \u003d secondPair.getValue().getClass();","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        assert classValueMap.containsKey(firstEntityClass);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        assert classValueMap.containsKey(secondEntityClass);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        int firstEntityValue \u003d classValueMap.get(firstEntityClass);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        int secondEntityValue \u003d classValueMap.get(secondEntityClass);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        return firstEntityValue - secondEntityValue;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"ZhangAnli"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"ZhangAnli":29,"kouyk":17}},{"path":"src/main/java/dog/pawbook/model/managedentity/dog/Breed.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.model.managedentity.dog;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":" * Represents a Dog\u0027s breed in the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBreed(String)}","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"public class Breed {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Breeds should only contain alphanumeric characters and spaces,\"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"            + \" and it should not be blank\";","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"    public final String value;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"     * Constructs an {@code Breed}.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"     * @param breed A valid breed.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    public Breed(String breed) {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"        requireNonNull(breed);","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        checkArgument(isValidBreed(breed), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"        value \u003d breed;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"     * Returns true if a given string is a valid breed.","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    public static boolean isValidBreed(String test) {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        return value;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"                || (other instanceof Breed // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"                \u0026\u0026 value.equals(((Breed) other).value)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"branzuelajohn":51,"ZhangAnli":1}},{"path":"src/main/java/dog/pawbook/model/managedentity/dog/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.model.managedentity.dog;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import java.time.Period;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":" * Represents a Dog\u0027s breed in the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"public class DateOfBirth {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    public static final String DATE_FORMAT \u003d \"d-M-yyyy\";","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date of Birth should be in the \" + DATE_FORMAT + \" format.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public final LocalDate date;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    public final String value;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"     * Construct an {@code DateOfBirth}.","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"     * @param value A valid date of birth (dob).","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    public DateOfBirth(String value) {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        requireNonNull(value);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        checkArgument(isValidDob(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        this.date \u003d LocalDate.parse(value, DATE_FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"     * Construct an {@code DateOfBirth} from a given {@code LocalDate}.","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    public DateOfBirth(LocalDate date) {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        this.value \u003d date.format(DATE_FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"    public static boolean isValidDob(String value) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"            LocalDate.parse(value, DATE_FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"            return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"        return date;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"     * Gets Age of Dog in years.","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"ZhangAnli"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"     * @return Age of dog in years.","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"    public int getAge() {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"        Period period \u003d Period.between(date, LocalDate.now());","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"        return period.getYears();","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"        return value;","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"                || (other instanceof DateOfBirth // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"                \u0026\u0026 value.equals(((DateOfBirth) other).value)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"branzuelajohn"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"branzuelajohn":64,"ZhangAnli":2,"kouyk":21}},{"path":"src/main/java/dog/pawbook/model/managedentity/dog/Dog.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.model.managedentity.dog;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.Vector;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":" * Represents a dog in the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"public class Dog extends Entity {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public static final String ENTITY_WORD \u003d \"dog\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    //Identity Fields","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    private final Breed breed;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    private final DateOfBirth dob;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    private final Sex sex;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"    // Data fields","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    private final Integer ownerID;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    public Dog(Name name, Breed breed, DateOfBirth dob, Sex sex, Integer ownerID, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"        super(name, tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        requireAllNonNull(name, breed, dob, sex, ownerID, tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"        this.breed \u003d breed;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        this.ownerID \u003d ownerID;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"        return name;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"    public Breed getBreed() {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"        return breed;","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"    public Sex getSex() {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"        return sex;","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"    public DateOfBirth getDob() {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"        return dob;","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"    public Integer getOwnerId() {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"        return ownerID;","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"     * Returns true if both owners have the same identity and data fields.","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"     * This defines a stronger notion of equality between two owners.","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"        if (!(other instanceof Dog)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"branzuelajohn"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"        Dog otherDog \u003d (Dog) other;","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"CharlesLee01"},"content":"        return super.equals(other)","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"branzuelajohn"},"content":"                \u0026\u0026 otherDog.getBreed().equals(getBreed())","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":"                \u0026\u0026 otherDog.getSex().equals(getSex())","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 otherDog.getDob().equals(getDob())","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 otherDog.getOwnerId().equals(getOwnerId());","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":"        return Objects.hash(name, breed, dob, sex, ownerID, tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"branzuelajohn"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"branzuelajohn"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"branzuelajohn"},"content":"                .append(\"; Breed: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":"                .append(getBreed())","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"branzuelajohn"},"content":"                .append(\"; Date Of Birth: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"branzuelajohn"},"content":"                .append(getDob())","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"branzuelajohn"},"content":"                .append(\"; Sex: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"branzuelajohn"},"content":"                .append(getSex())","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"branzuelajohn"},"content":"                .append(\"; OwnerID: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"branzuelajohn"},"content":"                .append(getOwnerId());","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"branzuelajohn"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"branzuelajohn"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"branzuelajohn"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"branzuelajohn"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"branzuelajohn"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"     * Returns an array of IDs that are closely related to the entity.","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"    public Collection\u003cInteger\u003e getRelatedEntityIds() {","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"        return Collections.singletonList(ownerID);","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"    public Collection\u003cString\u003e getOtherPropertiesAsString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"        Collection\u003cString\u003e properties \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"        properties.add(\"Breed: \" + breed.value);","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        properties.add(\"Date of Birth: \" + dob.value);","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"        properties.add(\"Sex: \" + sex.value);","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"        properties.add(\"Owner\u0027s ID: \" + ownerID);","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"        return properties;","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"CharlesLee01":1,"branzuelajohn":114,"ZhangAnli":1,"kouyk":23}},{"path":"src/main/java/dog/pawbook/model/managedentity/dog/Sex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.model.managedentity.dog;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"public class Sex {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"CharlesLee01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Sex should only be M/Male/male or F/Female/female\";","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"    public static final String VALIDATION_REGEX \u003d \"^male$|^female$|^Female$|^Male$|^M$|^F$\";","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    public final String value;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"     * Constructs an {@code Sex}.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"     * @param sex A valid sex.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    public Sex(String sex) {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        requireNonNull(sex);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"        checkArgument(isValidSex(sex), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        value \u003d sex;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"     * Returns true if a given string is a valid Sex.","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    public static boolean isValidSex(String test) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"        return value;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"                || (other instanceof Sex // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"                \u0026\u0026 value.equals(((Sex) other).value)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"CharlesLee01":1,"branzuelajohn":44,"kouyk":1}},{"path":"src/main/java/dog/pawbook/model/managedentity/exceptions/BrokenReferencesException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":" * Signals that the operation will results in broken mutual references among the stored entities. Every entities\u0027 stored","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":" * IDs of others has to be maintained properly.","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"public class BrokenReferencesException extends RuntimeException {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"    public BrokenReferencesException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"        super(\"Operation will results in broken references among entities.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"kouyk":11}},{"path":"src/main/java/dog/pawbook/model/managedentity/exceptions/DuplicateEntityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.exceptions;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":" * Signals that the operation will result in duplicate Entities.","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"public class DuplicateEntityException extends RuntimeException {","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"    public DuplicateEntityException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"        super(\"Operation would result in duplicate entities\");","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kouyk":5,"-":5}},{"path":"src/main/java/dog/pawbook/model/managedentity/exceptions/EntityNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.exceptions;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":" * Signals that the operation is unable to find the specified owner.","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"public class EntityNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wei-yutong":1,"kouyk":2,"-":3}},{"path":"src/main/java/dog/pawbook/model/managedentity/owner/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":" * Represents a Owner\u0027s address in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"branzuelajohn":1,"kouyk":2,"-":54}},{"path":"src/main/java/dog/pawbook/model/managedentity/owner/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":" * Represents a Owner\u0027s email in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"branzuelajohn":1,"kouyk":2,"-":64}},{"path":"src/main/java/dog/pawbook/model/managedentity/owner/Owner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import java.util.Vector;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":" * Represents a Owner in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"public class Owner extends Entity {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    public static final String ENTITY_WORD \u003d \"owner\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    private final Set\u003cInteger\u003e dogidSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    public Owner(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        super(name, tags);","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        requireAllNonNull(phone, email, address);","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    public Owner(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cInteger\u003e dogIDs) {","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        super(name, tags);","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        requireAllNonNull(phone, email, address, dogIDs);","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        this.dogidSet.addAll(dogIDs);","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"    public Set\u003cInteger\u003e getDogIdSet() {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"        return Collections.unmodifiableSet(dogidSet);","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"     * Returns true if both owners have the same identity and data fields.","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"     * This defines a stronger notion of equality between two owners.","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":"        if (!(other instanceof Owner)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"wei-yutong"},"content":"        Owner otherOwner \u003d (Owner) other;","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        return super.equals(other)","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"                \u0026\u0026 otherOwner.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":"                \u0026\u0026 otherOwner.getEmail().equals(getEmail())","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 otherOwner.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 otherOwner.getDogIdSet().equals(getDogIdSet());","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"    public Collection\u003cString\u003e getOtherPropertiesAsString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        Collection\u003cString\u003e properties \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"        properties.add(\"Phone: \" + phone.value);","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"        properties.add(\"Address: \" + address.value);","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"        properties.add(\"Email: \" + email.value);","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"        if (!dogidSet.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"            properties.add(dogidSet.stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"                    .map(String::valueOf)","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"                    .collect(Collectors.joining(\", \", \"ID of Dog(s) owned: \", \"\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"        return properties;","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"     * Returns an array of IDs that are closely related to the entity.","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"    public Collection\u003cInteger\u003e getRelatedEntityIds() {","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"        return new ArrayList\u003c\u003e(dogidSet);","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"branzuelajohn":6,"wei-yutong":7,"kouyk":53,"-":72}},{"path":"src/main/java/dog/pawbook/model/managedentity/owner/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":" * Represents a Owner\u0027s phone number in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"branzuelajohn":1,"kouyk":2,"-":50}},{"path":"src/main/java/dog/pawbook/model/managedentity/program/Program.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.model.managedentity.program;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import java.util.Vector;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":" * Represents a program in the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"public class Program extends Entity {","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    public static final String ENTITY_WORD \u003d \"program\";","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    // Data fields","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"    private final Set\u003cSession\u003e sessionSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    private final Set\u003cInteger\u003e dogidSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"    public Program(Name name, Set\u003cSession\u003e sessionSet, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"        super(name, tags);","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        requireNonNull(sessionSet);","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        this.sessionSet.addAll(sessionSet);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"     * Overloaded constructor.","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"    public Program(Name name, Set\u003cSession\u003e sessionSet, Set\u003cTag\u003e tags, Set\u003cInteger\u003e dogIDs) {","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"        super(name, tags);","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"        requireAllNonNull(name, tags);","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"        this.sessionSet.addAll(sessionSet);","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        this.dogidSet.addAll(dogIDs);","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"        return name;","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"    public Set\u003cInteger\u003e getDogIdSet() {","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"        return Collections.unmodifiableSet(dogidSet);","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"    public Set\u003cSession\u003e getSessions() {","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"        return Collections.unmodifiableSet(sessionSet);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"     * Returns true if both owners have the same identity and data fields.","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"     * This defines a stronger notion of equality between two owners.","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":"            return true;","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"        if (!(other instanceof Program)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"branzuelajohn"},"content":"            return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"branzuelajohn"},"content":"        Program otherProgram \u003d (Program) other;","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":"        return super.equals(other)","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"            \u0026\u0026 otherProgram.getSessions().equals(getSessions())","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"            \u0026\u0026 otherProgram.getDogIdSet().equals(getDogIdSet());","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":"        return Objects.hash(name, sessionSet, dogidSet, tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"branzuelajohn"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"branzuelajohn"},"content":"        builder.append(getName());","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"        Set\u003cSession\u003e dates \u003d getSessions();","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":"        if (!dates.isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"branzuelajohn"},"content":"            builder.append(\"; Sessions: \");","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"branzuelajohn"},"content":"            dates.forEach(builder::append);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"branzuelajohn"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"branzuelajohn"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"branzuelajohn"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"branzuelajohn"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"branzuelajohn"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"     * Returns an array of IDs that are closely related to the entity.","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"    public Collection\u003cInteger\u003e getRelatedEntityIds() {","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"        return new ArrayList\u003c\u003e(dogidSet);","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"    public Collection\u003cString\u003e getOtherPropertiesAsString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"        Collection\u003cString\u003e properties \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"        List\u003cSession\u003e upcomingSessions \u003d sessionSet.stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"                .filter(session -\u003e LocalDateTime.now().isBefore(session.dateTime)).collect(toList());","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"        if (upcomingSessions.size() \u003e 0) {","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"            properties.add(upcomingSessions.stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"                    .sorted(Comparator.comparing(session -\u003e session.dateTime))","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"                    .map(session -\u003e session.value)","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"                    .collect(Collectors.joining(\", \", \"Upcoming timeslot(s): \", \"\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"        if (!dogidSet.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"            properties.add(dogidSet.stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"                    .sorted()","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"                    .map(String::valueOf)","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":"                    .collect(Collectors.joining(\", \", \"Participating Dog ID(s): \", \"\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"        return properties;","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"branzuelajohn":105,"ZhangAnli":1,"kouyk":40}},{"path":"src/main/java/dog/pawbook/model/managedentity/program/Session.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.model.managedentity.program;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":" * Represents a Program\u0027s date and time in the database.","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"public class Session {","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    public static final String DATETIME_FORMAT \u003d \"d-M-yyyy HH:mm\";","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT);","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"The date and time of a Session should be in the \"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"            + DATETIME_FORMAT + \" format.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    public final LocalDateTime dateTime;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    public final String value;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * Construct a {@code Session}.","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"     * @param value A valid date and time.","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    public Session(String value) {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        requireNonNull(value);","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        checkArgument(isValidDateTime(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        this.dateTime \u003d LocalDateTime.parse(value, DATETIME_FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * Construct a {@code Session} from a given {@code LocalDateTime}.","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    public Session(LocalDateTime localDateTime) {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        requireNonNull(localDateTime);","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        this.dateTime \u003d localDateTime;","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        this.value \u003d localDateTime.format(DATETIME_FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"    public static boolean isValidDateTime(String value) {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            LocalDate.parse(value, DATETIME_FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"            return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"        return dateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"    public String toString() {","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"        return value;","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"            || (other instanceof Session // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"            \u0026\u0026 value.equals(((Session) other).value)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"branzuelajohn":51,"ZhangAnli":1,"kouyk":27}},{"path":"src/main/java/dog/pawbook/model/managedentity/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":" * Represents a Tag in the database.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"branzuelajohn":1,"kouyk":2,"-":51}},{"path":"src/main/java/dog/pawbook/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":" * Contains utility methods for populating {@code Database} with sample data.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    public static Owner[] getSampleOwners() {","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        return new Owner[] {","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"            new Owner(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"            new Owner(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"            new Owner(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"            new Owner(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            new Owner(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"            new Owner(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"ZhangAnli"},"content":"    public static ReadOnlyDatabase getSampleDatabase() {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"ZhangAnli"},"content":"        Database sampleAb \u003d new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        for (Owner sampleOwner : getSampleOwners()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"            sampleAb.addEntity(sampleOwner);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"    /**\\","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"     * Returns a ID set containing the list of integers given.","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    public static Set\u003cInteger\u003e getIdSet(Integer... ids) {","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        return Arrays.stream(ids).collect(Collectors.toSet());","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"shaelynl":1,"ZhangAnli":4,"branzuelajohn":1,"wei-yutong":9,"kouyk":14,"-":38}},{"path":"src/main/java/dog/pawbook/storage/DatabaseStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":" * Represents a storage for {@link Database}.","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"public interface DatabaseStorage {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"     * Returns Pawbook data as a {@link ReadOnlyDatabase}.","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"     * @see #getDatabaseFilePath()","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"ZhangAnli"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"     * Saves the given {@link ReadOnlyDatabase} to the storage.","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"     * @param database cannot be null.","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"ZhangAnli"},"content":"    void saveDatabase(ReadOnlyDatabase database) throws IOException;","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"ZhangAnli"},"content":"     * @see #saveDatabase(ReadOnlyDatabase)","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"ZhangAnli"},"content":"    void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException;","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ZhangAnli":14,"kouyk":2,"-":30}},{"path":"src/main/java/dog/pawbook/storage/JsonAdaptedDog.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.List;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonTypeName;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Breed;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.DateOfBirth;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Sex;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"@JsonTypeName(Dog.ENTITY_WORD)","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"public class JsonAdaptedDog extends JsonAdaptedEntity {","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    private final String breed;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    private final String dob;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    private final String sex;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"    private final int ownerId;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * Constructs a {@code JsonAdaptedEntity} with the given owner details.","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    public JsonAdaptedDog(@JsonProperty(\"id\") Integer id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            @JsonProperty(\"breed\") String breed, @JsonProperty(\"dob\") String dob,","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"            @JsonProperty(\"sex\") String sex, @JsonProperty(\"ownerId\") int ownerId,","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        super(id, name, tagged);","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        this.breed \u003d breed;","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"        this.ownerId \u003d ownerId;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     * Converts a given {@code Entity} into this class for Jackson use.","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    public JsonAdaptedDog(Pair\u003cInteger, Dog\u003e idDogPair) {","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        super(idDogPair);","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        Dog source \u003d idDogPair.getValue();","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        breed \u003d source.getBreed().value;","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        dob \u003d source.getDob().value;","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        sex \u003d source.getSex().value;","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"        ownerId \u003d source.getOwnerId();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"     * Converts this Jackson-friendly adapted entity object into the model\u0027s {@code Entity} object.","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted entity.","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"    public Pair\u003cInteger, Entity\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        CommonAttributes commonAttributes \u003d checkAndGetCommonAttributes();","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        final int modelID \u003d commonAttributes.id;","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        final Name modelName \u003d commonAttributes.name;","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        final Set\u003cTag\u003e modelTags \u003d commonAttributes.tags;","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        if (breed \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Breed.class.getSimpleName()));","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        if (!Breed.isValidBreed(breed)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(Breed.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        final Breed modelBreed \u003d new Breed(breed);","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        if (dob \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"                    DateOfBirth.class.getSimpleName()));","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        if (!DateOfBirth.isValidDob(dob)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"        final DateOfBirth modelDob \u003d new DateOfBirth(dob);","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"        if (sex \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Sex.class.getSimpleName()));","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"        if (!Sex.isValidSex(sex)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"        final Sex modelSex \u003d new Sex(sex);","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"        if (ownerId \u003c 1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(\"Owner\u0027s ID must be a positive integer!\");","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"        Dog model \u003d new Dog(modelName, modelBreed, modelDob, modelSex, ownerId, modelTags);","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"        return new Pair\u003c\u003e(modelID, model);","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"branzuelajohn":6,"kouyk":93}},{"path":"src/main/java/dog/pawbook/storage/JsonAdaptedEntity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonSubTypes;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonTypeInfo;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":" * Jackson-friendly version of {@link Entity}.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"@JsonTypeInfo(","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        use \u003d JsonTypeInfo.Id.NAME,","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        property \u003d \"type\")","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"@JsonSubTypes({","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    @JsonSubTypes.Type(value \u003d JsonAdaptedOwner.class, name \u003d Owner.ENTITY_WORD),","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    @JsonSubTypes.Type(value \u003d JsonAdaptedDog.class, name \u003d Dog.ENTITY_WORD),","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    @JsonSubTypes.Type(value \u003d JsonAdaptedProgram.class, name \u003d Program.ENTITY_WORD)","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"})","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"abstract class JsonAdaptedEntity {","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Entities\u0027 %s field is missing!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    protected final int id;","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    protected final String name;","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    protected final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     * Constructs a {@code JsonAdaptedEntity} with the given owner details.","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    public JsonAdaptedEntity(@JsonProperty(\"id\") Integer id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     * Converts a given {@code Entity} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"    public JsonAdaptedEntity(Pair\u003cInteger, ? extends Entity\u003e idEntityPair) {","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        this.id \u003d idEntityPair.getKey();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        Entity source \u003d idEntityPair.getValue();","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"shaelynl"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"     * Converts this Jackson-friendly adapted entity object into the model\u0027s {@code Entity} object.","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"shaelynl"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted entity.","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"shaelynl"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"    public abstract Pair\u003cInteger, Entity\u003e toModelType() throws IllegalValueException;","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"     * A small data structure used to return multiple values to the derived classes","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"     * using the {@code checkAndGetCommonAttributes} method.","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"    protected static class CommonAttributes {","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"        public final int id;","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"        public final Name name;","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"        public final Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"        public CommonAttributes(int id, Name name, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"            this.id \u003d id;","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"            this.tags \u003d tags;","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"     * Helper function to avoid boilerplate code within the {@code toModelType} method","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"    protected CommonAttributes checkAndGetCommonAttributes() throws IllegalValueException {","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        if (id \u003c 1) {","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(\"Invalid ID given!\");","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"        final List\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"            tags.add(tag.toModelType());","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"        return new CommonAttributes(id, modelName, modelTags);","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"shaelynl"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"shaelynl":10,"kouyk":104}},{"path":"src/main/java/dog/pawbook/storage/JsonAdaptedOwner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.List;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonTypeName;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"@JsonTypeName(Owner.ENTITY_WORD)","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"public class JsonAdaptedOwner extends JsonAdaptedEntity {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    private final String phone;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    private final String email;","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    private final String address;","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    private final List\u003cInteger\u003e dogs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     * Constructs a {@code JsonAdaptedEntity} with the given owner details.","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public JsonAdaptedOwner(@JsonProperty(\"id\") Integer id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            @JsonProperty(\"address\") String address, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"            @JsonProperty(\"dogs\") List\u003cInteger\u003e dogs) {","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        super(id, name, tagged);","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        if (dogs !\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            this.dogs.addAll(dogs);","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"     * Converts a given {@code Entity} into this class for Jackson use.","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"    public JsonAdaptedOwner(Pair\u003cInteger, Owner\u003e idOwnerPair) {","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        super(idOwnerPair);","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        Owner source \u003d idOwnerPair.getValue();","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        dogs.addAll(source.getDogIdSet());","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"     * Converts this Jackson-friendly adapted owner object into the model\u0027s {@code Owner} object.","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted entity.","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"    public Pair\u003cInteger, Entity\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"        CommonAttributes commonAttributes \u003d checkAndGetCommonAttributes();","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        final int modelID \u003d commonAttributes.id;","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"        final Name modelName \u003d commonAttributes.name;","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        final Set\u003cTag\u003e modelTags \u003d commonAttributes.tags;","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        Set\u003cInteger\u003e modelDogIdSet \u003d new HashSet\u003c\u003e(dogs);","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"        Owner model \u003d new Owner(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelDogIdSet);","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"        return new Pair\u003c\u003e(modelID, model);","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"kouyk":100}},{"path":"src/main/java/dog/pawbook/storage/JsonAdaptedProgram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"import com.fasterxml.jackson.annotation.JsonTypeName;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Session;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"@JsonTypeName(Program.ENTITY_WORD)","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"public class JsonAdaptedProgram extends JsonAdaptedEntity {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    private final List\u003cJsonAdaptedSession\u003e sessions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    private final List\u003cInteger\u003e enrolledDogs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"     * Constructs a {@code JsonAdaptedEntity} with the given program details.","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    public JsonAdaptedProgram(@JsonProperty(\"id\") Integer id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"            @JsonProperty(\"sessions\") List\u003cJsonAdaptedSession\u003e sessions,","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"            @JsonProperty(\"enrolledDogs\") List\u003cInteger\u003e enrolledDogs) {","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"        super(id, name, tagged);","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"        if (enrolledDogs !\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"            this.enrolledDogs.addAll(enrolledDogs);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        if (sessions !\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"            this.sessions.addAll(sessions);","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"branzuelajohn"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"branzuelajohn"},"content":"     * Converts a given {@code Entity} into this class for Jackson use.","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"branzuelajohn"},"content":"    public JsonAdaptedProgram(Pair\u003cInteger, Program\u003e idProgramPair) {","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"        super(idProgramPair);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"        Program source \u003d idProgramPair.getValue();","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        sessions.addAll(source.getSessions().stream()","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"                .map(JsonAdaptedSession::new)","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        enrolledDogs.addAll(source.getDogIdSet());","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"     * Converts this Jackson-friendly adapted program object into the model\u0027s {@code Program} object.","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted entity.","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"    public Pair\u003cInteger, Entity\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"        CommonAttributes commonAttributes \u003d checkAndGetCommonAttributes();","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"        final int modelID \u003d commonAttributes.id;","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"        final Name modelName \u003d commonAttributes.name;","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"        final Set\u003cTag\u003e modelTags \u003d commonAttributes.tags;","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"        final List\u003cSession\u003e sessionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        for (JsonAdaptedSession s : sessions) {","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"            sessionList.add(s.toModelType());","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"        final Set\u003cSession\u003e modelSessions \u003d new HashSet\u003c\u003e(sessionList);","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        final Set\u003cInteger\u003e modelDogs \u003d new HashSet\u003c\u003e(enrolledDogs);","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        Program model \u003d new Program(modelName, modelSessions, modelTags, modelDogs);","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"        return new Pair\u003c\u003e(modelID, model);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"branzuelajohn":59,"kouyk":18}},{"path":"src/main/java/dog/pawbook/storage/JsonAdaptedSession.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Session;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" * Jackson-friendly version of {@link Session}.","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"class JsonAdaptedSession {","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    private final String session;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * Constructs a {@code JsonAdaptedSession} with the given {@code session}.","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public JsonAdaptedSession(String session) {","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        this.session \u003d session;","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * Converts a given {@code Session} into this class for Jackson use.","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    public JsonAdaptedSession(Session source) {","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        session \u003d source.value;","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    @JsonValue","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public String getSession() {","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        return session;","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * Converts this Jackson-friendly adapted session object into the model\u0027s {@code Session} object.","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted session.","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"    public Session toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        if (!Session.isValidDateTime(session)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(Session.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        return new Session(session);","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"kouyk":48}},{"path":"src/main/java/dog/pawbook/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kouyk":3,"-":45}},{"path":"src/main/java/dog/pawbook/storage/JsonDatabaseStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.FileUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.JsonUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":" * A class to access Database data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"public class JsonDatabaseStorage implements DatabaseStorage {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDatabaseStorage.class);","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"    public JsonDatabaseStorage(Path filePath) {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"        return readDatabase(filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"ZhangAnli"},"content":"     * Similar to {@link #readDatabase()}.","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"ZhangAnli"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"ZhangAnli"},"content":"        Optional\u003cJsonSerializableDatabase\u003e jsonDatabase \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"ZhangAnli"},"content":"                filePath, JsonSerializableDatabase.class);","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"ZhangAnli"},"content":"        if (!jsonDatabase.isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ZhangAnli"},"content":"            return Optional.of(jsonDatabase.get().toModelType());","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"    public void saveDatabase(ReadOnlyDatabase database) throws IOException {","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"        saveDatabase(database, filePath);","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"ZhangAnli"},"content":"     * Similar to {@link #saveDatabase(ReadOnlyDatabase)}.","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"ZhangAnli"},"content":"    public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"ZhangAnli"},"content":"        requireNonNull(database);","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"ZhangAnli"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDatabase(database), filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ZhangAnli":17,"branzuelajohn":3,"kouyk":6,"-":54}},{"path":"src/main/java/dog/pawbook/storage/JsonSerializableDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"@JsonRootName(value \u003d \"pawbook\")","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"ZhangAnli"},"content":"class JsonSerializableDatabase {","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_DUPLICATE_OWNER \u003d \"Entities list contains duplicate entit(y|ies).\";","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    public static final String MESSAGE_INVALID_REFERENCE_IDS \u003d \"Entities refer to broken IDs\";","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    private final List\u003cJsonAdaptedEntity\u003e entities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given owners.","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"    public JsonSerializableDatabase(@JsonProperty(\"entities\") List\u003cJsonAdaptedEntity\u003e entities) {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        this.entities.addAll(entities);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"ZhangAnli"},"content":"    public JsonSerializableDatabase(ReadOnlyDatabase source) {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        entities.addAll(source.getEntityList().stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"                            .sorted(Comparator.comparing(Pair::getKey))","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"                            .map(JsonSerializableDatabase::adaptEntity)","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"                            .collect(Collectors.toList()));","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"     * Helper function to map each entity to corresponding JSON Adaptation.","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    private static JsonAdaptedEntity adaptEntity(Pair\u003cInteger, Entity\u003e idEntityPair) {","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        if (idEntityPair.getValue() instanceof Owner) {","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"            Owner owner \u003d (Owner) idEntityPair.getValue();","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            return new JsonAdaptedOwner(new Pair\u003c\u003e(idEntityPair.getKey(), owner));","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        } else if (idEntityPair.getValue() instanceof Dog) {","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"            Dog dog \u003d (Dog) idEntityPair.getValue();","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            return new JsonAdaptedDog(new Pair\u003c\u003e(idEntityPair.getKey(), dog));","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"        } else if (idEntityPair.getValue() instanceof Program) {","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"            Program program \u003d (Program) idEntityPair.getValue();","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"            return new JsonAdaptedProgram(new Pair\u003c\u003e(idEntityPair.getKey(), program));","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"        throw new AssertionError(\"Unknown derivative of Entity class!\");","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"     * Converts this database into the model\u0027s {@code Database} object.","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"ZhangAnli"},"content":"    public Database toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"ZhangAnli"},"content":"        Database addressBook \u003d new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        for (JsonAdaptedEntity jsonAdaptedEntity : entities) {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"            Pair\u003cInteger, ? extends Entity\u003e idEntityPair \u003d jsonAdaptedEntity.toModelType();","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"            if (addressBook.hasEntity(idEntityPair.getValue())) {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"wei-yutong"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_OWNER);","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"            addressBook.addEntityWithId(idEntityPair.getValue(), idEntityPair.getKey());","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"        if (!addressBook.validateReferences()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"            throw new IllegalValueException(MESSAGE_INVALID_REFERENCE_IDS);","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ZhangAnli":8,"branzuelajohn":5,"wei-yutong":2,"kouyk":39,"-":38}},{"path":"src/main/java/dog/pawbook/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.JsonUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kouyk":5,"-":42}},{"path":"src/main/java/dog/pawbook/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"public interface Storage extends DatabaseStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    void saveDatabase(ReadOnlyDatabase database) throws IOException;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ZhangAnli":4,"branzuelajohn":1,"kouyk":4,"-":23}},{"path":"src/main/java/dog/pawbook/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":" * Manages storage of Database data in local storage.","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"    private DatabaseStorage databaseStorage;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"     * Creates a {@code StorageManager} with the given {@code DatabaseStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"    public StorageManager(DatabaseStorage databaseStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"ZhangAnli"},"content":"        this.databaseStorage \u003d databaseStorage;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Database methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"ZhangAnli"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"ZhangAnli"},"content":"        return databaseStorage.getDatabaseFilePath();","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"ZhangAnli"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"ZhangAnli"},"content":"        return readDatabase(databaseStorage.getDatabaseFilePath());","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"ZhangAnli"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"ZhangAnli"},"content":"        return databaseStorage.readDatabase(filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"    public void saveDatabase(ReadOnlyDatabase database) throws IOException {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"        saveDatabase(database, databaseStorage.getDatabaseFilePath());","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"ZhangAnli"},"content":"    public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"ZhangAnli"},"content":"        databaseStorage.saveDatabase(database, filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhangAnli":13,"branzuelajohn":4,"kouyk":5,"-":57}},{"path":"src/main/java/dog/pawbook/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":" * Represents a storage for {@link dog.pawbook.model.UserPrefs}.","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     * Saves the given {@link dog.pawbook.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kouyk":6,"-":30}},{"path":"src/main/java/dog/pawbook/ui/AutoCompleteTextField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import static dog.pawbook.ui.CommandBox.ERROR_STYLE_CLASS;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"import java.util.SortedSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"import javafx.geometry.Side;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.control.ContextMenu;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.control.CustomMenuItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"//@@author uberSaiyan-reused","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"//StackOverflow answer on writing an autocomplete text field from","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"//https://stackoverflow.com/questions/36861056/javafx-textfield-auto-suggestions","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Represents a JavaFX TextField with auto-complete drop down menu built-in.","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AutoCompleteTextField extends TextField {","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final SortedSet\u003cString\u003e entries;","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ContextMenu entriesPopup;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructor for AutoCompleteTextField","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AutoCompleteTextField() {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.entries \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.entriesPopup \u003d new ContextMenu();","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setListener();","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private void setListener() {","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        textProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            setStyleToDefault();","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            String enteredText \u003d getText();","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            // hide suggestions if no input","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            if (enteredText \u003d\u003d null || enteredText.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                entriesPopup.hide();","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                // filter","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                List\u003cString\u003e filteredEntries \u003d entries.stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    .filter(e -\u003e e.toLowerCase().contains(enteredText.toLowerCase()))","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    .sorted((e1, e2) -\u003e compareEntries(e1, e2, enteredText))","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                if (!filteredEntries.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    populatePopup(filteredEntries, enteredText);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    if (!entriesPopup.isShowing()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                        entriesPopup.show(AutoCompleteTextField.this, Side.BOTTOM, 0, 0);","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    entriesPopup.hide();","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        focusedProperty().addListener(((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            entriesPopup.hide();","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }));","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Populates drop down menu with results from {@code searchResults}.","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param searchResults A list of strings that match {@code searchWord}.","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @param searchWord The word being matched against.","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void populatePopup(List\u003cString\u003e searchResults, String searchWord) {","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cCustomMenuItem\u003e menuItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        int maxEntries \u003d 5;","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        int count \u003d Math.min(searchResults.size(), maxEntries);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            final String result \u003d searchResults.get(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            Label entryLabel \u003d new Label();","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            entryLabel.setGraphic(buildTextFlow(result, searchWord));","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            entryLabel.setPrefHeight(10);","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            CustomMenuItem item \u003d new CustomMenuItem(entryLabel, true);","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            menuItems.add(item);","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            item.setOnAction(actionEvent -\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                setText(result);","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                positionCaret(result.length());","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                entriesPopup.hide();","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        entriesPopup.getItems().clear();","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        entriesPopup.getItems().addAll(menuItems);","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public SortedSet\u003cString\u003e getEntries() {","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return entries;","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a {@code TextFlow} that highlights the filtered word in a matching word.","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param text A word containing {@code filter}.","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param filter A word to highlight.","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return A highlighted TextFlow.","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private static TextFlow buildTextFlow(String text, String filter) {","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        int filterIndex \u003d text.toLowerCase().indexOf(filter.toLowerCase());","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Text textBefore \u003d new Text(text.substring(0, filterIndex));","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Text textAfter \u003d new Text(text.substring(filterIndex + filter.length()));","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Text textFilter \u003d new Text(text.substring(filterIndex, filterIndex + filter.length()));","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        textFilter.setFill(Color.AQUAMARINE);","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        textFilter.setFont(Font.font(\"Helvetica\", FontWeight.BOLD, 12));","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new TextFlow(textBefore, textFilter, textAfter);","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        this.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private int compareEntries(String firstMatch, String secondMatch, String text) {","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        int firstIndex \u003d firstMatch.indexOf(text);","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        int secondIndex \u003d secondMatch.indexOf(text);","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return firstIndex - secondIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"branzuelajohn":21,"-":117}},{"path":"src/main/java/dog/pawbook/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.CommandResult;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    private AutoCompleteTextField commandTextField;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"        commandTextField.getEntries().addAll(CommandSuggestions.getSuggestions());","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"         * @see dog.pawbook.logic.Logic#execute(String)","lastModifiedDate":"2021-03-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"branzuelajohn":2,"kouyk":5,"-":78}},{"path":"src/main/java/dog/pawbook/ui/CommandSuggestions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":" * A class containing command keywords to be matched with for autocompletion.","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"public class CommandSuggestions {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"    private static List\u003cString\u003e suggestions \u003d Arrays.asList(","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"        \"add dog\", \"add owner\", \"add program\",","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"        \"delete dog\", \"delete owner\", \"delete program\",","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"        \"edit dog\", \"edit owner\", \"edit program\", \"enrol\", \"drop\", \"find\", \"view\", \"schedule\",","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"        \"list\", \"list dog\", \"list owner\", \"list program\", \"exit\", \"help\"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    );","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"    public static List\u003cString\u003e getSuggestions() {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"        return suggestions;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    public static void addSuggestion(String suggestion) {","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"        suggestions.add(suggestion);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"branzuelajohn":25}},{"path":"src/main/java/dog/pawbook/ui/EntityCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":" * An UI component that displays information of a {@code Owner}.","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"public class EntityCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    private static final String FXML \u003d \"EntityListCard.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    public final Entity entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    private VBox contentPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"     * Creates a {@code EntityCard} with the given {@code Entity} and index to display.","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    public EntityCard(Entity entity, int displayedId) {","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        this.entity \u003d entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        id.setText(displayedId + \": \");","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        name.setText(entity.getName().fullName);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        // todo: extract a method for this and use stream like tags","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        Collection\u003cString\u003e properties \u003d entity.getOtherPropertiesAsString();","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"        for (String property : properties) {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            Label propertyLabel \u003d new Label(property);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"            propertyLabel.getStyleClass().add(\"cell_small_label\");","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"            contentPane.getChildren().add(propertyLabel);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        entity.getTags().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        if (!(other instanceof EntityCard)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        EntityCard card \u003d (EntityCard) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 entity.equals(card.entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"branzuelajohn":1,"wei-yutong":1,"kouyk":26,"-":53}},{"path":"src/main/java/dog/pawbook/ui/EntityListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":" * Panel containing the list of owners.","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class EntityListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    private static final String FXML \u003d \"EntityListPanel.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    private ListView\u003cPair\u003cInteger, Entity\u003e\u003e entityListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * Creates a {@code OwnerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    public EntityListPanel(ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e entityList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        entityListView.setItems(entityList);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"        entityListView.setCellFactory(listView -\u003e new EntityListViewCell());","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Entity} using a {@code EntityCard}.","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    class EntityListViewCell extends ListCell\u003cPair\u003cInteger, Entity\u003e\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        protected void updateItem(Pair\u003cInteger, Entity\u003e idEntityPair, boolean empty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            super.updateItem(idEntityPair, empty);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"            if (empty || idEntityPair \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"                setGraphic(new EntityCard(idEntityPair.getValue(), idEntityPair.getKey()).getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wei-yutong":2,"kouyk":15,"-":29}},{"path":"src/main/java/dog/pawbook/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"    public static final String USERGUIDE_URL \u003d \"https://tinyurl.com/pawbookUG\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide using this url: \" + USERGUIDE_URL;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"    private TableView tableView;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"        if (!Platform.isFxApplicationThread()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"            Platform.runLater(() -\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"                getRoot().show();","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"                getRoot().centerOnScreen();","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"            });","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"        if (!Platform.isFxApplicationThread()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"            Platform.runLater(() -\u003e getRoot().hide());","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"branzuelajohn"},"content":"        if (!Platform.isFxApplicationThread()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"branzuelajohn"},"content":"            Platform.runLater(() -\u003e getRoot().requestFocus());","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"branzuelajohn"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"branzuelajohn":19,"kouyk":2,"-":101}},{"path":"src/main/java/dog/pawbook/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.Logic;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.CommandResult;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    private EntityListPanel entityListPanel;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"    private StackPane ownerListPanelPlaceholder;","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"        entityListPanel \u003d new EntityListPanel(logic.getFilteredEntityList());","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"        ownerListPanelPlaceholder.getChildren().add(entityListPanel.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"ZhangAnli"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getDatabaseFilePath());","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"kouyk"},"content":"    public EntityListPanel getOwnerListPanel() {","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"kouyk"},"content":"        return entityListPanel;","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"kouyk"},"content":"     * @see dog.pawbook.logic.Logic#execute(String)","lastModifiedDate":"2021-03-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ZhangAnli":1,"wei-yutong":1,"kouyk":13,"-":181}},{"path":"src/main/java/dog/pawbook/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kouyk":1,"-":27}},{"path":"src/main/java/dog/pawbook/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":1,"-":27}},{"path":"src/main/java/dog/pawbook/ui/UG.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"branzuelajohn"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"branzuelajohn"},"content":" * The Data model for the user guide shown in the help window","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"public class UG {","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":"    private String action \u003d \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"branzuelajohn"},"content":"    private String format \u003d \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"    public UG() {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"        this(\"\", \"\");","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"branzuelajohn"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"     * @param action description of the action","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"branzuelajohn"},"content":"     * @param format description of the format","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"branzuelajohn"},"content":"    public UG(String action, String format) {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"branzuelajohn"},"content":"        setAction(action);","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"branzuelajohn"},"content":"        setFormat(format);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"    public String getAction() {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"branzuelajohn"},"content":"        return action;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"    public void setAction(String action) {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"    public String getFormat() {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"        return format;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"    public void setFormat(String format) {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"        this.format \u003d format;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"branzuelajohn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"branzuelajohn"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"branzuelajohn":39}},{"path":"src/main/java/dog/pawbook/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kouyk":1,"-":12}},{"path":"src/main/java/dog/pawbook/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.MainApp;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.StringUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.Logic;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/pawbook.png\";","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ZhangAnli":1,"kouyk":5,"-":83}},{"path":"src/main/java/dog/pawbook/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.MainApp;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kouyk":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import dog.pawbook.ui.AutoCompleteTextField?\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"branzuelajohn"},"content":"  \u003cAutoCompleteTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"branzuelajohn":2,"kouyk":1,"-":4}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#9cdacf, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"    background-color: #9cdacf; /* Used in the default.html file */","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    -fx-text-fill: #1a3350;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"    -fx-base: #9cdacf;","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"    -fx-control-inner-background: #9cdacf;","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #9cdacf;","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"    -fx-table-cell-border-color: #29878a;","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"    -fx-table-header-border-color: #29878a;","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #29878a;","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #29878a;","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"shaelynl"},"content":"            #29878a","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"shaelynl"},"content":"            #29878a","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"shaelynl"},"content":"            #29878a;","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #29878a;","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#9cdacf, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"shaelynl"},"content":"    -fx-border-color: #29878a #29878a #29878a #29878a;","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#29878a, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#29878a, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #29878a;","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #3cc5c9;","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #43b6be;","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #29878a;","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"shaelynl"},"content":"    -fx-border-color: #29878a;","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"shaelynl"},"content":"    -fx-font-family: \"Segoe UI Black\";","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"shaelynl"},"content":"    -fx-text-fill: #29878a;","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"shaelynl"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"shaelynl"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"shaelynl"},"content":"    -fx-text-fill: #29878a;","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"shaelynl"},"content":"     -fx-background-color: derive(#00b8a9, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"shaelynl"},"content":"     -fx-background-color: derive(#29878a, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"shaelynl"},"content":"     -fx-border-color: derive(#9cdacf, 10%);","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#f1a60f, 30%);","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"shaelynl"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#f1a60f, 30%);","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"shaelynl"},"content":"    -fx-border-color: derive(#f1a60f, 25%);","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#f1a60f, 30%);","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"shaelynl"},"content":"    -fx-border-color: derive(#f1a60f, 30%);","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#f1a60f, 30%);","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#f1a60f, 50%);","lastModifiedDate":"2021-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#1a3350, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #1a3350;","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #29878a;","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #29878a;","lastModifiedDate":"2021-03-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #29878a;","lastModifiedDate":"2021-03-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#29878a, 25%);","lastModifiedDate":"2021-03-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#9cdacf, 20%);","lastModifiedDate":"2021-03-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: derive(#29878a, 50%);","lastModifiedDate":"2021-03-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #9cdacf #9cdacf #9cdacf #9cdacf;","lastModifiedDate":"2021-03-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"shaelynl"},"content":"    -fx-border-color: #00b8a9 #00b8a9 #00b8a9 #00b8a9;","lastModifiedDate":"2021-03-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"shaelynl"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"wei-yutong"},"content":"#filterField, #ownerListPanel, #ownerWebpage {","lastModifiedDate":"2021-03-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #00b8a9, #00b8a9, #00b8a9, #00b8a9;","lastModifiedDate":"2021-03-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"shaelynl"},"content":"    -fx-background-color: #29878a;","lastModifiedDate":"2021-03-24"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"shaelynl":52,"wei-yutong":1,"-":300}},{"path":"src/main/resources/view/EntityListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    \u003cVBox fx:id\u003d\"contentPane\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":9,"-":27}},{"path":"src/main/resources/view/EntityListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"  \u003cListView fx:id\u003d\"entityListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":4,"-":3}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"\u003c?import dog.pawbook.ui.UG?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.collections.FXCollections?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.control.cell.PropertyValueFactory?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":16,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"branzuelajohn"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"HelpWindow\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":26,"author":{"gitId":"branzuelajohn"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"branzuelajohn"},"content":"            \u003cGridPane prefHeight\u003d\"380\" prefWidth\u003d\"590.0\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"branzuelajohn"},"content":"                \u003cHBox alignment\u003d\"BASELINE_RIGHT\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"branzuelajohn"},"content":"                    \u003copaqueInsets\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"branzuelajohn"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"8.0\" right\u003d\"12.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"branzuelajohn"},"content":"                    \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"branzuelajohn"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"branzuelajohn"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"8.0\" right\u003d\"12.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"branzuelajohn"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"branzuelajohn"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" ellipsisString\u003d\"\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" prefHeight\u003d\"31.0\" prefWidth\u003d\"120.0\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"                     \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"7.0\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"branzuelajohn"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":51,"author":{"gitId":"branzuelajohn"},"content":"                    \u003cGridPane.margin\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"branzuelajohn"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"branzuelajohn"},"content":"                    \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":55,"author":{"gitId":"branzuelajohn"},"content":"                \u003cLabel alignment\u003d\"BASELINE_CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"995.0\" text\u003d\"Command Summary\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"branzuelajohn"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"branzuelajohn"},"content":"                        \u003cFont size\u003d\"27.0\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"branzuelajohn"},"content":"                    \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"branzuelajohn"},"content":"                \u003cTableView fx:id\u003d\"tableView\" prefHeight\u003d\"320.0\" prefWidth\u003d\"590.0\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"branzuelajohn"},"content":"                    \u003ccolumns\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"branzuelajohn"},"content":"                        \u003cTableColumn prefWidth\u003d\"80.0\" text\u003d\"Action\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"branzuelajohn"},"content":"                            \u003ccellValueFactory\u003e\u003cPropertyValueFactory property\u003d\"action\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"branzuelajohn"},"content":"                            \u003c/cellValueFactory\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"branzuelajohn"},"content":"                        \u003c/TableColumn\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"branzuelajohn"},"content":"                        \u003cTableColumn prefWidth\u003d\"495.0\" text\u003d\"Format\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"branzuelajohn"},"content":"                            \u003ccellValueFactory\u003e\u003cPropertyValueFactory property\u003d\"format\"  /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"branzuelajohn"},"content":"                            \u003c/cellValueFactory\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"branzuelajohn"},"content":"                        \u003c/TableColumn\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"                    \u003c/columns\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"branzuelajohn"},"content":"                    \u003citems\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"branzuelajohn"},"content":"                        \u003cFXCollections fx:factory\u003d\"observableArrayList\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Help\" format\u003d\"help\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Exit\" format\u003d\"exit\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Add Owner\" format\u003d\"add owner n/OWNERNAME p/PHONE e/EMAIL a/ADDRESS [t/TAG].../\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Add Dog\" format\u003d\"add dog n/DOGNAME b/BREED d/DATEOFBIRTH s/SEX o/OWNERID [t/TAG]…\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Add Program\" format\u003d\"add program n/NAME [s/DATEOFSESSION]... [t/TAG]...\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Edit\" format\u003d\"edit owner n/OWNERNAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Edit Dog\" format\u003d\"edit dog n/DOGNAME b/BREED d/DATEOFBIRTH s/SEX o/OWNERID [t/TAG]...\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Edit Program\" format\u003d\"edit program n/NAME [s/DATEOFSESSION]... [t/TAG]...\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Enrol\" format\u003d\"d/DOGID p/PROGRAMID\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Drop\" format\u003d\"drop d/DOGID p/PROGRAMID\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"Find\" format\u003d\"find KEYWORD [MORE_KEYWORDS]…\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"List\" format\u003d\"list\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"branzuelajohn"},"content":"                            \u003cUG action\u003d\"View\" format\u003d\"view IDNUMBER\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"branzuelajohn"},"content":"                        \u003c/FXCollections\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"branzuelajohn"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"branzuelajohn"},"content":"                \u003c/TableView\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"branzuelajohn"},"content":"                \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"branzuelajohn"},"content":"                    \u003cColumnConstraints /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"branzuelajohn"},"content":"                \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"branzuelajohn"},"content":"                \u003crowConstraints\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"branzuelajohn"},"content":"                    \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"branzuelajohn"},"content":"                    \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"branzuelajohn"},"content":"                    \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"branzuelajohn"},"content":"                    \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"branzuelajohn"},"content":"                \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"branzuelajohn"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"branzuelajohn":70,"kouyk":4,"-":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Pawbook\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"    \u003cImage url\u003d\"@/images/pawbook.png\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"ZhangAnli"},"content":"        \u003cVBox fx:id\u003d\"ownerList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"ZhangAnli"},"content":"          \u003cStackPane fx:id\u003d\"ownerListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"ZhangAnli"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"ZhangAnli"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"ZhangAnli"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"ZhangAnli"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"shaelynl":2,"ZhangAnli":9,"kouyk":3,"-":44}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"kouyk":1,"-":6}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"kouyk":1,"-":10}},{"path":"src/test/data/JsonDatabaseStorageTest/invalidAndValidOwnerDatabase.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"  \"entities\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    \"id\" : 1,","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"    \"name\": \"Valid Owner\",","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    \"id\" : 2,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    \"name\": \"Owner With Invalid Phone Field\",","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wei-yutong":2,"kouyk":5,"-":10}},{"path":"src/test/data/JsonDatabaseStorageTest/invalidOwnerDatabase.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"  \"entities\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    \"id\": 1,","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"    \"name\": \"Owner with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wei-yutong":1,"kouyk":6,"-":3}},{"path":"src/test/data/JsonSerializableDatabaseTest/duplicateOwnerDatabase.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"  \"entities\": [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    \"id\": 1,","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    \"id\": 2,","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kouyk":5,"-":13}},{"path":"src/test/data/JsonSerializableDatabaseTest/invalidOwnerDatabase.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"  \"entities\": [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    \"id\": 1,","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kouyk":3,"-":7}},{"path":"src/test/data/JsonSerializableDatabaseTest/typicalOwnersDatabase.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"branzuelajohn"},"content":"  \"_comment\": \"Database save file which contains the same Owner values as in TypicalOwners#getTypicalDatabase()\",","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"  \"entities\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"    \"id\": 1,","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    \"id\": 2,","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    \"id\": 3,","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    \"id\": 4,","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    \"id\": 5,","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    \"id\": 6,","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    \"type\": \"owner\",","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    \"id\": 7,","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"branzuelajohn":1,"kouyk":15,"-":44}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"branzuelajohn"},"content":"  \"databaseFilePath\" : \"database.json\"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"branzuelajohn":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"branzuelajohn"},"content":"  \"databaseFilePath\" : \"database.json\"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"branzuelajohn":1,"-":10}},{"path":"src/test/java/dog/pawbook/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"kouyk":1,"-":57}},{"path":"src/test/java/dog/pawbook/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.core;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"kouyk":1,"-":26}},{"path":"src/test/java/dog/pawbook/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.core;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":2,"-":133}},{"path":"src/test/java/dog/pawbook/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"        assertNotNull(AppUtil.getImage(\"/images/pawbook.png\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"ZhangAnli":1,"kouyk":2,"-":33}},{"path":"src/test/java/dog/pawbook/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"kouyk":3,"-":105}},{"path":"src/test/java/dog/pawbook/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Config;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kouyk":4,"-":112}},{"path":"src/test/java/dog/pawbook/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":2,"-":21}},{"path":"src/test/java/dog/pawbook/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"CharlesLee01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"CharlesLee01"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"CharlesLee01"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.testutil.SerializableTestClass;","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.testutil.TestUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"CharlesLee01"},"content":"    public void jsonUtil_readJsonStringToObjectInstance_correctObject() throws IOException {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"CharlesLee01"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"CharlesLee01"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        SerializableTestClass object \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"                JsonUtil.fromJsonString(SerializableTestClass.JSON_STRING_REPRESENTATION, SerializableTestClass.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"        assertEquals(object, serializableTestClass);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"CharlesLee01"},"content":"    public void jsonUtil_writeThenReadObjectToJson_correctObject() throws IOException, DataConversionException {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        SerializableTestClass writtenSerializableTestObject \u003d new SerializableTestClass();","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        writtenSerializableTestObject.setTestValues();","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        JsonUtil.saveJsonFile(writtenSerializableTestObject, SERIALIZATION_FILE);","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        Optional\u003cSerializableTestClass\u003e optionalObjectFromFile \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                JsonUtil.readJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"CharlesLee01"},"content":"        assertTrue(optionalObjectFromFile.isPresent());","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        assertEquals(optionalObjectFromFile.get(), writtenSerializableTestObject);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CharlesLee01":17,"kouyk":12,"-":41}},{"path":"src/test/java/dog/pawbook/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.commons.util;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kouyk":2,"-":141}},{"path":"src/test/java/dog/pawbook/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_OWNER_ID;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.AMY;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.AddOwnerCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.CommandResult;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.ListCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ModelManager;","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.storage.JsonDatabaseStorage;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.storage.StorageManager;","lastModifiedDate":"2021-03-05"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.OwnerBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"branzuelajohn"},"content":"        JsonDatabaseStorage databaseStorage \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"branzuelajohn"},"content":"                new JsonDatabaseStorage(temporaryFolder.resolve(\"database.json\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"branzuelajohn"},"content":"        StorageManager storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        String deleteCommand \u003d \"delete owner 9\";","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_OWNER_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        assertCommandSuccess(listCommand,","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"                String.format(ListCommand.MESSAGE_SUCCESS_FORMAT, Entity.class.getSimpleName().toLowerCase()), model);","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"ZhangAnli"},"content":"        // Setup LogicManager with JsonDatabaseIoExceptionThrowingStub","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"branzuelajohn"},"content":"        JsonDatabaseStorage databaseStorage \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"branzuelajohn"},"content":"                new JsonDatabaseIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionDatabase.json\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"branzuelajohn"},"content":"        StorageManager storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"        String addCommand \u003d AddOwnerCommand.COMMAND_WORD + \" \" + Owner.ENTITY_WORD + NAME_DESC_AMY","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"        Owner expectedOwner \u003d new OwnerBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"        expectedModel.addEntity(expectedOwner);","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"wei-yutong"},"content":"    public void getFilteredOwnerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEntityList().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"ZhangAnli"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"ZhangAnli"},"content":"    private static class JsonDatabaseIoExceptionThrowingStub extends JsonDatabaseStorage {","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"ZhangAnli"},"content":"        private JsonDatabaseIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"ZhangAnli"},"content":"        public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ZhangAnli":7,"branzuelajohn":6,"wei-yutong":4,"kouyk":29,"-":118}},{"path":"src/test/java/dog/pawbook/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.getTypicalDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ModelManager;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.IdMatchPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.OwnerBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"ZhangAnli"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    public void execute_newOwner_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        Owner validOwner \u003d new OwnerBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"        int id \u003d expectedModel.addEntity(validOwner);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"        expectedModel.updateFilteredEntityList(new IdMatchPredicate(id));","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        assertCommandSuccess(new AddOwnerCommand(validOwner), model,","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"                AddOwnerCommand.MESSAGE_SUCCESS + validOwner, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"    public void execute_duplicateOwner_throwsCommandException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"ZhangAnli"},"content":"        Entity entityInList \u003d model.getDatabase().getEntityList().get(0).getValue();","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        assertCommandFailure(new AddOwnerCommand((Owner) entityInList), model, Messages.MESSAGE_DUPLICATE_OWNER);","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ZhangAnli":7,"wei-yutong":4,"kouyk":12,"-":26}},{"path":"src/test/java/dog/pawbook/logic/commands/AddDogCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.DogBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.testutil.OwnerBuilder;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"public class AddDogCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    public void constructor_nullDog_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDogCommand(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    //TO DO execute_dogAcceptedByModel_addSuccessful()","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    public void execute_duplicateDog_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        Dog validDog \u003d new DogBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        Owner validOwner \u003d new OwnerBuilder().build();","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        AddDogCommand addDogCommand \u003d new AddDogCommand(validDog);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        ModelStub modelStub \u003d new ModelStubWithDogAndOwner(validDog, validOwner);","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"                Messages.MESSAGE_DUPLICATE_DOG, () -\u003e addDogCommand.execute(modelStub));","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"        Dog apple \u003d new DogBuilder().withName(\"Apple\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        Dog bubbles \u003d new DogBuilder().withName(\"Bubbles\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"        AddDogCommand addAppleCommand \u003d new AddDogCommand(apple);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"        AddDogCommand addBubblesCommand \u003d new AddDogCommand(bubbles);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"        assertTrue(addAppleCommand.equals(addAppleCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"        AddDogCommand addAppleCommandCopy \u003d new AddDogCommand(apple);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"        assertTrue(addAppleCommand.equals(addAppleCommandCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"        assertFalse(addAppleCommand.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"        assertFalse(addAppleCommand.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"        // different dog -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"        assertFalse(addAppleCommand.equals(addBubblesCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"ZhangAnli"},"content":"        public Path getDatabaseFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"branzuelajohn"},"content":"        public void setDatabaseFilePath(Path databaseFilePath) {","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":109,"author":{"gitId":"branzuelajohn"},"content":"        public int addEntity(Entity entity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"        public Entity getEntity(int targetID) {","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"ZhangAnli"},"content":"        public void setDatabase(ReadOnlyDatabase database) {","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"ZhangAnli"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"        public boolean hasEntity(Entity entity) {","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        public boolean hasEntity(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"        public void deleteEntity(int targetID) {","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"        public void setEntity(int targetId, Entity editedEntity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"        public ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getFilteredEntityList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"kouyk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"        public ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getUnfilteredEntityList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"kouyk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"kouyk"},"content":"        public void updateFilteredEntityList(Predicate\u003cPair\u003cInteger, Entity\u003e\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"ZhangAnli"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"ZhangAnli"},"content":"        public void sortEntities(Comparator\u003cPair\u003cInteger, Entity\u003e\u003e comparator) {","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"ZhangAnli"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"ZhangAnli"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"wei-yutong"},"content":"     * A Model stub that contains a single dog.","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"kouyk"},"content":"    private class ModelStubWithDogAndOwner extends ModelStub {","lastModifiedDate":"2021-03-21"},{"lineNumber":173,"author":{"gitId":"wei-yutong"},"content":"        private final Dog dog;","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"kouyk"},"content":"        private final Owner owner;","lastModifiedDate":"2021-03-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"kouyk"},"content":"        ModelStubWithDogAndOwner(Dog dog, Owner owner) {","lastModifiedDate":"2021-03-21"},{"lineNumber":177,"author":{"gitId":"kouyk"},"content":"            requireAllNonNull(dog, owner);","lastModifiedDate":"2021-03-21"},{"lineNumber":178,"author":{"gitId":"wei-yutong"},"content":"            this.dog \u003d dog;","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"kouyk"},"content":"            this.owner \u003d owner;","lastModifiedDate":"2021-03-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"kouyk"},"content":"        public boolean hasEntity(Entity entity) {","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"kouyk"},"content":"            requireNonNull(entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"kouyk"},"content":"            if (entity instanceof Owner) {","lastModifiedDate":"2021-03-21"},{"lineNumber":186,"author":{"gitId":"kouyk"},"content":"                return this.owner.equals(entity);","lastModifiedDate":"2021-03-21"},{"lineNumber":187,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":188,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":189,"author":{"gitId":"kouyk"},"content":"            return this.dog.equals(entity);","lastModifiedDate":"2021-03-21"},{"lineNumber":190,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":191,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":192,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":193,"author":{"gitId":"kouyk"},"content":"        public boolean hasEntity(int unused) {","lastModifiedDate":"2021-03-21"},{"lineNumber":194,"author":{"gitId":"kouyk"},"content":"            return true;","lastModifiedDate":"2021-03-21"},{"lineNumber":195,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":196,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":197,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":198,"author":{"gitId":"kouyk"},"content":"        public Entity getEntity(int targetID) {","lastModifiedDate":"2021-03-21"},{"lineNumber":199,"author":{"gitId":"kouyk"},"content":"            return owner;","lastModifiedDate":"2021-03-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"wei-yutong"},"content":"     * A Model stub that always accept the dog being added.","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"kouyk"},"content":"    private class ModelStubAcceptingEntityAdded extends ModelStub {","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"kouyk"},"content":"        final ArrayList\u003cEntity\u003e entitiesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"kouyk"},"content":"        public boolean hasEntity(Entity entity) {","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"kouyk"},"content":"            requireNonNull(entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"kouyk"},"content":"            return entitiesAdded.stream().anyMatch(entity::equals);","lastModifiedDate":"2021-03-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"branzuelajohn"},"content":"        public int addEntity(Entity entity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"kouyk"},"content":"            requireNonNull(entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":218,"author":{"gitId":"kouyk"},"content":"            entitiesAdded.add(entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":219,"author":{"gitId":"branzuelajohn"},"content":"            return entitiesAdded.indexOf(entity);","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"ZhangAnli"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"ZhangAnli"},"content":"            return new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ZhangAnli":13,"branzuelajohn":4,"wei-yutong":23,"kouyk":66,"-":122}},{"path":"src/test/java/dog/pawbook/logic/commands/AddOwnerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.OwnerBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"public class AddOwnerCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"    public void constructor_nullOwner_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddOwnerCommand(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    public void execute_ownerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        ModelStubAcceptingEntityAdded modelStub \u003d new ModelStubAcceptingEntityAdded();","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        Owner validOwner \u003d new OwnerBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        CommandResult commandResult \u003d new AddOwnerCommand(validOwner).execute(modelStub);","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        assertEquals(AddOwnerCommand.MESSAGE_SUCCESS + validOwner, commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        assertEquals(Arrays.asList(validOwner), modelStub.entitiesAdded);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"    public void execute_duplicateOwner_throwsCommandException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"        Owner validOwner \u003d new OwnerBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        AddOwnerCommand addOwnerCommand \u003d new AddOwnerCommand(validOwner);","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"        ModelStub modelStub \u003d new ModelStubWithOwner(validOwner);","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"                Messages.MESSAGE_DUPLICATE_OWNER, () -\u003e addOwnerCommand.execute(modelStub));","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"        Owner alice \u003d new OwnerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"        Owner bob \u003d new OwnerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        AddOwnerCommand addAliceCommand \u003d new AddOwnerCommand(alice);","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        AddOwnerCommand addBobCommand \u003d new AddOwnerCommand(bob);","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        AddOwnerCommand addAliceCommandCopy \u003d new AddOwnerCommand(alice);","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"        // different owner -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"        public Entity getEntity(int targetID) {","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"ZhangAnli"},"content":"        public Path getDatabaseFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"branzuelajohn"},"content":"        public void setDatabaseFilePath(Path databaseFilePath) {","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"branzuelajohn"},"content":"        public int addEntity(Entity entity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"ZhangAnli"},"content":"        public void setDatabase(ReadOnlyDatabase database) {","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"ZhangAnli"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"        public boolean hasEntity(Entity entity) {","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"        public boolean hasEntity(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":"        public void deleteEntity(int targetID) {","lastModifiedDate":"2021-03-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":"        public void setEntity(int targetId, Entity editedEntity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"kouyk"},"content":"        public ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getFilteredEntityList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"kouyk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"kouyk"},"content":"        public ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getUnfilteredEntityList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"kouyk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"kouyk"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"kouyk"},"content":"        public void updateFilteredEntityList(Predicate\u003cPair\u003cInteger, Entity\u003e\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"ZhangAnli"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"ZhangAnli"},"content":"        public void sortEntities(Comparator\u003cPair\u003cInteger, Entity\u003e\u003e comparator) {","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"ZhangAnli"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"ZhangAnli"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"wei-yutong"},"content":"     * A Model stub that contains a single owner.","lastModifiedDate":"2021-03-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"wei-yutong"},"content":"    private class ModelStubWithOwner extends ModelStub {","lastModifiedDate":"2021-03-07"},{"lineNumber":180,"author":{"gitId":"wei-yutong"},"content":"        private final Owner owner;","lastModifiedDate":"2021-03-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"wei-yutong"},"content":"        ModelStubWithOwner(Owner owner) {","lastModifiedDate":"2021-03-07"},{"lineNumber":183,"author":{"gitId":"wei-yutong"},"content":"            requireNonNull(owner);","lastModifiedDate":"2021-03-07"},{"lineNumber":184,"author":{"gitId":"wei-yutong"},"content":"            this.owner \u003d owner;","lastModifiedDate":"2021-03-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"kouyk"},"content":"        public boolean hasEntity(Entity entity) {","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"kouyk"},"content":"            requireNonNull(entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"kouyk"},"content":"            return this.owner.equals(entity);","lastModifiedDate":"2021-03-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"wei-yutong"},"content":"     * A Model stub that always accept the owner being added.","lastModifiedDate":"2021-03-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"kouyk"},"content":"    private class ModelStubAcceptingEntityAdded extends ModelStub {","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"kouyk"},"content":"        final ArrayList\u003cEntity\u003e entitiesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"kouyk"},"content":"        public boolean hasEntity(Entity entity) {","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"kouyk"},"content":"            requireNonNull(entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"kouyk"},"content":"            return entitiesAdded.stream().anyMatch(entity::equals);","lastModifiedDate":"2021-03-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"branzuelajohn"},"content":"        public int addEntity(Entity entity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"kouyk"},"content":"            requireNonNull(entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"kouyk"},"content":"            entitiesAdded.add(entity);","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"branzuelajohn"},"content":"            return entitiesAdded.indexOf(entity);","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"ZhangAnli"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"ZhangAnli"},"content":"            return new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"ZhangAnli"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"ZhangAnli"},"content":"        public void updateFilteredEntityList(Predicate\u003cPair\u003cInteger, Entity\u003e\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"ZhangAnli"},"content":"            return;","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"ZhangAnli"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ZhangAnli":18,"branzuelajohn":4,"wei-yutong":18,"kouyk":50,"-":134}},{"path":"src/test/java/dog/pawbook/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"kouyk":1,"-":53}},{"path":"src/test/java/dog/pawbook/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_BREED;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_OWNERID;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.testutil.EditOwnerDescriptorBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    public static final String VALID_NAME_ASHER \u003d \"Asher\";","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"    public static final String VALID_NAME_BELL \u003d \"Bell\";","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"    public static final String VALID_SEX_ASHER \u003d \"male\";","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"    public static final String VALID_SEX_BELL \u003d \"female\";","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"    public static final String VALID_DATEOFBIRTH_ASHER \u003d \"16-4-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"    public static final String VALID_DATEOFBIRTH_BELL \u003d \"15-4-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"    public static final String VALID_BREED_ASHER \u003d \"Corgi\";","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"    public static final String VALID_BREED_BELL \u003d \"Greyhound\";","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"    public static final int VALID_OWNERID_9 \u003d 9;","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"    public static final int VALID_OWNERID_10 \u003d 10;","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"    public static final String VALID_TAG_FRIENDLY \u003d \"friendly\";","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"    public static final String VALID_TAG_QUIET \u003d \"quiet\";","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"    public static final String NAME_DESC_ASHER \u003d \" \" + PREFIX_NAME + VALID_NAME_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"    public static final String NAME_DESC_BELL \u003d \" \" + PREFIX_NAME + VALID_NAME_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"    public static final String SEX_DESC_ASHER \u003d \" \" + PREFIX_SEX + VALID_SEX_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"    public static final String SEX_DESC_BELL \u003d \" \" + PREFIX_SEX + VALID_SEX_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"    public static final String BREED_DESC_ASHER \u003d \" \" + PREFIX_BREED + VALID_BREED_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"    public static final String BREED_DESC_BELL \u003d \" \" + PREFIX_BREED + VALID_BREED_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"    public static final String DATEOFBIRTH_DESC_ASHER \u003d \" \" + PREFIX_DOB + VALID_DATEOFBIRTH_ASHER;","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"    public static final String DATEOFBIRTH_DESC_BELL \u003d \" \" + PREFIX_DOB + VALID_DATEOFBIRTH_BELL;","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"    public static final String OWNERID_DESC_9 \u003d \" \" + PREFIX_OWNERID + VALID_OWNERID_9;","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":"    public static final String OWNERID_DESC_10 \u003d \" \" + PREFIX_OWNERID + VALID_OWNERID_10;","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"CharlesLee01"},"content":"    public static final String TAG_DESC_FRIENDLY \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIENDLY;","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"CharlesLee01"},"content":"    public static final String TAG_DESC_QUIET \u003d \" \" + PREFIX_TAG + VALID_TAG_QUIET;","lastModifiedDate":"2021-03-20"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"wei-yutong"},"content":"    public static final String INVALID_SEX_DESC \u003d \" \" + PREFIX_SEX + \"Male1\"; // \u00271\u0027 not allowed in sex","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"    public static final String INVALID_DATEOFBIRTH_DESC \u003d \" \" + PREFIX_DOB + \"a-a-2020\"; // \u0027a\u0027 not","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":"    // allowed in dates of birth","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"wei-yutong"},"content":"    public static final String INVALID_BREED_DESC \u003d \" \" + PREFIX_BREED + \"poodle!\"; // \u0027!\u0027 not allowed for breed","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"wei-yutong"},"content":"    public static final String INVALID_OWNERID_DESC \u003d \" \" + PREFIX_OWNERID; // empty ownerID not allowed","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"    public static final EditOwnerCommand.EditOwnerDescriptor DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"    public static final EditOwnerCommand.EditOwnerDescriptor DESC_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"        DESC_AMY \u003d new EditOwnerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"        DESC_BOB \u003d new EditOwnerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"branzuelajohn"},"content":"     * - the database, filtered owner list and selected owner in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"ZhangAnli"},"content":"        Database expectedAddressBook \u003d new Database(actualModel.getDatabase());","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"        List\u003cPair\u003cInteger, Entity\u003e\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredEntityList());","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":145,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(expectedAddressBook, actualModel.getDatabase());","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredEntityList());","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"wei-yutong"},"content":"     * Updates {@code model}\u0027s filtered list to show only the dog at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"branzuelajohn"},"content":"     * {@code model}\u0027s database.","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"    public static void showDogAtIndex(Model model, Integer targetIndex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"wei-yutong"},"content":"        Entity entity \u003d model.getFilteredEntityList().get(0).getValue();","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"wei-yutong"},"content":"        final String[] splitName \u003d entity.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"wei-yutong"},"content":"        model.updateFilteredEntityList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(1, model.getFilteredEntityList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"CharlesLee01":2,"ZhangAnli":4,"branzuelajohn":2,"wei-yutong":34,"kouyk":23,"-":96}},{"path":"src/test/java/dog/pawbook/logic/commands/DeleteDogCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalDogs.getTypicalDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_FIRST_DOG;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_SECOND_DOG;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"public class DeleteDogCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"ZhangAnli"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"    public void execute_validIdUnfilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        Pair\u003cInteger, Entity\u003e pair \u003d model.getFilteredEntityList().get(1);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        int id \u003d pair.getKey();","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        Entity entity \u003d pair.getValue();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        DeleteDogCommand deleteDogCommand \u003d new DeleteDogCommand(id);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        String expectedMessage \u003d DeleteDogCommand.MESSAGE_SUCCESS + entity;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"ZhangAnli"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        expectedModel.deleteEntity(pair.getKey());","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        int ownerId \u003d ((Dog) pair.getValue()).getOwnerId();","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        Owner owner \u003d (Owner) model.getEntity(ownerId);","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        HashSet\u003cInteger\u003e newDogIdSet \u003d new HashSet\u003c\u003e(owner.getDogIdSet());","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        newDogIdSet.remove(id);","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        expectedModel.setEntity(ownerId, new Owner(owner.getName(), owner.getPhone(), owner.getEmail(),","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"                owner.getAddress(), owner.getTags(), newDogIdSet));","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"        assertCommandSuccess(deleteDogCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"    public void execute_invalidIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"        List\u003cInteger\u003e indices \u003d model.getFilteredEntityList().stream().map(Pair::getKey).sorted().collect(toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        int outOfBoundIndex \u003d indices.get(indices.size() - 1) + 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"        DeleteDogCommand deleteDogCommand \u003d new DeleteDogCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        assertCommandFailure(deleteDogCommand, model, Messages.MESSAGE_INVALID_DOG_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        DeleteDogCommand deleteFirstCommand \u003d new DeleteDogCommand(ID_FIRST_DOG);","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"        DeleteDogCommand deleteSecondCommand \u003d new DeleteDogCommand(ID_SECOND_DOG);","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        DeleteDogCommand deleteFirstCommandCopy \u003d new DeleteDogCommand(ID_FIRST_DOG);","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"wei-yutong"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":"        // different dog -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"wei-yutong"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"ZhangAnli":3,"wei-yutong":62,"kouyk":21}},{"path":"src/test/java/dog/pawbook/logic/commands/DeleteOwnerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_FIRST_OWNER;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_SECOND_OWNER;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.getTypicalDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ModelManager;","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"public class DeleteOwnerCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public void execute_validIdUnfilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        Pair\u003cInteger, Entity\u003e pair \u003d model.getFilteredEntityList().get(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        int id \u003d pair.getKey();","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        Entity entity \u003d pair.getValue();","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        DeleteOwnerCommand deleteOwnerCommand \u003d new DeleteOwnerCommand(id);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        String expectedMessage \u003d DeleteOwnerCommand.MESSAGE_SUCCESS + entity;","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"ZhangAnli"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        expectedModel.deleteEntity(pair.getKey());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        assertCommandSuccess(deleteOwnerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    public void execute_invalidIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        List\u003cInteger\u003e indices \u003d model.getFilteredEntityList().stream().map(Pair::getKey).sorted().collect(toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        int outOfBoundId \u003d indices.get(indices.size() - 1) + 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        DeleteOwnerCommand deleteOwnerCommand \u003d new DeleteOwnerCommand(outOfBoundId);","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        assertCommandFailure(deleteOwnerCommand, model, Messages.MESSAGE_INVALID_OWNER_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        DeleteOwnerCommand deleteFirstCommand \u003d new DeleteOwnerCommand(ID_FIRST_OWNER);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        DeleteOwnerCommand deleteSecondCommand \u003d new DeleteOwnerCommand(ID_SECOND_OWNER);","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        DeleteOwnerCommand deleteFirstCommandCopy \u003d new DeleteOwnerCommand(ID_FIRST_OWNER);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"        // different owner -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ZhangAnli":3,"wei-yutong":1,"kouyk":31,"-":42}},{"path":"src/test/java/dog/pawbook/logic/commands/EditOwnerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_FIRST_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_SECOND_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_THIRD_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.getTypicalDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditOwnerCommand.EditOwnerDescriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ModelManager;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.IdMatchPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.testutil.EditOwnerDescriptorBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.testutil.OwnerBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"public class EditOwnerCommandTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        Owner editedOwner \u003d new OwnerBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder(editedOwner).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand editOwnerCommand \u003d new EditOwnerCommand(ID_FIRST_OWNER, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        String expectedMessage \u003d String.format(EditOwnerCommand.MESSAGE_EDIT_OWNER_SUCCESS, editedOwner);","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"ZhangAnli"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        expectedModel.setEntity(ID_FIRST_OWNER, editedOwner);","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"ZhangAnli"},"content":"        expectedModel.updateFilteredEntityList(new IdMatchPredicate(ID_FIRST_OWNER));","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        assertCommandSuccess(editOwnerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        Owner toEditOwner \u003d (Owner) model.getEntity(ID_THIRD_OWNER);","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        OwnerBuilder ownerInList \u003d new OwnerBuilder(toEditOwner);","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        Owner editedOwner \u003d ownerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand editEntityCommand \u003d new EditOwnerCommand(ID_THIRD_OWNER, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        String expectedMessage \u003d String.format(EditOwnerCommand.MESSAGE_EDIT_OWNER_SUCCESS, editedOwner);","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"ZhangAnli"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        expectedModel.setEntity(ID_THIRD_OWNER, editedOwner);","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"ZhangAnli"},"content":"        expectedModel.updateFilteredEntityList(new IdMatchPredicate(ID_THIRD_OWNER));","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        assertCommandSuccess(editEntityCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand editEntityCommand \u003d new EditOwnerCommand(ID_FIRST_OWNER, new EditOwnerDescriptor());","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        Owner editedOwner \u003d (Owner) model.getEntity(ID_FIRST_OWNER);","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"        String expectedMessage \u003d String.format(EditOwnerCommand.MESSAGE_EDIT_OWNER_SUCCESS, editedOwner);","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"ZhangAnli"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"ZhangAnli"},"content":"        expectedModel.updateFilteredEntityList(new IdMatchPredicate(ID_FIRST_OWNER));","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        assertCommandSuccess(editEntityCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"    public void execute_duplicateOwnerUnfilteredList_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"        Owner firstOwner \u003d (Owner) model.getEntity(ID_FIRST_OWNER);","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder(firstOwner).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand editEntityCommand \u003d new EditOwnerCommand(ID_SECOND_OWNER, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        assertCommandFailure(editEntityCommand, model, Messages.MESSAGE_DUPLICATE_OWNER);","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"    public void execute_invalidOwnerIdUnfilteredList_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"        Integer outOfBoundId \u003d model.getUnfilteredEntityList().stream()","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"                .map(Pair::getKey).sorted().collect(toList()).get(model.getUnfilteredEntityList().size() - 1) + 1;","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand editEntityCommand \u003d new EditOwnerCommand(outOfBoundId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"        assertCommandFailure(editEntityCommand, model, Messages.MESSAGE_INVALID_OWNER_ID);","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"    public void equals() {","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"        final EditOwnerCommand standardCommand \u003d new EditOwnerCommand(ID_FIRST_OWNER, DESC_AMY);","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor copyDescriptor \u003d new EditOwnerDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand commandWithSameValues \u003d new EditOwnerCommand(ID_FIRST_OWNER, copyDescriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"        assertFalse(standardCommand.equals(new HelpCommand()));","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"        assertFalse(standardCommand.equals(new EditOwnerCommand(ID_SECOND_OWNER, DESC_AMY)));","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"        assertFalse(standardCommand.equals(new EditOwnerCommand(ID_FIRST_OWNER, DESC_BOB)));","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"ZhangAnli":10,"kouyk":122}},{"path":"src/test/java/dog/pawbook/logic/commands/EditOwnerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditOwnerCommand.EditOwnerDescriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.testutil.EditOwnerDescriptorBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"public class EditOwnerDescriptorTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    public void equals() {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptorWithSameValues \u003d new EditOwnerDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor editedAmy \u003d new EditOwnerDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        editedAmy \u003d new EditOwnerDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        editedAmy \u003d new EditOwnerDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        editedAmy \u003d new EditOwnerDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        editedAmy \u003d new EditOwnerDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"kouyk":58}},{"path":"src/test/java/dog/pawbook/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ModelManager;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kouyk":5,"-":15}},{"path":"src/test/java/dog/pawbook/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_ENTITIES_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.CARL;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.ELLE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.FIONA;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.getTypicalDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"ZhangAnli"},"content":"        // different owner -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"ZhangAnli"},"content":"    public void execute_zeroKeywords_noOwnerFound() {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"ZhangAnli"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ENTITIES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"ZhangAnli"},"content":"        expectedModel.updateFilteredEntityList(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEntityList());","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"ZhangAnli"},"content":"    public void execute_multipleKeywords_multipleOwnersFound() {","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"ZhangAnli"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ENTITIES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"ZhangAnli"},"content":"        expectedModel.updateFilteredEntityList(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"ZhangAnli"},"content":"        ArrayList\u003cEntity\u003e testList \u003d new ArrayList\u003cEntity\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"ZhangAnli"},"content":"        for (Pair pair: model.getFilteredEntityList()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"ZhangAnli"},"content":"            testList.add((Entity) pair.getValue());","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"ZhangAnli"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), testList);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"ZhangAnli":29,"-":61}},{"path":"src/test/java/dog/pawbook/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ModelManager;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kouyk":5,"-":15}},{"path":"src/test/java/dog/pawbook/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.getTypicalDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.ModelManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    private Model model;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"ZhangAnli"},"content":"        expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        assertCommandSuccess(new ListCommand(), model,","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"                String.format(ListCommand.MESSAGE_SUCCESS_FORMAT, Entity.class.getSimpleName().toLowerCase()),","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"                expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        assertCommandSuccess(new ListCommand(), model,","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"                String.format(ListCommand.MESSAGE_SUCCESS_FORMAT, Entity.class.getSimpleName().toLowerCase()),","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"                expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"ZhangAnli":3,"kouyk":38}},{"path":"src/test/java/dog/pawbook/logic/parser/AddDogCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.BREED_DESC_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.BREED_DESC_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.DATEOFBIRTH_DESC_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.DATEOFBIRTH_DESC_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_BREED_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_DATEOFBIRTH_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_SEX_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.NAME_DESC_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.NAME_DESC_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.OWNERID_DESC_10;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.OWNERID_DESC_9;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.SEX_DESC_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.SEX_DESC_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.TAG_DESC_FRIENDLY;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.TAG_DESC_QUIET;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_BREED_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_DATEOFBIRTH_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_OWNERID_10;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_SEX_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_FRIENDLY;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalDogs.ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalDogs.BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.logic.commands.AddDogCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.Breed;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.DateOfBirth;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.Sex;","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.DogBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"public class AddDogCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"    private AddDogCommandParser parser \u003d new AddDogCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"        Dog expectedDog \u003d new DogBuilder(BELL).withTags(VALID_TAG_FRIENDLY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BELL + SEX_DESC_BELL + BREED_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"                + DATEOFBIRTH_DESC_BELL + OWNERID_DESC_10 + TAG_DESC_FRIENDLY, new AddDogCommand(expectedDog));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"        assertParseSuccess(parser, NAME_DESC_ASHER + NAME_DESC_BELL + SEX_DESC_BELL + BREED_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"                + DATEOFBIRTH_DESC_BELL + OWNERID_DESC_10 + TAG_DESC_FRIENDLY, new AddDogCommand(expectedDog));","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"        // multiple sexes - last sex accepted","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"        assertParseSuccess(parser, NAME_DESC_BELL + SEX_DESC_ASHER + SEX_DESC_BELL + BREED_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"                + DATEOFBIRTH_DESC_BELL + OWNERID_DESC_10 + TAG_DESC_FRIENDLY, new AddDogCommand(expectedDog));","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"        // multiple date of births - last date of birth accepted","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"        assertParseSuccess(parser, NAME_DESC_BELL + SEX_DESC_BELL + BREED_DESC_ASHER + BREED_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"                + DATEOFBIRTH_DESC_BELL + OWNERID_DESC_10 + TAG_DESC_FRIENDLY, new AddDogCommand(expectedDog));","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"shaelynl"},"content":"        // multiple breeds - last breed accepted","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"        assertParseSuccess(parser, NAME_DESC_BELL + SEX_DESC_BELL + BREED_DESC_BELL + DATEOFBIRTH_DESC_ASHER","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"                + DATEOFBIRTH_DESC_BELL + OWNERID_DESC_10 + TAG_DESC_FRIENDLY, new AddDogCommand(expectedDog));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"        Dog expectedDogMultipleTags \u003d new DogBuilder(BELL).withTags(VALID_TAG_FRIENDLY, VALID_TAG_QUIET)","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":"        assertParseSuccess(parser, NAME_DESC_BELL + SEX_DESC_BELL + BREED_DESC_BELL + DATEOFBIRTH_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"wei-yutong"},"content":"                + OWNERID_DESC_10 + TAG_DESC_QUIET + TAG_DESC_FRIENDLY, new AddDogCommand(expectedDogMultipleTags));","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"wei-yutong"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":"        // zero tags","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"wei-yutong"},"content":"        Dog expectedDog \u003d new DogBuilder(ASHER).withTags().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"wei-yutong"},"content":"        assertParseSuccess(parser, NAME_DESC_ASHER + SEX_DESC_ASHER + BREED_DESC_ASHER","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"                        + DATEOFBIRTH_DESC_ASHER + OWNERID_DESC_9, new AddDogCommand(expectedDog));","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"wei-yutong"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"wei-yutong"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"wei-yutong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDogCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"wei-yutong"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, VALID_NAME_BELL + SEX_DESC_BELL + BREED_DESC_BELL + DATEOFBIRTH_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"wei-yutong"},"content":"                        + OWNERID_DESC_10, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"wei-yutong"},"content":"        // missing sex prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, NAME_DESC_BELL + VALID_SEX_BELL + BREED_DESC_BELL + DATEOFBIRTH_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"wei-yutong"},"content":"                        + OWNERID_DESC_10, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"wei-yutong"},"content":"        // missing breed prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, NAME_DESC_BELL + SEX_DESC_BELL + VALID_BREED_BELL + DATEOFBIRTH_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"wei-yutong"},"content":"                        + OWNERID_DESC_10, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"wei-yutong"},"content":"        // missing date of birth prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, NAME_DESC_BELL + SEX_DESC_BELL + BREED_DESC_BELL + VALID_DATEOFBIRTH_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"wei-yutong"},"content":"                        + OWNERID_DESC_10, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"wei-yutong"},"content":"        // missing ownerID prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, NAME_DESC_BELL + SEX_DESC_BELL + BREED_DESC_BELL + DATEOFBIRTH_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"wei-yutong"},"content":"                + VALID_OWNERID_10, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"wei-yutong"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, VALID_NAME_BELL + VALID_SEX_BELL + VALID_BREED_BELL + VALID_DATEOFBIRTH_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"wei-yutong"},"content":"                        + VALID_OWNERID_10, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"wei-yutong"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"wei-yutong"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"wei-yutong"},"content":"        // invalid name","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + SEX_DESC_BELL + BREED_DESC_BELL + DATEOFBIRTH_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"wei-yutong"},"content":"                + OWNERID_DESC_10 + TAG_DESC_QUIET + TAG_DESC_FRIENDLY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"wei-yutong"},"content":"        // invalid sex","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, NAME_DESC_BELL + INVALID_SEX_DESC + BREED_DESC_BELL + DATEOFBIRTH_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"wei-yutong"},"content":"                + OWNERID_DESC_10 + TAG_DESC_QUIET + TAG_DESC_FRIENDLY, Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"wei-yutong"},"content":"        // invalid breed","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, NAME_DESC_BELL + SEX_DESC_BELL + INVALID_BREED_DESC + DATEOFBIRTH_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"wei-yutong"},"content":"                + OWNERID_DESC_10 + TAG_DESC_QUIET + TAG_DESC_FRIENDLY, Breed.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"wei-yutong"},"content":"        // invalid date of birth","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, NAME_DESC_BELL + SEX_DESC_BELL + BREED_DESC_BELL + INVALID_DATEOFBIRTH_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"wei-yutong"},"content":"                + OWNERID_DESC_10 + TAG_DESC_QUIET + TAG_DESC_FRIENDLY, DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"wei-yutong"},"content":"        // invalid tag","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, NAME_DESC_BELL + SEX_DESC_BELL + BREED_DESC_BELL + DATEOFBIRTH_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"wei-yutong"},"content":"                + OWNERID_DESC_10 + INVALID_TAG_DESC + VALID_TAG_FRIENDLY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"wei-yutong"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + SEX_DESC_BELL + BREED_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"wei-yutong"},"content":"                + INVALID_DATEOFBIRTH_DESC + OWNERID_DESC_10, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"wei-yutong"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BELL + SEX_DESC_BELL + BREED_DESC_BELL","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"wei-yutong"},"content":"                        + DATEOFBIRTH_DESC_BELL + OWNERID_DESC_10 + TAG_DESC_QUIET + TAG_DESC_FRIENDLY,","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"wei-yutong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDogCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"wei-yutong"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"shaelynl":1,"wei-yutong":145,"kouyk":2}},{"path":"src/test/java/dog/pawbook/logic/parser/AddOwnerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.AMY;","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.AddOwnerCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.OwnerBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"public class AddOwnerCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    private AddOwnerCommandParser parser \u003d new AddOwnerCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        Owner expectedOwner \u003d new OwnerBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddOwnerCommand(expectedOwner));","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddOwnerCommand(expectedOwner));","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddOwnerCommand(expectedOwner));","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddOwnerCommand(expectedOwner));","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddOwnerCommand(expectedOwner));","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"        Owner expectedOwnerMultipleTags \u003d new OwnerBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddOwnerCommand(expectedOwnerMultipleTags));","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":"        Owner expectedOwner \u003d new OwnerBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"                new AddOwnerCommand(expectedOwner));","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOwnerCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOwnerCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"wei-yutong":6,"kouyk":46,"-":89}},{"path":"src/test/java/dog/pawbook/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"kouyk":1,"-":149}},{"path":"src/test/java/dog/pawbook/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.Command;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kouyk":3,"-":35}},{"path":"src/test/java/dog/pawbook/logic/parser/DeleteDogCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_FIRST_DOG;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.logic.commands.DeleteDogCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"public class DeleteDogCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    private DeleteDogCommandParser parser \u003d new DeleteDogCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, \"1\", new DeleteDogCommand(ID_FIRST_DOG));","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDogCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wei-yutong":31,"kouyk":2}},{"path":"src/test/java/dog/pawbook/logic/parser/DeleteOwnerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_FIRST_OWNER;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.DeleteOwnerCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"public class DeleteOwnerCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    private DeleteOwnerCommandParser parser \u003d new DeleteOwnerCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, String.valueOf(ID_FIRST_OWNER), new DeleteOwnerCommand(ID_FIRST_OWNER));","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOwnerCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kouyk":11,"-":22}},{"path":"src/test/java/dog/pawbook/logic/parser/EditOwnerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_FIRST_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_SECOND_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_THIRD_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditOwnerCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditOwnerCommand.EditOwnerDescriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.testutil.EditOwnerDescriptorBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"public class EditOwnerCommandParserTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOwnerCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    private EditOwnerCommandParser parser \u003d new EditOwnerCommandParser();","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        // no index specified","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        // no field specified","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\", EditOwnerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        // no index and no field specified","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        // negative index","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"        // zero index","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Owner} being edited,","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"        Integer targetId \u003d ID_SECOND_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"        String userInput \u003d targetId + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"        Integer targetId \u003d ID_FIRST_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"        String userInput \u003d targetId + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"        // name","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"        Integer targetId \u003d ID_THIRD_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"        String userInput \u003d targetId + NAME_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"        // phone","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"        userInput \u003d targetId + PHONE_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"        descriptor \u003d new EditOwnerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":"        expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"kouyk"},"content":"        // email","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"        userInput \u003d targetId + EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"kouyk"},"content":"        descriptor \u003d new EditOwnerDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"kouyk"},"content":"        expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"        // address","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"kouyk"},"content":"        userInput \u003d targetId + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"kouyk"},"content":"        descriptor \u003d new EditOwnerDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"kouyk"},"content":"        expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"kouyk"},"content":"        // tags","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"kouyk"},"content":"        userInput \u003d targetId + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"kouyk"},"content":"        descriptor \u003d new EditOwnerDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"kouyk"},"content":"        expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"kouyk"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"kouyk"},"content":"        Integer targetId \u003d ID_FIRST_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"kouyk"},"content":"        String userInput \u003d targetId + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"kouyk"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"kouyk"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"kouyk"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"kouyk"},"content":"                .build();","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"kouyk"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"kouyk"},"content":"        // no other valid values specified","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"kouyk"},"content":"        Integer targetId \u003d ID_FIRST_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"kouyk"},"content":"        String userInput \u003d targetId + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":191,"author":{"gitId":"kouyk"},"content":"        // other valid values specified","lastModifiedDate":"2021-03-25"},{"lineNumber":192,"author":{"gitId":"kouyk"},"content":"        userInput \u003d targetId + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB + PHONE_DESC_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":193,"author":{"gitId":"kouyk"},"content":"        descriptor \u003d new EditOwnerDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"kouyk"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":195,"author":{"gitId":"kouyk"},"content":"        expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":196,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":197,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":198,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":199,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":200,"author":{"gitId":"kouyk"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":201,"author":{"gitId":"kouyk"},"content":"        Integer targetId \u003d ID_THIRD_OWNER;","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"kouyk"},"content":"        String userInput \u003d targetId + TAG_EMPTY;","lastModifiedDate":"2021-03-25"},{"lineNumber":203,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":204,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":205,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand expectedCommand \u003d new EditOwnerCommand(targetId, descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":207,"author":{"gitId":"kouyk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":208,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"kouyk":209}},{"path":"src/test/java/dog/pawbook/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.logic.commands.FindCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"ZhangAnli":6,"-":28}},{"path":"src/test/java/dog/pawbook/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"kouyk"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kouyk":9,"-":165}},{"path":"src/test/java/dog/pawbook/logic/parser/PawbookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_FIRST_DOG;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalIndexes.ID_FIRST_OWNER;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"import dog.pawbook.logic.commands.AddDogCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.AddOwnerCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"import dog.pawbook.logic.commands.DeleteDogCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.DeleteOwnerCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditOwnerCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditOwnerCommand.EditOwnerDescriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.logic.commands.FindCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.ListCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.program.Program;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"import dog.pawbook.testutil.DogBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"import dog.pawbook.testutil.DogUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.testutil.EditOwnerDescriptorBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.OwnerBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.OwnerUtil;","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"public class PawbookParserTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    private final PawbookParser parser \u003d new PawbookParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"    public void parseCommand_addOwner() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        Owner owner \u003d new OwnerBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        AddOwnerCommand command \u003d (AddOwnerCommand) parser.parseCommand(OwnerUtil.getAddCommand(owner));","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        assertEquals(new AddOwnerCommand(owner), command);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"    public void parseCommand_addDog() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":"        Dog dog \u003d new DogBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"        AddDogCommand command \u003d (AddDogCommand) parser.parseCommand(DogUtil.getAddCommand(dog));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":"        assertEquals(new AddDogCommand(dog), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"shaelynl"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"shaelynl"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"shaelynl"},"content":"    public void parseCommand_deleteOwner() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        DeleteOwnerCommand command \u003d (DeleteOwnerCommand) parser.parseCommand(","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"                DeleteOwnerCommand.COMMAND_WORD + \" \" + Owner.ENTITY_WORD + \" \" + ID_FIRST_OWNER);","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        assertEquals(new DeleteOwnerCommand(ID_FIRST_OWNER), command);","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"shaelynl"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"shaelynl"},"content":"    public void parseCommand_deleteDog() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"shaelynl"},"content":"        DeleteDogCommand command \u003d (DeleteDogCommand) parser.parseCommand(","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"                DeleteDogCommand.COMMAND_WORD + \" \" + Dog.ENTITY_WORD + \" \" + ID_FIRST_DOG);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        assertEquals(new DeleteDogCommand(ID_FIRST_DOG), command);","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"shaelynl"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"shaelynl"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"        Owner owner \u003d new OwnerBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        EditOwnerDescriptor descriptor \u003d new EditOwnerDescriptorBuilder(owner).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        EditOwnerCommand command \u003d (EditOwnerCommand) parser.parseCommand(EditOwnerCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"                + Owner.ENTITY_WORD + \" \" + ID_FIRST_OWNER + \" \" + OwnerUtil.getEditOwnerDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        assertEquals(new EditOwnerCommand(ID_FIRST_OWNER, descriptor), command);","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"ZhangAnli"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"ZhangAnli"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"ZhangAnli"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"ZhangAnli"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" \" + Owner.ENTITY_WORD) instanceof ListCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" \" + Dog.ENTITY_WORD) instanceof ListCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" \" + Program.ENTITY_WORD) instanceof ListCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"shaelynl":18,"ZhangAnli":13,"wei-yutong":3,"kouyk":44,"-":38}},{"path":"src/test/java/dog/pawbook/model/DatabaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.ALICE;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.getTypicalDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"public class DatabaseTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"    private final Database database \u003d new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(Collections.emptyList(), database.getEntityList());","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.resetData(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"    public void resetData_withValidReadOnlyDatabase_replacesData() {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"        Database newData \u003d getTypicalDatabase();","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"        database.resetData(newData);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(newData, database);","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    public void hasOwner_nullOwner_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.hasEntity(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"ZhangAnli"},"content":"    public void hasOwner_ownerNotInDatabase_returnsFalse() {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"ZhangAnli"},"content":"        assertFalse(database.hasEntity(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"ZhangAnli"},"content":"    public void hasOwner_ownerInDatabase_returnsTrue() {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"ZhangAnli"},"content":"        database.addEntity(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"ZhangAnli"},"content":"        assertTrue(database.hasEntity(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"    public void getOwnerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e database.getEntityList().remove(0));","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"ZhangAnli"},"content":"     * A stub ReadOnlyDatabase whose entities list can violate interface constraints.","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"ZhangAnli"},"content":"    private static class DatabaseStub implements ReadOnlyDatabase {","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        private final ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e entitiesWithId \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"ZhangAnli"},"content":"        DatabaseStub(Collection\u003cPair\u003cInteger, Entity\u003e\u003e owners) {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"            this.entitiesWithId.setAll(owners);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        public ObservableList\u003cPair\u003cInteger, Entity\u003e\u003e getEntityList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"            return entitiesWithId;","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"shaelynl":1,"ZhangAnli":19,"wei-yutong":3,"kouyk":7,"-":48}},{"path":"src/test/java/dog/pawbook/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.model.Model.PREDICATE_SHOW_ALL_ENTITIES;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.ALICE;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.BENSON;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.testutil.DatabaseBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(new Database(), new Database(modelManager.getDatabase()));","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"ZhangAnli"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"ZhangAnli"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"ZhangAnli"},"content":"    public void setDatabaseFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDatabaseFilePath(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"ZhangAnli"},"content":"    public void setDatabaseFilePath_validPath_setsDatabaseFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"ZhangAnli"},"content":"        modelManager.setDatabaseFilePath(path);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(path, modelManager.getDatabaseFilePath());","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":"    public void hasOwner_nullOwner_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEntity(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"ZhangAnli"},"content":"    public void hasOwner_ownerNotInDatabase_returnsFalse() {","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"        assertFalse(modelManager.hasEntity(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"ZhangAnli"},"content":"    public void hasOwner_ownerInDatabase_returnsTrue() {","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"        modelManager.addEntity(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"        assertTrue(modelManager.hasEntity(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"wei-yutong"},"content":"    public void getFilteredOwnerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEntityList().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"ZhangAnli"},"content":"        Database addressBook \u003d new DatabaseBuilder().withOwner(ALICE).withOwner(BENSON).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"ZhangAnli"},"content":"        Database differentAddressBook \u003d new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"        modelManager.updateFilteredEntityList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"        modelManager.updateFilteredEntityList(PREDICATE_SHOW_ALL_ENTITIES);","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"ZhangAnli"},"content":"        differentUserPrefs.setDatabaseFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ZhangAnli":15,"wei-yutong":4,"kouyk":11,"-":102}},{"path":"src/test/java/dog/pawbook/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"    public void setDatabaseFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setDatabaseFilePath(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ZhangAnli":2,"kouyk":2,"-":17}},{"path":"src/test/java/dog/pawbook/model/managedentity/dog/BreedTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CharlesLee01"},"content":"package dog.pawbook.model.managedentity.dog;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"CharlesLee01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"CharlesLee01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"CharlesLee01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"CharlesLee01"},"content":"public class BreedTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"CharlesLee01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"CharlesLee01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Breed(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"CharlesLee01"},"content":"    public void constructor_invalidBreed_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"CharlesLee01"},"content":"        String invalidBreed \u003d \"\";","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"CharlesLee01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Breed(invalidBreed));","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"CharlesLee01"},"content":"    public void isValidBreed() {","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        // null breed","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"CharlesLee01"},"content":"        assertThrows(NullPointerException.class, () -\u003e Breed.isValidBreed(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"        // invalid breed","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"CharlesLee01"},"content":"        assertFalse(Breed.isValidBreed(\"\")); // empty string","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"CharlesLee01"},"content":"        assertFalse(Breed.isValidBreed(\" \")); // spaces only","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        // valid breed","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"CharlesLee01"},"content":"        assertTrue(Breed.isValidBreed(\"Poodle\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"CharlesLee01"},"content":"        assertTrue(Breed.isValidBreed(\"German Shepherd\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"CharlesLee01"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"CharlesLee01":31,"kouyk":3}},{"path":"src/test/java/dog/pawbook/model/managedentity/dog/DateOfBirthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CharlesLee01"},"content":"package dog.pawbook.model.managedentity.dog;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"CharlesLee01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"CharlesLee01"},"content":"class DateOfBirthTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"CharlesLee01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfBirth((String) null));","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfBirth((LocalDate) null));","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"CharlesLee01"},"content":"    public void constructor_invalidDateOfBirth_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"CharlesLee01"},"content":"        String invalidDateOfBirth \u003d \"\";","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"CharlesLee01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateOfBirth(invalidDateOfBirth));","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"CharlesLee01"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"CharlesLee01":17,"kouyk":4}},{"path":"src/test/java/dog/pawbook/model/managedentity/dog/DogTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CharlesLee01"},"content":"package dog.pawbook.model.managedentity.dog;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_BREED_BELL;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_DATEOFBIRTH_BELL;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_BELL;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_SEX_BELL;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.testutil.TypicalDogs.APPLE;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.testutil.TypicalDogs.ASHER;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.testutil.TypicalDogs.BUBBLES;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.TypicalDogs.DOG_OWNER_ID;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"CharlesLee01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"CharlesLee01"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"CharlesLee01"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"CharlesLee01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"CharlesLee01"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"CharlesLee01"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"CharlesLee01"},"content":"import dog.pawbook.testutil.DogBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"CharlesLee01"},"content":"public class DogTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"CharlesLee01"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"CharlesLee01"},"content":"        Dog dog \u003d new DogBuilder().build();","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"CharlesLee01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e dog.getTags().remove(0));","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"CharlesLee01"},"content":"    public void getName() {","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(new Name(\"Apple\"), APPLE.getName());","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(new Name(\"Bubbles\"), BUBBLES.getName());","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"CharlesLee01"},"content":"    public void getBreed() {","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(new Breed(\"Golden Retriever\"), APPLE.getBreed());","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(new Breed(\"Bulldog\"), BUBBLES.getBreed());","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"CharlesLee01"},"content":"    public void getSex() {","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(new Sex(\"female\"), APPLE.getSex());","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(new Sex(\"female\"), BUBBLES.getSex());","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"CharlesLee01"},"content":"    public void getDob() {","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(new DateOfBirth(\"11-2-2020\"), APPLE.getDob());","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(new DateOfBirth(\"1-1-2021\"), BUBBLES.getDob());","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"CharlesLee01"},"content":"    public void getOwnerId() {","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        assertEquals(APPLE.getOwnerId(), DOG_OWNER_ID);","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        assertEquals(BUBBLES.getOwnerId(), DOG_OWNER_ID);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"CharlesLee01"},"content":"    public void getTags() {","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(Set.of(new Tag(\"friendly\")), APPLE.getTags());","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(Set.of(new Tag(\"cheerful\")), BUBBLES.getTags());","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"CharlesLee01"},"content":"    public void equals() {","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"CharlesLee01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"CharlesLee01"},"content":"        Dog asherCopy \u003d new DogBuilder(ASHER).build();","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(asherCopy, ASHER);","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"CharlesLee01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"CharlesLee01"},"content":"        assertEquals(ASHER, ASHER);","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"CharlesLee01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-20"},{"lineNumber":79,"author":{"gitId":"CharlesLee01"},"content":"        assertNotEquals(ASHER, null);","lastModifiedDate":"2021-03-20"},{"lineNumber":80,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"CharlesLee01"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-20"},{"lineNumber":82,"author":{"gitId":"CharlesLee01"},"content":"        assertNotEquals(ASHER, 5);","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"CharlesLee01"},"content":"        // different dog -\u003e returns false","lastModifiedDate":"2021-03-20"},{"lineNumber":85,"author":{"gitId":"CharlesLee01"},"content":"        assertNotEquals(BUBBLES, ASHER);","lastModifiedDate":"2021-03-20"},{"lineNumber":86,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":87,"author":{"gitId":"CharlesLee01"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"CharlesLee01"},"content":"        Dog editedAsher \u003d new DogBuilder(ASHER).withName(VALID_NAME_BELL).build();","lastModifiedDate":"2021-03-20"},{"lineNumber":89,"author":{"gitId":"CharlesLee01"},"content":"        assertNotEquals(editedAsher, ASHER);","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"CharlesLee01"},"content":"        // different sex -\u003e returns false","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"CharlesLee01"},"content":"        editedAsher \u003d new DogBuilder(ASHER).withSex(VALID_SEX_BELL).build();","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"CharlesLee01"},"content":"        assertNotEquals(editedAsher, ASHER);","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"CharlesLee01"},"content":"        // different breed -\u003e returns false","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"CharlesLee01"},"content":"        editedAsher \u003d new DogBuilder(ASHER).withBreed(VALID_BREED_BELL).build();","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"CharlesLee01"},"content":"        assertNotEquals(editedAsher, ASHER);","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":99,"author":{"gitId":"CharlesLee01"},"content":"        // different date of birth -\u003e returns false","lastModifiedDate":"2021-03-20"},{"lineNumber":100,"author":{"gitId":"CharlesLee01"},"content":"        editedAsher \u003d new DogBuilder(ASHER).withDateOfBirth(VALID_DATEOFBIRTH_BELL).build();","lastModifiedDate":"2021-03-20"},{"lineNumber":101,"author":{"gitId":"CharlesLee01"},"content":"        assertNotEquals(editedAsher, ASHER);","lastModifiedDate":"2021-03-20"},{"lineNumber":102,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":103,"author":{"gitId":"CharlesLee01"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-03-20"},{"lineNumber":104,"author":{"gitId":"CharlesLee01"},"content":"        editedAsher \u003d new DogBuilder(ASHER).withTags(VALID_TAG_QUIET).build();","lastModifiedDate":"2021-03-20"},{"lineNumber":105,"author":{"gitId":"CharlesLee01"},"content":"        assertNotEquals(editedAsher, ASHER);","lastModifiedDate":"2021-03-20"},{"lineNumber":106,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":107,"author":{"gitId":"CharlesLee01"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"CharlesLee01":104,"kouyk":3}},{"path":"src/test/java/dog/pawbook/model/managedentity/dog/SexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CharlesLee01"},"content":"package dog.pawbook.model.managedentity.dog;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"CharlesLee01"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"CharlesLee01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"CharlesLee01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"CharlesLee01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"CharlesLee01"},"content":"public class SexTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"CharlesLee01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"CharlesLee01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Sex(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"CharlesLee01"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"CharlesLee01"},"content":"        String invalidSex \u003d \"\";","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"CharlesLee01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidSex));","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"CharlesLee01"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"CharlesLee01"},"content":"    public void isValidAddress() {","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        // null sex","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"CharlesLee01"},"content":"        assertThrows(NullPointerException.class, () -\u003e Sex.isValidSex(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"        // invalid sex","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"CharlesLee01"},"content":"        assertFalse(Sex.isValidSex(\"\")); // empty string","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"CharlesLee01"},"content":"        assertFalse(Sex.isValidSex(\" \")); // spaces only","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"CharlesLee01"},"content":"        assertFalse(Sex.isValidSex(\"m\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"CharlesLee01"},"content":"        assertFalse(Sex.isValidSex(\"f\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"CharlesLee01"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        // valid sex","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"CharlesLee01"},"content":"        assertTrue(Sex.isValidSex(\"Male\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"CharlesLee01"},"content":"        assertTrue(Sex.isValidSex(\"Female\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"CharlesLee01"},"content":"        assertTrue(Sex.isValidSex(\"male\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"CharlesLee01"},"content":"        assertTrue(Sex.isValidSex(\"female\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"CharlesLee01"},"content":"        assertTrue(Sex.isValidSex(\"M\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"CharlesLee01"},"content":"        assertTrue(Sex.isValidSex(\"F\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"CharlesLee01"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"CharlesLee01"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"CharlesLee01":37,"kouyk":3}},{"path":"src/test/java/dog/pawbook/model/managedentity/owner/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kouyk":2,"-":34}},{"path":"src/test/java/dog/pawbook/model/managedentity/owner/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kouyk":2,"-":59}},{"path":"src/test/java/dog/pawbook/model/managedentity/owner/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.OwnerBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        // different owner -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        assertTrue(predicate.test(new Pair\u003c\u003e(1, new OwnerBuilder().withName(\"Alice Bob\").build())));","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        assertTrue(predicate.test(new Pair\u003c\u003e(1, new OwnerBuilder().withName(\"Alice Bob\").build())));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        assertTrue(predicate.test(new Pair\u003c\u003e(1, new OwnerBuilder().withName(\"Alice Carol\").build())));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        assertTrue(predicate.test(new Pair\u003c\u003e(1, new OwnerBuilder().withName(\"Alice Bob\").build())));","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        assertFalse(predicate.test(new Pair\u003c\u003e(1, new OwnerBuilder().withName(\"Alice\").build())));","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        assertFalse(predicate.test(new Pair\u003c\u003e(1, new OwnerBuilder().withName(\"Alice Bob\").build())));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        assertFalse(predicate.test(new Pair\u003c\u003e(1, new OwnerBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build())));","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ZhangAnli":1,"wei-yutong":2,"kouyk":10,"-":64}},{"path":"src/test/java/dog/pawbook/model/managedentity/owner/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kouyk":4,"-":38}},{"path":"src/test/java/dog/pawbook/model/managedentity/owner/OwnerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.ALICE;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.OwnerBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"public class OwnerTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        Owner owner \u003d new OwnerBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e owner.getTags().remove(0));","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"ZhangAnli"},"content":"    public void getName() {","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"        assertTrue(ALICE.getName().equals(new Name(\"Alice Pauline\")));","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"        assertTrue(BOB.getName().equals(new Name(\"Bob Choo\")));","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"ZhangAnli"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"ZhangAnli"},"content":"    public void getPhone() {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"        assertTrue(ALICE.getPhone().equals(new Phone(\"94351253\")));","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"        assertTrue(BOB.getPhone().equals(new Phone(\"22222222\")));","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"ZhangAnli"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"ZhangAnli"},"content":"    public void getEmail() {","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"ZhangAnli"},"content":"        assertTrue(ALICE.getEmail().equals(new Email(\"alice@example.com\")));","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"ZhangAnli"},"content":"        assertTrue(BOB.getEmail().equals(new Email(\"bob@example.com\")));","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"ZhangAnli"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"ZhangAnli"},"content":"    public void getAddress() {","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"ZhangAnli"},"content":"        assertTrue(ALICE.getAddress().equals(new Address(\"123, Jurong West Ave 6, #08-111\")));","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"ZhangAnli"},"content":"        assertTrue(BOB.getAddress().equals(new Address(\"Block 123, Bobby Street 3\")));","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"        Owner aliceCopy \u003d new OwnerBuilder(ALICE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"        // different owner -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"        Owner editedAlice \u003d new OwnerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"        editedAlice \u003d new OwnerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"        editedAlice \u003d new OwnerBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":"        editedAlice \u003d new OwnerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"        editedAlice \u003d new OwnerBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ZhangAnli":24,"wei-yutong":13,"kouyk":9,"-":43}},{"path":"src/test/java/dog/pawbook/model/managedentity/owner/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kouyk":2,"-":38}},{"path":"src/test/java/dog/pawbook/model/managedentity/owner/UniqueEntityListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.ALICE;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"ZhangAnli"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.UniqueEntityList;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.exceptions.DuplicateEntityException;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.exceptions.EntityNotFoundException;","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"public class UniqueEntityListTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"    private final UniqueEntityList uniqueEntityList \u003d new UniqueEntityList();","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    public void contains_nullEntity_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEntityList.contains((Entity) null));","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"ZhangAnli"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"ZhangAnli"},"content":"    public void contains_ownerNotInList_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"ZhangAnli"},"content":"        assertFalse(uniqueEntityList.contains(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"ZhangAnli"},"content":"    public void contains_ownerInList_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"ZhangAnli"},"content":"        uniqueEntityList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"ZhangAnli"},"content":"        assertTrue(uniqueEntityList.contains(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"    public void add_nullOwner_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEntityList.add(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"    public void add_duplicateOwner_throwsDuplicateOwnerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":"        uniqueEntityList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        assertThrows(DuplicateEntityException.class, () -\u003e uniqueEntityList.add(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"    public void setOwner_nullEditedOwner_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEntityList.setEntity(1, null));","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"    public void setOwner_targetOwnerNotInList_throwsOwnerNotFoundException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        assertThrows(EntityNotFoundException.class, () -\u003e uniqueEntityList.setEntity(1, ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"    public void remove_ownerDoesNotExist_throwsOwnerNotFoundException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(EntityNotFoundException.class, () -\u003e uniqueEntityList.remove(Integer.MAX_VALUE));","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"ZhangAnli"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"ZhangAnli"},"content":"    public void remove_invalidOwner_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(EntityNotFoundException.class, () -\u003e uniqueEntityList.remove(-1));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"    public void remove_existingOwner_removesOwner() {","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"shaelynl"},"content":"        uniqueEntityList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"ZhangAnli"},"content":"        List\u003cPair\u003cInteger, Entity\u003e\u003e targets \u003d uniqueEntityList.asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"                .filter(p -\u003e p.getValue().equals(ALICE))","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"ZhangAnli"},"content":"                .collect(toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"ZhangAnli"},"content":"        if (targets.get(0).getValue() instanceof Owner) {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"ZhangAnli"},"content":"            int aliceId \u003d targets.get(0).getKey();","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"ZhangAnli"},"content":"            uniqueEntityList.remove(aliceId);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"shaelynl"},"content":"            UniqueEntityList expectedUniqueOwnerList \u003d new UniqueEntityList();","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"shaelynl"},"content":"            assertEquals(expectedUniqueOwnerList, uniqueEntityList);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"wei-yutong"},"content":"    public void setOwners_nullUniqueOwnerList_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"shaelynl"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEntityList.setEntities((UniqueEntityList) null));","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"wei-yutong"},"content":"    public void setOwners_uniqueOwnerList_replacesOwnListWithProvidedUniqueOwnerList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"shaelynl"},"content":"        uniqueEntityList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"shaelynl"},"content":"        UniqueEntityList expectedUniqueOwnerList \u003d new UniqueEntityList();","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"wei-yutong"},"content":"        expectedUniqueOwnerList.add(BOB);","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"shaelynl"},"content":"        uniqueEntityList.setEntities(expectedUniqueOwnerList);","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"shaelynl"},"content":"        assertEquals(expectedUniqueOwnerList, uniqueEntityList);","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"wei-yutong"},"content":"    public void setOwners_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEntityList","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"                .setEntities((List\u003cPair\u003cInteger, Entity\u003e\u003e) null));","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"wei-yutong"},"content":"    public void setOwners_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"shaelynl"},"content":"        uniqueEntityList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"        List\u003cPair\u003cInteger, Entity\u003e\u003e entityList \u003d Collections.singletonList(new Pair\u003c\u003e(1, BOB));","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"        uniqueEntityList.setEntities(entityList);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"shaelynl"},"content":"        UniqueEntityList expectedUniqueOwnerList \u003d new UniqueEntityList();","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"wei-yutong"},"content":"        expectedUniqueOwnerList.add(BOB);","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"shaelynl"},"content":"        assertEquals(expectedUniqueOwnerList, uniqueEntityList);","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"wei-yutong"},"content":"    public void setOwners_listWithDuplicateOwners_throwsDuplicateOwnerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"        List\u003cPair\u003cInteger, Entity\u003e\u003e listWithDuplicateEntities \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"                Arrays.asList(new Pair\u003c\u003e(1, ALICE), new Pair\u003c\u003e(1, ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"        assertThrows(DuplicateEntityException.class, () -\u003e uniqueEntityList.setEntities(listWithDuplicateEntities));","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e uniqueEntityList","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"                .asUnmodifiableObservableList()","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"                .remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"    // todo: set the list to contain an entity something that contains references to other entities that does not exist","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"    // todo: set the list to contain two entities that should both store references to each but did not","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"    // todo: set the list to contain entities with duplicate IDs","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"    // todo: set the list to have similar entities of different types","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"shaelynl":15,"ZhangAnli":29,"wei-yutong":15,"kouyk":28,"-":50}},{"path":"src/test/java/dog/pawbook/model/managedentity/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.model.managedentity.tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"kouyk":2,"-":24}},{"path":"src/test/java/dog/pawbook/storage/JsonAdaptedOwnerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.storage.JsonAdaptedOwner.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.BENSON;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"public class JsonAdaptedOwnerTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    private static final Integer BENSON_ID \u003d 2;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    private static final List\u003cInteger\u003e VALID_DOG_IDS \u003d new ArrayList\u003c\u003e(BENSON.getDogIdSet());","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    public void toModelType_validOwnerDetails_returnsOwner() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        Pair\u003cInteger, Owner\u003e original \u003d new Pair\u003c\u003e(BENSON_ID, BENSON);","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        JsonAdaptedOwner owner \u003d new JsonAdaptedOwner(original);","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        assertEquals(original, owner.toModelType());","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        JsonAdaptedOwner owner \u003d new JsonAdaptedOwner(BENSON_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"                VALID_TAGS, VALID_DOG_IDS);","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, owner::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        JsonAdaptedOwner owner \u003d new JsonAdaptedOwner(BENSON_ID, null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"                VALID_TAGS, VALID_DOG_IDS);","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, owner::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        JsonAdaptedOwner owner \u003d new JsonAdaptedOwner(BENSON_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"                VALID_TAGS, VALID_DOG_IDS);","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, owner::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        JsonAdaptedOwner owner \u003d new JsonAdaptedOwner(BENSON_ID, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"                VALID_TAGS, VALID_DOG_IDS);","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, owner::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"        JsonAdaptedOwner owner \u003d new JsonAdaptedOwner(BENSON_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"                VALID_TAGS, VALID_DOG_IDS);","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, owner::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"        JsonAdaptedOwner owner \u003d new JsonAdaptedOwner(BENSON_ID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"                VALID_TAGS, VALID_DOG_IDS);","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, owner::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"        JsonAdaptedOwner owner \u003d new JsonAdaptedOwner(BENSON_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"                VALID_TAGS, VALID_DOG_IDS);","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, owner::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"        JsonAdaptedOwner owner \u003d new JsonAdaptedOwner(BENSON_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"                VALID_TAGS, VALID_DOG_IDS);","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, owner::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"        JsonAdaptedOwner owner \u003d new JsonAdaptedOwner(BENSON_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"                invalidTags, VALID_DOG_IDS);","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"wei-yutong"},"content":"        assertThrows(IllegalValueException.class, owner::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wei-yutong":11,"kouyk":34,"-":74}},{"path":"src/test/java/dog/pawbook/storage/JsonDatabaseStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.ALICE;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.HOON;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.testutil.TypicalOwners.IDA;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.getTypicalDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.Entity;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"ZhangAnli"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"public class JsonDatabaseStorageTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonDatabaseStorageTest\");","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"ZhangAnli"},"content":"    public void readDatabase_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(NullPointerException.class, () -\u003e readDatabase(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"ZhangAnli"},"content":"    private java.util.Optional\u003cReadOnlyDatabase\u003e readDatabase(String filePath) throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"ZhangAnli"},"content":"        return new JsonDatabaseStorage(Paths.get(filePath)).readDatabase(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"ZhangAnli"},"content":"        assertFalse(readDatabase(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(DataConversionException.class, () -\u003e readDatabase(\"notJsonFormatDatabase.json\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"ZhangAnli"},"content":"    public void readDatabase_invalidOwnerDatabase_throwDataConversionException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(DataConversionException.class, () -\u003e readDatabase(\"invalidOwnerDatabase.json\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"ZhangAnli"},"content":"    public void readDatabase_invalidAndValidOwnerDatabase_throwDataConversionException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(DataConversionException.class, () -\u003e readDatabase(\"invalidAndValidOwnerDatabase.json\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"ZhangAnli"},"content":"    public void readAndSaveDatabase_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"branzuelajohn"},"content":"        Path filePath \u003d testFolder.resolve(\"TempDatabase.json\");","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"ZhangAnli"},"content":"        Database original \u003d getTypicalDatabase();","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"ZhangAnli"},"content":"        JsonDatabaseStorage jsonDatabaseStorage \u003d new JsonDatabaseStorage(filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"ZhangAnli"},"content":"        jsonDatabaseStorage.saveDatabase(original, filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"ZhangAnli"},"content":"        ReadOnlyDatabase readBack \u003d jsonDatabaseStorage.readDatabase(filePath).get();","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"shaelynl"},"content":"        original.addEntity(HOON);","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"ZhangAnli"},"content":"        List\u003cPair\u003cInteger, Entity\u003e\u003e targets \u003d original.getEntityList().stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"                .filter(p -\u003e p.getValue().equals(ALICE))","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"ZhangAnli"},"content":"                .collect(toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"ZhangAnli"},"content":"        int aliceId \u003d targets.get(0).getKey();","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"ZhangAnli"},"content":"        original.removeEntity(aliceId);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"ZhangAnli"},"content":"        jsonDatabaseStorage.saveDatabase(original, filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"ZhangAnli"},"content":"        readBack \u003d jsonDatabaseStorage.readDatabase(filePath).get();","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"shaelynl"},"content":"        original.addEntity(IDA);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"ZhangAnli"},"content":"        jsonDatabaseStorage.saveDatabase(original); // file path not specified","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"ZhangAnli"},"content":"        readBack \u003d jsonDatabaseStorage.readDatabase().get(); // file path not specified","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"ZhangAnli"},"content":"    public void saveDatabase_nullDatabase_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDatabase(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"ZhangAnli"},"content":"     * Saves {@code database} at the specified {@code filePath}.","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"ZhangAnli"},"content":"    private void saveDatabase(ReadOnlyDatabase database, String filePath) {","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"ZhangAnli"},"content":"            new JsonDatabaseStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"ZhangAnli"},"content":"                    .saveDatabase(database, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"ZhangAnli"},"content":"    public void saveDatabase_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"ZhangAnli"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDatabase(new Database(), null));","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"shaelynl":2,"ZhangAnli":43,"branzuelajohn":1,"wei-yutong":3,"kouyk":4,"-":65}},{"path":"src/test/java/dog/pawbook/storage/JsonSerializableDatabaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.util.JsonUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.testutil.TypicalOwners;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"public class JsonSerializableDatabaseTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableDatabaseTest\");","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"    private static final Path TYPICAL_OWNERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalOwnersDatabase.json\");","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"    private static final Path INVALID_OWNER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidOwnerDatabase.json\");","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":"    private static final Path DUPLICATE_OWNER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateOwnerDatabase.json\");","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    public void toModelType_typicalOwnersFile_success() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"ZhangAnli"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_OWNERS_FILE,","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"branzuelajohn"},"content":"        Database databaseFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"branzuelajohn"},"content":"        Database typicalOwnersDatabase \u003d TypicalOwners.getTypicalDatabase();","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"branzuelajohn"},"content":"        assertEquals(databaseFromFile, typicalOwnersDatabase);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"    public void toModelType_invalidOwnerFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"ZhangAnli"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(INVALID_OWNER_FILE,","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"ZhangAnli"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ZhangAnli":10,"branzuelajohn":3,"wei-yutong":3,"kouyk":4,"-":19}},{"path":"src/test/java/dog/pawbook/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"ZhangAnli"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"data/pawbook.json\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ZhangAnli":1,"kouyk":5,"-":117}},{"path":"src/test/java/dog/pawbook/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.storage;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"ZhangAnli"},"content":"import static dog.pawbook.testutil.TypicalOwners.getTypicalDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.commons.core.GuiSettings;","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.ReadOnlyDatabase;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.UserPrefs;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"        JsonDatabaseStorage databaseStorage \u003d new JsonDatabaseStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"        storageManager \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"ZhangAnli"},"content":"    public void databaseReadSave() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"ZhangAnli"},"content":"         * {@link JsonDatabaseStorage} class.","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"ZhangAnli"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonDatabaseStorageTest} class.","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"ZhangAnli"},"content":"        Database original \u003d getTypicalDatabase();","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"ZhangAnli"},"content":"        storageManager.saveDatabase(original);","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"ZhangAnli"},"content":"        ReadOnlyDatabase retrieved \u003d storageManager.readDatabase().get();","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"ZhangAnli"},"content":"        assertEquals(original, new Database(retrieved));","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"ZhangAnli"},"content":"    public void getDatabaseFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"ZhangAnli"},"content":"        assertNotNull(storageManager.getDatabaseFilePath());","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZhangAnli":14,"kouyk":3,"-":51}},{"path":"src/test/java/dog/pawbook/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"kouyk":1,"-":33}},{"path":"src/test/java/dog/pawbook/testutil/DatabaseBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhangAnli"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"ZhangAnli"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"branzuelajohn"},"content":" * A utility class to help with building Database objects.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"ZhangAnli"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"branzuelajohn"},"content":" *     {@code Database db \u003d new DatabaseBuilder().withOwner(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"ZhangAnli"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"ZhangAnli"},"content":"public class DatabaseBuilder {","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"ZhangAnli"},"content":"    private Database database;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"ZhangAnli"},"content":"    public DatabaseBuilder() {","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"ZhangAnli"},"content":"        database \u003d new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"ZhangAnli"},"content":"    public DatabaseBuilder(Database database) {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"ZhangAnli"},"content":"        this.database \u003d database;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"ZhangAnli"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"branzuelajohn"},"content":"     * Adds a new {@code Owner} to the {@code Database} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"ZhangAnli"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"ZhangAnli"},"content":"    public DatabaseBuilder withOwner(Owner owner) {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"ZhangAnli"},"content":"        database.addEntity(owner);","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"ZhangAnli"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"ZhangAnli"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"ZhangAnli"},"content":"    public Database build() {","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"ZhangAnli"},"content":"        return database;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"ZhangAnli"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"ZhangAnli"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"ZhangAnli":31,"branzuelajohn":3}},{"path":"src/test/java/dog/pawbook/testutil/DogBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.Breed;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.DateOfBirth;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.Sex;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":" * A utility class to help with building Dog objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"public class DogBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    public static final String DEFAULT_NAME \u003d \"Goldie\";","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    public static final String DEFAULT_BREED \u003d \"Golden Retriever\";","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    public static final String DEFAULT_DATEOFBIRTH \u003d \"10-1-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    public static final String DEFAULT_SEX \u003d \"male\";","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    public static final int DEFAULT_OWNERID \u003d 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    private Name name;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    private Breed breed;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    private DateOfBirth dob;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    private Sex sex;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"    private int ownerID;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"     * Creates a {@code DogBuilder} with the default details.","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"    public DogBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        breed \u003d new Breed(DEFAULT_BREED);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        dob \u003d new DateOfBirth(DEFAULT_DATEOFBIRTH);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        sex \u003d new Sex(DEFAULT_SEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        ownerID \u003d DEFAULT_OWNERID;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"     * Initializes the DogBuilder with the data of {@code dogToCopy}.","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"    public DogBuilder(Dog dogToCopy) {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        name \u003d dogToCopy.getName();","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"        breed \u003d dogToCopy.getBreed();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"        dob \u003d dogToCopy.getDob();","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"        sex \u003d dogToCopy.getSex();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"        ownerID \u003d dogToCopy.getOwnerId();","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        tags \u003d new HashSet\u003c\u003e(dogToCopy.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"     * Sets the {@code Name} of the {@code Dog} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"    public DogBuilder withName(String name) {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Dog} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"    public DogBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"     * Sets the {@code Breed} of the {@code Dog} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"    public DogBuilder withBreed(String breed) {","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":"        this.breed \u003d new Breed(breed);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"wei-yutong"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"wei-yutong"},"content":"     * Sets the {@code DateOfBirth} of the {@code Dog} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"wei-yutong"},"content":"    public DogBuilder withDateOfBirth(String dob) {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"wei-yutong"},"content":"        this.dob \u003d new DateOfBirth(dob);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"wei-yutong"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"wei-yutong"},"content":"     * Sets the {@code Sex} of the {@code Dog} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"wei-yutong"},"content":"    public DogBuilder withSex(String sex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"wei-yutong"},"content":"        this.sex \u003d new Sex(sex);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"wei-yutong"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"wei-yutong"},"content":"     * Sets the {@code OwnerID} of the {@code Dog} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"wei-yutong"},"content":"    public DogBuilder withOwnerID(int ownerID) {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"wei-yutong"},"content":"        this.ownerID \u003d ownerID;","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"wei-yutong"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"wei-yutong"},"content":"    public Dog build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"wei-yutong"},"content":"        return new Dog(name, breed, dob, sex, ownerID, tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"wei-yutong"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wei-yutong":108}},{"path":"src/test/java/dog/pawbook/testutil/DogUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_BREED;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_OWNERID;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.logic.commands.AddDogCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":" * A utility class for Dog.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"public class DogUtil {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"     * Returns an add command string for adding the {@code dog}.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    public static String getAddCommand(Dog dog) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"        return AddDogCommand.COMMAND_WORD + \" \" + Dog.ENTITY_WORD + \" \" + getDogDetails(dog);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * Returns the part of command string for the given {@code dog}\u0027s details.","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    public static String getDogDetails(Dog dog) {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        sb.append(PREFIX_NAME + dog.getName().fullName + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        sb.append(PREFIX_BREED + dog.getBreed().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        sb.append(PREFIX_DOB + dog.getDob().value + \" \");","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        sb.append(PREFIX_SEX + dog.getSex().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        sb.append(PREFIX_OWNERID + Integer.toString(dog.getOwnerId()) + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        dog.getTags().stream().forEach(","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wei-yutong":38,"kouyk":2}},{"path":"src/test/java/dog/pawbook/testutil/EditOwnerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditOwnerCommand.EditOwnerDescriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":" * A utility class to help with building EditOwnerDescriptor objects.","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"public class EditOwnerDescriptorBuilder {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    private EditOwnerDescriptor descriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    public EditOwnerDescriptorBuilder() {","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        descriptor \u003d new EditOwnerDescriptor();","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    public EditOwnerDescriptorBuilder(EditOwnerDescriptor descriptor) {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        this.descriptor \u003d new EditOwnerDescriptor(descriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     * Returns an {@code EditOwnerDescriptor} with fields containing {@code owner}\u0027s details","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public EditOwnerDescriptorBuilder(Owner owner) {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        descriptor \u003d new EditOwnerDescriptor();","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        descriptor.setName(owner.getName());","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        descriptor.setPhone(owner.getPhone());","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        descriptor.setEmail(owner.getEmail());","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        descriptor.setAddress(owner.getAddress());","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        descriptor.setTags(owner.getTags());","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     * Sets the {@code Name} of the {@code EditOwnerDescriptor} that we are building.","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    public EditOwnerDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"     * Sets the {@code Phone} of the {@code EditOwnerDescriptor} that we are building.","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    public EditOwnerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"     * Sets the {@code Email} of the {@code EditOwnerDescriptor} that we are building.","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"    public EditOwnerDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"     * Sets the {@code Address} of the {@code EditOwnerDescriptor} that we are building.","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"    public EditOwnerDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditOwnerDescriptor}","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"     * that we are building.","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"    public EditOwnerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"    public EditOwnerDescriptor build() {","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        return descriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"kouyk":87}},{"path":"src/test/java/dog/pawbook/testutil/OwnerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Address;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":" * A utility class to help with building Owner objects.","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"public class OwnerBuilder {","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    private Set\u003cInteger\u003e dogIds;","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"     * Creates a {@code OwnerBuilder} with the default details.","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    public OwnerBuilder() {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        dogIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"     * Initializes the OwnerBuilder with the data of {@code ownerToCopy}.","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"    public OwnerBuilder(Owner ownerToCopy) {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        name \u003d ownerToCopy.getName();","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        phone \u003d ownerToCopy.getPhone();","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"        email \u003d ownerToCopy.getEmail();","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"        address \u003d ownerToCopy.getAddress();","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"        tags \u003d new HashSet\u003c\u003e(ownerToCopy.getTags());","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        dogIds \u003d new HashSet\u003c\u003e(ownerToCopy.getDogIdSet());","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"     * Sets the {@code Name} of the {@code Owner} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"    public OwnerBuilder withName(String name) {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Owner} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"    public OwnerBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"     * Sets the {@code Address} of the {@code Owner} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"    public OwnerBuilder withAddress(String address) {","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":"     * Sets the {@code Phone} of the {@code Owner} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":"    public OwnerBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"wei-yutong"},"content":"     * Sets the {@code Email} of the {@code Owner} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"wei-yutong"},"content":"    public OwnerBuilder withEmail(String email) {","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"     * Parses the {@code tags} into a {@code Set\u003cInteger\u003e} and set it to the {@code Owner} that we are building.","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"    public OwnerBuilder withDogs(Integer... dogIds) {","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"        this.dogIds \u003d SampleDataUtil.getIdSet(dogIds);","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"        return this;","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"wei-yutong"},"content":"    public Owner build() {","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"        return new Owner(name, phone, email, address, tags, dogIds);","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"wei-yutong":22,"kouyk":20,"-":65}},{"path":"src/test/java/dog/pawbook/testutil/OwnerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.AddOwnerCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.logic.commands.EditOwnerCommand.EditOwnerDescriptor;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":" * A utility class for Owner.","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"public class OwnerUtil {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * Returns an add command string for adding the {@code owner}.","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    public static String getAddCommand(Owner owner) {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        return AddOwnerCommand.COMMAND_WORD + \" \" + Owner.ENTITY_WORD + \" \" + getOwnerDetails(owner);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     * Returns the part of command string for the given {@code owner}\u0027s details.","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    public static String getOwnerDetails(Owner owner) {","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        sb.append(PREFIX_NAME + owner.getName().fullName + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        sb.append(PREFIX_PHONE + owner.getPhone().value + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        sb.append(PREFIX_EMAIL + owner.getEmail().value + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        sb.append(PREFIX_ADDRESS + owner.getAddress().value + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        owner.getTags().stream().forEach(","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"     * Returns the part of command string for the given {@code EditOwnerDescriptor}\u0027s details.","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    public static String getEditOwnerDescriptorDetails(EditOwnerDescriptor descriptor) {","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"            } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"wei-yutong":11,"kouyk":33,"-":18}},{"path":"src/test/java/dog/pawbook/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"        if (!(other instanceof SerializableTestClass)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"        SerializableTestClass otherSerializableTestClass \u003d (SerializableTestClass) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        return otherSerializableTestClass.getName().equals(getName())","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 otherSerializableTestClass.getListOfLocalDateTimes().equals(getListOfLocalDateTimes())","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"                \u0026\u0026 otherSerializableTestClass.getMapOfIntegerToString().equals(getMapOfIntegerToString());","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":18,"-":71}},{"path":"src/test/java/dog/pawbook/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kouyk":1,"-":30}},{"path":"src/test/java/dog/pawbook/testutil/TypicalDogs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_BREED_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_BREED_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_DATEOFBIRTH_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_DATEOFBIRTH_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_OWNERID_10;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_OWNERID_9;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_SEX_ASHER;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_SEX_BELL;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_FRIENDLY;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"import dog.pawbook.model.managedentity.dog.Dog;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":" * A utility class containing a list of {@code Dog} objects to be used in tests.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"public class TypicalDogs {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    public static final int DOG_OWNER_ID \u003d 1;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public static final Owner DOG_OWNER \u003d new OwnerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    public static final Dog APPLE \u003d new DogBuilder().withName(\"Apple\")","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"            .withBreed(\"Golden Retriever\").withDateOfBirth(\"11-2-2020\")","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"            .withSex(\"female\").withOwnerID(1).withTags(\"friendly\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    public static final Dog BUBBLES \u003d new DogBuilder().withName(\"Bubbles\")","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            .withBreed(\"Bulldog\").withDateOfBirth(\"1-1-2021\").withSex(\"female\").withOwnerID(DOG_OWNER_ID)","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"            .withTags(\"cheerful\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"    public static final Dog CARSON \u003d new DogBuilder().withName(\"Carson\").withSex(\"male\")","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            .withDateOfBirth(\"2-2-2019\").withBreed(\"male\").withOwnerID(DOG_OWNER_ID).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    public static final Dog DUKE \u003d new DogBuilder().withName(\"Duke\").withSex(\"male\").withDateOfBirth(\"4-5-2020\")","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"            .withBreed(\"German Shepherd\").withOwnerID(DOG_OWNER_ID).withTags(\"quiet\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"    public static final Dog ELSA \u003d new DogBuilder().withName(\"Elsa\").withSex(\"female\")","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"            .withDateOfBirth(\"2-2-2020\").withBreed(\"Poodle\").withOwnerID(DOG_OWNER_ID).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"    public static final Dog FLORA \u003d new DogBuilder().withName(\"Flora\").withSex(\"female\")","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            .withDateOfBirth(\"21-8-2018\").withBreed(\"Australian Shepherd\").withOwnerID(DOG_OWNER_ID).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"    public static final Dog GENIE \u003d new DogBuilder().withName(\"Genie\").withSex(\"male\")","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"            .withDateOfBirth(\"29-5-2020\").withBreed(\"Husky\").withOwnerID(DOG_OWNER_ID).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    // Manually added","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"    public static final Dog HOOK \u003d new DogBuilder().withName(\"Hook\").withSex(\"male\")","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"            .withDateOfBirth(\"13-7-2019\").withBreed(\"Chihuahua\").withOwnerID(DOG_OWNER_ID).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"    public static final Dog INK \u003d new DogBuilder().withName(\"Ink\").withSex(\"male\")","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            .withDateOfBirth(\"9-9-2020\").withBreed(\"Rottweiler\").withOwnerID(DOG_OWNER_ID).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"    // Manually added - Dog\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"    public static final Dog ASHER \u003d new DogBuilder().withName(VALID_NAME_ASHER).withSex(VALID_SEX_ASHER)","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"            .withDateOfBirth(VALID_DATEOFBIRTH_ASHER).withBreed(VALID_BREED_ASHER).withOwnerID(VALID_OWNERID_9)","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"            .withTags(VALID_TAG_FRIENDLY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"    public static final Dog BELL \u003d new DogBuilder().withName(VALID_NAME_BELL).withSex(VALID_SEX_BELL)","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"            .withDateOfBirth(VALID_DATEOFBIRTH_BELL).withBreed(VALID_BREED_BELL).withOwnerID(VALID_OWNERID_10)","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"            .withTags(VALID_TAG_QUIET, VALID_TAG_FRIENDLY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"    private TypicalDogs() {} // prevents instantiation","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"ZhangAnli"},"content":"     * Returns an {@code Database} with all the typical dogs.","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"ZhangAnli"},"content":"    public static Database getTypicalDatabase() {","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"ZhangAnli"},"content":"        Database ab \u003d new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        ab.addEntityWithId(DOG_OWNER, 1);","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"        Set\u003cInteger\u003e ids \u003d new HashSet\u003c\u003e(DOG_OWNER.getDogIdSet());","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":"        for (Dog dog : getTypicalDogs()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"            int id \u003d ab.addEntity(dog);","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"            ids.add(id);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"        ab.setEntity(1, new Owner(DOG_OWNER.getName(), DOG_OWNER.getPhone(), DOG_OWNER.getEmail(),","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"                DOG_OWNER.getAddress(), DOG_OWNER.getTags(), ids));","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"wei-yutong"},"content":"        return ab;","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"wei-yutong"},"content":"    public static List\u003cDog\u003e getTypicalDogs() {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"wei-yutong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPLE, BUBBLES, CARSON, DUKE, ELSA, FLORA, GENIE));","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"wei-yutong"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"wei-yutong"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"ZhangAnli":4,"wei-yutong":63,"kouyk":24}},{"path":"src/test/java/dog/pawbook/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"    public static final Integer ID_FIRST_OWNER \u003d 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"    public static final Integer ID_SECOND_OWNER \u003d 2;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    public static final Integer ID_THIRD_OWNER \u003d 3;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    public static final Integer ID_FIRST_DOG \u003d 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    public static final Integer ID_SECOND_DOG \u003d 2;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    public static final Integer ID_THIRD_DOG \u003d 3;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kouyk":7,"-":6}},{"path":"src/test/java/dog/pawbook/testutil/TypicalOwners.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.testutil;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"ZhangAnli"},"content":"import dog.pawbook.model.Database;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.model.managedentity.owner.Owner;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":" * A utility class containing a list of {@code Owner} objects to be used in tests.","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"public class TypicalOwners {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner ALICE \u003d new OwnerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner BENSON \u003d new OwnerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner CARL \u003d new OwnerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner DANIEL \u003d new OwnerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner ELLE \u003d new OwnerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner FIONA \u003d new OwnerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner GEORGE \u003d new OwnerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner HOON \u003d new OwnerBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner IDA \u003d new OwnerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"    // Manually added - Owner\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner AMY \u003d new OwnerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    public static final Owner BOB \u003d new OwnerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"    private TypicalOwners() {} // prevents instantiation","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"ZhangAnli"},"content":"     * Returns an {@code Database} with all the typical owners.","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"ZhangAnli"},"content":"    public static Database getTypicalDatabase() {","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"ZhangAnli"},"content":"        Database ab \u003d new Database();","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"        for (Owner owner : getTypicalOwners()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"shaelynl"},"content":"            ab.addEntity(owner);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"    public static List\u003cOwner\u003e getTypicalOwners() {","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"shaelynl":1,"ZhangAnli":4,"wei-yutong":17,"kouyk":13,"-":41}},{"path":"src/test/java/dog/pawbook/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kouyk":1,"-":34}},{"path":"src/test/java/dog/pawbook/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package dog.pawbook.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static dog.pawbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import dog.pawbook.MainApp;","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link UiPartTest#VALID_FILE_PATH}.","lastModifiedDate":"2021-03-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kouyk":4,"-":110}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"\u003c?import dog.pawbook.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kouyk":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"\u003c?import dog.pawbook.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"\u003cfx:root type\u003d\"dog.pawbook.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kouyk":2,"-":5}}]
