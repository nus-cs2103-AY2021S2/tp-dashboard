[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W13-3/tp/actions)","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"* HeliBook is a **desktop app for managing your children’s contacts**.","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"* It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, HeliBook can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"* It is named `HeliBook` because it is designed to be an address book for helicopter parents.  A helicopter parent is a parent who takes an overprotective or excessive interest in the life of their child or children.","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"* For the detailed documentation of this project, see the **[HeliBook Product Website](https://ay2021s2-cs2103t-w13-3.github.io/tp/)**.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"* This project is based on the **AddressBook-Level3 project** created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"clarlzx":6,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Stratostorm"},"content":"    archiveName \u003d \u0027helibook.jar\u0027","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Stratostorm"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"Stratostorm"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Stratostorm":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"HeliBook is a application that stores, manages and allows for quick access to your child\u0027s important contacts. ","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"We are the team behind HeliBook. We are based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"### Liao Xing Peng","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"\u003cimg src\u003d\"images/mechastriker3.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"[[github](http://github.com/mechastriker3)]","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"[[portfolio](team/mechastriker3.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"* Role: Team Lead","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"* Responsibilities: Adding Contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"### Clarissa Lee","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"\u003cimg src\u003d\"images/clarlzx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"[[github](http://github.com/clarlzx)] [[portfolio](team/clarlzx.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"* Responsibilities: UI, Search Contacts","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"### Edeline Tenges","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"\u003cimg src\u003d\"images/edelinetenges.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"[[github](http://github.com/edelinetenges)]","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"[[portfolio](team/edelinetenges.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"* Role: Graphics and Design","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"* Responsibilities: Sorting Contacts","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"### Huang Weicong","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"\u003cimg src\u003d\"images/stratostorm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"[[github](http://github.com/Stratostorm)]","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"[[portfolio](team/stratostorm.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"* Role: Testing, Code Quality","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"* Responsibilities: Tagging Contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"### Nicole Ang","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"\u003cimg src\u003d\"images/nicoleang09.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"[[github](http://github.com/nicoleang09)]","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"[[portfolio](team/nicoleang09.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"* Role: Documentation","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"* Responsibilities: UI, Help Function","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"clarlzx":2,"mechastriker3":29,"Stratostorm":1,"-":29}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"Stratostorm"},"content":"### Tagging features","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"Stratostorm"},"content":"#### Current Implementation ","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"Stratostorm"},"content":"The current tagging system uses objects of the `Tag` class and its children `ChildTag`. Each `Person` in the","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"Stratostorm"},"content":"`AddressBook` maintains its own set of tags as a `HashSet\u003cTag\u003e`. ","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"Stratostorm"},"content":"The `tag` command allows for the appending of tags to an existing","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"Stratostorm"},"content":"`Person` without having to replace existing tags as offered by `edit` and is facilitated by ","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"Stratostorm"},"content":"the `TagCommand` and `TagCommandParser` classes.","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"Stratostorm"},"content":"[Placeholder: Class Diagram of Tag and related classes here... ]","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"Stratostorm"},"content":"As part of the `Model` component, other components interact with tags through the `Model.java` API.","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"Stratostorm"},"content":"As `Person` objects are designed to be immutable, commands that involve manipulating Persons such as `edit` and `tag`","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"Stratostorm"},"content":"involve creating a new `Person` and replacing the original `Person` through `Model#setPerson()`.","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"Stratostorm"},"content":"Given below is an example usage scenario of the `tag` command and how the application behaves through its execution.","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"Stratostorm"},"content":"[Placeholder: screenshot of initial AddressBook before operation]","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"Stratostorm"},"content":"Step 1. The user executes `tag 1 tc/Adam t/formteacher` to add tags to a previous contact they have added.","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"Stratostorm"},"content":"Step 2. The `LogicManager` calls on the `AddressBookParser` to parse the user input","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"Stratostorm"},"content":", which creates a new `TagCommandParser` object and calls its `parse` method.","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"Stratostorm"},"content":"Step 3. `TagCommandParser` will tokenize the given arguments using `ArgumentTokenizer#tokenize()`. ","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"Stratostorm"},"content":"The `index` of `1` and option fields are parsed out. Since no option is used in this scenario,","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"Stratostorm"},"content":"the `isReplace` variable is set to `false`.","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"Stratostorm"},"content":"Step 4. `ParserUtil#parseTags` and `ParserUtil#parseChildTags` methods are used to generate `tagSet`, a `Set\u003cTag\u003e`","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"Stratostorm"},"content":"containing `ChildTag:Adam` and `Tag:formteacher`.","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"Stratostorm"},"content":"Step 5. A new `TagCommand` is created using `index`, `tagSet`, and `isReplace` and returned to `AddressBookParser`","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"Stratostorm"},"content":"and subsequently `LogicManager`.","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"Stratostorm"},"content":"Step 6. `LogicManager` then calls the `execute` method of the newly created `TagCommand`.","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"Stratostorm"},"content":"Step 7. Similar to `EditCommand`, `TagCommand` will generate a new `Person` object ","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"Stratostorm"},"content":"though the `createTaggedPerson` method which will have its tags appended withe the new `Set\u003cTag\u003e` defined by the command.","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"Stratostorm"},"content":"Step 8. The `Model#setPerson()` method is used to update the model with the newly tagged `Person` and a `CommandResult`","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"Stratostorm"},"content":"representing success is returned to the `LogicManager`.","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"Stratostorm"},"content":"Shown below is the sequence diagram that visualises the above operations of a `tag` command.","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"Stratostorm"},"content":"[Placeholder: Sequence diagram describing the program in the above steps]","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"Stratostorm"},"content":"When displaying the tags in the UI as a `PersonCard`, a customised `TagComparator` that implements","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"Stratostorm"},"content":"`Comparator\u003cTag\u003e` is used to sort the tags such that `ChildTag` will be placed first before regular","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"Stratostorm"},"content":"`Tag`. During the generation of the `Label` for the each `Tag` a different background color is then set","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"Stratostorm"},"content":"for `ChildTag` resulting in the UI view shown below.","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"Stratostorm"},"content":"[Placeholder: UI screenshot of AddressBook after operation]","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"Stratostorm"},"content":"#### \\[Proposed\\] Potential Improvements","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"nicoleang09"},"content":"### Help feature","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"nicoleang09"},"content":"#### Implementation","lastModifiedDate":"2021-03-23"},{"lineNumber":194,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"nicoleang09"},"content":"The help mechanism is facilitated by `HelpCommandParser` and `HelpCommand`. `HelpCommandParser` implements `Parser#parse(args)` from the `Parser` interface. The `args` passed to the method specify the command to display information for. If `args` specifies more than one command, a parse exception will be thrown. Otherwise, `HepCommandParser` returns a new `HelpCommand`.","lastModifiedDate":"2021-03-23"},{"lineNumber":196,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":197,"author":{"gitId":"nicoleang09"},"content":"If no commands were specified in `args`, the `HelpCommand` constructor without any parameters will be called. If a single command was specified, the command will be passed as an argument to the `HelpCommand(specifiedCommand)` constructor.","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"nicoleang09"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If multiple commands are specified, an exception is thrown.","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"nicoleang09"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"nicoleang09"},"content":"To execute a `HelpCommand`, `HelpCommand#execute()` is called. The method reads and parses information in the user guide (found at resources/UserGuideCopy.md) into a `helpMessage` differently depending on whether a command was specified. `helpMessage` can contain the following:","lastModifiedDate":"2021-03-23"},{"lineNumber":203,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":204,"author":{"gitId":"nicoleang09"},"content":"* Command was not specified: A list of all available HeliBook commands that was parsed from the command summary table in the user guide.","lastModifiedDate":"2021-03-23"},{"lineNumber":205,"author":{"gitId":"nicoleang09"},"content":"* Command was specified: Information on the specified command taken from the user guide. If the specified command is not found in the user guide, an exception is thrown.","lastModifiedDate":"2021-03-23"},{"lineNumber":206,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":207,"author":{"gitId":"nicoleang09"},"content":"Given below are 2 example usage scenarios and how the help mechanism behaves in each scenario.","lastModifiedDate":"2021-03-23"},{"lineNumber":208,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"nicoleang09"},"content":"Scenario 1: User enters `help` without specifying commands.","lastModifiedDate":"2021-03-23"},{"lineNumber":210,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":211,"author":{"gitId":"nicoleang09"},"content":"1. `LogicManager#execute(userInput)` calls `AddressBookParser#parseCommand(userInput)`, which then parses the input into the command word and arguments, which is an empty string in this case. The empty string is passed to `HelpCommandParser#parse()`.","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"nicoleang09"},"content":"2. A new `HelpCommand()` is returned.","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"nicoleang09"},"content":"3. `LogicManager#execute()` calls `HelpCommand#execute()`, which then calls `HelpCommand#executeNonSpecific()`.","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"nicoleang09"},"content":"4. The command summary table in the user guide is parsed so that each row is displayed as \"commandName: description\" in the `helpMessage` with the help of `HelpCommand#commandSummaryParser()`.","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"nicoleang09"},"content":"5. The `helpMessage` is returned via a `CommandResult`. A default `helpTitle` is also returned via the `CommandResult`.","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"nicoleang09"},"content":"6. `LogicManager#execute(userInput)` returns the `CommandResult` to `MainWindow#executeCommand`, which sets the help window header to `helpTitle` and the content to `helpMessage` via `HelpWindow#setHelpText()`.","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"nicoleang09"},"content":"7. The help window is display.","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"nicoleang09"},"content":"The following sequence diagram shows how the \u0027help\u0027 operation works in this scenario:","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"nicoleang09"},"content":"![HelpSequenceDiagram1](images/HelpSequenceDiagram1.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":223,"author":{"gitId":"nicoleang09"},"content":"Scenario 2: User enters `help find`.","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"nicoleang09"},"content":"1. `LogicManager#execute(userInput)` calls `AddressBookParser#parseCommand(userInput)`, which then parses the input into the command word and arguments, `find`. `find` is passed to `HelpCommandParser#parse(find)`.","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"nicoleang09"},"content":"2. A new `HelpCommand(find)` is returned.","lastModifiedDate":"2021-03-23"},{"lineNumber":227,"author":{"gitId":"nicoleang09"},"content":"3. `LogicManager#execute()` calls `HelpCommand#execute()`, which then calls `HelpCommand#executeSpecific()`.","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"nicoleang09"},"content":"4. The user guide is searched for the section containing information on `find`.","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"nicoleang09"},"content":"5. The information under the `find` section is parsed and appended to `helpMessage`.","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"nicoleang09"},"content":"6. The `find` section heading is parsed and assigned to `helpTitle`. ","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"nicoleang09"},"content":"7. The `helpMessage` and `helpTitle` are returned via a `CommandResult`.","lastModifiedDate":"2021-03-23"},{"lineNumber":232,"author":{"gitId":"nicoleang09"},"content":"8. `LogicManager#execute(userInput)` returns the `CommandResult` to `MainWindow#executeCommand()`, which sets the help window header to `helpTitle` and the content to `helpMessage`.","lastModifiedDate":"2021-03-23"},{"lineNumber":233,"author":{"gitId":"nicoleang09"},"content":"9. The help window is display.","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"nicoleang09"},"content":"The following sequence diagram shows how the \u0027help\u0027 operation works in this scenario:","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"nicoleang09"},"content":"![HelpSequenceDiagram2](images/HelpSequenceDiagram2.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":238,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"nicoleang09"},"content":"The following activity diagram summarises what happens when a user executes the help command:","lastModifiedDate":"2021-03-23"},{"lineNumber":240,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":241,"author":{"gitId":"nicoleang09"},"content":"![HelpActivityDiagram](images/HelpActivityDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":242,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":243,"author":{"gitId":"nicoleang09"},"content":"#### Design consideration:","lastModifiedDate":"2021-03-23"},{"lineNumber":244,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"nicoleang09"},"content":"##### Aspect: Where the information displayed in the help window is retrieved from","lastModifiedDate":"2021-03-23"},{"lineNumber":246,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":247,"author":{"gitId":"nicoleang09"},"content":"* **Alternative 1 (current choice):** Retrieve from user guide document stored in resource folder and packed into `JAR` file. ","lastModifiedDate":"2021-03-23"},{"lineNumber":248,"author":{"gitId":"nicoleang09"},"content":"  * Pros: Easy to update when features change, command classes will not be cluttered with a long `helpMessage` string.","lastModifiedDate":"2021-03-23"},{"lineNumber":249,"author":{"gitId":"nicoleang09"},"content":"  * Cons: Have to remember to copy the latest version of the user guide from the docs folder into the resources folder, scanning user guide for information each time help is called can be time consuming, have to parse markdown into plain text.","lastModifiedDate":"2021-03-23"},{"lineNumber":250,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":251,"author":{"gitId":"nicoleang09"},"content":"* **Alternative 2:** Retrieve from `helpMessage` string stored in each `Command` class. ","lastModifiedDate":"2021-03-23"},{"lineNumber":252,"author":{"gitId":"nicoleang09"},"content":"  * Pros: Easy to implement, easy to retrieve `helpMessage`, minimal processing needed.","lastModifiedDate":"2021-03-23"},{"lineNumber":253,"author":{"gitId":"nicoleang09"},"content":"  * Cons: To update the `helpMessage` of a command, we must search for its class and edit the `helpMessage` string manually. This essentially means we have do 2 updates every time a change is made to a command: one to the user guide and one to the command\u0027s class. ","lastModifiedDate":"2021-03-23"},{"lineNumber":254,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":255,"author":{"gitId":"nicoleang09"},"content":"* **Alternative 3:** Retrieve from user guide webpage.","lastModifiedDate":"2021-03-23"},{"lineNumber":256,"author":{"gitId":"nicoleang09"},"content":"  * Pros: Minimal updating needed when features change since only the user guide in the docs folder needs to be updated.","lastModifiedDate":"2021-03-23"},{"lineNumber":257,"author":{"gitId":"nicoleang09"},"content":"  * Cons: Does not work when HeliBook is used offline, implementation might be complicated, scanning user guide for information each time help is called can be time-consuming.","lastModifiedDate":"2021-03-23"},{"lineNumber":258,"author":{"gitId":"nicoleang09"},"content":"  ","lastModifiedDate":"2021-03-23"},{"lineNumber":259,"author":{"gitId":"nicoleang09"},"content":"Alternative 1 was eventually chosen as we were planning to make major changes to HeliBook over several iterations. Since we are already expected to update the user guide with each iteration, it is more efficient to simply copy the latest user guide document into the resources folder after updates are made rather than to edit each `helpMessage`. Furthermore, as long as the format of the user guide remains constant, parsing the markdown text into plain text is manageable and does not take too much time. This alternative will also work when HeliBook is used offline, making the application easy to use on the go. Lastly, alternative 1 keeps the actual code and documentation separate, making it a more logical and organised implementation. As such, that is the alternative that was chosen. ","lastModifiedDate":"2021-03-23"},{"lineNumber":260,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":261,"author":{"gitId":"edelinetenges"},"content":"### Sort feature","lastModifiedDate":"2021-03-23"},{"lineNumber":262,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":263,"author":{"gitId":"edelinetenges"},"content":"#### Implementation","lastModifiedDate":"2021-03-23"},{"lineNumber":264,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":265,"author":{"gitId":"edelinetenges"},"content":"The sort mechanism is facilitated by `SortCommand` and `SortCommandParser`.","lastModifiedDate":"2021-03-23"},{"lineNumber":266,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":267,"author":{"gitId":"edelinetenges"},"content":"`SortCommandParser` implements the following operation:","lastModifiedDate":"2021-03-23"},{"lineNumber":268,"author":{"gitId":"edelinetenges"},"content":"* `SortCommandParser#parse(String order)` — Parses the arguments using `ArgumentTokenizer#tokenize`","lastModifiedDate":"2021-03-23"},{"lineNumber":269,"author":{"gitId":"edelinetenges"},"content":"  and checks for `option`.","lastModifiedDate":"2021-03-23"},{"lineNumber":270,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":271,"author":{"gitId":"edelinetenges"},"content":"`SortCommand` extends `Command`, and implements the following operation:","lastModifiedDate":"2021-03-23"},{"lineNumber":272,"author":{"gitId":"edelinetenges"},"content":"* `SortCommand#execute(Model model)` — Executes the sort command by sorting the `lastShownList`","lastModifiedDate":"2021-03-23"},{"lineNumber":273,"author":{"gitId":"edelinetenges"},"content":"  and updating the `model` accordingly.","lastModifiedDate":"2021-03-23"},{"lineNumber":274,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":275,"author":{"gitId":"edelinetenges"},"content":"Sorting by name is done by comparing `Person` objects, which implement `Comparable\u003cPerson\u003e`.","lastModifiedDate":"2021-03-23"},{"lineNumber":276,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":277,"author":{"gitId":"edelinetenges"},"content":"Sorting by date is done using the `DateComparator`, which compares the `TimeAdded` attribute of the `Person` objects.","lastModifiedDate":"2021-03-23"},{"lineNumber":278,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":279,"author":{"gitId":"edelinetenges"},"content":"Given below is an example usage scenario and how the sort mechanism behaves at each step.","lastModifiedDate":"2021-03-23"},{"lineNumber":280,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":281,"author":{"gitId":"edelinetenges"},"content":"Step 1. The user executes `add n/David …​`, `add n/Anna …​` and `add n/Chloe …​` in that order.","lastModifiedDate":"2021-03-23"},{"lineNumber":282,"author":{"gitId":"edelinetenges"},"content":"The `Person` objects created will be timestamped with the `TimeAdded` attribute.","lastModifiedDate":"2021-03-23"},{"lineNumber":283,"author":{"gitId":"edelinetenges"},"content":"By default, they will be displayed on in the order in which they were added.","lastModifiedDate":"2021-03-23"},{"lineNumber":284,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":285,"author":{"gitId":"edelinetenges"},"content":"[comment]: \u003c\u003e (add UML diagram)","lastModifiedDate":"2021-03-23"},{"lineNumber":286,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":287,"author":{"gitId":"edelinetenges"},"content":"Step 2. The user executes `sort o/name`.","lastModifiedDate":"2021-03-23"},{"lineNumber":288,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":289,"author":{"gitId":"edelinetenges"},"content":"(Add more steps)","lastModifiedDate":"2021-03-24"},{"lineNumber":290,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":291,"author":{"gitId":"edelinetenges"},"content":"[comment]: \u003c\u003e (add UML diagram)","lastModifiedDate":"2021-03-23"},{"lineNumber":292,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":293,"author":{"gitId":"edelinetenges"},"content":"The following sequence diagram shows how the sort operation works:","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"edelinetenges"},"content":"![SortSequenceDiagram](images/SortSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"edelinetenges"},"content":"Note: Style of diagram to be updated.","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"mechastriker3"},"content":"### Add feature","lastModifiedDate":"2021-03-25"},{"lineNumber":299,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":300,"author":{"gitId":"mechastriker3"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":301,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":302,"author":{"gitId":"mechastriker3"},"content":"The add mechanism is facilitated by `AddCommand` and `AddCommandParser`.","lastModifiedDate":"2021-03-25"},{"lineNumber":303,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":304,"author":{"gitId":"mechastriker3"},"content":"`AddCommandParser` implements the following operation:","lastModifiedDate":"2021-03-25"},{"lineNumber":305,"author":{"gitId":"mechastriker3"},"content":"* `AddCommandParser#parse(String order)` — Parses the arguments using `ArgumentTokenizer#tokenize`","lastModifiedDate":"2021-03-25"},{"lineNumber":306,"author":{"gitId":"mechastriker3"},"content":"  and checks for if the various `args` are specified, only the `n/` arg is ","lastModifiedDate":"2021-03-25"},{"lineNumber":307,"author":{"gitId":"mechastriker3"},"content":"  compulsory to be specified.","lastModifiedDate":"2021-03-25"},{"lineNumber":308,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":309,"author":{"gitId":"mechastriker3"},"content":"`AddCommand` extends `Command`, and implements the following operation:","lastModifiedDate":"2021-03-25"},{"lineNumber":310,"author":{"gitId":"mechastriker3"},"content":"* `AddCommand#execute(Model model)` — Executes the add command by ","lastModifiedDate":"2021-03-25"},{"lineNumber":311,"author":{"gitId":"mechastriker3"},"content":"  adding the contact with the given `args`, if one of more args are not ","lastModifiedDate":"2021-03-25"},{"lineNumber":312,"author":{"gitId":"mechastriker3"},"content":"  specified a \u0027NIL\u0027 is automatically used as a placeholder.","lastModifiedDate":"2021-03-25"},{"lineNumber":313,"author":{"gitId":"mechastriker3"},"content":"  ","lastModifiedDate":"2021-03-25"},{"lineNumber":314,"author":{"gitId":"mechastriker3"},"content":"Given below is an example usage scenario and how the add mechanism behaves at each step.","lastModifiedDate":"2021-03-25"},{"lineNumber":315,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":316,"author":{"gitId":"mechastriker3"},"content":"Step 1. The user executes `add n/David `. Since only the `n/` arg is specified, ","lastModifiedDate":"2021-03-25"},{"lineNumber":317,"author":{"gitId":"mechastriker3"},"content":"\u0027NIL\u0027 will be used for the remaining args.","lastModifiedDate":"2021-03-25"},{"lineNumber":318,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":319,"author":{"gitId":"mechastriker3"},"content":"[comment]: \u003c\u003e (add UML diagram)","lastModifiedDate":"2021-03-25"},{"lineNumber":320,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":321,"author":{"gitId":"mechastriker3"},"content":"The following sequence diagram shows how the add operation works:","lastModifiedDate":"2021-03-25"},{"lineNumber":322,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":323,"author":{"gitId":"mechastriker3"},"content":"[Add sequence diagram]","lastModifiedDate":"2021-03-25"},{"lineNumber":324,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":325,"author":{"gitId":"mechastriker3"},"content":"Note: Style of diagram to be updated.","lastModifiedDate":"2021-03-25"},{"lineNumber":326,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":327,"author":{"gitId":"clarlzx"},"content":"### \\[Proposed\\] Appointment feature","lastModifiedDate":"2021-03-25"},{"lineNumber":328,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":329,"author":{"gitId":"clarlzx"},"content":"#### Proposed Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":330,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":331,"author":{"gitId":"clarlzx"},"content":"An appointment feature will be implemented in the next version of this application. It is a useful feature for parents to track any important appointments","lastModifiedDate":"2021-03-25"},{"lineNumber":332,"author":{"gitId":"clarlzx"},"content":"related to their children. For example, a parent teacher meeting or a birthday party at the house of their child\u0027s friend. ","lastModifiedDate":"2021-03-25"},{"lineNumber":333,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":334,"author":{"gitId":"clarlzx"},"content":"##### UI Component","lastModifiedDate":"2021-03-25"},{"lineNumber":335,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":336,"author":{"gitId":"clarlzx"},"content":"![AppointmentWithUIClassDiagram](images/AppointmentWithUIClassDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":337,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":338,"author":{"gitId":"clarlzx"},"content":"The appointment will be added as a column beside the current address column.","lastModifiedDate":"2021-03-25"},{"lineNumber":339,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":340,"author":{"gitId":"clarlzx"},"content":"##### Model Component","lastModifiedDate":"2021-03-25"},{"lineNumber":341,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":342,"author":{"gitId":"clarlzx"},"content":"![AppointmentWithModelClassDiagram](images/AppointmentWithModelClassDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":343,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":344,"author":{"gitId":"clarlzx"},"content":"As shown in the diagram above, the proposed appointment feature is facilitated by `AppointmentBook`. It is similar to `AddressBook`, with similar methods","lastModifiedDate":"2021-03-25"},{"lineNumber":345,"author":{"gitId":"clarlzx"},"content":"that are related to appointment instead. `AppointmentBook` contains `UniqueAppointmentList` that stores `Appointment` objects by","lastModifiedDate":"2021-03-25"},{"lineNumber":346,"author":{"gitId":"clarlzx"},"content":"implementing `Iterable\u003cAppointment\u003e`. `AppointmentBook` implements the interface `ReadOnlyAppointmentBook`.","lastModifiedDate":"2021-03-25"},{"lineNumber":347,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":348,"author":{"gitId":"clarlzx"},"content":"A filtered list of `Appointment` objects is maintained by `ModelManager`. ","lastModifiedDate":"2021-03-25"},{"lineNumber":349,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":350,"author":{"gitId":"clarlzx"},"content":"![AppointmentClassDiagram](images/AppointmentClassDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":351,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":352,"author":{"gitId":"clarlzx"},"content":"Attributes of the `Appointment` class:","lastModifiedDate":"2021-03-25"},{"lineNumber":353,"author":{"gitId":"clarlzx"},"content":"* Name of appointment, which is a String object","lastModifiedDate":"2021-03-25"},{"lineNumber":354,"author":{"gitId":"clarlzx"},"content":"* Location of appointment, which is a String object","lastModifiedDate":"2021-03-25"},{"lineNumber":355,"author":{"gitId":"clarlzx"},"content":"* Date of appointment, which is a DateTime object","lastModifiedDate":"2021-03-25"},{"lineNumber":356,"author":{"gitId":"clarlzx"},"content":"* Contacts that parents might need to contact about the appointment. This is an ArrayList of Person objects.","lastModifiedDate":"2021-03-25"},{"lineNumber":357,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":358,"author":{"gitId":"clarlzx"},"content":"##### Logic Component","lastModifiedDate":"2021-03-25"},{"lineNumber":359,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":360,"author":{"gitId":"clarlzx"},"content":"![AppointmentWithLogicClassDiagram](images/AppointmentWithLogicClassDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":361,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":362,"author":{"gitId":"clarlzx"},"content":"`HeliBookParser` looks at the user command and determines which command it is. After determing the correct command, it creates a parser","lastModifiedDate":"2021-03-25"},{"lineNumber":363,"author":{"gitId":"clarlzx"},"content":"for that particularly command.  ","lastModifiedDate":"2021-03-25"},{"lineNumber":364,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":365,"author":{"gitId":"clarlzx"},"content":"![AppointmentCommandClassDiagram](images/AppointmentCommandClassDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":366,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":367,"author":{"gitId":"clarlzx"},"content":"The main methods for the appointment feature include `AddAppointmentCommand`, `DeleteAppointmentCommand` and `FindAppointmentCommand`. These methods interact with other components in a similar way","lastModifiedDate":"2021-03-25"},{"lineNumber":368,"author":{"gitId":"clarlzx"},"content":"to similar methods for AddressBook. ","lastModifiedDate":"2021-03-25"},{"lineNumber":369,"author":{"gitId":"clarlzx"},"content":"* For `AddAppointmentCommand`, adding of contacts is handled by `AppointmentBook#addAppointment`, similar to how adding of addresses is handled by `AddressBook#addPerson()`. ","lastModifiedDate":"2021-03-25"},{"lineNumber":370,"author":{"gitId":"clarlzx"},"content":"* For `FindAppointmentCommand`, a predicate defined by given keywords is fed to the filtered list of `Appointment` handled by `ModelManager`, and this filters the `Appointment` objects.","lastModifiedDate":"2021-03-25"},{"lineNumber":371,"author":{"gitId":"clarlzx"},"content":"* For `DeleteAppointmentCommand`, `Appointment` is selected to be deleted by the given `index`.","lastModifiedDate":"2021-03-25"},{"lineNumber":372,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":373,"author":{"gitId":"clarlzx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** FindAppointmentCommand only supports finding by the name of the appointment.","lastModifiedDate":"2021-03-25"},{"lineNumber":374,"author":{"gitId":"clarlzx"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":375,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":376,"author":{"gitId":"clarlzx"},"content":"##### Storage Component","lastModifiedDate":"2021-03-25"},{"lineNumber":377,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":378,"author":{"gitId":"clarlzx"},"content":"![AppointmentWithStorageClassDiagram](images/AppointmentWithStorageClassDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":380,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":470,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"edelinetenges"},"content":"* tech-savvy parents","lastModifiedDate":"2021-03-02"},{"lineNumber":484,"author":{"gitId":"edelinetenges"},"content":"* need to manage a significant number of their young children\u0027s contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":485,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":488,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"edelinetenges"},"content":"**Value proposition**: ","lastModifiedDate":"2021-03-02"},{"lineNumber":491,"author":{"gitId":"edelinetenges"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-03-02"},{"lineNumber":492,"author":{"gitId":"edelinetenges"},"content":"* easily keep track of their children\u0027s contacts in one centralised platform","lastModifiedDate":"2021-03-02"},{"lineNumber":493,"author":{"gitId":"edelinetenges"},"content":"* organise, categorise and sort their contacts easily","lastModifiedDate":"2021-03-02"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person               |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name           | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"edelinetenges"},"content":"| `* * *`  | Beginner\t                                | Add contacts\t                 | add contacts                                                     |","lastModifiedDate":"2021-03-02"},{"lineNumber":508,"author":{"gitId":"edelinetenges"},"content":"| `* *`\t   | User\t                                    | Add incomplete contacts\t     | easily save contacts I don\u0027t have all the contact information for easily without having to use placeholders","lastModifiedDate":"2021-03-02"},{"lineNumber":509,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | Beginner\t                                | Add contacts easily \t         | save time","lastModifiedDate":"2021-03-02"},{"lineNumber":510,"author":{"gitId":"edelinetenges"},"content":"| `* * *`  | Beginner\t                                | Update contacts\t             | change the details of my contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":511,"author":{"gitId":"edelinetenges"},"content":"| `* * *`  | Beginner\t                                | Be able to view a user guide\t | learn to use the app","lastModifiedDate":"2021-03-02"},{"lineNumber":512,"author":{"gitId":"edelinetenges"},"content":"| `* * *`  | Parent of multiple children\t            | Be able to view a user guide\t | troubleshoot any problems that I encounter","lastModifiedDate":"2021-03-02"},{"lineNumber":513,"author":{"gitId":"edelinetenges"},"content":"| `* * *`  | Parent of multiple children\t            | Tag my contacts by child\t     | easily identify which child the contact is related to","lastModifiedDate":"2021-03-02"},{"lineNumber":514,"author":{"gitId":"edelinetenges"},"content":"| `* * *`  | User\t                                    | Tag my contacts by other categories\t| identify the contacts more easily (i.e. by subject, lesson etc.)","lastModifiedDate":"2021-03-02"},{"lineNumber":515,"author":{"gitId":"edelinetenges"},"content":"| `*`      | Beginner\t                                | Download the app easily\t     | use the app quickly","lastModifiedDate":"2021-03-02"},{"lineNumber":516,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | Beginner\t                                | Add photos to contacts\t     | match the contacts\u0027 names to their faces easily","lastModifiedDate":"2021-03-02"},{"lineNumber":517,"author":{"gitId":"edelinetenges"},"content":"| `*`      | User\t                                    | Colour code my tags\t         | easily differentiate my contacts at a glance","lastModifiedDate":"2021-03-02"},{"lineNumber":518,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | User\t                                    | Search for contacts by tag\t | search for contacts quickly and easily","lastModifiedDate":"2021-03-02"},{"lineNumber":519,"author":{"gitId":"edelinetenges"},"content":"| `* * *`  | User\t                                    | Search for contacts by name    | search for contacts quickly and easily","lastModifiedDate":"2021-03-02"},{"lineNumber":520,"author":{"gitId":"edelinetenges"},"content":"| `*`      | User\t                                    | Search for contacts by number  | search for contacts quickly and easily","lastModifiedDate":"2021-03-02"},{"lineNumber":521,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | User\t                                    | Sort my contacts by tag\t     | search for contacts quickly and easily","lastModifiedDate":"2021-03-02"},{"lineNumber":522,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | User\t                                    | Sort my contacts by name\t     | search for contacts quickly and easily","lastModifiedDate":"2021-03-02"},{"lineNumber":523,"author":{"gitId":"edelinetenges"},"content":"| `*`      | User\t                                    | Sort my contacts by the closest appointment time\t| find out my next upcoming appointment quickly.","lastModifiedDate":"2021-03-02"},{"lineNumber":524,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | User\t                                    | Export my contacts\t         | share the contacts with other people/transfer to other devices.","lastModifiedDate":"2021-03-02"},{"lineNumber":525,"author":{"gitId":"edelinetenges"},"content":"| `*`      | User\t                                    | Sync my contacts with my partner | add or update the contacts for our children once such that both of us are able to see the changes.","lastModifiedDate":"2021-03-02"},{"lineNumber":526,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | User\t                                    | Remove all contacts saved under a certain tag\t| quickly clear contacts that I no longer need because my child has graduated.","lastModifiedDate":"2021-03-02"},{"lineNumber":527,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | User\t                                    | Remove all selected contacts\t |quickly clear contacts that I no longer need","lastModifiedDate":"2021-03-02"},{"lineNumber":528,"author":{"gitId":"edelinetenges"},"content":"| `*`      | User who works under different lighting conditions\t| Change the colour scheme of my app | view the contents more clearly and my app looks better visually.","lastModifiedDate":"2021-03-02"},{"lineNumber":529,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | Careless user\t                            | Receive a notification before deleting my contacts | prevent deleting important contacts by accident","lastModifiedDate":"2021-03-02"},{"lineNumber":530,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | Careless user\t                            | Undo my actions\t             | undo any careless mistakes","lastModifiedDate":"2021-03-02"},{"lineNumber":531,"author":{"gitId":"edelinetenges"},"content":"| `*`      | Careless user\t                            | Have a bin for deleted contacts | retrieve any contacts deleted by mistake","lastModifiedDate":"2021-03-02"},{"lineNumber":532,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | User\t                                    | Add an appointment time with a particular contact\t| keep track of any meetings I have with my children’s teachers.","lastModifiedDate":"2021-03-02"},{"lineNumber":533,"author":{"gitId":"edelinetenges"},"content":"| `* *`    | Parent of multiple children\t            | Record appointment dates and times and | keep track of all appointments I need","lastModifiedDate":"2021-03-02"},{"lineNumber":534,"author":{"gitId":"edelinetenges"},"content":"| `*`      | Parent of multiple children\t            | Be notified of clashes in appointments | ensure that I/my children can attend all of the appointments","lastModifiedDate":"2021-03-02"},{"lineNumber":535,"author":{"gitId":"edelinetenges"},"content":"| `*`      | Caring Parent                              | Favourite contacts\t         | ensure that the important contacts are at the forefront of my list.","lastModifiedDate":"2021-03-02"},{"lineNumber":536,"author":{"gitId":"edelinetenges"},"content":"| `*`      | Frequent user of the app\t                | Have shortcuts to quickly add contacts/details | save the contact/details first thing when I receive them","lastModifiedDate":"2021-03-02"},{"lineNumber":537,"author":{"gitId":"edelinetenges"},"content":"| `*`      | User who contacts some people more frequently than others\t| Have a list of recently contacted contacts | view their details easily.","lastModifiedDate":"2021-03-02"},{"lineNumber":538,"author":{"gitId":"edelinetenges"},"content":"| `* * *`  | User\t                                    | Have a list of contact         | view all contacts at the same time","lastModifiedDate":"2021-03-02"},{"lineNumber":539,"author":{"gitId":"edelinetenges"},"content":"| `* * *`  | User\t                                    | Be able to view the number, email address of my contacts\t| all or email them quickly","lastModifiedDate":"2021-03-02"},{"lineNumber":540,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"edelinetenges"},"content":"(For all use cases below, the **System** is the `HeliBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-03-02"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":548,"author":{"gitId":"edelinetenges"},"content":"**UC1: Edit a person**","lastModifiedDate":"2021-03-02"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":550,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":552,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-03-02"},{"lineNumber":553,"author":{"gitId":"edelinetenges"},"content":"2.  HeliBook shows a list of persons","lastModifiedDate":"2021-03-02"},{"lineNumber":554,"author":{"gitId":"edelinetenges"},"content":"3.  User requests to edit a specific person\u0027s detail in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":555,"author":{"gitId":"edelinetenges"},"content":"4.  HeliBook edits the person\u0027s details accordingly","lastModifiedDate":"2021-03-02"},{"lineNumber":556,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":557,"author":{"gitId":"edelinetenges"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":558,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":559,"author":{"gitId":"edelinetenges"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":560,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":561,"author":{"gitId":"edelinetenges"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":562,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":563,"author":{"gitId":"edelinetenges"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":564,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":565,"author":{"gitId":"edelinetenges"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":566,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":567,"author":{"gitId":"edelinetenges"},"content":"    * 3a1. HeliBook shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":568,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":569,"author":{"gitId":"edelinetenges"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":570,"author":{"gitId":"edelinetenges"},"content":"    ","lastModifiedDate":"2021-03-02"},{"lineNumber":571,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"edelinetenges"},"content":"**UC2: Delete a person**","lastModifiedDate":"2021-03-02"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"edelinetenges"},"content":"2.  HeliBook shows a list of persons","lastModifiedDate":"2021-03-02"},{"lineNumber":578,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"edelinetenges"},"content":"4.  HeliBook deletes the person","lastModifiedDate":"2021-03-02"},{"lineNumber":580,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":581,"author":{"gitId":"edelinetenges"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":582,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":583,"author":{"gitId":"edelinetenges"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":584,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":585,"author":{"gitId":"edelinetenges"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":586,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":587,"author":{"gitId":"edelinetenges"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":588,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":589,"author":{"gitId":"edelinetenges"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":590,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":591,"author":{"gitId":"edelinetenges"},"content":"    * 3a1. HeliBook shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":592,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":593,"author":{"gitId":"edelinetenges"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":594,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":595,"author":{"gitId":"edelinetenges"},"content":"**UC3: Add a tag to a person**","lastModifiedDate":"2021-03-02"},{"lineNumber":596,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":597,"author":{"gitId":"edelinetenges"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":598,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":599,"author":{"gitId":"edelinetenges"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-03-02"},{"lineNumber":600,"author":{"gitId":"edelinetenges"},"content":"2.  HeliBook shows a list of persons","lastModifiedDate":"2021-03-02"},{"lineNumber":601,"author":{"gitId":"edelinetenges"},"content":"3.  User requests to tag a specific person in the list with a specific tag name","lastModifiedDate":"2021-03-02"},{"lineNumber":602,"author":{"gitId":"edelinetenges"},"content":"4.  HeliBook adds the tag to the person","lastModifiedDate":"2021-03-02"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"edelinetenges"},"content":"    * 3a1. HeliBook shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"edelinetenges"},"content":"* 3b. The given tag name already exists for that person.","lastModifiedDate":"2021-03-02"},{"lineNumber":619,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":620,"author":{"gitId":"edelinetenges"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":622,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"nicoleang09"},"content":"4.  Should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2021-03-01"},{"lineNumber":630,"author":{"gitId":"nicoleang09"},"content":"5.  A user who is new to the app should be able to familiarise themselves with it within a few uses.","lastModifiedDate":"2021-03-01"},{"lineNumber":631,"author":{"gitId":"nicoleang09"},"content":"6.  All commands should be explained in the user guide, including the format of the command and examples of how it is used.","lastModifiedDate":"2021-03-01"},{"lineNumber":632,"author":{"gitId":"nicoleang09"},"content":"7.  Should be able to restore address book with up to 1000 persons from backup file within seconds if app crashes and in-app data is lost.","lastModifiedDate":"2021-03-02"},{"lineNumber":633,"author":{"gitId":"nicoleang09"},"content":"8.  Should be able to locate local backup file easily.","lastModifiedDate":"2021-03-02"},{"lineNumber":634,"author":{"gitId":"nicoleang09"},"content":"9.  App UI should look uniform across different OSes to ensure that usage of application is similar regardless of OS.","lastModifiedDate":"2021-03-02"},{"lineNumber":635,"author":{"gitId":"nicoleang09"},"content":"10. Should be able to view all data with or without app window maximised.","lastModifiedDate":"2021-03-02"},{"lineNumber":636,"author":{"gitId":"nicoleang09"},"content":"11. Should be able to customise colour scheme of app for comfortable viewing without having to search up hexadecimal codes.","lastModifiedDate":"2021-03-02"},{"lineNumber":637,"author":{"gitId":"nicoleang09"},"content":"12. Project is expected to adhere to a schedule that delivers a feature set every two weeks.","lastModifiedDate":"2021-03-02"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"nicoleang09"},"content":"* **Contact/Person**: Entry in the address book containing a person\u0027s contact information","lastModifiedDate":"2021-03-02"},{"lineNumber":645,"author":{"gitId":"nicoleang09"},"content":"* **Index**: Index number shown in the displayed person list","lastModifiedDate":"2021-03-02"},{"lineNumber":646,"author":{"gitId":"nicoleang09"},"content":"* **Backup file**: JSON file that stores address book data in the hard disk","lastModifiedDate":"2021-03-02"},{"lineNumber":647,"author":{"gitId":"nicoleang09"},"content":"* **Action**: Executed command","lastModifiedDate":"2021-03-02"},{"lineNumber":648,"author":{"gitId":"nicoleang09"},"content":"* **List**: Currently displayed list of contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"clarlzx":52,"nicoleang09":84,"mechastriker3":29,"Stratostorm":55,"edelinetenges":127,"-":354}},{"path":"docs/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"[-\u003e LogicManager: execute(\"sort o/name\")","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"LogicManager -\u003e AddressBookParser: parseCommand(\"sort o/name\")","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"AddressBookParser -\u003e SortCommandParser: parse(\"sort o/name\")","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"activate SortCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"create SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"SortCommandParser -\u003e SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"activate SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"SortCommandParser \u003c-- SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"deactivate SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"AddressBookParser \u003c-- SortCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"deactivate SortCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"LogicManager \u003c-- AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"LogicManager -\u003e SortCommand: execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"activate SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"SortCommand -\u003e Model: getFilteredPersonList()","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"SortCommand -\u003e Model: setPerson(sortedPersons)","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"SortCommand -\u003e Model: updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"create CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"SortCommand -\u003e CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"activate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"SortCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"LogicManager \u003c-- SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"deactivate SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"\u003c-- LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"edelinetenges"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"edelinetenges":49}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"Hello! Are you a parent whose phone\u0027s contact book is filling up with the contacts of teachers? Do you have trouble","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"remembering who exactly that contact in your contact book is referring to? Do you have multiple children and want","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"a centralised place to keep track of all their activities? Then HeliBook can be the app for you!","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"HeliBook is a **desktop app for managing your children\u0027s contacts and their related appointments, ","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"optimized for use via a Command Line Interface** (CLI) while still having the benefits of a ","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"Graphical User Interface (GUI). ","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"If you can type fast, HeliBook can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"1. Download the latest `helibook.jar` from [here](https://github.com/AY2021S2-CS2103T-W13-3/tp/releases).","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your HeliBook.","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"This section is separated into the following sub-sections:","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"* [General Commands](#general-commands): Commands related to navigating HeliBook","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"* [Address Book Commands](#address-book-commands): Commands related to managing contacts","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"* [Appointment Book Commands](#appointment-book-commands): Commands related to managing appointments","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"The command summary table can also be accessed [here](#command-summary).","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"### General Commands","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"#### Viewing help : `help`","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Stratostorm"},"content":"Shows information about available commands and how they can be used.","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"Format: `help [COMMAND]`","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Stratostorm"},"content":"* If command is not specified, a summary of all available commands will be displayed, along with a link to access the full user guide.","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"Stratostorm"},"content":"* If command is specified, detailed information about the command will be displayed. ","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"Stratostorm"},"content":"Examples:","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"Stratostorm"},"content":"* `help` Displays summary of all available commands.","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"Stratostorm"},"content":"* `help find` Displays detailed information about the find command.","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"Exits the program.","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"Format: `exit`","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"### Address Book Commands","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Stratostorm"},"content":"#### Adding a contact: `add`","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"Stratostorm"},"content":"Adds a contact to the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Stratostorm"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [tc/CHILDTAG]…​ [t/TAG]…​`","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"Stratostorm"},"content":"A contact can have any number of tags (including 0)","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"Stratostorm"},"content":"You can add a contact with only some of the information, you can fill in the rest later on.","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Stratostorm"},"content":"* `add n/John Doe p/98765432`","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"#### Adding/replacing tags to a contact: `tag` ","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"Stratostorm"},"content":"Adds or replaces tags to the specified contact by index.","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"Stratostorm"},"content":"Format: `tag INDEX [o/OPTION] [tc/CHILDTAG]…​ [t/TAG]…​`","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"Stratostorm"},"content":"* Tags the contact at the specified INDEX. The index refers to the index number shown in the displayed contact list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"Stratostorm"},"content":"Currently available options for the `[OPTION]` field include:","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"Stratostorm"},"content":"* `rt` Replaces the currently existing tags with the given new set of tags ","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"Stratostorm"},"content":"  ","lastModifiedDate":"2021-03-01"},{"lineNumber":132,"author":{"gitId":"Stratostorm"},"content":"Examples:","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"Stratostorm"},"content":"*  `tag 4 t/School t/English` Adds the tags School and English to the 4th contact.","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"Stratostorm"},"content":"*  `tag 2 o/rt tc/Alexa t/English` Replaces all existing tags of the 2nd contact with the child tag Alexa and the tag English.","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":136,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"Stratostorm"},"content":"#### Listing all contacts : `list`","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"Stratostorm"},"content":"Shows a list of all contacts in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"edelinetenges"},"content":"Format: `list [o/OPTION]`","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"edelinetenges"},"content":"Currently available options for the `[OPTION]` field include:","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"Stratostorm"},"content":"* `fav` Shows list of favourited contacts in the address book","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"edelinetenges"},"content":"Examples:","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"Stratostorm"},"content":"* `list` List all contacts in the address book","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"Stratostorm"},"content":"* `list o/fav` Lists all favourited contacts in the address book","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"Stratostorm"},"content":"#### Editing a contact : `edit`","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"Stratostorm"},"content":"Edits an existing contact in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"Stratostorm"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [tc/CHILDTAG]…​ [t/TAG]…​`","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"Stratostorm"},"content":"* Edits the contact at the specified `INDEX`.","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"Stratostorm"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"nicoleang09"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Stratostorm"},"content":"* When editing tags, the existing tags of the contact will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"Stratostorm"},"content":"* You can remove all the contact’s tags by typing `t/` without","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"Stratostorm"},"content":"    specifying any tags after it. Note: all ChildTags will also be removed.","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"Stratostorm"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st contact to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"Stratostorm"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"Stratostorm"},"content":"#### Locating contacts by name: `find`","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"Stratostorm"},"content":"Finds contacts whose names contain any of the given keywords.","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"Stratostorm"},"content":"* Incomplete words will also be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"Stratostorm"},"content":"* contacts matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"Stratostorm"},"content":"* If *n* contacts can be found, message “*n* contacts listed!” will be displayed","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"Stratostorm"},"content":"  e.g. when 0 results, \"0 contacts listed!\" is displayed","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"nicoleang09"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li` when no exact matches are found","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"Stratostorm"},"content":"#### Deleting a contact : `delete`","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Stratostorm"},"content":"Deletes the specified contact from the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"Stratostorm"},"content":"* Deletes the contact at the specified `INDEX`.","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"Stratostorm"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"Stratostorm"},"content":"* `list` followed by `delete 2` deletes the 2nd contact in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"Stratostorm"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st contact in the results of the `find` command.","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Stratostorm"},"content":"#### Sorting all contacts : `sort`","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":206,"author":{"gitId":"Stratostorm"},"content":"Sorts the address book in the order based on the given option.","lastModifiedDate":"2021-03-01"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":208,"author":{"gitId":"edelinetenges"},"content":"Format: `sort o/OPTION` ","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":210,"author":{"gitId":"Stratostorm"},"content":"Currently available options for the `[OPTION]` field include:","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"edelinetenges"},"content":"* `name` Sorts by name (alphabetical order)","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"edelinetenges"},"content":"* `date` Sorts by date added (chronological order)","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"Stratostorm"},"content":"  ","lastModifiedDate":"2021-03-01"},{"lineNumber":214,"author":{"gitId":"Stratostorm"},"content":"Examples:","lastModifiedDate":"2021-03-01"},{"lineNumber":215,"author":{"gitId":"edelinetenges"},"content":"* `sort o/name` returns the contact list sorted in alphabetical order.","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"edelinetenges"},"content":"* `sort o/date` returns the contact list sorted in chronological order.","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":218,"author":{"gitId":"Stratostorm"},"content":"#### Favourite a contact : `fav`","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":220,"author":{"gitId":"edelinetenges"},"content":"Format: `fav INDEX [o/OPTION]`","lastModifiedDate":"2021-03-26"},{"lineNumber":221,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":222,"author":{"gitId":"Stratostorm"},"content":"* Favourite the contact at the specified `INDEX`.","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"Stratostorm"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"edelinetenges"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-26"},{"lineNumber":225,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":226,"author":{"gitId":"edelinetenges"},"content":"Currently available options for the `[OPTION]` field include:","lastModifiedDate":"2021-03-26"},{"lineNumber":227,"author":{"gitId":"Stratostorm"},"content":"* `remove` Unfavourites the specified contact","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":229,"author":{"gitId":"edelinetenges"},"content":"Examples:","lastModifiedDate":"2021-03-26"},{"lineNumber":230,"author":{"gitId":"Stratostorm"},"content":"* `list` followed by `fav 2` favourites the 2nd contact in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"Stratostorm"},"content":"* `find Betsy` followed by `delete 1` favourites the 1st contact in the results of the `find` command.","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"Stratostorm"},"content":"* `fav 3 o/remove` unfavourites the 3rd contact in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":234,"author":{"gitId":"edelinetenges"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-26"},{"lineNumber":235,"author":{"gitId":"Stratostorm"},"content":"When a contact is favourited, the star next to their name will become filled/white.","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"Stratostorm"},"content":"When a contact is unfavourited, the star will turn empty.","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"edelinetenges"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":238,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":239,"author":{"gitId":"nicoleang09"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"Stratostorm"},"content":"Clears all entries from the address book or clears all contacts with the specified tags.","lastModifiedDate":"2021-03-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"Stratostorm"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:warning: **Warning:**","lastModifiedDate":"2021-03-27"},{"lineNumber":244,"author":{"gitId":"Stratostorm"},"content":"The tags here do not differentiate between ChildTags and regular Tags. ","lastModifiedDate":"2021-03-27"},{"lineNumber":245,"author":{"gitId":"Stratostorm"},"content":"This command will delete all entries that match **ANY** of the given tags.","lastModifiedDate":"2021-03-27"},{"lineNumber":246,"author":{"gitId":"Stratostorm"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":247,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":248,"author":{"gitId":"Stratostorm"},"content":"Format: `clear [t/TAG]…​`","lastModifiedDate":"2021-03-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"Stratostorm"},"content":"Examples:","lastModifiedDate":"2021-03-27"},{"lineNumber":252,"author":{"gitId":"Stratostorm"},"content":"* `clear` deletes all entries in the address book.","lastModifiedDate":"2021-03-27"},{"lineNumber":253,"author":{"gitId":"Stratostorm"},"content":"* `clear t/teacher` deletes all contacts with the tag `teacher`","lastModifiedDate":"2021-03-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"nicoleang09"},"content":"### Appointment Book Commands","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"nicoleang09"},"content":"#### Adding an appointment : `addAppt`","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"nicoleang09"},"content":"Adds an appointment to the appointment book.","lastModifiedDate":"2021-03-28"},{"lineNumber":260,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":261,"author":{"gitId":"nicoleang09"},"content":"Format: `addAppt n/NAME a/ADDRESS d/DATE [c/CONTACT_INDEX]…​ [tc/CHILDTAG]…​`","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":263,"author":{"gitId":"nicoleang09"},"content":"* Contact in the address book at the specified `CONTACT_INDEX` is added to the appointment.","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"Stratostorm"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"nicoleang09"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-28"},{"lineNumber":266,"author":{"gitId":"nicoleang09"},"content":"* `DATE` has to be in the format \"`dd`/`MM`/`yyyy` `HH`:`mm`\".","lastModifiedDate":"2021-03-28"},{"lineNumber":267,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":268,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-28"},{"lineNumber":269,"author":{"gitId":"nicoleang09"},"content":"* `addAppt n/PTM a/ABC Primary School d/21/03/2021 10:00 c/2 ct/amy`","lastModifiedDate":"2021-03-30"},{"lineNumber":270,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":271,"author":{"gitId":"nicoleang09"},"content":"#### Deleting an appointment : `deleteAppt`","lastModifiedDate":"2021-03-30"},{"lineNumber":272,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":273,"author":{"gitId":"nicoleang09"},"content":"Deletes the specified appointment from the appointment book.","lastModifiedDate":"2021-03-28"},{"lineNumber":274,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":275,"author":{"gitId":"nicoleang09"},"content":"Format: `deleteAppt INDEX`","lastModifiedDate":"2021-03-28"},{"lineNumber":276,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":277,"author":{"gitId":"nicoleang09"},"content":"* Deletes the appointment at the specified `INDEX`.","lastModifiedDate":"2021-03-28"},{"lineNumber":278,"author":{"gitId":"nicoleang09"},"content":"* The index refers to the index number shown in the displayed appointment list.","lastModifiedDate":"2021-03-28"},{"lineNumber":279,"author":{"gitId":"nicoleang09"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-28"},{"lineNumber":280,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":281,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-28"},{"lineNumber":282,"author":{"gitId":"nicoleang09"},"content":"* `list` followed by `deleteAppt 2` deletes the 2nd appointment in the appointment book.","lastModifiedDate":"2021-03-28"},{"lineNumber":283,"author":{"gitId":"nicoleang09"},"content":"* `findAppt ptm` followed by `deleteAppt 1` deletes the 1st appointment in the results of the `findAppt` command.","lastModifiedDate":"2021-03-28"},{"lineNumber":284,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":285,"author":{"gitId":"Stratostorm"},"content":"#### Editing an appointment : `editAppt`","lastModifiedDate":"2021-03-31"},{"lineNumber":286,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"Stratostorm"},"content":"Edits an existing appointment to the appointment book.","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":289,"author":{"gitId":"Stratostorm"},"content":"Format: `editAppt INDEX [n/NAME] [a/ADDRESS] [d/DATE] [c/CONTACT_INDEX]…​ [tc/CHILDTAG]…​`","lastModifiedDate":"2021-03-31"},{"lineNumber":290,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":291,"author":{"gitId":"Stratostorm"},"content":"* Contacts in the address book at the specified `CONTACT_INDEX` is added to the appointment.","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"Stratostorm"},"content":"* Edits the appointment at the specified `INDEX`.","lastModifiedDate":"2021-03-31"},{"lineNumber":293,"author":{"gitId":"Stratostorm"},"content":"* The index refers to the index number shown in the displayed appointment book.","lastModifiedDate":"2021-03-31"},{"lineNumber":294,"author":{"gitId":"Stratostorm"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-31"},{"lineNumber":295,"author":{"gitId":"Stratostorm"},"content":"* `DATE` has to be in the format \"`dd`/`MM`/`yyyy` `HH`:`mm`\".","lastModifiedDate":"2021-03-31"},{"lineNumber":296,"author":{"gitId":"Stratostorm"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-31"},{"lineNumber":297,"author":{"gitId":"Stratostorm"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-03-31"},{"lineNumber":298,"author":{"gitId":"Stratostorm"},"content":"* When editing tags and contacts, the existing tags and contacts of the contact will be removed ","lastModifiedDate":"2021-03-31"},{"lineNumber":299,"author":{"gitId":"Stratostorm"},"content":"  i.e the operation is not cumulative.","lastModifiedDate":"2021-03-31"},{"lineNumber":300,"author":{"gitId":"Stratostorm"},"content":"  ","lastModifiedDate":"2021-03-31"},{"lineNumber":301,"author":{"gitId":"Stratostorm"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":302,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":303,"author":{"gitId":"Stratostorm"},"content":"* `edit 1 n/PSG meeting a/ABC Secondary School c/1` Edits the name and address of the 1st appointment to","lastModifiedDate":"2021-03-31"},{"lineNumber":304,"author":{"gitId":"Stratostorm"},"content":"be `PSG meeting` and `ABC Secondary School` respectively and replaces all related contacts with the 1st contact ","lastModifiedDate":"2021-03-31"},{"lineNumber":305,"author":{"gitId":"Stratostorm"},"content":"on the contact list.","lastModifiedDate":"2021-03-31"},{"lineNumber":306,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":307,"author":{"gitId":"nicoleang09"},"content":"#### Finding appointments by name: `findAppt`","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":309,"author":{"gitId":"nicoleang09"},"content":"Finds appointments whose names contain any of the given keywords.","lastModifiedDate":"2021-03-28"},{"lineNumber":310,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":311,"author":{"gitId":"nicoleang09"},"content":"Format: `findAppt KEYWORD [MORE_KEYWORDS]…​`","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":313,"author":{"gitId":"nicoleang09"},"content":"* The search is case-insensitive. e.g `ptm` will match `PTM`","lastModifiedDate":"2021-03-28"},{"lineNumber":314,"author":{"gitId":"nicoleang09"},"content":"* The order of the keywords does not matter. e.g. `Teacher meeting` will match `Meeting teacher`","lastModifiedDate":"2021-03-28"},{"lineNumber":315,"author":{"gitId":"nicoleang09"},"content":"* Only the name is searched.","lastModifiedDate":"2021-03-28"},{"lineNumber":316,"author":{"gitId":"nicoleang09"},"content":"* Incomplete words will also be matched e.g. `PT` will match `PTM`","lastModifiedDate":"2021-03-28"},{"lineNumber":317,"author":{"gitId":"Stratostorm"},"content":"* Contacts matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-03-31"},{"lineNumber":318,"author":{"gitId":"nicoleang09"},"content":"  e.g. `Teacher meeting` will return `Speak to ballet teacher`, `PSG meeting`","lastModifiedDate":"2021-03-28"},{"lineNumber":319,"author":{"gitId":"nicoleang09"},"content":"* If *n* appointments can be found, message “*n* appointments listed!” will be displayed","lastModifiedDate":"2021-03-28"},{"lineNumber":320,"author":{"gitId":"nicoleang09"},"content":"  e.g. when 0 results, \"0 appointments listed!\" is displayed","lastModifiedDate":"2021-03-28"},{"lineNumber":321,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":322,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-28"},{"lineNumber":323,"author":{"gitId":"nicoleang09"},"content":"* `findAppt ptm` returns `PTM`","lastModifiedDate":"2021-03-28"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"Stratostorm"},"content":"#### Listing all appointments : `listAppt`","lastModifiedDate":"2021-03-31"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":327,"author":{"gitId":"Stratostorm"},"content":"Shows a list of all appointments in the appointment book.","lastModifiedDate":"2021-03-31"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":329,"author":{"gitId":"Stratostorm"},"content":"Format: `listAppt`","lastModifiedDate":"2021-03-31"},{"lineNumber":330,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":331,"author":{"gitId":"Stratostorm"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":332,"author":{"gitId":"Stratostorm"},"content":"* `listAppt` List all appointments in the appointment book.","lastModifiedDate":"2021-03-31"},{"lineNumber":333,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":334,"author":{"gitId":"nicoleang09"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"nicoleang09"},"content":"## Managing HeliBook Data","lastModifiedDate":"2021-03-30"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"Stratostorm"},"content":"### Saving your data","lastModifiedDate":"2021-03-24"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"Stratostorm"},"content":"HeliBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-03-03"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":344,"author":{"gitId":"Stratostorm"},"content":"HeliBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-03-03"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":346,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":347,"author":{"gitId":"Stratostorm"},"content":"If your changes to the data file makes its format invalid, HeliBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-03-03"},{"lineNumber":348,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":350,"author":{"gitId":"clarlzx"},"content":"### Exporting your data","lastModifiedDate":"2021-03-25"},{"lineNumber":351,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":352,"author":{"gitId":"clarlzx"},"content":"1. After running HeliBook at least once, locate the `data` folder on your device which can be found in the same directory as your JAR file. ","lastModifiedDate":"2021-03-25"},{"lineNumber":353,"author":{"gitId":"clarlzx"},"content":"2. Send this `data` folder to your other device.  ","lastModifiedDate":"2021-03-25"},{"lineNumber":354,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":355,"author":{"gitId":"clarlzx"},"content":"### Importing your data","lastModifiedDate":"2021-03-25"},{"lineNumber":356,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":357,"author":{"gitId":"Stratostorm"},"content":"1. Install HeliBook on your new device and run it once, exit the program before proceeding.","lastModifiedDate":"2021-03-23"},{"lineNumber":358,"author":{"gitId":"Stratostorm"},"content":"2. Locate the `data` folder on your old device which can be found in the same directory as your JAR file.","lastModifiedDate":"2021-03-23"},{"lineNumber":359,"author":{"gitId":"Stratostorm"},"content":"3. Copy the `data` folder from your old device to the new device to the same directory as where you installed the JAR file.","lastModifiedDate":"2021-03-23"},{"lineNumber":360,"author":{"gitId":"Stratostorm"},"content":"4. Replace the files on your new device when prompted.","lastModifiedDate":"2021-03-23"},{"lineNumber":361,"author":{"gitId":"Stratostorm"},"content":"5. Congratulations! You have successfully exported and imported your data to a new device.","lastModifiedDate":"2021-03-23"},{"lineNumber":362,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"Stratostorm"},"content":"**Q**: What\u0027s the difference between a Child Tag and a Tag? \u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":372,"author":{"gitId":"Stratostorm"},"content":"**A**: Child Tags are meant to represent your children, useful especially ","lastModifiedDate":"2021-03-24"},{"lineNumber":373,"author":{"gitId":"Stratostorm"},"content":"if you have multiple children. Child Tags will always appear at the front of the list of Tags","lastModifiedDate":"2021-03-24"},{"lineNumber":374,"author":{"gitId":"Stratostorm"},"content":"in the Address Book and are displayed in a different color to differentiate them. Any command","lastModifiedDate":"2021-03-24"},{"lineNumber":375,"author":{"gitId":"Stratostorm"},"content":"that works with regular tags such as \u0027Find\u0027 or \u0027Sort\u0027 will also work with Child Tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"nicoleang09"},"content":"​ | **General Commands**","lastModifiedDate":"2021-03-30"},{"lineNumber":384,"author":{"gitId":"nicoleang09"},"content":"**Help** | `help [COMMAND]` \u003cbr\u003e e.g, `help find`","lastModifiedDate":"2021-03-30"},{"lineNumber":385,"author":{"gitId":"nicoleang09"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-03-30"},{"lineNumber":386,"author":{"gitId":"nicoleang09"},"content":"​ | **Address Book Commands**","lastModifiedDate":"2021-03-30"},{"lineNumber":387,"author":{"gitId":"Stratostorm"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [tc/CHILDTAG]…​ [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2021-03-24"},{"lineNumber":388,"author":{"gitId":"Stratostorm"},"content":"**Clear** | `clear [t/TAG]…​`","lastModifiedDate":"2021-03-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"Stratostorm"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [tc/CHILDTAG]…​ [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-03-24"},{"lineNumber":391,"author":{"gitId":"nicoleang09"},"content":"**Fav** | `fav INDEX [o/OPTION]` \u003cbr\u003e e.g., `fav 3 o/remove`","lastModifiedDate":"2021-03-30"},{"lineNumber":392,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"Stratostorm"},"content":"**Tag** | `tag INDEX [o/OPTION] [tc/CHILDTAG]…​ [t/TAG]…​`\u003cbr\u003e e.g., `tag 4 t/School t/English`","lastModifiedDate":"2021-03-24"},{"lineNumber":395,"author":{"gitId":"Stratostorm"},"content":"**Sort** | `sort o/OPTION` \u003cbr\u003e e.g., `sort o/name`","lastModifiedDate":"2021-03-24"},{"lineNumber":396,"author":{"gitId":"nicoleang09"},"content":"​ | **Appointment Book Commands**","lastModifiedDate":"2021-03-30"},{"lineNumber":397,"author":{"gitId":"nicoleang09"},"content":"**Add** | `addAppt n/NAME a/ADDRESS d/DATE [c/CONTACT_INDEX]…​ [tc/CHILDTAG]…​` \u003cbr\u003e e.g., `addAppt n/PTM a/ABC Primary School d/21/03/2021 10:00 c/2`","lastModifiedDate":"2021-03-30"},{"lineNumber":398,"author":{"gitId":"nicoleang09"},"content":"**Delete** | `deleteAppt INDEX` \u003cbr\u003e e.g., `delete 2`","lastModifiedDate":"2021-03-30"},{"lineNumber":399,"author":{"gitId":"Stratostorm"},"content":"**Edit** | `editAppt INDEX [n/NAME] [a/ADDRESS] [d/DATE] [c/CONTACT_INDEX]…​ [tc/CHILDTAG]…​` \u003cbr\u003e e.g., `edit 1 n/PSG meeting a/ABC Secondary School c/1`","lastModifiedDate":"2021-03-31"},{"lineNumber":400,"author":{"gitId":"nicoleang09"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]…​` \u003cbr\u003e e.g., `find PTM`","lastModifiedDate":"2021-03-30"},{"lineNumber":401,"author":{"gitId":"Stratostorm"},"content":"**List** | `listAppt`","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"clarlzx":6,"nicoleang09":75,"Stratostorm":144,"edelinetenges":19,"-":157}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Stratostorm"},"content":"    content: \"HeliBook\";","lastModifiedDate":"2021-03-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Stratostorm":1,"-":294}},{"path":"docs/diagrams/AppointmentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"skinparam classAttributeFontColor #white","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"Class Appointment {","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"    -name: Name","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"    -address: Address","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"    -date: DateTime","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    -contacts: Set\u003cPerson\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"note top of Appointment: classified under Model","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"note left of Appointment::name","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    Make use of Name class, taken out of Person package","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"end note","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"note left of Appointment::address","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    Make use of Address class, taken out of Person package","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"end note","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"note left of Appointment::date","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    Create own DateTime class","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"end note","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"note left of Appointment::contacts","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"  (Extra) Add Set\u003cTag\u003e as attribute","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"end note","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"Class UniqueAppointmentList","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"Class Person","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"Appointment -\u003e \"*\" Person","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"UniqueAppointmentList --\u003e \"*\" Appointment","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"show attributes","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"clarlzx":39}},{"path":"docs/diagrams/AppointmentCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"skinparam arrowColor LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"skinparam classAttributeFontColor #white","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"Class AddAppointmentCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"Class DeleteAppointmentCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"    -index: int","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"Class FindAppointmentCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"Class Command","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"Command \u003c|--- AddAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"Command \u003c|-- DeleteAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"Command \u003c|-- FindAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"note \"can be implemented\\nlike similar commands for Person\" as N1","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"N1 .. DeleteAppointmentCommand #orange","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"N1 .. FindAppointmentCommand #orange","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"N1 .. AddAppointmentCommand #orange","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"note right of AddAppointmentCommand: Adding of contacts to Appointment will be handled by\\nAppointmentBook#addAppointment()","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"show members","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"clarlzx":32}},{"path":"docs/diagrams/AppointmentWithLogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"package Logic {","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"package Parser {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"Class HeliBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"Class CliSyntax","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"Class ParserUtil","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"Class Prefix","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"note right of HeliBookParser: create cases for\\nall appointment-\\nrelated command","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"note left of XYZCommandParser: create parser\\nfor each command","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"note top of LogicManager: Interacts with storage to save Addressbook\\nand Appointmentbook","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"note top of HeliBookParser: Previously known as AddressBook Parser","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"package Command {","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"Class XYZCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"Class CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"Class LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"package Model{","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"package Storage{","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"LogicManager --\u003e\"1\" HeliBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"HeliBookParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"Command .right.\u003e Model","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc.\\n\\nAppointment-related commands\\ninclude:\\n- AddAppointmentCommand\\n- DeleteApppointmentCommand\\n- FindAppointmentCommand\\n\\n(Extra) Tag functions","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"LogicManager -\u003e Storage","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"clarlzx":73}},{"path":"docs/diagrams/AppointmentWithModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"Interface ReadOnlyHeliBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"Class AddressBook","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"Class AppointmentBook","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"Class Model","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"Class ModelManager","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"Class UserPrefs","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"Package Person {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"Class Person","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"Class UniquePersonList","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"Class Address","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"Class Name","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"note \"Name and Address, classes previously in Person package\" as N1","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"Name .. N1","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"Address .. N1","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"note \"Previously known as\\nReadOnlyAddressBook\" as N2","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"ReadOnlyHeliBook .up. N2","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"AddressBook .right|\u003e ReadOnlyHeliBook","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"AppointmentBook .left|\u003e ReadOnlyHeliBook","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"ModelManager o--\u003e \"1\" AddressBook","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"UniquePersonList o--\u003e \"*\" Person","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"Person ---\u003e Name","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"Person ---\u003e Address","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"ModelManager ---\u003e\"filtered list ~*\" Person","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"ModelManager o---\u003e \"1\" AppointmentBook","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"Package Appointment {","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"Class Appointment","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"Class UniqueAppointmentList","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"Class DateTime","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"AppointmentBook *--\u003e \"1\" UniqueAppointmentList","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"UniqueAppointmentList o--\u003e \"*\" Appointment","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"Appointment ---\u003e \"name 1\" Name","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"Appointment --\u003e \"*\" Address","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"Appointment --\u003e \"*\" DateTime","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"ModelManager --\u003e\"filtered list *\" Appointment","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"note \"Possible design considerations for ModelManager:\\n- 2 subclass, one for Person and one for Appointment\\n- As an implementation of the Model interface,\\n  ModelManager can handle both\" as N3","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"note \"Extra: Tag functions\" as N4","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"N4 .left. Appointment","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"Appointment ---\u003e \"~* contact\" Person","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"clarlzx":75}},{"path":"docs/diagrams/AppointmentWithStorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"@startuml","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"!include style.puml","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"Interface HeliBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"note \"Interface with generic methods,\\npreviously named AddressBookStorage\" as N1","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"N1 .up. HeliBookStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"Class StorageManager","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"Class JsonAppointmentBookStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"StorageManager o--\u003e HeliBookStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"JsonAppointmentBookStorage .left.|\u003e HeliBookStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"JsonAddressBookStorage .right.|\u003e HeliBookStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"JsonAppointmentBookStorage .down.\u003e JsonSerializableAppointmentBookStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"JsonAddressBookStorage .down.\u003e JsonSerializableAddressBookStorage","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"JsonSerializableAppointmentBookStorage .down.\u003e JsonSerializableAppointment","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"JsonSerializableAddressBookStorage .down.\u003e JsonSerializablePerson","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"JsonSerializableAppointment .down.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"note on link","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"    \"(Extra) For tag command\"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"end note","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"JsonSerializablePerson .down.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"@enduml","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"clarlzx":36}},{"path":"docs/diagrams/AppointmentWithUIClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"@startuml","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"!include style.puml","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"Class UiManager","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"Class MainWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"Class HelpWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"Class ResultDisplay","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"Class PersonListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"Class PersonCard","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"Class AppointmentListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"Class AppointmentCard","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"Class StatusBarFooter","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"Class CommandBox","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"MainWindow *-down-\u003e PersonListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"MainWindow *-down-\u003e AppointmentListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"PersonListPanel -down-\u003e PersonCard","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"AppointmentListPanel -down-\u003e AppointmentCard","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"ResultDisplay ---|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"CommandBox ---|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"PersonListPanel ---|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"PersonCard ---|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"AppointmentListPanel ---|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"AppointmentCard ---|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"StatusBarFooter ---|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"HelpWindow -down--|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"PersonCard ....\u003e Model","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"AppointmentCard ....\u003e Model","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"AppointmentListPanel -left- HelpWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"MainWindow ---|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"@enduml","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"clarlzx":68}},{"path":"docs/diagrams/HelpActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"start","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":":User executes help;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":":User input is parsed and number of","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"  specified commands are checked;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"if () then ([no commands are specified])","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    : Set help message to a","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    summary of all available","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"               commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"else ([else])","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"if () then ([1 command specified])","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    :Search user guide for","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"       information on the","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"      specified command;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"if () then ([information is found])","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    :Set help message to","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    full information about","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"     specified command;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"else ([else])","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    :Throw error;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"endif;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"else ([else])","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    :Throw error;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"endif","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"endif","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":":Display help message in help window;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"stop","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"nicoleang09":35}},{"path":"docs/diagrams/HelpSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"\u0027box UI UI_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"\u0027participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"\u0027participant \":HelpWindow\" as HelpWindow UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"\u0027end box","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"participant \":HelpCommandParser\" as HelpCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"participant \"h:HelpCommand\" as HelpCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"\u0027[-\u003e MainWindow : executeCommand(help)","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"\u0027activate MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"[-\u003e LogicManager : execute(help)","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(help)","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"AddressBookParser -\u003e HelpCommandParser : parse( )","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"activate HelpCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"create HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"HelpCommandParser -\u003e HelpCommand : HelpCommand()","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"activate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"HelpCommand --\u003e HelpCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"deactivate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"HelpCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"deactivate HelpCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"AddressBookParser --\u003e LogicManager : h","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"LogicManager -\u003e HelpCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"activate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"HelpCommand -\u003e HelpCommand : executeNonSpecific()","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"activate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"HelpCommand --\u003e HelpCommand : helpTitle, helpMessage","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"deactivate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"HelpCommand --\u003e LogicManager :","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"deactivate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"HelpCommand -[hidden]-\u003e LogicManager : command result","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"destroy HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"[\u003c-- LogicManager : command result","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"\u0027MainWindow -\u003e HelpWindow : setHelpText()","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"\u0027activate HelpWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"\u0027HelpWindow --\u003e MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"\u0027deactivate HelpWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"\u0027MainWindow -[hidden]-\u003e MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"\u0027[\u003c-- MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"\u0027deactivate MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"nicoleang09":70}},{"path":"docs/diagrams/HelpSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"\u0027box UI UI_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"\u0027participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"\u0027participant \":HelpWindow\" as HelpWindow UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"\u0027end box","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"participant \":HelpCommandParser\" as HelpCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"participant \"h:HelpCommand\" as HelpCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"\u0027[-\u003e MainWindow : executeCommand(help find)","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"\u0027activate MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"[-\u003e LogicManager : execute(help find)","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"\u0027MainWindow -\u003e LogicManager : execute(help find)","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(help find)","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"AddressBookParser -\u003e HelpCommandParser : parse(find)","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"activate HelpCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"create HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"HelpCommandParser -\u003e HelpCommand : HelpCommand(find)","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"activate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"HelpCommand --\u003e HelpCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"deactivate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"HelpCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"deactivate HelpCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"AddressBookParser --\u003e LogicManager : h","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"LogicManager -\u003e HelpCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"activate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"HelpCommand -\u003e HelpCommand : executeSpecific(find)","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"activate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"HelpCommand --\u003e HelpCommand : helpTitle, helpMessage","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"deactivate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"HelpCommand --\u003e LogicManager :","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"deactivate HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"HelpCommand -[hidden]-\u003e LogicManager : command result","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"destroy HelpCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"[\u003c-- LogicManager : command result","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"\u0027MainWindow -\u003e HelpWindow : setHelpText()","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"\u0027activate HelpWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"\u0027HelpWindow --\u003e MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"\u0027deactivate HelpWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"\u0027MainWindow -[hidden]-\u003e MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"\u0027[\u003c-- MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"\u0027deactivate MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"nicoleang09":71}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"title: HeliBook","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W13-3/tp/actions)","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"**HeliBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"* If you are interested in using HeliBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"* If you are interested about developing HeliBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"* This project is based on the **AddressBook-Level3 project** created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Stratostorm":6,"-":14}},{"path":"docs/team/clarlzx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"mechastriker3":46}},{"path":"docs/team/edelinetenges.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"mechastriker3":46}},{"path":"docs/team/mechastriker3.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"mechastriker3":46}},{"path":"docs/team/nicoleang09.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"mechastriker3":46}},{"path":"docs/team/stratostorm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"  * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"mechastriker3":46}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"clarlzx":1,"-":102}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.storage.JsonAppointmentBookStorage;","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d new JsonAppointmentBookStorage(","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"                userPrefs.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"        storage \u003d new StorageManager(addressBookStorage, appointmentBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"        ParserUtil.setModel(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"        Optional\u003cReadOnlyAppointmentBook\u003e appointmentBookOptional;","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"        ReadOnlyAddressBook initialAddressData;","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"        ReadOnlyAppointmentBook initialAppointmentData;","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"                logger.info(\"AddressBook data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"            initialAddressData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"            logger.info(\"AddressBook successfully loaded!\");","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"            logger.warning(\"AddressBook data file not in the correct format. \"","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"                    + \"Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"            initialAddressData \u003d new AddressBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"            logger.warning(\"Problem while reading from the AddressBook file. \"","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"                    + \"Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"            initialAddressData \u003d new AddressBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"            appointmentBookOptional \u003d storage.readAppointmentBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"            if (!appointmentBookOptional.isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"                logger.info(\"AppointmentBook data file not found. \"","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"                        + \"Will be starting with a sample AppointmentBook\");","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"            initialAppointmentData \u003d appointmentBookOptional.orElseGet(SampleDataUtil::getSampleAppointmentBook);","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"            logger.info(\"AppointmentBook successfully loaded!\");","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"            logger.warning(\"AppointmentBook data file not in the correct format. \"","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"                    + \"Will be starting with an empty AppointmentBook\");","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"            initialAppointmentData \u003d new AppointmentBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":"            logger.warning(\"Problem while reading from the AppointmentBook file. \"","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"                    + \"Will be starting with an empty AppointmentBook\");","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"            initialAppointmentData \u003d new AppointmentBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"        return new ModelManager(initialAddressData, initialAppointmentData, userPrefs);","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"clarlzx":12,"nicoleang09":25,"-":177}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d Person(s) listed!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public static final String MESSAGE_APPOINTMENTS_LISTED_OVERVIEW \u003d \"%1$d Appointment(s) listed!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_INVALID_OPTION \u003d \"Invalid option provided: %1$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d \"The appointment index \"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"            + \"provided is invalid\";","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mechastriker3":2,"Stratostorm":3,"-":11}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"                .anyMatch(str -\u003e containsIgnoreCase(str, preppedWord));","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"     * Checks if String {@code str} contains String {@code preppedWord}, ignoring case considerations.","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"     * @param str","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"     * @param preppedWord","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"     * @return true if {@code str} is not null and it contains {@code preppedWord}; false otherwise","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"    public static boolean containsIgnoreCase(String str, String preppedWord) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        return (str \u003d\u003d null) ? false","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"                : str.toLowerCase().contains(preppedWord.toLowerCase());","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"clarlzx":12,"-":67}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"    /** Returns an unmodifiable view of the filtered list of appointments */","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"clarlzx":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.parser.HeliBookParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    private final HeliBookParser heliBookParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"        heliBookParser \u003d new HeliBookParser();","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"        model.orderAppointments();","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"        Command command \u003d heliBookParser.parseCommand(commandText);","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"            storage.saveAppointmentBook(model.getAppointmentBook());","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"        model.orderAppointments(); // ensure that appointments are loaded in increasing date order","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"clarlzx":6,"nicoleang09":15,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHILD;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    public static final String COMMAND_WORD \u003d \"addAppt\";","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment to the address book. \"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"            + \"[\" + PREFIX_CONTACT + \"CONTACT_INDEX]... \"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_CHILD + \"CHILDTAG]...\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"            + PREFIX_NAME + \"PTM \"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"            + PREFIX_ADDRESS + \"ABC Primary School \"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"            + PREFIX_DATE + \"21/03/2021 10:00\"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"            + PREFIX_CONTACT + \"2 \"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"            + PREFIX_CHILD + \"Alex\";","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the address book\";","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"     * Creates an AddAppointmentCommand to add the specified {@code Appointment}","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"                || (other instanceof AddAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"                \u0026\u0026 toAdd.equals(((AddAppointmentCommand) other).toAdd));","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":59,"Stratostorm":3}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHILD;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_CHILD + \"CHILDTAG]... \"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"            + PREFIX_CHILD + \"Alex \"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"            + PREFIX_TAG + \"friends\";","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Stratostorm":4,"-":65}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":" * Clears the address book if given no arguments or clears all Persons with a particular tag.","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_CLEAR_TAG_SUCCESS \u003d \"Cleared all persons with any tag: %1$s\";","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"    private Set\u003cTag\u003e tagsToClear;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"    public ClearCommand(Set\u003cTag\u003e tagsToClear) {","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"        this.tagsToClear \u003d tagsToClear;","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"    public ClearCommand() {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"        tagsToClear \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"        if (tagsToClear.isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"        } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"            ObservableList\u003cPerson\u003e personList \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"            Iterator\u003cPerson\u003e personIterator \u003d personList.iterator();","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"            List\u003cPerson\u003e personsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"            while (personIterator.hasNext()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"                Person person \u003d personIterator.next();","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"                Set\u003cTag\u003e tags \u003d person.getTags();","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"                if (!Collections.disjoint(tags, tagsToClear)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"                    personsToDelete.add(person);","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"                }","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"            personsToDelete.forEach(model::deletePerson);","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"            return new CommandResult(String.format(MESSAGE_CLEAR_TAG_SUCCESS, tagsToClear.toString()));","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Stratostorm":35,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    private final String helpTitle;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    private final String helpMsg;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     * @param helpTitle The heading shown in bold text in the help window.","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"     * @param helpMsg   The body text of the help window.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    public CommandResult(String feedbackToUser, String helpTitle, String helpMsg, boolean showHelp, boolean exit) {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        this.helpTitle \u003d helpTitle;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        this.helpMsg \u003d helpMsg;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code showHelp}","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"     * and {@code exit}, and other fields set to their default value.","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"        this(feedbackToUser, \"\", \"\", showHelp, exit);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"    public String getHelpTitle() {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        return helpTitle;","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"    public String getHelpMsg() {","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"        return helpMsg;","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicoleang09":25,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    public static final String COMMAND_WORD \u003d \"deleteAppt\";","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"            + \": Deletes the appointment identified by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"    public DeleteAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"        Appointment appointmentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, appointmentToDelete));","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":26,"edelinetenges":23}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person(s): %1$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"    public static final String MESSAGE_DELETE_PERSON_APPOINTMENT_FAILURE \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"            \"Failed to delete the following Person(s) as they are involved in appointments: %1$s\";","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"    private final List\u003cIndex\u003e targetIndexList;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"     * Takes a list of {@code Index} and constructs a DeleteCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"     * @param targetIndexList a list of {@code Index}","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"    public DeleteCommand(List\u003cIndex\u003e targetIndexList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"        this.targetIndexList \u003d targetIndexList;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"        assert targetIndexList.size() \u003e 0 : \"No indexes for DeleteCommand\";","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"        final StringBuilder outputString \u003d new StringBuilder();","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"        List\u003cPerson\u003e personToDeleteList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"edelinetenges"},"content":"        List\u003cPerson\u003e personCannotBeDeletedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"        ObservableList\u003cAppointment\u003e appointmentList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"        for (Index targetIndex : targetIndexList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"edelinetenges"},"content":"            if (checkPersonInvolvedInAppointment(personToDelete, appointmentList)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"edelinetenges"},"content":"                personCannotBeDeletedList.add(personToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"edelinetenges"},"content":"            } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"                personToDeleteList.add(personToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"        for (Person personToDelete : personToDeleteList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"edelinetenges"},"content":"        if (!personToDeleteList.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"edelinetenges"},"content":"            outputString.append(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"edelinetenges"},"content":"                    personListToStringBuilder(personToDeleteList)));","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"edelinetenges"},"content":"        if (!personCannotBeDeletedList.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"edelinetenges"},"content":"            if (outputString.length() \u003e 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"                outputString.append(\"\\n\");","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"edelinetenges"},"content":"            outputString.append(String.format(MESSAGE_DELETE_PERSON_APPOINTMENT_FAILURE,","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"edelinetenges"},"content":"                    personListToStringBuilder(personCannotBeDeletedList)));","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"edelinetenges"},"content":"            throw new CommandException(outputString.toString());","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"edelinetenges"},"content":"        return new CommandResult(outputString.toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"edelinetenges"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"edelinetenges"},"content":"     * Checks if the specified person is involved in an existing appointment","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"edelinetenges"},"content":"     * @param person person to be checked","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"edelinetenges"},"content":"     * @return boolean value of whether or not person is involved in an appointment","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"edelinetenges"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"edelinetenges"},"content":"    private boolean checkPersonInvolvedInAppointment(Person person, ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"edelinetenges"},"content":"        boolean isInvolved \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"edelinetenges"},"content":"        for (Appointment appointment : appointmentList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"edelinetenges"},"content":"            Set\u003cPerson\u003e personSet \u003d appointment.getContacts();","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"edelinetenges"},"content":"            if (personSet.contains(person)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"edelinetenges"},"content":"                isInvolved \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"edelinetenges"},"content":"                break;","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"edelinetenges"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"edelinetenges"},"content":"        return isInvolved;","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"edelinetenges"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"edelinetenges"},"content":"     * Appends Persons in a person list to a StringBuilder","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"edelinetenges"},"content":"     * @param personList list of persons to append","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"edelinetenges"},"content":"     * @return StringBuilder of all the appended persons in the list","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"edelinetenges"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"edelinetenges"},"content":"    private StringBuilder personListToStringBuilder(List\u003cPerson\u003e personList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"edelinetenges"},"content":"        StringBuilder resultStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"edelinetenges"},"content":"        for (Person person : personList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"edelinetenges"},"content":"            if (targetIndexList.size() \u003e 1) {","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"edelinetenges"},"content":"                resultStringBuilder.append(\"\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"edelinetenges"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"edelinetenges"},"content":"            resultStringBuilder.append(person);","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"edelinetenges"},"content":"        return resultStringBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"mechastriker3"},"content":"                \u0026\u0026 targetIndexList.equals(((DeleteCommand) other).targetIndexList)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mechastriker3":23,"edelinetenges":58,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHILD;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":" * Edits the details of an existing appointment in the AppointmentBook.","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"    public static final String COMMAND_WORD \u003d \"editAppt\";","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the appointment identified \"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"            + \"by the index number used in the displayed appointment list. \"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_CONTACT + \"CONTACT]... \"","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_CHILD + \"CHILDTAG]... \\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Edited Appointment: %1$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"    private final Index index;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Stratostorm"},"content":"     * @param index of the person in the filtered appointment list to edit","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Stratostorm"},"content":"     * @param editAppointmentDescriptor details to edit the appointment with","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Stratostorm"},"content":"    public EditAppointmentCommand(Index index, EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"Stratostorm"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"Stratostorm"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Stratostorm"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"Stratostorm"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editAppointmentDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"Stratostorm"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"Stratostorm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Stratostorm"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"Stratostorm"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Stratostorm"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Stratostorm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Stratostorm"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Stratostorm"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"Stratostorm"},"content":"        if (!appointmentToEdit.isSameAppointment(editedAppointment) \u0026\u0026 model.hasAppointment(editedAppointment)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"Stratostorm"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"Stratostorm"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"Stratostorm"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"Stratostorm"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment));","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"Stratostorm"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"Stratostorm"},"content":"     * edited with {@code editedAppointmentDescriptor}.","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"Stratostorm"},"content":"    private static Appointment createEditedAppointment(Appointment apptToEdit,","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"Stratostorm"},"content":"                                                  EditAppointmentDescriptor editedAppointmentDescriptor) {","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"Stratostorm"},"content":"        assert apptToEdit !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"Stratostorm"},"content":"        Name updatedName \u003d editedAppointmentDescriptor.getName().orElse(apptToEdit.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"Stratostorm"},"content":"        Address updatedAddress \u003d editedAppointmentDescriptor.getAddress().orElse(apptToEdit.getAddress());","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"Stratostorm"},"content":"        DateTime updatedDateTime \u003d editedAppointmentDescriptor.getDateTime().orElse(apptToEdit.getDateTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"Stratostorm"},"content":"        Set\u003cPerson\u003e updatedContacts \u003d editedAppointmentDescriptor.getContacts().orElse(apptToEdit.getContacts());","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"Stratostorm"},"content":"        Set\u003cTag\u003e updatedTags \u003d editedAppointmentDescriptor.getTags().orElse(apptToEdit.getTags());","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"Stratostorm"},"content":"        return new Appointment(updatedName, updatedAddress, updatedDateTime, updatedContacts, updatedTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"Stratostorm"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"Stratostorm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"Stratostorm"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"Stratostorm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"Stratostorm"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"Stratostorm"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"Stratostorm"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"Stratostorm"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"Stratostorm"},"content":"        // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"Stratostorm"},"content":"        EditAppointmentCommand e \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"Stratostorm"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"Stratostorm"},"content":"                \u0026\u0026 editAppointmentDescriptor.equals(e.editAppointmentDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"Stratostorm"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"Stratostorm"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"Stratostorm"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"Stratostorm"},"content":"        private Name name;","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"Stratostorm"},"content":"        private Address address;","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"Stratostorm"},"content":"        private DateTime dateTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"Stratostorm"},"content":"        private Set\u003cPerson\u003e contacts;","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"Stratostorm"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"Stratostorm"},"content":"        public EditAppointmentDescriptor() {}","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"Stratostorm"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"Stratostorm"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"Stratostorm"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"Stratostorm"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"Stratostorm"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"Stratostorm"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"Stratostorm"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"Stratostorm"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"Stratostorm"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"Stratostorm"},"content":"            setContacts(toCopy.contacts);","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"Stratostorm"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"Stratostorm"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"Stratostorm"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"Stratostorm"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"Stratostorm"},"content":"            return CollectionUtil.isAnyNonNull(name, address, dateTime, contacts, tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"Stratostorm"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"Stratostorm"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"Stratostorm"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"Stratostorm"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"Stratostorm"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"Stratostorm"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"Stratostorm"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"Stratostorm"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"Stratostorm"},"content":"        public void setDateTime(DateTime dateTime) {","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"Stratostorm"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"Stratostorm"},"content":"        public Optional\u003cDateTime\u003e getDateTime() {","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"Stratostorm"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"Stratostorm"},"content":"        public void setContacts(Set\u003cPerson\u003e contacts) {","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"Stratostorm"},"content":"            this.contacts \u003d (contacts !\u003d null) ? new HashSet\u003c\u003e(contacts) : null;","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"Stratostorm"},"content":"        public Optional\u003cSet\u003cPerson\u003e\u003e getContacts() {","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"Stratostorm"},"content":"            return (contacts !\u003d null) ? Optional.of(Collections.unmodifiableSet(contacts)) : Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"Stratostorm"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"Stratostorm"},"content":"         * Adds additional {@code contacts} to this object\u0027s {@code contacts}.","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"Stratostorm"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"Stratostorm"},"content":"        public void addAllContacts(Set\u003cPerson\u003e contacts) {","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"Stratostorm"},"content":"            if (this.contacts \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"Stratostorm"},"content":"                setContacts(contacts);","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"Stratostorm"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"Stratostorm"},"content":"                this.contacts.addAll(contacts);","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"Stratostorm"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"Stratostorm"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"Stratostorm"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"Stratostorm"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"Stratostorm"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"Stratostorm"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"Stratostorm"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"Stratostorm"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"Stratostorm"},"content":"         * Adds additional {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"Stratostorm"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"Stratostorm"},"content":"        public void addAllTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"Stratostorm"},"content":"            if (this.tags \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"Stratostorm"},"content":"                setTags(tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"Stratostorm"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"Stratostorm"},"content":"                this.tags.addAll(tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"Stratostorm"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"Stratostorm"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"Stratostorm"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"Stratostorm"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"Stratostorm"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"Stratostorm"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"Stratostorm"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"Stratostorm"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"Stratostorm"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"Stratostorm"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"Stratostorm"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"Stratostorm"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"Stratostorm"},"content":"                return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"Stratostorm"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"Stratostorm"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"Stratostorm"},"content":"            if (!(other instanceof EditAppointmentDescriptor)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"Stratostorm"},"content":"                return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"Stratostorm"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"Stratostorm"},"content":"            // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"Stratostorm"},"content":"            EditAppointmentDescriptor e \u003d (EditAppointmentDescriptor) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"Stratostorm"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"Stratostorm"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-03-29"},{"lineNumber":246,"author":{"gitId":"Stratostorm"},"content":"                    \u0026\u0026 getDateTime().equals(e.getDateTime())","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"Stratostorm"},"content":"                    \u0026\u0026 getContacts().equals(e.getContacts())","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"Stratostorm"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"Stratostorm"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Stratostorm":251}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHILD;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.Favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.TimeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_CHILD + \"CHILDTAG]... \"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"edelinetenges"},"content":"    static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"edelinetenges"},"content":"        TimeAdded timeAdded \u003d personToEdit.getTimeAdded();","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"edelinetenges"},"content":"        Favourite favourite \u003d editPersonDescriptor.getFavourite().orElse(personToEdit.getFavourite());","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"edelinetenges"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, timeAdded, favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"edelinetenges"},"content":"        private Favourite favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"edelinetenges"},"content":"            setFavourite(toCopy.favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"edelinetenges"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"edelinetenges"},"content":"        public void setFavourite(Favourite favourite) {","lastModifiedDate":"2021-03-25"},{"lineNumber":196,"author":{"gitId":"edelinetenges"},"content":"            this.favourite \u003d favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":197,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":198,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":199,"author":{"gitId":"edelinetenges"},"content":"        public Optional\u003cFavourite\u003e getFavourite() {","lastModifiedDate":"2021-03-25"},{"lineNumber":200,"author":{"gitId":"edelinetenges"},"content":"            return Optional.ofNullable(this.favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":201,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"Stratostorm"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"Stratostorm"},"content":"         * Adds additional {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"Stratostorm"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"Stratostorm"},"content":"        public void addAllTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"Stratostorm"},"content":"            if (this.tags \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"Stratostorm"},"content":"                setTags(tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"Stratostorm"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"Stratostorm"},"content":"                this.tags.addAll(tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"Stratostorm"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":250,"author":{"gitId":"edelinetenges"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-25"},{"lineNumber":251,"author":{"gitId":"edelinetenges"},"content":"                    \u0026\u0026 getFavourite().equals(e.getFavourite());","lastModifiedDate":"2021-03-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"clarlzx":2,"Stratostorm":13,"edelinetenges":19,"-":220}},{"path":"src/main/java/seedu/address/logic/commands/FavouriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_REMOVE;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.Favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":" * Favourites a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"public class FavouriteCommand extends Command {","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"    public static final String COMMAND_WORD \u003d \"fav\";","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"            + \": Favourites the person at the index in the address book.\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"            + \"[\" + PREFIX_OPTION + \"OPTION]\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"            + \"Options: remove (to unfavourite)\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"            + \"Example: \" + COMMAND_WORD + \" 4 o/\" + OPTION_REMOVE;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"    public static final String MESSAGE_FAV_IN_PROGRESS \u003d \"Favourite command is still being implemented.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"    public static final String MESSAGE_FAVOURITE_PERSON_SUCCESS \u003d \"Favourited Person: %1$s\";","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"    public static final String MESSAGE_UNFAVOURITE_PERSON_SUCCESS \u003d \"Unfavourited Person: %1$s\";","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"    private final Index index;","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"    private final boolean isFav;","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"     * @param isFav whether this FavouriteCommand is to favourite or unfavourite","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"    public FavouriteCommand(Index index, boolean isFav) {","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"        this.isFav \u003d isFav;","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"edelinetenges"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"edelinetenges"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"edelinetenges"},"content":"        Person personToFavourite \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"edelinetenges"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"edelinetenges"},"content":"        editPersonDescriptor.setFavourite(new Favourite(String.valueOf(isFav)));","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"edelinetenges"},"content":"        Person favouritedPerson \u003d EditCommand.createEditedPerson(personToFavourite, editPersonDescriptor);","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"edelinetenges"},"content":"        model.setPerson(personToFavourite, favouritedPerson);","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"edelinetenges"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"edelinetenges"},"content":"                String.format(isFav ? MESSAGE_FAVOURITE_PERSON_SUCCESS : MESSAGE_UNFAVOURITE_PERSON_SUCCESS,","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"edelinetenges"},"content":"                        favouritedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"edelinetenges"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"edelinetenges":65}},{"path":"src/main/java/seedu/address/logic/commands/FindAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"public class FindAppointmentCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    public static final String COMMAND_WORD \u003d \"findAppt\";","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all Appointments with fields containing any of \"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"            + \"Example: \" + COMMAND_WORD + \" lunch meeting ptm\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    private final Predicate\u003cAppointment\u003e predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"     * @param predicate Predicate to find the {@code Appointment} by.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    public FindAppointmentCommand(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"                String.format(Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"                        model.getFilteredAppointmentList().size()));","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":22,"mechastriker3":25}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_ADDRESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_EMAIL;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_PHONE;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_TAG;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose fields contain any of \"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"            + \"Options can be specified using\" + PREFIX_OPTION + \"\u003cOPTION\u003e\" + \" can be used to \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"            + \"Parameters: [\" + PREFIX_OPTION + \"\u003cOPTION\u003e]\"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"            + \" KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"            + \"Options:\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"            + \" - \" + OPTION_NAME + \" (to find by name)\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"            + \" - \" + OPTION_ADDRESS + \" (to find by address)\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"            + \" - \" + OPTION_PHONE + \" (to find by phone)\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"            + \" - \" + OPTION_EMAIL + \" (to find by email)\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"            + \" - \" + OPTION_TAG + \" (to find by tags)\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"            + COMMAND_WORD + \" alice bob charlie\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"            + COMMAND_WORD + \" \" + PREFIX_OPTION + OPTION_TAG + \" \" + PREFIX_TAG + \"math \"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"            + PREFIX_TAG + \"science \" + PREFIX_TAG + \"primary\";","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"     * @param predicate Predicate to find the {@code Person} by name.","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"mechastriker3":29,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.parser.MarkdownPlainTextParser;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [COMMAND]\" + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"            + \"Example: \" + COMMAND_WORD + \" find\";","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    public static final String HELP_TITLE \u003d \"Commands available\";","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"    public static final String FEATURES_HEADING \u003d \"## Features\";","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    private String helpMessage \u003d \"\";","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    private final String specifiedCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(HelpCommand.class);","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"        this.specifiedCommand \u003d \"\";","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a {@HelpCommand} with the specified {@specifiedCommand}.","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"     * @param specifiedCommand  Command supported by the app and documented in the user guide","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    public HelpCommand(String specifiedCommand) {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(specifiedCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"        this.specifiedCommand \u003d specifiedCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"            if (specifiedCommand !\u003d \"\") {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"                return executeSpecific(specifiedCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"            } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"                return executeNonSpecific();","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"            throw e;","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"                || (other instanceof HelpCommand // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"                \u0026\u0026 specifiedCommand.equals(((HelpCommand) other).specifiedCommand)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"    private CommandResult executeSpecific(String specifiedCommand) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"        String plainCommandTitle \u003d \"\";","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"        String plainCommandInfo \u003d \"\";","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"            // String projectDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"            // BufferedReader reader \u003d new BufferedReader(new FileReader(projectDir + \"/docs/UserGuide.md\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"            BufferedReader reader \u003d new BufferedReader(new InputStreamReader(","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"                    HelpCommand.class.getClassLoader().getResourceAsStream(\"UserGuideCopy.md\")));","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"            String currLine \u003d reader.readLine();","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"            while (currLine !\u003d null \u0026\u0026 !currLine.equals(FEATURES_HEADING)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"                currLine \u003d reader.readLine();","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"            currLine \u003d reader.readLine();","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"            while (currLine !\u003d null) {","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"                String[] splitSubheading \u003d currLine.split(\"`\");","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"                if (currLine.startsWith(\"####\") \u0026\u0026 splitSubheading[1].toLowerCase().equals(specifiedCommand)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"                    break;","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"                }","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"                currLine \u003d reader.readLine();","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"            MarkdownPlainTextParser parser \u003d new MarkdownPlainTextParser();","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"            String commandTitle \u003d currLine;","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"            String commandInfo \u003d \"\";","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"            reader.readLine();","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"            currLine \u003d reader.readLine();","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"            while (!currLine.startsWith(\"###\") \u0026\u0026 !currLine.startsWith(\"-----\")) {","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"                commandInfo +\u003d currLine + \"\\n\";","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"                currLine \u003d reader.readLine();","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"            plainCommandTitle \u003d parser.formatPlainText(commandTitle, \"title\");","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"            plainCommandInfo \u003d parser.formatPlainText(commandInfo, \"info\");","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"            reader.close();","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"            System.out.println(\"Error reading file: \" + e);","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"        } catch (ArrayIndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, plainCommandTitle, plainCommandInfo, true, false);","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"    private CommandResult executeNonSpecific() {","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"            // String projectDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":"            // BufferedReader reader \u003d new BufferedReader(new FileReader(projectDir + \"/docs/UserGuide.md\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"            BufferedReader reader \u003d new BufferedReader(new InputStreamReader(","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"nicoleang09"},"content":"                    HelpCommand.class.getClassLoader().getResourceAsStream(\"UserGuideCopy.md\")));","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"            String currLine \u003d reader.readLine();","lastModifiedDate":"2021-03-09"},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"            while (currLine !\u003d null \u0026\u0026 !currLine.equals(\"--------|------------------\")) {","lastModifiedDate":"2021-03-09"},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"                currLine \u003d reader.readLine();","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"nicoleang09"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"nicoleang09"},"content":"            currLine \u003d reader.readLine();","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"nicoleang09"},"content":"            while (currLine !\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"nicoleang09"},"content":"                helpMessage +\u003d commandSummaryParser(currLine);","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"nicoleang09"},"content":"                currLine \u003d reader.readLine();","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"nicoleang09"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"nicoleang09"},"content":"            helpMessage.replaceAll(\"…\\u200B\", \"…\");","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"nicoleang09"},"content":"            reader.close();","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"nicoleang09"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"nicoleang09"},"content":"            System.out.println(\"Error reading file: \" + e);","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"nicoleang09"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, HELP_TITLE, helpMessage, true, false);","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"nicoleang09"},"content":"    private String commandSummaryParser(String info) {","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"nicoleang09"},"content":"        if (!info.startsWith(\"\\u200B |\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"nicoleang09"},"content":"            String[] separatedInfo \u003d info.split(\"\\\\|\");","lastModifiedDate":"2021-03-09"},{"lineNumber":151,"author":{"gitId":"nicoleang09"},"content":"            String[] commandName \u003d separatedInfo[0].split(\"\\\\*\");","lastModifiedDate":"2021-03-09"},{"lineNumber":152,"author":{"gitId":"nicoleang09"},"content":"            String[] commandDesc \u003d separatedInfo[1].split(\"`\");","lastModifiedDate":"2021-03-09"},{"lineNumber":153,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"nicoleang09"},"content":"            return commandName[2] + \": \" + commandDesc[1] + \"\\n\";","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"nicoleang09"},"content":"        String[] split \u003d info.split(\"\\\\*\");","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"nicoleang09"},"content":"        if (helpMessage.isBlank()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"nicoleang09"},"content":"            return \"– \" + split[2] + \" –\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"nicoleang09"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"nicoleang09"},"content":"            return \"\\n– \" + split[2] + \" –\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicoleang09":148,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/ListAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"public class ListAppointmentCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"    public static final String COMMAND_WORD \u003d \"listAppt\";","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"            + \": Lists appointments in the appointment book.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"            + \"Parameters: [\" + PREFIX_OPTION + \"OPTION]\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"    public ListAppointmentCommand() {}","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Stratostorm":26}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_FAVOURITES;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"    public static final String OPTION_FAV \u003d \"fav\";","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"            + \": Lists persons in the address book.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"            + \"Parameters: [\" + PREFIX_OPTION + \"OPTION]\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"            + \"Options: \" + OPTION_FAV + \" (to show favourites)\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"            + \"Example: \" + COMMAND_WORD + \" o/\" + OPTION_FAV + \" \\n\";","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"    public static final String MESSAGE_LIST_FAV_SUCCESS \u003d \"Listed all favourited persons\";","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"    private String option;","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"    public ListCommand() {}","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"    public ListCommand(String option) {","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"        this.option \u003d option;","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"        if (option \u003d\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"        } else if (option.equals(OPTION_FAV)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_FAVOURITES);","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"            return new CommandResult(MESSAGE_LIST_FAV_SUCCESS);","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"            return new CommandResult(MESSAGE_USAGE);","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"edelinetenges":24,"-":24}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_DATE;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"import java.sql.Timestamp;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":" * Sorts the list of persons in the address book in alphabetical order.","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"            + \": Sorts the list of persons in the address book.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"            + \"Parameters: \" + PREFIX_OPTION + \"OPTION\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"            + \"Options: \"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"            + OPTION_NAME + \" (for alphabetical order),\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"            + OPTION_DATE + \" (for chronological order)\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_OPTION + OPTION_NAME + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_OPTION + OPTION_DATE;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"    public static final String MESSAGE_SORT_ALPHABETICAL_SUCCESS \u003d \"List has been sorted in alphabetical order.\";","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"    public static final String MESSAGE_SORT_CHRONOLOGICAL_SUCCESS \u003d \"List has been sorted in chronological order.\";","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"    private final String option;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"    public SortCommand(String option) {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"        this.option \u003d option;","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"        ObservableList\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"        SortedList\u003cPerson\u003e sortedPersons;","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"        String message;","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"edelinetenges"},"content":"        if (option.equals(OPTION_NAME)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"edelinetenges"},"content":"            sortedPersons \u003d lastShownList.sorted();","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"edelinetenges"},"content":"            message \u003d MESSAGE_SORT_ALPHABETICAL_SUCCESS;","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"        } else { // order.equals(OPTION_DATE)","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"edelinetenges"},"content":"            sortedPersons \u003d lastShownList.sorted(new DateComparator());","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"edelinetenges"},"content":"            message \u003d MESSAGE_SORT_CHRONOLOGICAL_SUCCESS;","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"edelinetenges"},"content":"        model.setPersons(sortedPersons);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"edelinetenges"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"edelinetenges"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"edelinetenges"},"content":"    class DateComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"edelinetenges"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"edelinetenges"},"content":"        public int compare(Person p1, Person p2) {","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"edelinetenges"},"content":"            Timestamp t1 \u003d p1.getTimeAdded().getTimestamp();","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"edelinetenges"},"content":"            Timestamp t2 \u003d p2.getTimeAdded().getTimestamp();","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"edelinetenges"},"content":"            if (t1.before(t2)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"edelinetenges"},"content":"                return -1;","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"edelinetenges"},"content":"            } else if (t1.after(t2)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"edelinetenges"},"content":"                return 1;","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"edelinetenges"},"content":"            } else {","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"edelinetenges"},"content":"                return 0;","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"edelinetenges"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"edelinetenges"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"edelinetenges":76}},{"path":"src/main/java/seedu/address/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHILD;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.Favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.TimeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":" * Appends tags to an existing person in the address book.","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Appends tags to the tags of the person identified \"","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"            + \"Tags will be added to existing tags.\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_OPTION + \"OPTION] \"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_CHILD + \"CHILDTAG]... \"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"            + PREFIX_TAG + \"form teacher\";","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_TAG_PERSON_SUCCESS \u003d \"Tagged Person: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"    public static final String MESSAGE_TAG_REPLACE_PERSON_SUCCESS \u003d \"Tags replaced for: %1$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"    private final Index index;","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"    private final boolean isReplace;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"     * @param tags Set of tags to be appended to the person","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"    public TagCommand(Index index, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"        this.isReplace \u003d false;","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"     * @param tags Set of tags to be appended to the person","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Stratostorm"},"content":"     * @param isReplace Whether this TagCommand is meant to replace existing tags","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Stratostorm"},"content":"    public TagCommand(Index index, Set\u003cTag\u003e tags, boolean isReplace) {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Stratostorm"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Stratostorm"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Stratostorm"},"content":"        this.isReplace \u003d isReplace;","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"Stratostorm"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"Stratostorm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"Stratostorm"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"Stratostorm"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"Stratostorm"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"Stratostorm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"Stratostorm"},"content":"        Person personToTag \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"Stratostorm"},"content":"        Person taggedPerson;","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Stratostorm"},"content":"        if (isReplace) {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Stratostorm"},"content":"            taggedPerson \u003d createReplacedTaggedPerson(personToTag);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Stratostorm"},"content":"            model.setPerson(personToTag, taggedPerson);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Stratostorm"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Stratostorm"},"content":"            return new CommandResult(String.format(MESSAGE_TAG_REPLACE_PERSON_SUCCESS, taggedPerson));","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Stratostorm"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Stratostorm"},"content":"            taggedPerson \u003d createTaggedPerson(personToTag);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"Stratostorm"},"content":"            model.setPerson(personToTag, taggedPerson);","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"Stratostorm"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"Stratostorm"},"content":"            return new CommandResult(String.format(MESSAGE_TAG_PERSON_SUCCESS, taggedPerson));","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"Stratostorm"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToTag}","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"Stratostorm"},"content":"     * with tags appended with {@code tags}.","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"Stratostorm"},"content":"    private Person createTaggedPerson(Person personToTag) {","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"Stratostorm"},"content":"        assert personToTag !\u003d null;","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"Stratostorm"},"content":"        Name updatedName \u003d personToTag.getName();","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"Stratostorm"},"content":"        Phone updatedPhone \u003d personToTag.getPhone();","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"Stratostorm"},"content":"        Email updatedEmail \u003d personToTag.getEmail();","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"Stratostorm"},"content":"        Address updatedAddress \u003d personToTag.getAddress();","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"Stratostorm"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(personToTag.getTags());","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"Stratostorm"},"content":"        updatedTags.addAll(tags);","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"edelinetenges"},"content":"        TimeAdded timeAdded \u003d personToTag.getTimeAdded();","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"edelinetenges"},"content":"        Favourite favourite \u003d personToTag.getFavourite();","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"edelinetenges"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, timeAdded, favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"Stratostorm"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToTag}","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"Stratostorm"},"content":"     * with tags replaced with {@code tags}.","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"Stratostorm"},"content":"    private Person createReplacedTaggedPerson(Person personToTag) {","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"Stratostorm"},"content":"        assert personToTag !\u003d null;","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"Stratostorm"},"content":"        Name updatedName \u003d personToTag.getName();","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"Stratostorm"},"content":"        Phone updatedPhone \u003d personToTag.getPhone();","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"Stratostorm"},"content":"        Email updatedEmail \u003d personToTag.getEmail();","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"Stratostorm"},"content":"        Address updatedAddress \u003d personToTag.getAddress();","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"Stratostorm"},"content":"        Set\u003cTag\u003e updatedTags \u003d tags;","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"edelinetenges"},"content":"        TimeAdded timeAdded \u003d personToTag.getTimeAdded();","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"edelinetenges"},"content":"        Favourite favourite \u003d personToTag.getFavourite();","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"edelinetenges"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, timeAdded, favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"Stratostorm"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"clarlzx":2,"Stratostorm":117,"edelinetenges":8}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHILD;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     * @param args","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"     * @throws ParseException if {@code args} does not conform the expected format","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_DATE,","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"                        PREFIX_CHILD, PREFIX_CONTACT);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_DATE)","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"        DateTime date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"        Set\u003cTag\u003e childrenList \u003d ParserUtil.parseChildTags(argMultimap.getAllValues(PREFIX_CHILD));","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"        Set\u003cPerson\u003e contactList \u003d ParserUtil.parseContacts(argMultimap.getAllValues(PREFIX_CONTACT));","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"        Appointment appointment \u003d new Appointment(name, address, date, contactList, childrenList);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":55,"Stratostorm":5}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHILD;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"import java.sql.Timestamp;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.Favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.TimeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"                        PREFIX_CHILD, PREFIX_TAG);","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"        // if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        Phone phone;","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"        Email email;","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"        Address address;","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_PHONE)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"            phone \u003d new Phone();","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_EMAIL)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"            email \u003d new Email();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_ADDRESS)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"            address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"            address \u003d new Address();","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"Stratostorm"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseChildTags(argMultimap.getAllValues(PREFIX_CHILD));","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"Stratostorm"},"content":"        tagList.addAll(ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG)));","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"edelinetenges"},"content":"        Timestamp timestamp \u003d new Timestamp(System.currentTimeMillis());","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"edelinetenges"},"content":"        TimeAdded timeAdded \u003d new TimeAdded(timestamp.toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"edelinetenges"},"content":"        Favourite favourite \u003d new Favourite(\"false\");","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"edelinetenges"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, timeAdded, favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"clarlzx":2,"mechastriker3":22,"Stratostorm":6,"edelinetenges":8,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":" * Parses input arguments and creates a new ClearCommand object","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"     * and returns a ClearCommand object for execution.","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"        } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"            Set\u003cTag\u003e tagsToDelete \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"            return new ClearCommand(tagsToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Stratostorm":31}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"    public static final Prefix PREFIX_OPTION \u003d new Prefix(\"o/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    public static final Prefix PREFIX_CHILD \u003d new Prefix(\"tc/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    public static final Prefix PREFIX_CONTACT \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    /* Options Definition for PREFIX_OPTION */","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    public static final String OPTION_TAG \u003d \"tag\";","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    public static final String OPTION_NAME \u003d \"name\";","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    public static final String OPTION_DATE \u003d \"date\";","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    public static final String OPTION_ADDRESS \u003d \"address\";","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    public static final String OPTION_CONTACT \u003d \"contact\";","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    public static final String OPTION_PHONE \u003d \"phone\";","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    public static final String OPTION_EMAIL \u003d \"email\";","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    public static final String OPTION_FAVORITE \u003d \"fav\";","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"    public static final String OPTION_REMOVE \u003d \"remove\";","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nicoleang09":2,"mechastriker3":9,"Stratostorm":2,"edelinetenges":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"     * @param args arguments","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"            return new DeleteAppointmentCommand(index);","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":14,"edelinetenges":12}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        String[] indexStrings \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        assert indexStrings.length \u003e 0 : \"DeleteCommand indexes are empty\";","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"            List\u003cIndex\u003e indexes \u003d stringArrayToIndexList(indexStrings);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"            return new DeleteCommand(indexes);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"        // try {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"        //     Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"        //     return new DeleteCommand(index);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"        // } catch (ParseException pe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        //     throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"        //             String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        // }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"    private List\u003cIndex\u003e stringArrayToIndexList(String[] indexStrings) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"        for (String indexString : indexStrings) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"            indexes.add(ParserUtil.parseIndex(indexString));","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"        return indexes;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"mechastriker3":30,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHILD;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_DATE, PREFIX_CONTACT,","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"                        PREFIX_CHILD);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"        Index index;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"            editAppointmentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"            editAppointmentDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"            editAppointmentDescriptor.setDateTime(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Stratostorm"},"content":"        parseContactsForEdit(argMultimap.getAllValues(PREFIX_CONTACT))","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Stratostorm"},"content":"                .ifPresent(editAppointmentDescriptor::addAllContacts);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Stratostorm"},"content":"        parseChildTagsForEdit(argMultimap.getAllValues(PREFIX_CHILD))","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"Stratostorm"},"content":"                .ifPresent(editAppointmentDescriptor::addAllTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"Stratostorm"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Stratostorm"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"Stratostorm"},"content":"        return new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"Stratostorm"},"content":"     * Parses {@code Collection\u003cString\u003e contacts} into a {@code Set\u003cPerson\u003e} if {@code contacts} is non-empty.","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"Stratostorm"},"content":"     * If {@code contacts} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Stratostorm"},"content":"     * {@code Set\u003cTag\u003e} containing zero contacts.","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Stratostorm"},"content":"    private Optional\u003cSet\u003cPerson\u003e\u003e parseContactsForEdit(Collection\u003cString\u003e contacts) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"Stratostorm"},"content":"        assert contacts !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Stratostorm"},"content":"        if (contacts.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"Stratostorm"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"Stratostorm"},"content":"        Collection\u003cString\u003e contactSet \u003d contacts.size() \u003d\u003d 1 \u0026\u0026 contacts.contains(\"\")","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"Stratostorm"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"Stratostorm"},"content":"                : contacts;","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"Stratostorm"},"content":"        return Optional.of(ParserUtil.parseContacts(contactSet));","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"Stratostorm"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"Stratostorm"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"Stratostorm"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"Stratostorm"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseChildTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"Stratostorm"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"Stratostorm"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"Stratostorm"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"Stratostorm"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\")","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"Stratostorm"},"content":"                        ? Collections.emptySet()","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"Stratostorm"},"content":"                        : tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"Stratostorm"},"content":"        return Optional.of(ParserUtil.parseChildTags(tagSet));","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"Stratostorm"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Stratostorm":106}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHILD;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"                        PREFIX_CHILD, PREFIX_TAG);","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"Stratostorm"},"content":"        parseChildTagsForEdit(argMultimap.getAllValues(PREFIX_CHILD)).ifPresent(editPersonDescriptor::addAllTags);","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"Stratostorm"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\")","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"Stratostorm"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"Stratostorm"},"content":"                : tags;","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"Stratostorm"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"Stratostorm"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"Stratostorm"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"Stratostorm"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseChildTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"Stratostorm"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"Stratostorm"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"Stratostorm"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"Stratostorm"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\")","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"Stratostorm"},"content":"                        ? Collections.emptySet()","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"Stratostorm"},"content":"                        : tags;","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"Stratostorm"},"content":"        return Optional.of(ParserUtil.parseChildTags(tagSet));","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Stratostorm":24,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/FavouriteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_OPTION;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_REMOVE;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.commands.FavouriteCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":" * Parses input arguments and creates a new FavouriteCommand object","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"public class FavouriteCommandParser implements Parser\u003cFavouriteCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"    public FavouriteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_OPTION);","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"        Index index;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"        boolean isFav;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FavouriteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"        Optional\u003cString\u003e option \u003d argMultimap.getValue(PREFIX_OPTION);","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"        if (option.isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"            String unboxedOption \u003d option.get();","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"            if (unboxedOption.equals(OPTION_REMOVE)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"                isFav \u003d false;","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"            } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_OPTION, unboxedOption));","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"            isFav \u003d true;","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"        return new FavouriteCommand(index, isFav);","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"edelinetenges":48}},{"path":"src/main/java/seedu/address/logic/parser/FindAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_ADDRESS;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_CONTACT;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_NAME;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.appointment.ApptAddressContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.appointment.ApptAnyContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.appointment.ApptContactsContainKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.appointment.ApptDateContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.appointment.ApptNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"public class FindAppointmentCommandParser implements Parser\u003cFindAppointmentCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code FindAppointmentCommand}","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"     * and returns a FindAppointmentCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"    public FindAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_OPTION);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"        Optional\u003cString\u003e argsString \u003d argMultimap.getValue(PREFIX_OPTION);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"        if (argsString.isPresent()) { // find with options","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"            // split args into option and remaining optionArgs","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"            String unboxedArgsString \u003d argsString.get();","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"            String[] optionArgsArray \u003d unboxedArgsString.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"            String option \u003d optionArgsArray[0];","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"            String optionArgs \u003d optionArgsArray[1];","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"            return parseFindOptions(option, optionArgs);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"        } else { // find by all fields","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"            return parseFindAll(trimmedArgs);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"     * Parses args in find by options context","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"     * @param option option to determine the option selected","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"     * @param optionArgs {@code optionArgs} for the rest of the args","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"     * @return {@code FindCommand}","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"    public FindAppointmentCommand parseFindOptions(String option, String optionArgs) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(optionArgs.split(\"\\\\s+\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"        if (option.equals(OPTION_NAME)) { // find by name","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"            return new FindAppointmentCommand(new ApptNameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"        } else if (option.equals(OPTION_ADDRESS)) { // find by address","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"            return new FindAppointmentCommand(new ApptAddressContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"        } else if (option.equals(OPTION_DATE)) { // find by date","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"            return new FindAppointmentCommand(new ApptDateContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"        } else if (option.equals(OPTION_CONTACT)) { // find by contacts","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"            return new FindAppointmentCommand(new ApptContactsContainKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"     * Parses args in find by all context","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"     * @param trimmedArgs","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"     * @return","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"    public FindAppointmentCommand parseFindAll(String trimmedArgs) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"        assert keywords.length \u003e 0 : \"FindCommand keywords are empty\";","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":"        return new FindAppointmentCommand(new ApptAnyContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":10,"mechastriker3":76}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_ADDRESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_EMAIL;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_PHONE;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_TAG;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.person.AnyContainsKeywordsPredicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.person.TagsMatchKeywordPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_OPTION);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"        Optional\u003cString\u003e argsString \u003d argMultimap.getValue(PREFIX_OPTION);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        if (argsString.isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"            // split args into option and remaining optionArgs","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"            String unboxedArgsString \u003d argsString.get();","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"            String[] optionArgsArray \u003d unboxedArgsString.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"            String option \u003d optionArgsArray[0];","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"            String optionArgs \u003d optionArgsArray[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"            return parseFindOptions(option, optionArgs);","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"        } else { // find by all fields","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"            return parseFindAll(trimmedArgs);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"     * Parses args in find by options context","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"     * @param option option to determine the option selected","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"     * @param optionArgs {@code optionArgs} for the rest of the args","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"     * @return {@code FindCommand}","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"    public FindCommand parseFindOptions(String option, String optionArgs) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"        // get keywords","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(optionArgs.split(\"\\\\s+\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"        switch (option) {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":"        case OPTION_NAME: // find by name","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"        case OPTION_ADDRESS: // find by address","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"            return new FindCommand(new AddressContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"        case OPTION_PHONE: // find by phone","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"            return new FindCommand(new PhoneContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"        case OPTION_EMAIL: // find by email","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"            return new FindCommand(new EmailContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"        case OPTION_TAG: // find by tag","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"            // get tags","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(optionArgs, PREFIX_OPTION);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"            Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"            return new FindCommand(new TagsMatchKeywordPredicate(tagSet));","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"        default:","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":"     * Parses args in find by all context","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"     * @param trimmedArgs args without trailing whitespace","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":"     * @return {@code FindCommand}","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"    public FindCommand parseFindAll(String trimmedArgs) {","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":"        assert keywords.length \u003e 0 : \"FindCommand keywords are empty\";","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"mechastriker3"},"content":"        return new FindCommand(new AnyContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"mechastriker3":68,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/HeliBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.commands.FavouriteCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.commands.ListAppointmentCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"public class HeliBookParser {","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"Stratostorm"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"edelinetenges"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"edelinetenges"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"edelinetenges"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"            // return new HelpCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":83,"author":{"gitId":"Stratostorm"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"Stratostorm"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"edelinetenges"},"content":"        case FavouriteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"edelinetenges"},"content":"            return new FavouriteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"Stratostorm"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"Stratostorm"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"        case FindAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"            return new FindAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"Stratostorm"},"content":"        case ListAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"Stratostorm"},"content":"            return new ListAppointmentCommand();","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicoleang09":14,"Stratostorm":10,"edelinetenges":10,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"public class HelpCommandParser implements Parser {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"     * @param args","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"        String trimmedArgs \u003d args.trim().toLowerCase();","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        String[] specifiedCommands \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"        if (specifiedCommands.length \u003e 1) {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        // isValidCommand(trimmedArgs);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"        return new HelpCommand(trimmedArgs);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    private void isValidCommand(String trimmedArgs) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"        switch (trimmedArgs) {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"            return;","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"        default:","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"nicoleang09":58}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_OPTION;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"            return new ListCommand();","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_OPTION);","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"            Optional\u003cString\u003e option \u003d argMultimap.getValue(PREFIX_OPTION);","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"            if (option.isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"                String unboxedOption \u003d option.get();","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"                if (unboxedOption.equals(ListCommand.OPTION_FAV)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"                    return new ListCommand(unboxedOption);","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"                } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_OPTION, unboxedOption));","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"                }","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"            } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"edelinetenges":39}},{"path":"src/main/java/seedu/address/logic/parser/MarkdownPlainTextParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"public class MarkdownPlainTextParser {","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"    private String plainText;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"     * Parses markdown text from the user guide\u0027s \"Features\" section into plain text.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"     * @param markdown  Text in markdown.","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"     * @param type      Type of text to be formatted. Can be title text, as indicated by \"title\",","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"     *                  or body text, as indicated by \"info\".","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"     * @return Plain text.","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    public String formatPlainText(String markdown, String type) {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"        if (type \u003d\u003d \"title\") {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"            return markdown.substring(5);","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"        } else if (type \u003d\u003d \"info\") {","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"            Scanner s \u003d new Scanner(markdown);","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"            plainText \u003d \"\";","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"                String next \u003d s.nextLine();","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"                handleLine(next);","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"            plainText.replaceAll(\"…\\u200B\", \"…\");","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"            return plainText;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"        } else {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"            return \"error formatting\";","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"    private void handleLine(String next) {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"        if (next.startsWith(\"\u003cdiv\")) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"            formatDivStart(next);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        } else if (next.contains(\"\u003c/div\u003e\")) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"            formatDivEnd(next);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"        } else if (!next.contains(\"![\")) {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"            plainText +\u003d next + \"\\n\";","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"    private void formatDivEnd(String next) {","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"        String[] nextSplit \u003d next.split(\"\u003c\");","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"        if (!nextSplit[0].equals(\"\")) {","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"            plainText +\u003d nextSplit[0] + \"\\n\";","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"    private String formatDivStart(String next) {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"        String[] nextSplit \u003d next.split(\"\u003c|\\\\\u003e\");","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"        String divContent \u003d nextSplit[2];","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"        if (divContent.startsWith(\":bulb:\")) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"            plainText +\u003d \"\\uD83D\\uDCA1 \" + divContent.substring(9, 13) + \" \";","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        } else if (divContent.startsWith(\":exclamation:\")) {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"            plainText +\u003d \"❗ \" + divContent.substring(16, 24) + \" \";","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"        } else if (divContent.startsWith(\":warning:\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"            plainText +\u003d \"⚠ \" + divContent.substring(12, 20) + \" \";","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"        } else {","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"            plainText +\u003d divContent + \"\\n\";","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"        return plainText;","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"nicoleang09":67}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.ChildTag;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    private static Model model;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    public static void setModel(Model model) {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"        ParserUtil.model \u003d model;","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"     * Parses a {@code String date} into an {@code DateTime}.","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"    public static DateTime parseDate(String date) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"        if (!DateTime.isValidDateTime(trimmedDate)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"        return new DateTime(trimmedDate);","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"Stratostorm"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"Stratostorm"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"Stratostorm"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"Stratostorm"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"Stratostorm"},"content":"    public static Tag parseChildTag(String tag) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"Stratostorm"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"Stratostorm"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"Stratostorm"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"Stratostorm"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"Stratostorm"},"content":"        return new ChildTag(trimmedTag);","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"Stratostorm"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"Stratostorm"},"content":"    public static Set\u003cTag\u003e parseChildTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"Stratostorm"},"content":"        requireNonNull(tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"Stratostorm"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"Stratostorm"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"Stratostorm"},"content":"            tagSet.add(parseChildTag(tagName));","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"Stratostorm"},"content":"        return tagSet;","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"nicoleang09"},"content":"     * Parses a {@code String contact} into a {@code Person}.","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"nicoleang09"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"nicoleang09"},"content":"     * @throws ParseException if the given {@code person} is invalid.","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"nicoleang09"},"content":"    public static Person parseContact(String contactIndex) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(contactIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"nicoleang09"},"content":"        String trimmedArgs \u003d contactIndex.trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"nicoleang09"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"nicoleang09"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"nicoleang09"},"content":"        List\u003cPerson\u003e contactList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"nicoleang09"},"content":"        Index targetIndex \u003d parseIndex(contactIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"nicoleang09"},"content":"        int targetIndexInt \u003d targetIndex.getZeroBased();","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"nicoleang09"},"content":"        if (targetIndexInt \u003e\u003d contactList.size()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"nicoleang09"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"nicoleang09"},"content":"        Person contactToAdd \u003d contactList.get(targetIndexInt);","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"nicoleang09"},"content":"        return contactToAdd;","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"nicoleang09"},"content":"     * Parses {@code Collection\u003cString\u003e contacts} into a {@code Set\u003cPerson\u003e}.","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"nicoleang09"},"content":"    public static Set\u003cPerson\u003e parseContacts(Collection\u003cString\u003e contactsIndices) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(contactsIndices);","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"nicoleang09"},"content":"        final Set\u003cPerson\u003e contactSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"nicoleang09"},"content":"        for (String contactIndex : contactsIndices) {","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"nicoleang09"},"content":"            contactSet.add(parseContact(contactIndex));","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"nicoleang09"},"content":"        return contactSet;","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"clarlzx":2,"nicoleang09":68,"Stratostorm":28,"-":122}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_DATE;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.OPTION_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"                PREFIX_OPTION);","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"        Optional\u003cString\u003e option \u003d argMultimap.getValue(PREFIX_OPTION);","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"        if (option.isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"            String unboxedOption \u003d option.get();","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"            if (!unboxedOption.equals(OPTION_NAME)","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"                    \u0026\u0026 !unboxedOption.equals(OPTION_DATE)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"                throw new ParseException(","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"                return new SortCommand(unboxedOption);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"edelinetenges":45}},{"path":"src/main/java/seedu/address/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_OPTION;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CHILD;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCommand","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"     * and returns a TagCommand object for execution.","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_OPTION, PREFIX_TAG, PREFIX_CHILD);","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"        Index index;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"        boolean isReplace;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"        Optional\u003cString\u003e option \u003d argMultimap.getValue(PREFIX_OPTION);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"        if (option.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"            String unboxedOption \u003d option.get();","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"            if (unboxedOption.equals(\"rt\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"                isReplace \u003d true;","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"            } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_OPTION, unboxedOption));","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"            isReplace \u003d false;","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"        Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"        tagSet.addAll(ParserUtil.parseChildTags(argMultimap.getAllValues(PREFIX_CHILD)));","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"        return new TagCommand(index, tagSet, isReplace);","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Stratostorm":54}},{"path":"src/main/java/seedu/address/model/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    public static final String PLACEHOLDER \u003d \"NIL\";","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"     * Constructs a {@code Address} with a placeholder as the value.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    public Address() {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"        value \u003d PLACEHOLDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(PLACEHOLDER);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"clarlzx":1,"mechastriker3":9,"-":55}},{"path":"src/main/java/seedu/address/model/AppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":" * Wraps all data at the appointment-book level","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":" * Duplicates are not allowed (by .isSameAppointment comparison)","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"public class AppointmentBook implements ReadOnlyAppointmentBook {","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    /*","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    {","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    public AppointmentBook() {}","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * Creates an AppointmentBook using the Appointments in the {@code toBeCopied}","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"    public AppointmentBook(ReadOnlyAppointmentBook toBeCopied) {","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        this();","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"     * Replaces the contents of the appointment list with {@code apppointments}.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"     * Resets the existing data of this {@code AppointmentBook} with {@code newData}.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"    public void resetData(ReadOnlyAppointmentBook newData) {","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"    //// appointment-level operations","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the appointment book.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"     * Adds an appointment to the appointment book.","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"     * The appointment must not already exist in the appointment book.","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"    public void addAppointment(Appointment p) {","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"        appointments.add(p);","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"     * Replaces the given appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"     * {@code target} must exist in the appointment book.","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as another existing appointment","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"     * in the appointment book.","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"     * Removes {@code key} from this {@code AppointmentBook}.","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"     * {@code key} must exist in the appointment book.","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"    public void removeAppointment(Appointment key) {","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"        appointments.remove(key);","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"    //// util methods","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"        return appointments.asUnmodifiableObservableList().size() + \" appointments\";","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"                || (other instanceof AppointmentBook // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 appointments.equals(((AppointmentBook) other).appointments));","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":"        return appointments.hashCode();","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"clarlzx":121}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"    /** {@code Predicate} that evaluates to true if a person is favourited */","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_FAVOURITES \u003d person -\u003e person.getFavourite().isFav();","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"edelinetenges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"edelinetenges"},"content":"     * Sets the person list to the given {@code persons}.","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"edelinetenges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"edelinetenges"},"content":"    void setPersons(List\u003cPerson\u003e persons);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"     * Returns the user prefs\u0027 appointment book file path.","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"     * Sets the user prefs\u0027 appointment book file path.","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"    void setAppointmentBookFilePath(Path appointmentBookFilePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"     * Replaces appointment book data with the data in {@code appointmentBook}.","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"    void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook);","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"    /** Returns the AppointmentBook */","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"nicoleang09"},"content":"    ReadOnlyAppointmentBook getAppointmentBook();","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Appointment \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"nicoleang09"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the appointment book.","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"nicoleang09"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"nicoleang09"},"content":"     * Deletes the given appointment.","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"nicoleang09"},"content":"     * The appointment must exist in the appointment book.","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"nicoleang09"},"content":"    void deleteAppointment(Appointment target);","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"nicoleang09"},"content":"     * Adds the given appointment.","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"nicoleang09"},"content":"     * {@code appointment} must not already exist in the appointment book.","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"nicoleang09"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"nicoleang09"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"nicoleang09"},"content":"     * {@code target} must exist in the appointment book.","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"nicoleang09"},"content":"     * The person identity of {@code editedAppointment} must not be the same as another existing appointment","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"nicoleang09"},"content":"     * in the address book.","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"nicoleang09"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"clarlzx"},"content":"    void setAppointments(List\u003cAppointment\u003e appointments);","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"nicoleang09"},"content":"    /** Returns an unmodifiable view of the filtered appointment list */","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"nicoleang09"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"nicoleang09"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"nicoleang09"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"nicoleang09"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"nicoleang09"},"content":"    /** Orders appointment list in increasing DateTime order. */","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"nicoleang09"},"content":"    void orderAppointments();","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"clarlzx":5,"nicoleang09":64,"edelinetenges":10,"-":88}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.DateTimeComparator;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    private final AppointmentBook appointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * Initializes a ModelManager with the given addressBook, appointmentBook and userPrefs.","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyAppointmentBook appointmentBook,","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        requireAllNonNull(addressBook, appointmentBook, userPrefs);","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"                + \", appointment book: \" + appointmentBook","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"                + \" and user prefs: \" + userPrefs);","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"        this.appointmentBook \u003d new AppointmentBook(appointmentBook);","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.appointmentBook.getAppointmentList());","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"        this(new AddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"        addressBook.setPersons(persons);","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"nicoleang09"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"clarlzx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"clarlzx"},"content":"    public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"clarlzx"},"content":"        this.appointmentBook.resetData(appointmentBook);","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"clarlzx"},"content":"    public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"clarlzx"},"content":"        return appointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"nicoleang09"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"nicoleang09"},"content":"        return userPrefs.getAppointmentBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"nicoleang09"},"content":"    public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(appointmentBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"nicoleang09"},"content":"        userPrefs.setAppointmentBookFilePath(appointmentBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"nicoleang09"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"nicoleang09"},"content":"        return appointmentBook.hasAppointment(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"nicoleang09"},"content":"    public void deleteAppointment(Appointment target) {","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"nicoleang09"},"content":"        appointmentBook.removeAppointment(target);","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"nicoleang09"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"nicoleang09"},"content":"        appointmentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"nicoleang09"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":188,"author":{"gitId":"nicoleang09"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"nicoleang09"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":191,"author":{"gitId":"nicoleang09"},"content":"        appointmentBook.setAppointment(target, editedAppointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":194,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"clarlzx"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"nicoleang09"},"content":"        appointmentBook.setAppointments(appointments);","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"nicoleang09"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":202,"author":{"gitId":"clarlzx"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"clarlzx"},"content":"     * {@code versionedAppointmentBook}","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":206,"author":{"gitId":"nicoleang09"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"nicoleang09"},"content":"        return filteredAppointments;","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":211,"author":{"gitId":"nicoleang09"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":213,"author":{"gitId":"nicoleang09"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"nicoleang09"},"content":"    public void orderAppointments() {","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"nicoleang09"},"content":"        ObservableList\u003cAppointment\u003e appointmentList \u003d getFilteredAppointmentList();","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"nicoleang09"},"content":"        SortedList\u003cAppointment\u003e sortedAppointmentList \u003d appointmentList.sorted(new DateTimeComparator());","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"nicoleang09"},"content":"        setAppointments(sortedAppointmentList);","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2021-03-28"},{"lineNumber":239,"author":{"gitId":"nicoleang09"},"content":"                \u0026\u0026 appointmentBook.equals(other.appointmentBook)","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":241,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-03-28"},{"lineNumber":242,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 filteredAppointments.equals(other.filteredAppointments);","lastModifiedDate":"2021-03-28"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"clarlzx":16,"nicoleang09":59,"edelinetenges":3,"-":167}},{"path":"src/main/java/seedu/address/model/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"clarlzx":1,"-":58}},{"path":"src/main/java/seedu/address/model/ReadOnlyAppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":" * Unmodifiable view of an appointment book","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"public interface ReadOnlyAppointmentBook {","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"     * Returns an unmodifiable view of the appointments list.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"clarlzx":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"clarlzx":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    private Path appointmentBookFilePath \u003d Paths.get(\"data\", \"appointmentbook.json\");","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"        setAppointmentBookFilePath(newUserPrefs.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"        return appointmentBookFilePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"    public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"        requireNonNull(appointmentBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"        this.appointmentBookFilePath \u003d appointmentBookFilePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 appointmentBookFilePath.equals(o.appointmentBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, appointmentBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"        sb.append(\"\\nLocal address book file location : \" + addressBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"        sb.append(\"\\nLocal appointment book file location: \" + appointmentBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"clarlzx":16,"-":84}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":" * Represents an Appointment in the appointment book.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"public class Appointment implements Comparable\u003cAppointment\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    // Identity fields","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    private final Name name;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"    // Data fields","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    private final Address address;","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"    private final Set\u003cPerson\u003e contacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"    //private final TimeAdded timeAdded;","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"    public Appointment(Name name, Address address, DateTime dateTime, Set\u003cPerson\u003e contacts, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"        requireAllNonNull(name, address, dateTime, contacts, tags);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"        this.contacts.addAll(contacts);","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"        return name;","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        return address;","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"    public DateTime getDateTime() {","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"        return dateTime;","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"     * Returns an immutable persons set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"    public Set\u003cPerson\u003e getContacts() {","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"        return Collections.unmodifiableSet(contacts);","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"Stratostorm"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"Stratostorm"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"Stratostorm"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"Stratostorm"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"     * Returns true if both appointments have the same name.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"     * This defines a weaker notion of equality between two appointments.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"    public boolean isSameAppointment(Appointment otherAppointment) {","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"            return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"        return otherAppointment !\u003d null","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 otherAppointment.getName().equals(getName());","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"     * Returns true if both appointments have the same identity and data fields.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"     * This defines a stronger notion of equality between two appointments.","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"            return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"            return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"        return otherAppointment.getName().equals(getName())","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 otherAppointment.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 otherAppointment.getDateTime().equals(getDateTime())","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"Stratostorm"},"content":"                \u0026\u0026 otherAppointment.getContacts().equals(getContacts())","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"Stratostorm"},"content":"                \u0026\u0026 otherAppointment.getTags().equals(getTags());","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"Stratostorm"},"content":"        return Objects.hash(name, address, dateTime, contacts, tags);","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"                .append(getAddress())","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"                .append(\"; DateTime: \")","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":"                .append(getDateTime());","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"        Set\u003cPerson\u003e contacts \u003d getContacts();","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"Stratostorm"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"Stratostorm"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"Stratostorm"},"content":"            contacts.forEach(builder::append);","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":"        if (!contacts.isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":"            builder.append(\"; Contacts: \");","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"            contacts.forEach(builder::append);","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"    public int compareTo(Appointment p) {","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":"        return this.getName().fullName.compareToIgnoreCase(p.getName().fullName);","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"clarlzx":117,"Stratostorm":20}},{"path":"src/main/java/seedu/address/model/appointment/ApptAddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Appointment}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"public class ApptAddressContainsKeywordsPredicate extends ApptFieldContainsKeywordsPredicate {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public ApptAddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        super(keywords);","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        return super.getKeywords().stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"                        StringUtil.containsWordIgnoreCase(appointment.getAddress().toString(), keyword));","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"mechastriker3":23}},{"path":"src/main/java/seedu/address/model/appointment/ApptAnyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"public class ApptAnyContainsKeywordsPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public ApptAnyContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        ApptNameContainsKeywordsPredicate namePredicate \u003d new ApptNameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        ApptDateContainsKeywordsPredicate datePredicate \u003d new ApptDateContainsKeywordsPredicate(keywords);","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        ApptAddressContainsKeywordsPredicate addressPredicate \u003d new ApptAddressContainsKeywordsPredicate(keywords);","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        return namePredicate.test(appointment) || datePredicate.test(appointment)","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"                || addressPredicate.test(appointment);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"                || (other instanceof ApptAnyContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"                \u0026\u0026 keywords.equals(((ApptAnyContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"mechastriker3":32}},{"path":"src/main/java/seedu/address/model/appointment/ApptContactsContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"public class ApptContactsContainKeywordsPredicate extends ApptFieldContainsKeywordsPredicate {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    public ApptContactsContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        super(keywords);","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        Set\u003cPerson\u003e persons \u003d appointment.getContacts();","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        for (Person person : persons) {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"            boolean isFound \u003d super.getKeywords().stream().anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"                    StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"            if (isFound) {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"                return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"        return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"mechastriker3":33}},{"path":"src/main/java/seedu/address/model/appointment/ApptDateContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"public class ApptDateContainsKeywordsPredicate extends ApptFieldContainsKeywordsPredicate {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public ApptDateContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        super(keywords);","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        return super.getKeywords().stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"                        StringUtil.containsWordIgnoreCase(appointment.getDateTime().toString(), keyword));","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"mechastriker3":23}},{"path":"src/main/java/seedu/address/model/appointment/ApptFieldContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"public class ApptFieldContainsKeywordsPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    public ApptFieldContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    public List\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        return keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"                        StringUtil.containsWordIgnoreCase(appointment.getName().fullName, keyword));","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"                || (other instanceof ApptFieldContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"                \u0026\u0026 keywords.equals(((ApptFieldContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"mechastriker3":35}},{"path":"src/main/java/seedu/address/model/appointment/ApptNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"public class ApptNameContainsKeywordsPredicate extends ApptFieldContainsKeywordsPredicate {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public ApptNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        super(keywords);","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        return super.getKeywords().stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"                        StringUtil.containsWordIgnoreCase(appointment.getName().fullName, keyword));","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"mechastriker3":22}},{"path":"src/main/java/seedu/address/model/appointment/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":" * Represents an Appointment\u0027s dateTime in the appointment book.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"public class DateTime {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"DateTimes should not be blank and must be \"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"            + \"of the format dd/MM/yyyy HH:mm\";","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    public static final String PLACEHOLDER \u003d \"NIL\";","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    public final String dateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     * Constructs an {@code DateTime}.","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"     * @param dateTimeStr A valid date and time.","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"    public DateTime(String dateTimeStr) {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"        requireNonNull(dateTimeStr);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"        checkArgument(isValidDateTime(dateTimeStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"        dateTime \u003d dateTimeStr;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     * Constructs a {@code DateTime} with a placeholder as the value.","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"    public DateTime() {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"        dateTime \u003d PLACEHOLDER;","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"     * Returns true if a given string is a valid dateTime.","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"            LocalDateTime.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"            return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"            return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"        return dateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"                || (other instanceof DateTime // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 dateTime.equals(((DateTime) other).dateTime)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"        return dateTime.hashCode();","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"clarlzx":69}},{"path":"src/main/java/seedu/address/model/appointment/DateTimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.model.appointment.DateTime.DATE_TIME_FORMATTER;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"public class DateTimeComparator implements Comparator\u003cAppointment\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DateTimeComparator.class);","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    public int compare(Appointment a1, Appointment a2) {","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"        // logger.info(\"comparing appointments...\");","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"        LocalDateTime d1 \u003d LocalDateTime.parse(a1.getDateTime().toString(), DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"        LocalDateTime d2 \u003d LocalDateTime.parse(a2.getDateTime().toString(), DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"        // logger.info(\"d1.compareTo(d2) \u003d \" + d1.compareTo(d2));","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        return d1.compareTo(d2);","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":23}},{"path":"src/main/java/seedu/address/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":" * An appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}. As such,","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":" * adding and updating of appointments uses Appointment#isSameAppointment(Appointment) for equality so as to ensure","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":" * that the appointment being added or updated is unique in terms of identity in the UniqueAppointmentList.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":" * However, the removal of an appointment uses Appointment#equals(Object) so as to ensure that the appointment","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":" *","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":" *","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"     * The appointment must not already exist in the list.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"     * Replaces the appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as another existing appointment","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"     * in the list.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"        if (!target.isSameAppointment(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"     * Removes the equivalent appointment from the list.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"     * The appointment must exist in the list.","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"    public void setAppointments(UniqueAppointmentList replacement) {","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"                || (other instanceof UniqueAppointmentList // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 internalList.equals(((UniqueAppointmentList) other).internalList));","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"clarlzx"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":"     * Returns true if {@code appointments} contains only unique appointments.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"                if (appointments.get(i).isSameAppointment(appointments.get(j))) {","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"                    return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"                }","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"clarlzx"},"content":"        return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"clarlzx":139}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"public class AppointmentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"clarlzx":6}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":" * Signals that the operation will result in duplicate Appointments (Appointments are considered duplicates","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":" * if they have the same identity).","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"clarlzx":11}},{"path":"src/main/java/seedu/address/model/person/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"public class AddressContainsKeywordsPredicate extends FieldContainsKeywordsPredicate {","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"        super(keywords);","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        return super.getKeywords().stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"                        StringUtil.containsWordIgnoreCase(person.getAddress().toString(), keyword));","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"mechastriker3":24}},{"path":"src/main/java/seedu/address/model/person/AnyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":" * Tests that any of {@code Person}\u0027s fields matches any of the keywords given.","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"public class AnyContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public AnyContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        AddressContainsKeywordsPredicate addressPredicate \u003d new AddressContainsKeywordsPredicate(keywords);","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d new PhoneContainsKeywordsPredicate(keywords);","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d new EmailContainsKeywordsPredicate(keywords);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"        return namePredicate.test(person) || addressPredicate.test(person) || phonePredicate.test(person)","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"                || emailPredicate.test(person);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"                || (other instanceof AnyContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"                \u0026\u0026 keywords.equals(((AnyContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"mechastriker3":33}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    private static final String PLACEHOLDER \u003d \"NIL\";","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"     * Constructs a {@code Email} with a placeholder as the value.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"    public Email() {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"        value \u003d PLACEHOLDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(PLACEHOLDER);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mechastriker3":10,"-":66}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"public class EmailContainsKeywordsPredicate extends FieldContainsKeywordsPredicate {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        super(keywords);","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        return super.getKeywords().stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"                        StringUtil.containsWordIgnoreCase(person.getEmail().toString(), keyword));","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"mechastriker3":22}},{"path":"src/main/java/seedu/address/model/person/Favourite.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":" * Represents whether or not a Person is favourited in the address book.","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"public class Favourite {","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"    private String value;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"    private boolean isFav;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"     * Constructs a {@code Favourite}.","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"     * @param value A valid favourite value.","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"    public Favourite(String value) {","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"        isFav \u003d Boolean.parseBoolean(value);","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"    public String toString() {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"        return value;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"    public boolean isFav() {","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"        return isFav;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"                || (other instanceof Favourite // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"                \u0026\u0026 Boolean.compare(isFav, ((Favourite) other).isFav) \u003d\u003d 0); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"edelinetenges":40}},{"path":"src/main/java/seedu/address/model/person/FieldContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"public abstract class FieldContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public FieldContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    public List\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"        return keywords;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    public abstract boolean test(Person person);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"                || (other instanceof FieldContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"                \u0026\u0026 keywords.equals(((FieldContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"mechastriker3":29}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"public class NameContainsKeywordsPredicate extends FieldContainsKeywordsPredicate {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        super(keywords);","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        return super.getKeywords().stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"                        StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"mechastriker3":5,"-":17}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"public class Person implements Comparable\u003cPerson\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"    private final TimeAdded timeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"    private final Favourite favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"                  Set\u003cTag\u003e tags, TimeAdded timeAdded, Favourite favourite) {","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"        requireAllNonNull(name, phone, email, address, tags, timeAdded, favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"        this.timeAdded \u003d timeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"        this.favourite \u003d favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"edelinetenges"},"content":"    public TimeAdded getTimeAdded() {","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"edelinetenges"},"content":"        return timeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"edelinetenges"},"content":"    public Favourite getFavourite() {","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"edelinetenges"},"content":"        return favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"mechastriker3"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"mechastriker3"},"content":"                \u0026\u0026 otherPerson.getFavourite().equals(getFavourite());","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"edelinetenges"},"content":"        return Objects.hash(name, phone, email, address, tags, favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"edelinetenges"},"content":"    public int compareTo(Person p) {","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"edelinetenges"},"content":"        return this.getName().fullName.compareToIgnoreCase(p.getName().fullName);","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"clarlzx":2,"mechastriker3":4,"edelinetenges":23,"-":117}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    public static final String PLACEHOLDER \u003d \"NIL\";","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"     * Constructs a {@code Phone} with a placeholder as the value.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"    public Phone() {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"        value \u003d PLACEHOLDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(PLACEHOLDER);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mechastriker3":9,"-":52}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"public class PhoneContainsKeywordsPredicate extends FieldContainsKeywordsPredicate {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        super(keywords);","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        return super.getKeywords().stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"                        StringUtil.containsWordIgnoreCase(person.getPhone().toString(), keyword));","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"mechastriker3":22}},{"path":"src/main/java/seedu/address/model/person/TagsMatchKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"public class TagsMatchKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    private final Set\u003cTag\u003e tagSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    public TagsMatchKeywordPredicate(Set\u003cTag\u003e tagSet) {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"        this.tagSet \u003d tagSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        return tagSet.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"                .anyMatch(tag -\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"                        person.getTags().contains(tag));","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"                || (other instanceof TagsMatchKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"                \u0026\u0026 tagSet.equals(((TagsMatchKeywordPredicate) other).tagSet)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"mechastriker3":32}},{"path":"src/main/java/seedu/address/model/person/TimeAdded.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import java.sql.Timestamp;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"public class TimeAdded {","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"    public final Timestamp timestamp;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"    public final String value;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"     * @param timeAdded A valid phone number.","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"    public TimeAdded(String timeAdded) {","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"        value \u003d timeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"        timestamp \u003d Timestamp.valueOf(timeAdded);","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"    public Timestamp getTimestamp() {","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"        return timestamp;","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"    public String toString() {","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"        return value;","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"edelinetenges":27}},{"path":"src/main/java/seedu/address/model/tag/ChildTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"public class ChildTag extends Tag {","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"     * Constructs a {@code ChildTag}.","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"    public ChildTag(String tagName) {","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"        super(tagName);","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Stratostorm":12}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"     * Gets tagName of tag","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"     * @return name of tag","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    public String getTagName() {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        return tagName;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mechastriker3":8,"-":54}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.Favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.TimeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.ChildTag;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"        // Creating tag sets for normal tags and appending child tags","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"        Set\u003cTag\u003e alexTags \u003d getTagSet(\"formTeacher\", \"teacher\", \"bishanPriSch\");","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        Set\u003cTag\u003e berniceTags \u003d getTagSet(\"teacher\", \"chinese\", \"kovanSecSch\");","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        Set\u003cTag\u003e irfanTags \u003d getTagSet(\"mathTuition\", \"teacher\");","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"        Set\u003cTag\u003e sharonTags \u003d getTagSet(\"teacher\", \"balletSchool\");","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"        alexTags.addAll(getChildTagSet(\"bob\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"        berniceTags.addAll(getChildTagSet(\"alice\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        irfanTags.addAll(getChildTagSet(\"bob\", \"denise\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        sharonTags.addAll(getChildTagSet(\"denise\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"                    getTagSet(\"elliesMom\", \"neighbour\", \"psg\", \"parent\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"                        new TimeAdded(\"2021-03-21 06:55:41.11\"), new Favourite(\"false\")),","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@bps.edu.sg\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"                new Address(), alexTags, new TimeAdded(\"2021-03-21 06:55:40.11\"), new Favourite(\"true\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@kovansec.edu.sg\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"                new Address(), berniceTags, new TimeAdded(\"2021-03-21 06:55:43.11\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"                new Favourite(\"true\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"            new Person(new Name(\"Annie Li\"), new Phone(\"91031282\"), new Email(\"liannie@example.com\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"                    getTagSet(\"carolsMom\", \"psg\", \"parent\"), new TimeAdded(\"2021-03-21 06:55:42.11\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"                    new Favourite(\"false\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan1999@example.com\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"                new Address(), irfanTags, new TimeAdded(\"2021-03-21 06:55:45.11\"), new Favourite(\"true\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"            new Person(new Name(\"Sharon Lee\"), new Phone(\"99272758\"), new Email(\"sharon_lee@example.com\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"                    new Address(), sharonTags, new TimeAdded(\"2021-03-21 06:55:43.11\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"                    new Favourite(\"false\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Stratostorm"},"content":"     * Returns a ChildTag set containing the list of strings given.","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"Stratostorm"},"content":"    public static Set\u003cTag\u003e getChildTagSet(String... strings) {","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"Stratostorm"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"Stratostorm"},"content":"                .map(ChildTag::new)","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"Stratostorm"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"    public static Appointment[] getSampleAppointments() {","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"        Person[] samplePersons \u003d getSamplePersons();","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"        return new Appointment[] {","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"            new Appointment(new Name(\"Parent teacher meeting\"), new Address(\"Kovan Secondary School\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"                    new DateTime(\"21/05/2021 10:00\"), getPersonSet(\"0\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"                    getChildTagSet(\"bob\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"            new Appointment(new Name(\"Ballet recital\"), new Address(\"Ballet school\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"                    new DateTime(\"02/10/2021 18:00\"), getPersonSet(),","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"                    getChildTagSet(\"denise\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"            new Appointment(new Name(\"Play date with Carol and Ellie\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"                    new DateTime(\"17/04/2021 11:00\"), getPersonSet(\"2\", \"3\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"                    getChildTagSet(\"alice\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"            new Appointment(new Name(\"PSG meeting\"), new Address(\"Bishan Primary School\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"                    new DateTime(\"15/04/2021 14:00\"), getPersonSet(\"3\", \"2\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"                    getChildTagSet())","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"        };","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"    public static ReadOnlyAppointmentBook getSampleAppointmentBook() {","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"        AppointmentBook sampleAb \u003d new AppointmentBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"        for (Appointment sampleAppointment : getSampleAppointments()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"            sampleAb.addAppointment(sampleAppointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"        return sampleAb;","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"     * Returns a person set containing the list of strings given.","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"    public static Set\u003cPerson\u003e getPersonSet(String... strings) {","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"        Person[] samplePersons \u003d getSamplePersons();","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":"        Set\u003cPerson\u003e contacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"nicoleang09"},"content":"        for (String index : strings) {","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"            Integer i \u003d Integer.parseInt(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"            contacts.add(samplePersons[i]);","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"nicoleang09"},"content":"        return contacts;","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"clarlzx":3,"nicoleang09":78,"Stratostorm":10,"edelinetenges":3,"-":42}},{"path":"src/main/java/seedu/address/storage/HeliBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"public interface HeliBookStorage {","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"     * Returns AAppointmentBook data as a {@link ReadOnlyAppointmentBook}.","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"     * @see #getAppointmentBookFilePath()","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"     * Saves the given {@link ReadOnlyAppointmentBook} to the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"     * @param appointmentBook cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"     * @see #saveAppointmentBook(ReadOnlyAppointmentBook)","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"nicoleang09":83}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    private final String name;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    private final String address;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    private final DateTime date;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    private final Set\u003cJsonAdaptedPerson\u003e contacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"name\") String name, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"                                  @JsonProperty(\"date\") DateTime date,","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"                                  @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"                                  @JsonProperty(\"contacts\") Set\u003cJsonAdaptedPerson\u003e contacts) {","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"        if (contacts !\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"            this.contacts.addAll(contacts);","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"        date \u003d source.getDateTime();","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"        contacts.addAll(source.getContacts().stream()","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Stratostorm"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Stratostorm"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Stratostorm"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"        final Set\u003cPerson\u003e appointmentContacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"        for (JsonAdaptedPerson person : contacts) {","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"            appointmentContacts.add(person.toModelType());","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"Stratostorm"},"content":"        final List\u003cTag\u003e appointmentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"Stratostorm"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Stratostorm"},"content":"            appointmentTags.add(tag.toModelType());","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"                    DateTime.class.getSimpleName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"        final DateTime modelDate \u003d date;","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"        final Set\u003cPerson\u003e modelContacts \u003d new HashSet\u003c\u003e(appointmentContacts);","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"Stratostorm"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(appointmentTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"Stratostorm"},"content":"        return new Appointment(modelName, modelAddress, modelDate, modelContacts, modelTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"clarlzx":5,"nicoleang09":85,"Stratostorm":18}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.Favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.TimeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"    private final String timeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"    private final String favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"timeAdded\") String timeAdded,","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"                             @JsonProperty(\"favourite\") String favourite) {","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"        this.timeAdded \u003d timeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"edelinetenges"},"content":"        this.favourite \u003d favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"edelinetenges"},"content":"        timeAdded \u003d source.getTimeAdded().toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"edelinetenges"},"content":"        favourite \u003d source.getFavourite().toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"edelinetenges"},"content":"        if (timeAdded \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"edelinetenges"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"edelinetenges"},"content":"                    TimeAdded.class.getSimpleName()));","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"edelinetenges"},"content":"        final TimeAdded modelTimeAdded \u003d new TimeAdded(timeAdded);","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"edelinetenges"},"content":"        final Favourite modelFavourite \u003d new Favourite(favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"edelinetenges"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelTimeAdded, modelFavourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"clarlzx":2,"edelinetenges":20,"-":105}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.ChildTag;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    private final boolean isChild;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"    public JsonAdaptedTag(@JsonProperty(\"tagName\") String tagName, @JsonProperty(\"isChild\") boolean isChild) {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"        this.isChild \u003d isChild;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"        isChild \u003d source instanceof ChildTag;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"        if (isChild) {","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"            return new ChildTag(tagName);","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Stratostorm":9,"-":41}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"public class JsonAddressBookStorage implements HeliBookStorage {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"        return null;","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"     * Returns AppointmentBook data as a {@link ReadOnlyAppointmentBook}.","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"        return Optional.empty();","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"     * @param filePath","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"     * @see #getAppointmentBookFilePath()","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath)","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"        return Optional.empty();","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"     * Saves the given {@link ReadOnlyAppointmentBook} to the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"     * @param appointmentBook cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"     * @param appointmentBook","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"     * @param filePath","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"     * @see #saveAppointmentBook(ReadOnlyAppointmentBook)","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"nicoleang09"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nicoleang09":56,"-":79}},{"path":"src/main/java/seedu/address/storage/JsonAppointmentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"public class JsonAppointmentBookStorage implements HeliBookStorage {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAppointmentBookStorage.class);","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    public JsonAppointmentBookStorage(Path filePath) {","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        return filePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException {","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        return readAppointmentBook(filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"     * Similar to {@link #readAppointmentBook()}.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"        Optional\u003cJsonSerializableAppointmentBook\u003e jsonAppointmentBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"                filePath, JsonSerializableAppointmentBook.class);","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"        if (!jsonAppointmentBook.isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"            return Optional.of(jsonAppointmentBook.get().toModelType());","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"        saveAppointmentBook(appointmentBook, filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"     * Similar to {@link #saveAppointmentBook(ReadOnlyAppointmentBook)}.","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(appointmentBook);","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAppointmentBook(appointmentBook), filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"        return null;","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"        return Optional.empty();","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"     * @param filePath","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"        return Optional.empty();","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"     * @param addressBook","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"     * @param filePath","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"nicoleang09"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"nicoleang09":136}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":" * An Immutable AppointmentBook that is serializable to JSON format.","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"@JsonRootName(value \u003d \"appointmentbook\")","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"class JsonSerializableAppointmentBook {","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointment list contains duplicate appointment(s).\";","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a {@code JsonSerializableAppointmentBook} with the given appointments.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    public JsonSerializableAppointmentBook(@JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"     * Converts a given {@code ReadOnlyAppointmentBook} into this class for Jackson use.","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAppointmentBook}.","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    public JsonSerializableAppointmentBook(ReadOnlyAppointmentBook source) {","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"        appointments.addAll(source.getAppointmentList().stream().map(JsonAdaptedAppointment::new)","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"     * Converts this appointment book into the model\u0027s {@code AppointmentBook} object.","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"    public AppointmentBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        AppointmentBook appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"            if (appointmentBook.hasAppointment(appointment)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"            appointmentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"        return appointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"nicoleang09":65}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"public interface Storage extends HeliBookStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nicoleang09":17,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":" * Manages storage of AddressBook and AppointmentBook data in local storage.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    private JsonAddressBookStorage addressBookStorage;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    private JsonAppointmentBookStorage appointmentBookStorage;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"     * Creates a {@code StorageManager} with the given {@code HeliBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    public StorageManager(JsonAddressBookStorage addressBookStorage, JsonAppointmentBookStorage appointmentBookStorage,","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"        this.appointmentBookStorage \u003d appointmentBookStorage;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"        return appointmentBookStorage.getAppointmentBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"        return readAppointmentBook(appointmentBookStorage.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath)","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"        return appointmentBookStorage.readAppointmentBook(filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook addressBook) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"        saveAppointmentBook(addressBook, appointmentBookStorage.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"        appointmentBookStorage.saveAppointmentBook(appointmentBook, filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicoleang09":45,"-":75}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.ui.UiUtil.generateTagLabel;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.ui.UiUtil.streamTags;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":" * An UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"    public final Appointment appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"    private Label name;","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    private Label id;","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"    private Label address;","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"    private Label dateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"    private Label relevantContactLabel;","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"    private FlowPane contacts;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"     * Creates a {@code AppointmentCard} with the given {@code Appointment} and index to display.","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"    public AppointmentCard(Appointment appointment, int displayedIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"        super(FXML);","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"        name.setText(appointment.getName().fullName);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"        checkForPlaceholder(appointment.getAddress().value, address);","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"        checkForPlaceholder(appointment.getDateTime().dateTime, dateTime);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"        setRelevantContactLabel();","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"        appointment.getContacts().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"                .sorted(Comparator.comparing(contact -\u003e contact.getName().toString()))","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"                .forEach(contact -\u003e contacts.getChildren().add(new Label(contact.getName().toString())));","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"Stratostorm"},"content":"        streamTags(appointment.getTags()).forEach(tag -\u003e tags.getChildren().add(generateTagLabel(tag)));","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"     * If have contacts then \"Relevant Contacts:\" will be displayed above contacts, otherwise it will not be displayed.","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"    private void setRelevantContactLabel() {","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"        if (appointment.getContacts().isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"            relevantContactLabel.setManaged(false);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"            relevantContactLabel.setManaged(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"    private void checkForPlaceholder(String value, Label label) {","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"        if (value.equals(\"NIL\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"            label.setVisible(false);","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"            label.setVisible(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"            label.setText(value);","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"            return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"        if (!(other instanceof AppointmentCard)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":"            return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"        // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"        AppointmentCard card \u003d (AppointmentCard) other;","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"                \u0026\u0026 appointment.equals(card.appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"clarlzx":97,"Stratostorm":7}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":" * Panel containing the list of appointments.","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"     * Creates a {@code AppointmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        super(FXML);","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":"                setText(null);","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"            } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"clarlzx":50}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.net.URI;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    public static final String HELP_LINK \u003d \"Refer to the full user guide here: \";","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    private Label helpTitle;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"    private Label helpLink;","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"        helpLink.setText(HELP_LINK);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"        // helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"        // logger.info(\"help message is: \" + helpMsg);","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        // helpMessage.setText(helpMsg);","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"mechastriker3"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"mechastriker3"},"content":"     * opens the URL to the user guide in the default user browser.","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"mechastriker3"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"mechastriker3"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"mechastriker3"},"content":"    private void openUrl() throws URISyntaxException, IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"mechastriker3"},"content":"        URI userGuideUri \u003d new URI(USERGUIDE_URL);","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"mechastriker3"},"content":"        Desktop.getDesktop().browse(userGuideUri);","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"    public void setHelpText(String helpTitle, String helpMsg) {","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"        // logger.info(\"helpMsg: \" + helpMsg);","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"        this.helpTitle.setText(helpTitle);","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"        this.helpMessage.setText(helpMsg);","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nicoleang09":18,"mechastriker3":14,"-":99}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"    //    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    //    private MenuItem helpMenuItem;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"        // setAccelerators();","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"    //    private void setAccelerators() {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"    //        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"    //    }","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2021-03-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"nicoleang09"},"content":"    //    @FXML","lastModifiedDate":"2021-03-09"},{"lineNumber":157,"author":{"gitId":"nicoleang09"},"content":"    //    public void handleHelp(String helpMsg) {","lastModifiedDate":"2021-03-09"},{"lineNumber":158,"author":{"gitId":"nicoleang09"},"content":"    //        helpWindow.setHelpMessage(helpMsg);","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"nicoleang09"},"content":"    //        if (!helpWindow.isShowing()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"nicoleang09"},"content":"    //            helpWindow.show();","lastModifiedDate":"2021-03-09"},{"lineNumber":161,"author":{"gitId":"nicoleang09"},"content":"    //        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":162,"author":{"gitId":"nicoleang09"},"content":"    //            helpWindow.focus();","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"nicoleang09"},"content":"    //        }","lastModifiedDate":"2021-03-09"},{"lineNumber":164,"author":{"gitId":"nicoleang09"},"content":"    //    }","lastModifiedDate":"2021-03-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"clarlzx"},"content":"    public AppointmentListPanel getAppointmentListPanel() {","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"clarlzx"},"content":"        return appointmentListPanel;","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"nicoleang09"},"content":"                // logger.info(\"isShowHelp()\");","lastModifiedDate":"2021-03-12"},{"lineNumber":203,"author":{"gitId":"nicoleang09"},"content":"                helpWindow.setHelpText(commandResult.getHelpTitle(), commandResult.getHelpMsg());","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"nicoleang09"},"content":"                // resultDisplay.setFeedbackToUser(\"Opened help window.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2021-03-09"},{"lineNumber":206,"author":{"gitId":"nicoleang09"},"content":"                // handleHelp(commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"clarlzx":9,"nicoleang09":19,"-":192}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.ui.UiUtil.generateTagLabel;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.ui.UiUtil.streamTags;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"    private ImageView favIcon;","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"        checkForPlaceholder(person.getPhone().value, phone);","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"        checkForPlaceholder(person.getAddress().value, address);","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"        checkForPlaceholder(person.getEmail().value, email);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Stratostorm"},"content":"        streamTags(person.getTags()).forEach(tag -\u003e tags.getChildren().add(generateTagLabel(tag)));","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"edelinetenges"},"content":"        if (person.getFavourite().isFav()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"edelinetenges"},"content":"            favIcon.setImage(new Image(\"/images/star_icon_filled.png\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"edelinetenges"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"edelinetenges"},"content":"            favIcon.setImage(new Image(\"/images/star_icon_empty.png\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"    private void checkForPlaceholder(String value, Label label) {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"        if (value.equals(\"NIL\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"            label.setManaged(false);","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"            label.setManaged(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"            label.setText(value);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"clarlzx":10,"Stratostorm":5,"edelinetenges":9,"-":70}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/HeliBookTheme.css\");","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"clarlzx":1,"-":88}},{"path":"src/main/java/seedu/address/ui/UiUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.ChildTag;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":" * Contains utility classes and methods used for generating UI elements.","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"public class UiUtil {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"     * Generates a label of different colors based on whether the tag is a ChildTag.","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"     * @param tag the tag to create a label from.","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"     * @return Label with the tagName as text and different colors based on the tag type.","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    public static Label generateTagLabel(Tag tag) {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        Label label \u003d new Label(tag.tagName);","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"        if (tag instanceof ChildTag) {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"            label.setStyle(\"-fx-background-color: #ff5050\");","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"        return label;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"     * Converts a {@code Set\u003cTag\u003e} to a sorted {@code Stream\u003cTag\u003e} using the TagComparator class.","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"     * @param tagSet the set of tags to convert.","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"     * @return {@literal Stream\u003cTag\u003e} of the tags sorted based on TagComparator.","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"    public static Stream\u003cTag\u003e streamTags(Set\u003cTag\u003e tagSet) {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"        return tagSet.stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"                .sorted(new TagComparator());","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"    public static class TagComparator implements Comparator\u003cTag\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"        public int compare(Tag tag1, Tag tag2) {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"            if (tag1 instanceof ChildTag) {","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"                if (tag2 instanceof ChildTag) {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"                    return String.CASE_INSENSITIVE_ORDER.compare(tag1.tagName, tag2.tagName);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"                } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"                    return -1;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"                }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"            } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"                if (tag2 instanceof ChildTag) {","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"                    return 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"                } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"                    return String.CASE_INSENSITIVE_ORDER.compare(tag1.tagName, tag2.tagName);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"                }","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"Stratostorm":57}},{"path":"src/main/resources/UserGuideCopy.md","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"---","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"layout: page","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"title: User Guide","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"---","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"HeliBook is a **desktop app for managing you children\u0027s contacts and their related appointments, ","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"optimized for use via a Command Line Interface** (CLI) while still having the benefits of a ","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"Graphical User Interface (GUI). ","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"If you can type fast, HeliBook can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"* Table of Contents","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"{:toc}","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"## Quick start","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"1. Download the latest `helibook.jar` from [here](https://github.com/AY2021S2-CS2103T-W13-3/tp/releases).","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your HeliBook.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"## Features","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"This section is separated into the following sub-sections:","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"* [General Commands](#general-commands): Commands related to navigating HeliBook","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"* [Address Book Commands](#address-book-commands): Commands related to managing contacts","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"* [Appointment Book Commands](#appointment-book-commands): Commands related to managing appointments","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"The command summary table can also be accessed [here](#command-summary).","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"### General Commands","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"#### Viewing help : `help`","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"Shows information about available commands and how they can be used.","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"Format: `help [COMMAND]`","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"* If command is not specified, a summary of all available commands will be displayed, along with a link to access the full user guide.","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"* If command is specified, detailed information about the command will be displayed. ","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"* `help` Displays summary of all available commands.","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"* `help find` Displays detailed information about the find command.","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"Exits the program.","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"Format: `exit`","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"### Address Book Commands","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"#### Adding a person: `add`","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"Adds a person to the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [tc/CHILDTAG]…​ [t/TAG]…​`","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"You can add a person with only some of the information, you can fill in the rest later on.","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"* `add n/John Doe p/98765432`","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"#### Adding/replacing tags to a contact: `tag` ","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"Adds or replaces tags to the specified person by index.","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"Format: `tag INDEX [o/OPTION] [tc/CHILDTAG]…​ [t/TAG]…​`","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"* Tags the person at the specified INDEX. The index refers to the index number shown in the displayed person list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"Currently available options for the `[OPTION]` field include:","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"* `rt` Replaces the currently existing tags with the given new set of tags ","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"  ","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"nicoleang09"},"content":"*  `tag 4 t/School t/English` Adds the tags School and English to the 4th person.","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"nicoleang09"},"content":"*  `tag 2 o/rt tc/Alexa t/English` Replaces all existing tags of the 2nd person with the child tag Alexa and the tag English.","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"nicoleang09"},"content":"#### Listing all persons : `list`","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"nicoleang09"},"content":"Shows a list of persons in the address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"nicoleang09"},"content":"Format: `list [o/OPTION]`","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"nicoleang09"},"content":"Currently available options for the `[OPTION]` field include:","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"nicoleang09"},"content":"* `fav` Shows list of favourited persons in the address book","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"nicoleang09"},"content":"* `list` List all persons in the address book","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"nicoleang09"},"content":"* `list o/fav` Lists all favourited persons in the address book","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"nicoleang09"},"content":"#### Editing a person : `edit`","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"nicoleang09"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"nicoleang09"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [tc/CHILDTAG]…​ [t/TAG]…​`","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"nicoleang09"},"content":"* Edits the person at the specified `INDEX`.","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"nicoleang09"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"nicoleang09"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"nicoleang09"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"nicoleang09"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"nicoleang09"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"nicoleang09"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"nicoleang09"},"content":"    specifying any tags after it. Note: all ChildTags will also be removed.","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"nicoleang09"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"nicoleang09"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"nicoleang09"},"content":"#### Locating persons by name: `find`","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"nicoleang09"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"nicoleang09"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"nicoleang09"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"nicoleang09"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"nicoleang09"},"content":"* Only the name is searched.","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"nicoleang09"},"content":"* Incomplete words will also be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"nicoleang09"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-03-15"},{"lineNumber":177,"author":{"gitId":"nicoleang09"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"nicoleang09"},"content":"* If *n* persons can be found, message “*n* persons listed!” will be displayed","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"nicoleang09"},"content":"  e.g. when 0 results, \"0 persons listed!\" is displayed","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"nicoleang09"},"content":"  ","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"nicoleang09"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"nicoleang09"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li` when no exact matches are found","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"nicoleang09"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"nicoleang09"},"content":"#### Deleting a person : `delete`","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"nicoleang09"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"nicoleang09"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"nicoleang09"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"nicoleang09"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-03-15"},{"lineNumber":195,"author":{"gitId":"nicoleang09"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"nicoleang09"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"nicoleang09"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"nicoleang09"},"content":"#### Sorting all persons : `sort`","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"nicoleang09"},"content":"Sorts the address book in the order based on the given option.","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":205,"author":{"gitId":"nicoleang09"},"content":"Format: `sort o/OPTION` ","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":207,"author":{"gitId":"nicoleang09"},"content":"Currently available options for the `[OPTION]` field include:","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"nicoleang09"},"content":"* `name` Sorts by name (alphabetical order)","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"nicoleang09"},"content":"* `date` Sorts by date added (chronological order)","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"nicoleang09"},"content":"  ","lastModifiedDate":"2021-03-15"},{"lineNumber":211,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":212,"author":{"gitId":"nicoleang09"},"content":"* `sort o/name` returns the contact list sorted in alphabetical order.","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"nicoleang09"},"content":"* `sort o/date` returns the contact list sorted in chronological order.","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":215,"author":{"gitId":"nicoleang09"},"content":"#### Favourite a person : `fav`","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":217,"author":{"gitId":"nicoleang09"},"content":"Format: `fav INDEX [o/OPTION]`","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":219,"author":{"gitId":"nicoleang09"},"content":"* Favourite the person at the specified `INDEX`.","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"nicoleang09"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"nicoleang09"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":223,"author":{"gitId":"nicoleang09"},"content":"Currently available options for the `[OPTION]` field include:","lastModifiedDate":"2021-03-30"},{"lineNumber":224,"author":{"gitId":"nicoleang09"},"content":"* `remove` Unfavourites the specified person","lastModifiedDate":"2021-03-30"},{"lineNumber":225,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":226,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"nicoleang09"},"content":"* `list` followed by `fav 2` favourites the 2nd person in the address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"nicoleang09"},"content":"* `find Betsy` followed by `delete 1` favourites the 1st person in the results of the `find` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"nicoleang09"},"content":"* `fav 3 o/remove` unfavourites the 3rd person in the address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":231,"author":{"gitId":"nicoleang09"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"nicoleang09"},"content":"When a person is favourited, the star next to their name will become filled/white.","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"nicoleang09"},"content":"When a person is unfavourited, the star will turn empty.","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"nicoleang09"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"nicoleang09"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"nicoleang09"},"content":"Clears all entries from the address book or clears all contacts with the specified tags.","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"nicoleang09"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:warning: **Warning:**","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"nicoleang09"},"content":"The tags here do not differentiate between ChildTags and regular Tags. ","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"nicoleang09"},"content":"This command will delete all entries that match **ANY** of the given tags.","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"nicoleang09"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"nicoleang09"},"content":"Format: `clear [t/TAG]…​`","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"nicoleang09"},"content":"* `clear` deletes all entries in the address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"nicoleang09"},"content":"* `clear t/teacher` deletes all contacts with the tag `teacher`","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"nicoleang09"},"content":"### Appointment Book Commands","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":254,"author":{"gitId":"nicoleang09"},"content":"#### Adding an appointment : `addAppt`","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"nicoleang09"},"content":"Adds an appointment to the appointment book.","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"nicoleang09"},"content":"Format: `addAppt n/NAME a/ADDRESS d/DATE [c/CONTACT_INDEX]…​ [tc/CHILDTAG]…​`","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":260,"author":{"gitId":"nicoleang09"},"content":"* Contact in the address book at the specified `CONTACT_INDEX` is added to the appointment.","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"nicoleang09"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"nicoleang09"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"nicoleang09"},"content":"* `DATE` has to be in the format \"`dd`/`MM`/`yyyy` `HH`:`mm`\".","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"nicoleang09"},"content":"* `addAppt n/PTM a/ABC Primary School d/21/03/2021 10:00 c/2 ct/amy`","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"nicoleang09"},"content":"#### Deleting an appointment : `deleteAppt`","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":270,"author":{"gitId":"nicoleang09"},"content":"Deletes the specified appointment from the appointment book.","lastModifiedDate":"2021-03-30"},{"lineNumber":271,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":272,"author":{"gitId":"nicoleang09"},"content":"Format: `deleteAppt INDEX`","lastModifiedDate":"2021-03-30"},{"lineNumber":273,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"nicoleang09"},"content":"* Deletes the appointment at the specified `INDEX`.","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"nicoleang09"},"content":"* The index refers to the index number shown in the displayed appointment list.","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"nicoleang09"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":278,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-30"},{"lineNumber":279,"author":{"gitId":"nicoleang09"},"content":"* `list` followed by `deleteAppt 2` deletes the 2nd appointment in the appointment book.","lastModifiedDate":"2021-03-30"},{"lineNumber":280,"author":{"gitId":"nicoleang09"},"content":"* `findAppt ptm` followed by `deleteAppt 1` deletes the 1st appointment in the results of the `findAppt` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"nicoleang09"},"content":"#### Finding appointments by name: `findAppt`","lastModifiedDate":"2021-03-30"},{"lineNumber":283,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":284,"author":{"gitId":"nicoleang09"},"content":"Finds appointments whose names contain any of the given keywords.","lastModifiedDate":"2021-03-30"},{"lineNumber":285,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"nicoleang09"},"content":"Format: `findAppt KEYWORD [MORE_KEYWORDS]…​`","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"nicoleang09"},"content":"* The search is case-insensitive. e.g `ptm` will match `PTM`","lastModifiedDate":"2021-03-30"},{"lineNumber":289,"author":{"gitId":"nicoleang09"},"content":"* The order of the keywords does not matter. e.g. `Teacher meeting` will match `Meeting teacher`","lastModifiedDate":"2021-03-30"},{"lineNumber":290,"author":{"gitId":"nicoleang09"},"content":"* Only the name is searched.","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"nicoleang09"},"content":"* Incomplete words will also be matched e.g. `PT` will match `PTM`","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"nicoleang09"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"nicoleang09"},"content":"  e.g. `Teacher meeting` will return `Speak to ballet teacher`, `PSG meeting`","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"nicoleang09"},"content":"* If *n* appointments can be found, message “*n* appointments listed!” will be displayed","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"nicoleang09"},"content":"  e.g. when 0 results, \"0 appointments listed!\" is displayed","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"nicoleang09"},"content":"Examples:","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"nicoleang09"},"content":"* `findAppt ptm` returns `PTM`","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":300,"author":{"gitId":"nicoleang09"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":301,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"nicoleang09"},"content":"## Managing HeliBook Data","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":304,"author":{"gitId":"nicoleang09"},"content":"### Saving your data","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":306,"author":{"gitId":"nicoleang09"},"content":"HeliBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-03-15"},{"lineNumber":307,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":308,"author":{"gitId":"nicoleang09"},"content":"### Editing the data file","lastModifiedDate":"2021-03-15"},{"lineNumber":309,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":310,"author":{"gitId":"nicoleang09"},"content":"HeliBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":311,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":312,"author":{"gitId":"nicoleang09"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-03-15"},{"lineNumber":313,"author":{"gitId":"nicoleang09"},"content":"If your changes to the data file makes its format invalid, HeliBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-03-15"},{"lineNumber":314,"author":{"gitId":"nicoleang09"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":315,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":316,"author":{"gitId":"nicoleang09"},"content":"### Exporting your data","lastModifiedDate":"2021-03-30"},{"lineNumber":317,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":318,"author":{"gitId":"nicoleang09"},"content":"1. After running HeliBook at least once, locate the `data` folder on your device which can be found in the same directory as your JAR file. ","lastModifiedDate":"2021-03-30"},{"lineNumber":319,"author":{"gitId":"nicoleang09"},"content":"2. Send this `data` folder to your other device.  ","lastModifiedDate":"2021-03-30"},{"lineNumber":320,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":321,"author":{"gitId":"nicoleang09"},"content":"### Importing your data","lastModifiedDate":"2021-03-30"},{"lineNumber":322,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":323,"author":{"gitId":"nicoleang09"},"content":"1. Install HeliBook on your new device and run it once, exit the program before proceeding.","lastModifiedDate":"2021-03-30"},{"lineNumber":324,"author":{"gitId":"nicoleang09"},"content":"2. Locate the `data` folder on your old device which can be found in the same directory as your JAR file.","lastModifiedDate":"2021-03-30"},{"lineNumber":325,"author":{"gitId":"nicoleang09"},"content":"3. Copy the `data` folder from your old device to the new device to the same directory as where you installed the JAR file.","lastModifiedDate":"2021-03-30"},{"lineNumber":326,"author":{"gitId":"nicoleang09"},"content":"4. Replace the files on your new device when prompted.","lastModifiedDate":"2021-03-30"},{"lineNumber":327,"author":{"gitId":"nicoleang09"},"content":"5. Congratulations! You have successfully exported and imported your data to a new device.","lastModifiedDate":"2021-03-30"},{"lineNumber":328,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":329,"author":{"gitId":"nicoleang09"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2021-03-15"},{"lineNumber":330,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":331,"author":{"gitId":"nicoleang09"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-03-15"},{"lineNumber":332,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":333,"author":{"gitId":"nicoleang09"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-15"},{"lineNumber":334,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":335,"author":{"gitId":"nicoleang09"},"content":"## FAQ","lastModifiedDate":"2021-03-15"},{"lineNumber":336,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":337,"author":{"gitId":"nicoleang09"},"content":"**Q**: What\u0027s the difference between a Child Tag and a Tag? \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":338,"author":{"gitId":"nicoleang09"},"content":"**A**: Child Tags are meant to represent your children, useful especially ","lastModifiedDate":"2021-03-30"},{"lineNumber":339,"author":{"gitId":"nicoleang09"},"content":"if you have multiple children. Child Tags will always appear at the front of the list of Tags","lastModifiedDate":"2021-03-30"},{"lineNumber":340,"author":{"gitId":"nicoleang09"},"content":"in the Address Book and are displayed in a different color to differentiate them. Any command","lastModifiedDate":"2021-03-30"},{"lineNumber":341,"author":{"gitId":"nicoleang09"},"content":"that works with regular tags such as \u0027Find\u0027 or \u0027Sort\u0027 will also work with Child Tags.","lastModifiedDate":"2021-03-30"},{"lineNumber":342,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":343,"author":{"gitId":"nicoleang09"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-15"},{"lineNumber":344,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":345,"author":{"gitId":"nicoleang09"},"content":"## Command summary","lastModifiedDate":"2021-03-15"},{"lineNumber":346,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":347,"author":{"gitId":"nicoleang09"},"content":"Action | Format, Examples","lastModifiedDate":"2021-03-15"},{"lineNumber":348,"author":{"gitId":"nicoleang09"},"content":"--------|------------------","lastModifiedDate":"2021-03-15"},{"lineNumber":349,"author":{"gitId":"nicoleang09"},"content":"​ | **General Commands**","lastModifiedDate":"2021-03-30"},{"lineNumber":350,"author":{"gitId":"nicoleang09"},"content":"**Help** | `help [COMMAND]` \u003cbr\u003e e.g, `help find`","lastModifiedDate":"2021-03-30"},{"lineNumber":351,"author":{"gitId":"nicoleang09"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-03-30"},{"lineNumber":352,"author":{"gitId":"nicoleang09"},"content":"​ | **Address Book Commands**","lastModifiedDate":"2021-03-30"},{"lineNumber":353,"author":{"gitId":"nicoleang09"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [tc/CHILDTAG]…​ [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2021-03-30"},{"lineNumber":354,"author":{"gitId":"nicoleang09"},"content":"**Clear** | `clear [t/TAG]…​`","lastModifiedDate":"2021-03-30"},{"lineNumber":355,"author":{"gitId":"nicoleang09"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-03-15"},{"lineNumber":356,"author":{"gitId":"nicoleang09"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [tc/CHILDTAG]…​ [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-03-30"},{"lineNumber":357,"author":{"gitId":"nicoleang09"},"content":"**Fav** | `fav INDEX [o/OPTION]` \u003cbr\u003e e.g., `fav 3 o/remove`","lastModifiedDate":"2021-03-30"},{"lineNumber":358,"author":{"gitId":"nicoleang09"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2021-03-15"},{"lineNumber":359,"author":{"gitId":"nicoleang09"},"content":"**List** | `list`","lastModifiedDate":"2021-03-15"},{"lineNumber":360,"author":{"gitId":"nicoleang09"},"content":"**Tag** | `tag INDEX [o/OPTION] [tc/CHILDTAG]…​ [t/TAG]…​`\u003cbr\u003e e.g., `tag 4 t/School t/English`","lastModifiedDate":"2021-03-30"},{"lineNumber":361,"author":{"gitId":"nicoleang09"},"content":"**Sort** | `sort o/OPTION` \u003cbr\u003e e.g., `sort o/name`","lastModifiedDate":"2021-03-30"},{"lineNumber":362,"author":{"gitId":"nicoleang09"},"content":"​ | **Appointment Book Commands**","lastModifiedDate":"2021-03-30"},{"lineNumber":363,"author":{"gitId":"nicoleang09"},"content":"**Add** | `addAppt n/NAME a/ADDRESS d/DATE [c/CONTACT_INDEX]…​ [tc/CHILDTAG]…​` \u003cbr\u003e e.g., `addAppt n/PTM a/ABC Primary School d/21/03/2021 10:00 c/2`","lastModifiedDate":"2021-03-30"},{"lineNumber":364,"author":{"gitId":"nicoleang09"},"content":"**Delete** | `deleteAppt INDEX` \u003cbr\u003e e.g., `delete 2`","lastModifiedDate":"2021-03-30"},{"lineNumber":365,"author":{"gitId":"nicoleang09"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]…​` \u003cbr\u003e e.g., `find PTM`","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"nicoleang09":365}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"0.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"                     \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"            \u003cLabel fx:id\u003d\"relevantContactLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Relevant Contacts:\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"            \u003cFlowPane fx:id\u003d\"contacts\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"clarlzx":40,"Stratostorm":1}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"clarlzx":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":".list-cell:empty {","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"    -fx-background: #383838;","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":".cell_title_label {","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":"\t-fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"\t-fx-font-size: 22px;","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"\t-fx-text-fill: white;","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":365,"author":{"gitId":"clarlzx"},"content":"#contacts {","lastModifiedDate":"2021-03-28"},{"lineNumber":366,"author":{"gitId":"clarlzx"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-28"},{"lineNumber":367,"author":{"gitId":"clarlzx"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-28"},{"lineNumber":368,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-28"},{"lineNumber":369,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":370,"author":{"gitId":"clarlzx"},"content":"#contacts .label {","lastModifiedDate":"2021-03-28"},{"lineNumber":371,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-28"},{"lineNumber":372,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #00fa9a;","lastModifiedDate":"2021-03-28"},{"lineNumber":373,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-28"},{"lineNumber":374,"author":{"gitId":"clarlzx"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-28"},{"lineNumber":375,"author":{"gitId":"clarlzx"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-28"},{"lineNumber":376,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-28"},{"lineNumber":377,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"clarlzx":25,"-":352}},{"path":"src/main/resources/view/DarkThemeHelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":".background {","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":".label {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":".label-bright {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":".label-header {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":".text-field {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":".stack-pane {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":".pane-with-border {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":".grid-pane {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"/*","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":" * Metro style Push Button","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":".button {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":".button:hover {","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"  -fx-background-color: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":".button:focused {","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":".button:default {","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":".button:default:hover {","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":".scroll-bar {","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicoleang09":125}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":".contact-selector {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"\t-fx-border-width: 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"\t-fx-border-color: white;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"\t-fx-border-radius: 3;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"\t-fx-background-radius: 3;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"clarlzx":7,"-":15}},{"path":"src/main/resources/view/HeliBookTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarlzx"},"content":".background {","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"clarlzx"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":".label {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":".label-bright {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"clarlzx"},"content":".label-header {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"clarlzx"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":".text-field {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"clarlzx"},"content":".tab-pane {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"clarlzx"},"content":".table-view {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"clarlzx"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"    -fx-size: 35;","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"    -fx-border-color:","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"        transparent","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"        transparent","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"clarlzx"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"        transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"clarlzx"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":".table-view .column-header .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":".split-pane {","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":".list-view {","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"clarlzx"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"clarlzx"},"content":".list-cell {","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"clarlzx"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"clarlzx"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":".list-cell:filled:selected {","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":".list-cell .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"clarlzx"},"content":".cell_title_label {","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"clarlzx"},"content":"\t-fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"clarlzx"},"content":"\t-fx-font-size: 22px;","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":"\t-fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":".cell_big_label {","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":".cell_small_label {","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"clarlzx"},"content":".stack-pane {","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"clarlzx"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"clarlzx"},"content":".pane-with-border {","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"clarlzx"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"clarlzx"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"clarlzx"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"clarlzx"},"content":".status-bar {","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"clarlzx"},"content":".result-display {","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"clarlzx"},"content":".result-display .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"clarlzx"},"content":".status-bar .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"clarlzx"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"clarlzx"},"content":".status-bar-with-border {","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"clarlzx"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"clarlzx"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"clarlzx"},"content":".status-bar-with-border .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"clarlzx"},"content":".grid-pane {","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"clarlzx"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"clarlzx"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"clarlzx"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"clarlzx"},"content":".context-menu {","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"clarlzx"},"content":".context-menu .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"clarlzx"},"content":".menu-bar {","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"clarlzx"},"content":".menu-bar .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"clarlzx"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"clarlzx"},"content":".menu .left-container {","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"clarlzx"},"content":"/*","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"clarlzx"},"content":" * Metro style Push Button","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"clarlzx"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"clarlzx"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"clarlzx"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"clarlzx"},"content":".button {","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"clarlzx"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"clarlzx"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"clarlzx"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"clarlzx"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"clarlzx"},"content":".button:hover {","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"clarlzx"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"clarlzx"},"content":"  -fx-background-color: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"clarlzx"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"clarlzx"},"content":".button:focused {","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"clarlzx"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"clarlzx"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"clarlzx"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"clarlzx"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"clarlzx"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":248,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"clarlzx"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"clarlzx"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"clarlzx"},"content":".button:default {","lastModifiedDate":"2021-03-31"},{"lineNumber":257,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":258,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":261,"author":{"gitId":"clarlzx"},"content":".button:default:hover {","lastModifiedDate":"2021-03-31"},{"lineNumber":262,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":263,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":264,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"clarlzx"},"content":".dialog-pane {","lastModifiedDate":"2021-03-31"},{"lineNumber":266,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":267,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":268,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":269,"author":{"gitId":"clarlzx"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2021-03-31"},{"lineNumber":270,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":271,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":272,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":273,"author":{"gitId":"clarlzx"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2021-03-31"},{"lineNumber":274,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-03-31"},{"lineNumber":275,"author":{"gitId":"clarlzx"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-03-31"},{"lineNumber":276,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":277,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":278,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":279,"author":{"gitId":"clarlzx"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2021-03-31"},{"lineNumber":280,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2021-03-31"},{"lineNumber":281,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":282,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":283,"author":{"gitId":"clarlzx"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-03-31"},{"lineNumber":285,"author":{"gitId":"clarlzx"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-03-31"},{"lineNumber":286,"author":{"gitId":"clarlzx"},"content":"    -fx-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":289,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":290,"author":{"gitId":"clarlzx"},"content":".scroll-bar {","lastModifiedDate":"2021-03-31"},{"lineNumber":291,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":293,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":294,"author":{"gitId":"clarlzx"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-03-31"},{"lineNumber":295,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2021-03-31"},{"lineNumber":296,"author":{"gitId":"clarlzx"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-03-31"},{"lineNumber":297,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":298,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":299,"author":{"gitId":"clarlzx"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-03-31"},{"lineNumber":300,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":301,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":302,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":303,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":304,"author":{"gitId":"clarlzx"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-03-31"},{"lineNumber":305,"author":{"gitId":"clarlzx"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-03-31"},{"lineNumber":306,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":307,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":308,"author":{"gitId":"clarlzx"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-03-31"},{"lineNumber":309,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-03-31"},{"lineNumber":310,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":311,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":312,"author":{"gitId":"clarlzx"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-03-31"},{"lineNumber":313,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":314,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":315,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":316,"author":{"gitId":"clarlzx"},"content":"#cardPane {","lastModifiedDate":"2021-03-31"},{"lineNumber":317,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":318,"author":{"gitId":"clarlzx"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":319,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":320,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":321,"author":{"gitId":"clarlzx"},"content":"#commandTypeLabel {","lastModifiedDate":"2021-03-31"},{"lineNumber":322,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-03-31"},{"lineNumber":323,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2021-03-31"},{"lineNumber":324,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":325,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":326,"author":{"gitId":"clarlzx"},"content":"#commandTextField {","lastModifiedDate":"2021-03-31"},{"lineNumber":327,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-03-31"},{"lineNumber":328,"author":{"gitId":"clarlzx"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":329,"author":{"gitId":"clarlzx"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2021-03-31"},{"lineNumber":330,"author":{"gitId":"clarlzx"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":331,"author":{"gitId":"clarlzx"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":332,"author":{"gitId":"clarlzx"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-31"},{"lineNumber":333,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-03-31"},{"lineNumber":334,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":335,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":336,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":337,"author":{"gitId":"clarlzx"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2021-03-31"},{"lineNumber":338,"author":{"gitId":"clarlzx"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2021-03-31"},{"lineNumber":339,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":340,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":341,"author":{"gitId":"clarlzx"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-03-31"},{"lineNumber":342,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2021-03-31"},{"lineNumber":343,"author":{"gitId":"clarlzx"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":344,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":345,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":346,"author":{"gitId":"clarlzx"},"content":"#tags {","lastModifiedDate":"2021-03-31"},{"lineNumber":347,"author":{"gitId":"clarlzx"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-31"},{"lineNumber":348,"author":{"gitId":"clarlzx"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-31"},{"lineNumber":349,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":350,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":351,"author":{"gitId":"clarlzx"},"content":"#tags .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":352,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":353,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-03-31"},{"lineNumber":354,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-31"},{"lineNumber":355,"author":{"gitId":"clarlzx"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":356,"author":{"gitId":"clarlzx"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":357,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-31"},{"lineNumber":358,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":359,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":360,"author":{"gitId":"clarlzx"},"content":"#contacts {","lastModifiedDate":"2021-03-31"},{"lineNumber":361,"author":{"gitId":"clarlzx"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-31"},{"lineNumber":362,"author":{"gitId":"clarlzx"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-31"},{"lineNumber":363,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":364,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":365,"author":{"gitId":"clarlzx"},"content":"#contacts .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":366,"author":{"gitId":"clarlzx"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-31"},{"lineNumber":367,"author":{"gitId":"clarlzx"},"content":"    -fx-background-color: #00fa9a;","lastModifiedDate":"2021-03-31"},{"lineNumber":368,"author":{"gitId":"clarlzx"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-31"},{"lineNumber":369,"author":{"gitId":"clarlzx"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":370,"author":{"gitId":"clarlzx"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":371,"author":{"gitId":"clarlzx"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-31"},{"lineNumber":372,"author":{"gitId":"clarlzx"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"clarlzx":372}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"        \u003cstylesheets\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"            \u003cURL value\u003d\"@DarkThemeHelpWindow.css\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"        \u003cVBox styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"              \u003cLabel fx:id\u003d\"helpTitle\" alignment\u003d\"BOTTOM_LEFT\" styleClass\u003d\"label-bright\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"                  \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"            \u003cLabel fx:id\u003d\"helpMessage\" maxWidth\u003d\"500.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"                  \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"               \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"                    \u003cLabel fx:id\u003d\"helpLink\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"\u003c!--                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" textAlignment\u003d\"RIGHT\"\u003e--\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"                    \u003cButton fx:id\u003d\"openButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openUrl\" text\u003d\"OPEN URL\" textAlignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"nicoleang09":27,"mechastriker3":2,"-":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"HeliBook\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"      \u003cVBox minWidth\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"\u003c!--          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e--\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"\u003c!--            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e--\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"\u003c!--          \u003c/Menu\u003e--\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"clarlzx"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"clarlzx"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"clarlzx"},"content":"        \u003cGridPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"clarlzx"},"content":"          \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"clarlzx"},"content":"          \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"clarlzx"},"content":"          \u003crowConstraints\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"clarlzx"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"clarlzx"},"content":"          \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"clarlzx"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"clarlzx"},"content":"              \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"clarlzx"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"clarlzx"},"content":"                \u003cLabel styleClass\u003d\"cell_title_label\" text\u003d\"Contacts\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"clarlzx"},"content":"                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"              \u003cVBox fx:id\u003d\"appointmentList\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"                \u003cLabel minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"cell_title_label\" text\u003d\"Appointments\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"                \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"clarlzx":41,"nicoleang09":3,"-":46}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"0.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"clarlzx"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"        \u003cImageView fx:id\u003d\"favIcon\" fitHeight\u003d\"15.0\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"clarlzx"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"clarlzx":13,"edelinetenges":1,"-":28}},{"path":"src/test/data/JsonAppointmentBookStorageTest/invalidAndValidAppointmentAppointmentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"{","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"  \"appointments\": [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"    \"name\": \"Appointment with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"    \"date\": \"09/01/2021 00:00\"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"  }, {","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"    \"name\": \"Valid appointment\",","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    \"date\": \"09/01/2021 00:00\"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"  } ]","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"nicoleang09":11}},{"path":"src/test/data/JsonAppointmentBookStorageTest/invalidAppointmentAppointmentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"{","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"  \"appointments\": [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"    \"name\": \"Appointment with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"    \"date\": \"09/01/2021 00:00\"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"  } ]","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"nicoleang09":7}},{"path":"src/test/data/JsonAppointmentBookStorageTest/notJsonFormatAppointmentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"not json format!","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"nicoleang09":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"    \"tagged\": [ {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"      \"tagName\" : \"friends\",","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"      \"isChild\" : false","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"    } ],","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"    \"timeAdded\": \"2021-03-21 06:55:40.11\",","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"    \"favourite\": \"false\"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    \"tagged\": [ {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"      \"tagName\" : \"friends\",","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"      \"isChild\" : false","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    } ],","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"    \"timeAdded\": \"2021-03-21 07:55:40.11\",","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"    \"favourite\": \"false\"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"mechastriker3":4,"Stratostorm":4,"edelinetenges":5,"-":12}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"    \"favourite\": \"false\"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"edelinetenges":2,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"    \"tagged\" : [ {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"      \"tagName\" : \"friends\",","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"      \"isChild\" : false","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    } ],","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"    \"timeAdded\": \"2021-03-21 06:55:40.11\",","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"    \"favourite\": \"false\"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"    \"tagged\" : [ {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"      \"tagName\" : \"owesMoney\",","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"      \"isChild\" : false","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    }, {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"      \"tagName\" : \"friends\",","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"      \"isChild\" : false","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    } ],","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"    \"timeAdded\": \"2021-03-21 08:55:40.11\",","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"    \"favourite\": \"false\"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"    \"timeAdded\": \"2021-03-21 05:55:40.11\",","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"    \"favourite\": \"false\"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"    \"tagged\" : [ {","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"      \"tagName\" : \"friends\",","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"      \"isChild\" : false","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"    } ],","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"    \"timeAdded\": \"2021-03-21 07:55:40.11\",","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"    \"favourite\": \"true\"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"edelinetenges"},"content":"    \"timeAdded\": \"2021-03-21 09:55:40.11\",","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"edelinetenges"},"content":"    \"favourite\": \"false\"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"edelinetenges"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"edelinetenges"},"content":"    \"timeAdded\": \"2021-03-21 06:57:40.11\",","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"edelinetenges"},"content":"    \"favourite\": \"true\"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"edelinetenges"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"edelinetenges"},"content":"    \"timeAdded\": \"2021-03-21 06:25:40.11\",","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"edelinetenges"},"content":"    \"favourite\": \"false\"","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Stratostorm":15,"edelinetenges":18,"-":39}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"        // Matches contained words only","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"        // Matches incomplete words","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"clarlzx":4,"-":141}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.storage.JsonAppointmentBookStorage;","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d new JsonAppointmentBookStorage(","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"                temporaryFolder.resolve(\"appointmentBook.json\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, appointmentBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d new JsonAppointmentBookStorage(","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"                temporaryFolder.resolve(\"appointmentbook.json\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, appointmentBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"clarlzx"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"clarlzx":2,"nicoleang09":8,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"public class AddAppointmentCommandIntegrationTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    private Model model;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"        ParserUtil.setModel(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    public void execute_newAppointment_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"        expectedModel.addAppointment(validAppointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        assertCommandSuccess(new AddAppointmentCommand(validAppointment), model,","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"                String.format(AddAppointmentCommand.MESSAGE_SUCCESS, validAppointment), expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    public void execute_duplicateAppointment_throwsCommandException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"        Appointment appointmentInList \u003d model.getAppointmentBook().getAppointmentList().get(0);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"        assertCommandFailure(new AddAppointmentCommand(appointmentInList), model,","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"                AddAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":49}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"public class AddAppointmentCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    public void constructor_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    public void execute_appointmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"        CommandResult commandResult \u003d new AddAppointmentCommand(validAppointment).execute(modelStub);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"        assertEquals(String.format(AddAppointmentCommand.MESSAGE_SUCCESS, validAppointment),","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"        assertEquals(Arrays.asList(validAppointment), modelStub.appointmentsAdded);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(validAppointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"        ModelStub modelStub \u003d new ModelStubWithAppointment(validAppointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"        assertThrows(CommandException.class, AddAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT, (","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"                ) -\u003e addAppointmentCommand.execute(modelStub));","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"    public void equals() {","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"        Appointment ptm \u003d new AppointmentBuilder().withName(\"PTM\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"        Appointment playDate \u003d new AppointmentBuilder().withName(\"Play Date\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"        AddAppointmentCommand addPtmCommand \u003d new AddAppointmentCommand(ptm);","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"        AddAppointmentCommand addPlayDateCommand \u003d new AddAppointmentCommand(playDate);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"        assertTrue(addPtmCommand.equals(addPtmCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"        AddAppointmentCommand addPtmCommandCopy \u003d new AddAppointmentCommand(ptm);","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"        assertTrue(addPtmCommand.equals(addPtmCommandCopy));","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"        assertFalse(addPtmCommand.equals(1));","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"        assertFalse(addPtmCommand.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"        assertFalse(addPtmCommand.equals(addPlayDateCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"nicoleang09"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"nicoleang09"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"nicoleang09"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"nicoleang09"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"nicoleang09"},"content":"        public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"nicoleang09"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"nicoleang09"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"nicoleang09"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"nicoleang09"},"content":"        public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"nicoleang09"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"nicoleang09"},"content":"        public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"nicoleang09"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"nicoleang09"},"content":"        public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"nicoleang09"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"nicoleang09"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"nicoleang09"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"nicoleang09"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"nicoleang09"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"nicoleang09"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"nicoleang09"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"nicoleang09"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"nicoleang09"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"nicoleang09"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"nicoleang09"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"nicoleang09"},"content":"        public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"nicoleang09"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"nicoleang09"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"nicoleang09"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"nicoleang09"},"content":"        public void orderAppointments() {","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"nicoleang09"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"nicoleang09"},"content":"    private class ModelStubWithAppointment extends ModelStub {","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"nicoleang09"},"content":"        private final Appointment appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"nicoleang09"},"content":"        ModelStubWithAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"nicoleang09"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"nicoleang09"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":229,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"nicoleang09"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":232,"author":{"gitId":"nicoleang09"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":233,"author":{"gitId":"nicoleang09"},"content":"            return this.appointment.isSameAppointment(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":234,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":236,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":237,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"nicoleang09"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2021-03-28"},{"lineNumber":239,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"nicoleang09"},"content":"    private class ModelStubAcceptingAppointmentAdded extends ModelStub {","lastModifiedDate":"2021-03-28"},{"lineNumber":241,"author":{"gitId":"nicoleang09"},"content":"        final ArrayList\u003cAppointment\u003e appointmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":242,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":243,"author":{"gitId":"nicoleang09"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"nicoleang09"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":245,"author":{"gitId":"nicoleang09"},"content":"            return appointmentsAdded.stream().anyMatch(appointment::isSameAppointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":246,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":247,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":248,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":249,"author":{"gitId":"nicoleang09"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":250,"author":{"gitId":"nicoleang09"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":251,"author":{"gitId":"nicoleang09"},"content":"            appointmentsAdded.add(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":252,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":253,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":254,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"nicoleang09"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2021-03-28"},{"lineNumber":256,"author":{"gitId":"nicoleang09"},"content":"            return new AppointmentBook();","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":259}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"clarlzx"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"clarlzx":3,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"import java.util.List;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"clarlzx"},"content":"        public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"clarlzx"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"clarlzx"},"content":"        public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"clarlzx"},"content":"        public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"clarlzx"},"content":"        public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":181,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"clarlzx"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"clarlzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"clarlzx"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"clarlzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"clarlzx"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"clarlzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"clarlzx"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"clarlzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"clarlzx"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"clarlzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"clarlzx"},"content":"        public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"edelinetenges"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":209,"author":{"gitId":"edelinetenges"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":210,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"clarlzx"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"clarlzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"clarlzx"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"clarlzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"nicoleang09"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"nicoleang09"},"content":"        public void orderAppointments() {","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"clarlzx":35,"nicoleang09":30,"edelinetenges":4,"-":201}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"clarlzx":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_NAME_PTM \u003d \"PTM\";","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_ADDRESS_PTM \u003d \"Child 1\u0027s school\";","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_DATE_PTM \u003d \"09/01/2021 00:00\";","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_NAME_PLAY_DATE \u003d \"Play date with xyz\";","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_ADDRESS_PLAY_DATE \u003d \"xyz\u0027s house\";","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_DATE_PLAY_DATE \u003d \"30/03/2021 10:00\";","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_NAME_BALLET_RECITAL \u003d \"ballet recital\";","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_ADDRESS_BALLET_RECITAL \u003d \"child 1\u0027s school\";","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_DATE_BALLET_RECITAL \u003d \"23/12/2021 18:00\";","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_CONTACT_1 \u003d \"1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"    public static final String VALID_CONTACT_2 \u003d \"2\";","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"    public static final String NAME_DESC_PTM \u003d \" \" + PREFIX_NAME + VALID_NAME_PTM;","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"    public static final String ADDRESS_DESC_PTM \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_PTM;","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"    public static final String DATE_DESC_PTM \u003d \" \" + PREFIX_DATE + VALID_DATE_PTM;","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"    public static final String NAME_DESC_PLAY_DATE \u003d \" \" + PREFIX_NAME + VALID_NAME_PLAY_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"    public static final String ADDRESS_DESC_PLAY_DATE \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_PLAY_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"    public static final String DATE_DESC_PLAY_DATE \u003d \" \" + PREFIX_DATE + VALID_DATE_PLAY_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"    public static final String NAME_DESC_BALLET_RECITAL \u003d \" \" + PREFIX_NAME + VALID_NAME_BALLET_RECITAL;","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"    public static final String ADDRESS_DESC_BALLET_RECITAL \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BALLET_RECITAL;","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"    public static final String DATE_DESC_BALLET_RECITAL \u003d \" \" + PREFIX_DATE + VALID_DATE_BALLET_RECITAL;","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"    public static final String CONTACT_DESC_1 \u003d \" \" + PREFIX_CONTACT + VALID_CONTACT_1;","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"    public static final String CONTACT_DESC_2 \u003d \" \" + PREFIX_CONTACT + VALID_CONTACT_2;","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"            + \"09-01-2021 00:00\"; // should be \u0027/\u0027 instead of \u0027-\u0027","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"    public static final String INVALID_CONTACT_DESC \u003d \" \" + PREFIX_CONTACT + \"amy\"; // only numbers accepted","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"nicoleang09":27,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    private static final List\u003cIndex\u003e INDEX_FIRST_PERSON_LIST_WRAPPER \u003d new ArrayList\u003c\u003e(List.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"    private static final List\u003cIndex\u003e INDEX_SECOND_PERSON_LIST_WRAPPER \u003d new ArrayList\u003c\u003e(List.of(INDEX_SECOND_PERSON));","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"clarlzx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON_LIST_WRAPPER);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"clarlzx"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new ArrayList\u003c\u003e(List.of(outOfBoundIndex)));","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON_LIST_WRAPPER);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"clarlzx"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"        List\u003cIndex\u003e outOfBoundIndexListWrapper \u003d new ArrayList\u003c\u003e(List.of(INDEX_SECOND_PERSON));","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"        assertTrue(outOfBoundIndexListWrapper.get(0).getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndexListWrapper);","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON_LIST_WRAPPER);","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON_LIST_WRAPPER);","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"mechastriker3"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON_LIST_WRAPPER);","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"clarlzx":4,"mechastriker3":17,"-":97}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"clarlzx"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentBook(),","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"clarlzx"},"content":"                new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"clarlzx"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentBook(),","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"clarlzx"},"content":"                new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentBook(),","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"                new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentBook(),","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"                new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"clarlzx":10,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"clarlzx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"clarlzx"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"clarlzx"},"content":"    public void execute_oneKeywordPartOfName_onePersonFound() {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"clarlzx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"clarlzx"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Carl\");","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"clarlzx"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"clarlzx"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"clarlzx"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"clarlzx"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"clarlzx"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"clarlzx"},"content":"    public void execute_twoKeywordsOneFullName_onePersonFound() {","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"clarlzx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"clarlzx"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Carl Kurz\");","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"clarlzx"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"clarlzx"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"clarlzx"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"clarlzx"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"clarlzx"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"clarlzx"},"content":"    public void execute_multiplePartOfNamesKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"clarlzx"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"clarlzx"},"content":"    public void execute_somePartOfNamesSomeFullNamesKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"clarlzx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"clarlzx"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Carl Kunz\");","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"clarlzx"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"clarlzx"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"clarlzx"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"clarlzx"},"content":"    public void execute_oneIncompleteKeyword_onePersonFound() {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"clarlzx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"clarlzx"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Car\");","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"clarlzx"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"clarlzx"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"clarlzx"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"clarlzx"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"clarlzx"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"clarlzx"},"content":"    public void execute_multipleIncompleteKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"clarlzx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kur Ell Kun\");","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"clarlzx"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"clarlzx"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"clarlzx"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"clarlzx"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"clarlzx"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"    public void execute_someIncompleteKeywordsSomeCompleteKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"clarlzx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"clarlzx"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kur Elle Kun Daniel\");","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"clarlzx"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"clarlzx"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"clarlzx"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"clarlzx"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"clarlzx"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":138,"author":{"gitId":"clarlzx"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"clarlzx":65,"-":80}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    public void execute_commandNotSpecified_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    public void execute_commandSpecified_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"        assertCommandSuccess(new HelpCommand(\"add\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    public void execute_commandSpecified_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        HelpCommand h \u003d new HelpCommand(\"hello\");","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        assertThrows(CommandException.class, () -\u003e h.execute(model));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"nicoleang09":15,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"clarlzx"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"clarlzx"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"clarlzx":3,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"/** Contains unit tests for TagCommand */","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"public class TagCommandTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"clarlzx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"    public void execute_singleTagAppendedToNoTags_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"        Person taggedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(2)).withTags(\"formTeacher\").build();","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"        tagsToAdd.add(new Tag(\"formTeacher\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"        TagCommand tagCommand \u003d new TagCommand(INDEX_THIRD_PERSON, tagsToAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, taggedPerson);","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentBook(),","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"clarlzx"},"content":"                new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(2), taggedPerson);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"    public void execute_replaceTagsWithSingleTag_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"        Person taggedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(1))","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"                .withTags(\"englishTeacher\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"        Set\u003cTag\u003e tagsToReplace \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"        tagsToReplace.add(new Tag(\"englishTeacher\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"        TagCommand tagCommand \u003d new TagCommand(INDEX_SECOND_PERSON, tagsToReplace, true);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_REPLACE_PERSON_SUCCESS, taggedPerson);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"clarlzx"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentBook(),","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"clarlzx"},"content":"                new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(1), taggedPerson);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Stratostorm"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Stratostorm"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"clarlzx":6,"Stratostorm":53}},{"path":"src/test/java/seedu/address/logic/parser/AddAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BALLET_RECITAL;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_PTM;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CONTACT_DESC_2;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_BALLET_RECITAL;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_PTM;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BALLET_RECITAL;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_PTM;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_PTM;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_PTM;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_PTM;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.testutil.TypicalAppointments.BALLET_RECITAL;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"public class AddAppointmentCommandParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"    private AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"    private Model model;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new AppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"        ParserUtil.setModel(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"        Appointment expectedAppointment \u003d new AppointmentBuilder(BALLET_RECITAL).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"        // Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BALLET_RECITAL + ADDRESS_DESC_BALLET_RECITAL","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"                + DATE_DESC_BALLET_RECITAL, new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"        assertParseSuccess(parser, NAME_DESC_PTM + NAME_DESC_BALLET_RECITAL + ADDRESS_DESC_BALLET_RECITAL","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"                + DATE_DESC_BALLET_RECITAL, new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"        assertParseSuccess(parser, NAME_DESC_BALLET_RECITAL + ADDRESS_DESC_BALLET_RECITAL","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"                + DATE_DESC_BALLET_RECITAL, new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"        // zero tags","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"        Appointment expectedAppointment \u003d new AppointmentBuilder(BALLET_RECITAL).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"        assertParseSuccess(parser, NAME_DESC_BALLET_RECITAL + ADDRESS_DESC_BALLET_RECITAL + DATE_DESC_BALLET_RECITAL,","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"                new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"        assertParseFailure(parser, VALID_NAME_PTM + ADDRESS_DESC_PTM + DATE_DESC_PTM + CONTACT_DESC_2,","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"        assertParseFailure(parser, VALID_NAME_PTM + VALID_ADDRESS_PTM + VALID_DATE_PTM + CONTACT_DESC_2,","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"        // invalid name","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ADDRESS_DESC_PTM + DATE_DESC_PTM + CONTACT_DESC_2,","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"        // invalid address","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"        assertParseFailure(parser, NAME_DESC_PTM + INVALID_ADDRESS_DESC + DATE_DESC_PTM + CONTACT_DESC_2,","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"        // invalid date","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"        assertParseFailure(parser, NAME_DESC_PTM + ADDRESS_DESC_PTM + INVALID_DATE_DESC + CONTACT_DESC_2,","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"                DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"        // invalid contact","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"        // assertParseFailure(parser, NAME_DESC_PTM + ADDRESS_DESC_PTM + DATE_DESC_PTM + INVALID_CONTACT_DESC,","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"        //        MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_PTM + ADDRESS_DESC_PTM + DATE_DESC_PTM","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"                + CONTACT_DESC_2, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":110}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"        // // missing phone prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":"        // assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":"        //         expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"mechastriker3"},"content":"        //","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"mechastriker3"},"content":"        // // missing email prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"mechastriker3"},"content":"        // assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"mechastriker3"},"content":"        //         expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"mechastriker3"},"content":"        //","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"mechastriker3"},"content":"        // // missing address prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"mechastriker3"},"content":"        // assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"mechastriker3"},"content":"        //         expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"clarlzx":2,"mechastriker3":11,"-":128}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(new ArrayList\u003cIndex\u003e(List.of(INDEX_FIRST_PERSON))));","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"mechastriker3":5,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"clarlzx":2,"-":209}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.person.AnyContainsKeywordsPredicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"                new FindCommand(new AnyContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"mechastriker3":2,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/HeliBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.person.AnyContainsKeywordsPredicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"public class HeliBookParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    private final HeliBookParser parser \u003d new HeliBookParser();","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"        assertEquals(new DeleteCommand(new ArrayList\u003cIndex\u003e(List.of(INDEX_FIRST_PERSON))), command);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"        assertEquals(new FindCommand(new AnyContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" find\") instanceof HelpCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"nicoleang09":3,"mechastriker3":5,"-":94}},{"path":"src/test/java/seedu/address/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"class HelpCommandParserTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    private HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    void parse_commandNotSpecified_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"        assertParseSuccess(parser, \" \", new HelpCommand());","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    void parse_commandSpecified_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"        assertParseSuccess(parser, \"find\", new HelpCommand(\"find\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    //    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    //    void parse_invalidCommandSpecified_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    //        String expectedMessage \u003d MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    //","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    //        assertParseFailure(parser, \"hello\", expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    //    }","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"    //","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    //    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    //    void parse_multipleCommandsSpecified_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    //        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    //","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    //        assertParseFailure(parser, \"help find\", expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    //    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"nicoleang09":35}},{"path":"src/test/java/seedu/address/logic/parser/MarkdownPlainTextParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"class MarkdownPlainTextParserTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"    private MarkdownPlainTextParser parser \u003d new MarkdownPlainTextParser();","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    void formatTitleText_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"        String actualPlainText \u003d parser.formatPlainText(\"#### This is a title\", \"title\");","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"        String expectedPlainText \u003d \"This is a title\";","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"        assertEquals(expectedPlainText, actualPlainText);","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    void formatLine_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"        String actualPlainText \u003d parser.formatPlainText(\"Hello, this is a sentence.\", \"info\");","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        String expectedPlainText \u003d \"Hello, this is a sentence.\\n\";","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"        assertEquals(expectedPlainText, actualPlainText);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    void formatTipDiv_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"        String actualPlainText \u003d parser.formatPlainText(","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"                \"\u003cdiv markdown\u003d\\\"span\\\" class\u003d\\\"alert alert-primary\\\"\u003e:bulb: **Tip:**\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"                        + \"This is a tip.\\n\" + \"\u003c/div\u003e\", \"info\");","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        String expectedPlainText \u003d \"\\uD83D\\uDCA1 Tip: This is a tip.\\n\";","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"        assertEquals(expectedPlainText, actualPlainText);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"    void formatWarningDiv_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        String actualPlainText \u003d parser.formatPlainText(","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"                \"\u003cdiv markdown\u003d\\\"span\\\" class\u003d\\\"alert alert-warning\\\"\u003e:exclamation: **Caution:**\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"                        + \"This is a warning.\\n\u003c/div\u003e\", \"info\");","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"        String expectedPlainText \u003d \"❗ Caution: This is a warning.\\n\";","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"        assertEquals(expectedPlainText, actualPlainText);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicoleang09":45}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"clarlzx":2,"-":194}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"mechastriker3":3,"-":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"clarlzx"},"content":"        modelManager \u003d new ModelManager(addressBook, new AppointmentBook(), userPrefs);","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"clarlzx"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, new AppointmentBook(), userPrefs);","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"clarlzx"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, new AppointmentBook(), userPrefs)));","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"clarlzx"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, new AppointmentBook(), userPrefs)));","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"clarlzx"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, new AppointmentBook(), differentUserPrefs)));","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"clarlzx":5,"-":127}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"clarlzx":1,"-":37}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"clarlzx":1,"-":41}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"        // same name and tags, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"        // different name and same tags, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"        // different tags and same name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        // different tags and different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"mechastriker3":11,"-":88}},{"path":"src/test/java/seedu/address/model/person/TagsMatchKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"public class TagsMatchKeywordsPredicateTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    public void equals() {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"        Set\u003cTag\u003e firstPredicateTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(\"TagA\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"        Set\u003cTag\u003e secondPredicateTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"                new Tag(\"TagA\"), new Tag(\"TagB\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        TagsMatchKeywordPredicate firstPredicate \u003d new TagsMatchKeywordPredicate(firstPredicateTagSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"        TagsMatchKeywordPredicate secondPredicate \u003d new TagsMatchKeywordPredicate(secondPredicateTagSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"        TagsMatchKeywordPredicate firstPredicateCopy \u003d new TagsMatchKeywordPredicate(firstPredicateTagSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"    public void test_tagMatchKeywords_returnsTrue() {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"        // One tag","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"        Set\u003cTag\u003e singleTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(\"Friend\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"        TagsMatchKeywordPredicate predicate \u003d new TagsMatchKeywordPredicate(singleTagSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Friend\", \"Facebook\").build()));","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"        // Multiple tags","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"        Set\u003cTag\u003e multipleTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"                new Tag(\"Colleague\"), new Tag(\"Google\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"        predicate \u003d new TagsMatchKeywordPredicate(multipleTagSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Colleague\", \"Google\").build()));","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"        // Only one matching tag","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"        Set\u003cTag\u003e diffMultipleTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"                new Tag(\"Friend\"), new Tag(\"Facebook\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"        predicate \u003d new TagsMatchKeywordPredicate(diffMultipleTagSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Friend\", \"Microsoft\").build()));","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"    public void test_tagDoesNotMatchKeywords_returnsFalse() {","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"        // Zero tags","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"        Set\u003cTag\u003e emptyTagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"        TagsMatchKeywordPredicate predicate \u003d new TagsMatchKeywordPredicate(emptyTagSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Google\").build()));","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"        Set\u003cTag\u003e nonMatchTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(\"Google\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"        predicate \u003d new TagsMatchKeywordPredicate(nonMatchTagSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Friend\", \"Facebook\").build()));","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"        Set\u003cTag\u003e mixedCaseTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":"                new Tag(\"fRiEnd\"), new Tag(\"fAcEbOok\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":"        predicate \u003d new TagsMatchKeywordPredicate(mixedCaseTagSet);","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Friend\", \"Facebook\").build()));","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"mechastriker3":87}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"mechastriker3":2,"-":169}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"    private static final String VALID_TIME_ADDED \u003d BENSON.getTimeAdded().toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"    private static final String VALID_FAVOURITE \u003d BENSON.getFavourite().toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_TIME_ADDED, VALID_FAVOURITE);","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"edelinetenges"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"edelinetenges"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"edelinetenges"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_TIME_ADDED, VALID_FAVOURITE);","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"edelinetenges"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"edelinetenges"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_TIME_ADDED, VALID_FAVOURITE);","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"edelinetenges"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"edelinetenges"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"edelinetenges"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_TIME_ADDED, VALID_FAVOURITE);","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"edelinetenges"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"edelinetenges"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_TIME_ADDED, VALID_FAVOURITE);","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"edelinetenges"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"edelinetenges"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"edelinetenges"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_TIME_ADDED, VALID_FAVOURITE);","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"edelinetenges"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"edelinetenges"},"content":"                        INVALID_ADDRESS, VALID_TAGS, VALID_TIME_ADDED, VALID_FAVOURITE);","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"edelinetenges"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"edelinetenges"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"edelinetenges"},"content":"                null, VALID_TAGS, VALID_TIME_ADDED, VALID_FAVOURITE);","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"Stratostorm"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG, false));","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"edelinetenges"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"edelinetenges"},"content":"                        VALID_ADDRESS, invalidTags, VALID_TIME_ADDED, VALID_FAVOURITE);","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"clarlzx":2,"Stratostorm":1,"edelinetenges":24,"-":98}},{"path":"src/test/java/seedu/address/storage/JsonAppointmentBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"public class JsonAppointmentBookStorageTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"            \"JsonAppointmentBookStorageTest\");","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    @TempDir","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    public void readAppointmentBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAppointmentBook(null));","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    private java.util.Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(String filePath) throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"        return new JsonAppointmentBookStorage(Paths.get(filePath)).readAppointmentBook(","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"                addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"                : null;","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"        assertFalse(readAppointmentBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAppointmentBook(","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"                \"notJsonFormatAppointmentBook.json\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"    public void readAppointmentBook_invalidPersonAppointmentBook_throwDataConversionException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAppointmentBook(","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"                \"invalidAppointmentAppointmentBook.json\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"    public void readAppointmentBook_invalidAndValidPersonAppointmentBook_throwDataConversionException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAppointmentBook(","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"                \"invalidAndValidAppointmentAppointmentBook.json\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"    public void saveAppointmentBook_nullAppointmentBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAppointmentBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"     * Saves {@code appointmentBook} at the specified {@code filePath}.","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"    private void saveAppointmentBook(ReadOnlyAppointmentBook addressBook, String filePath) {","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"            new JsonAppointmentBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"                    .saveAppointmentBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"    public void saveAppointmentBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAppointmentBook(new AppointmentBook(), null));","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"nicoleang09":84}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d new JsonAppointmentBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, appointmentBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicoleang09":3,"-":67}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    public static final String DEFAULT_NAME \u003d \"Parent teacher meeting\";","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    public static final String DEFAULT_DATE \u003d \"09/01/2021 00:00\";","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    // public static final String DEFAULT_CONTACTS \u003d \"1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    private Name name;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    private Address address;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    private DateTime dateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    private Set\u003cPerson\u003e contacts;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"     * Creates an {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"        dateTime \u003d new DateTime(DEFAULT_DATE);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        contacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    public AppointmentBuilder(Appointment appointmentToCopy) {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"        name \u003d appointmentToCopy.getName();","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"        address \u003d appointmentToCopy.getAddress();","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"        dateTime \u003d appointmentToCopy.getDateTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"        contacts \u003d new HashSet\u003c\u003e(appointmentToCopy.getContacts());","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"        tags \u003d new HashSet\u003c\u003e(appointmentToCopy.getTags());","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"     * Sets the {@code Name} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"    public AppointmentBuilder withName(String name) {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"     * Sets the {@code Address} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"    public AppointmentBuilder withAddress(String address) {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"     * Sets the {@code Date} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"    public AppointmentBuilder withDateTime(String dateTime) {","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"     * Parses the {@code contacts} into a {@code Set\u003cPerson\u003e} and set it to the {@code Appointment} that","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"     * we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"    public AppointmentBuilder withContacts(String ... contacts) {","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"        this.contacts \u003d SampleDataUtil.getPersonSet(contacts);","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"    public AppointmentBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"        this.tags \u003d SampleDataUtil.getChildTagSet(tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"    public Appointment build() {","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"Stratostorm"},"content":"        return new Appointment(name, address, dateTime, contacts, tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":92,"Stratostorm":5}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"clarlzx":2,"-":85}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"clarlzx"},"content":"import seedu.address.model.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.Favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"import seedu.address.model.person.TimeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"    public static final String DEFAULT_TIME_ADDED \u003d \"2021-03-21 06:55:40.11\";","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"    public static final String DEFAULT_FAVOURITE \u003d \"false\";","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"    private TimeAdded timeAdded;","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"    private Favourite favourite;","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"        timeAdded \u003d new TimeAdded(DEFAULT_TIME_ADDED);","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"        favourite \u003d new Favourite(DEFAULT_FAVOURITE);","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"edelinetenges"},"content":"        timeAdded \u003d new TimeAdded(personToCopy.getTimeAdded().toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"edelinetenges"},"content":"        favourite \u003d new Favourite(personToCopy.getFavourite().toString());","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"edelinetenges"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"edelinetenges"},"content":"     * Sets the {@code TimeAdded} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"edelinetenges"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"edelinetenges"},"content":"    public PersonBuilder withTimeAdded(String timeAdded) {","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"edelinetenges"},"content":"        this.timeAdded \u003d new TimeAdded(timeAdded);","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"edelinetenges"},"content":"        return this;","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"edelinetenges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"edelinetenges"},"content":"     * Sets the {@code Favourite} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"edelinetenges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"edelinetenges"},"content":"    public PersonBuilder withFavourite(String favourite) {","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"edelinetenges"},"content":"        this.favourite \u003d new Favourite(favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"edelinetenges"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"edelinetenges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"edelinetenges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":119,"author":{"gitId":"edelinetenges"},"content":"        return new Person(name, phone, email, address, tags, timeAdded, favourite);","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"clarlzx":2,"edelinetenges":27,"-":93}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"public class TypicalAppointments {","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    public static final Appointment PTM \u003d new AppointmentBuilder().withName(\"PTM\")","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"            .withAddress(\"Child 1\u0027s school\").withDateTime(\"09/01/2021 00:00\")","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"            .withContacts(\"2\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    public static final Appointment PLAY_DATE \u003d new AppointmentBuilder().withName(\"Play date with xyz\")","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"            .withAddress(\"xyz\u0027s house\").withDateTime(\"30/03/2021 10:00\")","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"            .withContacts(\"1\", \"2\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    public static final Appointment PSG_MEETING \u003d new AppointmentBuilder().withName(\"PSG meeting\")","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"            .withAddress(\"child 3\u0027s school\").withDateTime(\"15/04/2021 14:00\")","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"            .withContacts(\"3\", \"4\", \"1\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    public static final Appointment BALLET_RECITAL \u003d new AppointmentBuilder().withName(\"ballet recital\")","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"            .withAddress(\"child 1\u0027s school\").withDateTime(\"23/12/2021 18:00\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    private TypicalAppointments() {} // prevents instantiation","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     * Returns an {@code AppointmentBook} with all the typical appointments.","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"    public static AppointmentBook getTypicalAppointmentBook() {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"        AppointmentBook ab \u003d new AppointmentBook();","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"        return ab;","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(PLAY_DATE, BALLET_RECITAL));","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nicoleang09":39}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"            .withTimeAdded(\"2021-03-21 06:55:40.11\")","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"            .withFavourite(\"false\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"            .withTimeAdded(\"2021-03-21 08:55:40.11\")","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"            .withFavourite(\"false\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withTimeAdded(\"2021-03-21 05:55:40.11\")","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"            .withFavourite(\"false\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"            .withTimeAdded(\"2021-03-21 07:55:40.11\").withFavourite(\"true\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"            .withTimeAdded(\"2021-03-21 09:55:40.11\").withFavourite(\"false\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"edelinetenges"},"content":"            .withTimeAdded(\"2021-03-21 06:57:40.11\").withFavourite(\"true\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"edelinetenges"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withTimeAdded(\"2021-03-21 06:25:40.11\")","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"            .withFavourite(\"false\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"edelinetenges":16,"-":69}}]
