[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-T14-4/tp/actions)"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"* ## **Instructions**"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"  1. Ensure that you have Java 11 or above installed in your computer"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"  2. Download the latest [App name] from [hyperlink]"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"  3. Copy the file download location to the folder that you want to use as the home folder for your [App name]"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"  4. Double click on the file to start the app"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"  5. Once the app is started, you can begin by typing certain commands in the command box to execute certain actions. E.g: typing help and pressing enter will open the help windows for guidance on some command executions."},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"      * add module : mc/CS2103 mc/Software Engineering tn/iP Level 10 d/ Feb 15 t/ 1800 will add this module to the list"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"      * delete module [num list] : delete 3 will delete 3rd task from the listlist : will shown all module tasks"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"      * mark as done [num list] : mark as done 3 will mark 3rd task from the list as done"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"      * sort : sort d/ march will sort and show all march tasks on the top of the list and then Jan, Feb … Dec"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"      * edit task [num list] : edit 3 will allow user to edit the 3rd module task from the list"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"      * add notes [num list] : add notes 3 will add notes to the 3rd module task from the list"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"      * Priority tag HIGH/MEDIUM/LOW : pt/HIGH 3 will assign a high priority to the 3rd task on the list. "},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"      * Time-based alert : alert will show a list of immediate tasks that will be due next week"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"      * clear : will delete all module tasks on the list"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"6. Refer to the features for each individual commands for more details "},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"## **Commands**"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"1. ### Delete Task : *delete*"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"  * Format delete[index]"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"    1. eg: delete 3 will delete the 3rd task on the list"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"    2. Index to be inserted must be positive, and"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"    3. Index must be available on the list else an error will be thrown"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"    4. Example: Using the command list to show all tasks, the user wants to delete the 2nd task. User use command delete 2 to delete the 2nd task from the list "},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"2. ### Priority tag: *pt/Priority*"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"  * Format: pt/HIGH 3"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"    1. Will assignment a priority of HIGH to the 3rd task on the list"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"    2. Priority levels LOW -\u003e MEDIUM -\u003e HIGH"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"    3. Index inserted must be positive, and "},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"    4. Index must be available on the list else an error will be thrown"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"    5. Priority tag must be either HIGH, MEDIUM or LOW."},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"    6. Example: list to show all tasks on the list followed by pt/LOW 2 to assign a priority tag of LOW to the 2nd task on the list followed by sort LOW/low to view the list according to priority level "},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"3. ### Module name: *mn/*"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"  * Format: mn/ {module name}"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"    1. Sets the module name of a task"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"    2. Example: mn/Software Engineering. Sets the module name of the task to “Software Engineering”"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"4. ### Module code: *mc/*"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"  * Format: mc/ {module code}"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"    1. Sets the module code of a task"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"    2. Module code must be a CS module code "},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"5. ### Edit Task: *edit*"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"  * Format: edit INDEX [tn/TASK NAME] [mn/MODULE NAME] [mc/MODULE CODE] [d/ DEADLINE DATE] [t/DEADLINE TIME] [n/NOTES] [pt/PRIORITY]"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"    1. Edits the task at the specified index."},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"    2. The index must be a positive integer"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"    3. The index must be on the list else an error will be thrown"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"    4. At least one of the optional fields must be provided"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"    5. Existing values will be updated to the input values"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"    6. Example: edit 1 mn/Software Engineering mc/CS2103. Edits the module name and module code of the task at index 1 to be “Software Engineering” and “CS2103” respectively."},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"    7. Example: edit 2 tn/Finals n/Open Book. Edits the task name and notes of the task at index 2 to be “Finals” and “Open Book” respectively."},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"6. ### Clear Application: *clear* "},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"  * Clears all tasks from the application"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"  * Format: clear"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"7. ### Locating tasks by name: *find*"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"  * Find tasks whose task name contains any of the given words"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"  * Format: find KEYWORD[MORE_KEYWORDS]"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":"    1. The search is case-insensitive. e.g Assignment will match assignment"},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"    2. The order of the keywords does not matter. e.g. programming modular will match modular programming"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"    3. Only the task name is searched."},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"    4. Only full words will be matched e.g. Java will not match Javascript"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"    5. Persons matching at least one keyword will be returned (i.e. OR search). e.g. SQL Python will return SQL Quiz, Python Assignment"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"    6. Example: find C++ will return C++ project and C++ graded quiz"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"    7. find assignment exam will return Final Assignment, Midterm exam"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"8. ### Sort tasks: *sort*"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"  * Sort tasks according to the specified parameter"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"  * Format: sort dt/ OR mc/ OR pt/"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"    1. Task can be sorted according to these three parameters: date \u0026 time (/dt), module code (mc/) or priority tag (pt/)."},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"    2. For date \u0026 time, the tasks will be sorted in ascending order, with the earliest deadline placed first."},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"    3. For module code, the tasks will be sorted according to the lexicographical ordering of the module codes."},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"    4. For priority tag, the tasks will be sorted according to this order: HIGH \u003e MEDIUM \u003e LOW. Tasks with high priority will then be shown at the top of the list."},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"9. ### Add notes to tasks: *notes*"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"  * Adds any additional notes or remarks to an exisiting task"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"  * Format: notes INDEX [n/NOTES]"},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"    1. Adds user input NOTES to the task at the specified INDEX. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1, 2, 3, …"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":"    2. Adding notes to a task that already has existing notes will overwrite the previous notes."},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":"    3. Example: list followed by notes 2 n/Hello World! adds the note “Hello World!” to the 2nd task in the task list."},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":"    4. Example: find assignment followed by notes 1 n/fooBar adds the note “fooBar” to the 1st task in the results of the find command."},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":" "},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":"10. ### Shows alert(s) for incoming deadlines based on the time range (if give)"},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"  * Format: alert start/START_DATE end/END_DATE"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":"    1. If no time range is given, alert(s) shown will be deadlines next week."},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"    2. If only START_DATE is given, alert(s) shown will be from the START_DATE until the latest deadline. "},{"lineNumber":114,"author":{"gitId":"mrweikiat"},"content":"    3. If only END_DATE is given, alert(s) shown will be from today’s date until the END_DATE."},{"lineNumber":115,"author":{"gitId":"mrweikiat"},"content":"    4. alert start/10-10-2020 will show deadlines starting from 10 October 2020 onwards."},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":117,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"## Acknowledgements "},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":"1. This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)"}],"authorContributionMap":{"mrweikiat":116,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"## AY2021S2-CS2103-T14-4"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"### Austen Jeremy Sugiarto"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"\u003cimg src\u003d\"images/austenjs.png\" width\u003d\"200px\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"[[github](https://github.com/austenjs)]"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"* Role: Member"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"### Daniel Ong Ee Shaeon"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"\u003cimg src\u003d\"images/danielonges.png\" width\u003d\"200px\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"[[github](http://github.com/danielonges)]"},{"lineNumber":26,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"* Role: Member"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"### Fan Horng Wei, Gerald"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/geraldfan.png\" width\u003d\"200px\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"[[github](http://github.com/geraldfan)] "},{"lineNumber":35,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"* Role: Member"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"### Goh Wei Kiat"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"\u003cimg src\u003d\"images/mrweikiat.png\" width\u003d\"200px\"\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"[[github](http://github.com/mrweikiat)]"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"* Role: Member"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"### Kong Jun Yin"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"\u003cimg src\u003d\"images/oheyesee.png\" width\u003d\"200px\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"[[github](http://github.com/oheyesee)]"},{"lineNumber":53,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"* Role: Member"}],"authorContributionMap":{"mrweikiat":3,"danielonges":1,"-":36,"austenjs":15}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other."},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App."},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor."},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory."},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component."},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command."},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`."},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person)."},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences."},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data."},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back."},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### Proposed Implementation"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history."},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history."},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history."},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather"},{"lineNumber":171,"author":{"gitId":"-"},"content":"than attempting to perform the undo."},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow."},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Design consideration:"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book."},{"lineNumber":206,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement."},{"lineNumber":207,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage."},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  itself."},{"lineNumber":211,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."},{"lineNumber":212,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct."},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Product scope"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Target user profile**:"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"danielonges"},"content":"* is a CS student in NUS"},{"lineNumber":240,"author":{"gitId":"danielonges"},"content":"* has a need to consolidate and manage deadlines for CS-coded module tasks"},{"lineNumber":241,"author":{"gitId":"danielonges"},"content":"* prefer desktop apps over other types of apps"},{"lineNumber":242,"author":{"gitId":"danielonges"},"content":"* prefers to use CLI over a GUI"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* can type fast"},{"lineNumber":244,"author":{"gitId":"danielonges"},"content":"* prefers an all-keyboard workflow without needing to use a mouse"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"danielonges"},"content":"**Value proposition**: "},{"lineNumber":247,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":248,"author":{"gitId":"danielonges"},"content":"- manage upcoming CS assignment deadlines faster than a typical mouse/GUI driven app"},{"lineNumber":249,"author":{"gitId":"danielonges"},"content":"- consolidates all CS-coded module tasks into a single place for a CS student to manage and view easily"},{"lineNumber":250,"author":{"gitId":"danielonges"},"content":"- allows a CS student to prioritise his/her time by seeing which task deadlines are more pressing"},{"lineNumber":251,"author":{"gitId":"danielonges"},"content":"- the app can also remind a CS student about his/her upcoming deadlines so that he/she does not need to remember everything all at once"},{"lineNumber":252,"author":{"gitId":"danielonges"},"content":"- easy CLI operation would entice a CS student to use the app, as he/she probably interacts with CLI on a daily basis while coding/doing CS-coded module tasks"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"### User stories"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |"},{"lineNumber":260,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |"},{"lineNumber":261,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |"},{"lineNumber":262,"author":{"gitId":"danielonges"},"content":"| `* * *`  | user                                       | add a new CS-coded module task                               | refer to the task in the App |"},{"lineNumber":263,"author":{"gitId":"danielonges"},"content":"| `* * *`  | user                                       | delete a task                                                | remove entries that I no longer need                         |"},{"lineNumber":264,"author":{"gitId":"danielonges"},"content":"| `* * *`  | user                                       | find a task by its name                                      | locate a particular task in order to view its deadline and relevant details |"},{"lineNumber":265,"author":{"gitId":"danielonges"},"content":"| `* * *`  | user                                       | add priority tags (low, medium, high)                        | categorise my tasks and know which ones I should work on first |"},{"lineNumber":266,"author":{"gitId":"danielonges"},"content":"| `* * *`  | user who has just finished a task | mark a task as done                                          | know which tasks I have completed                            |"},{"lineNumber":267,"author":{"gitId":"danielonges"},"content":"| `* *` | user | add notes to a particular task | jot down quick ideas or notes that I have for a particular task |"},{"lineNumber":268,"author":{"gitId":"danielonges"},"content":"| `* *` | user with many tasks in the App | sort tasks either by deadlines, module codes, or their priority tags | have different views of the App when I require them |"},{"lineNumber":269,"author":{"gitId":"danielonges"},"content":"| `* *` | user | edit task attributes | change the details of a task if the task requirements or details have changed |"},{"lineNumber":270,"author":{"gitId":"danielonges"},"content":"| `*` | user with many upcoming deadlines | be reminded of deadlines that are approaching | remember when my tasks are due and work on them |"},{"lineNumber":271,"author":{"gitId":"danielonges"},"content":"| `*` | user who just finished their semester | clear the application of all tasks | prepare for the next upcoming semester |"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Use cases"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"geraldfan"},"content":"**Use case: Delete a deadline**"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"geraldfan"},"content":"1.  User requests to list deadlines"},{"lineNumber":284,"author":{"gitId":"geraldfan"},"content":"2.  AddressBook shows a list of deadlines"},{"lineNumber":285,"author":{"gitId":"geraldfan"},"content":"3.  User requests to delete a specific deadline in the list"},{"lineNumber":286,"author":{"gitId":"geraldfan"},"content":"4.  AddressBook deletes the deadline"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"    Use case ends."},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"* 2a. The list is empty."},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"  Use case ends."},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message."},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"      Use case resumes at step 2."},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"geraldfan"},"content":"**Use case: Edit a deadline**"},{"lineNumber":303,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":304,"author":{"gitId":"geraldfan"},"content":"1. User requests to list deadlines"},{"lineNumber":305,"author":{"gitId":"geraldfan"},"content":"2. AddressBook shows a list of deadlines"},{"lineNumber":306,"author":{"gitId":"geraldfan"},"content":"3. User requests to edit a specific deadline in the list"},{"lineNumber":307,"author":{"gitId":"geraldfan"},"content":"4. AddressBook updates the specific deadline in the list"},{"lineNumber":308,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":309,"author":{"gitId":"geraldfan"},"content":"    Use case ends."},{"lineNumber":310,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":311,"author":{"gitId":"geraldfan"},"content":"**Extensions**"},{"lineNumber":312,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":313,"author":{"gitId":"geraldfan"},"content":"* 2a. The list is empty."},{"lineNumber":314,"author":{"gitId":"geraldfan"},"content":"  "},{"lineNumber":315,"author":{"gitId":"geraldfan"},"content":"    Use case ends."},{"lineNumber":316,"author":{"gitId":"geraldfan"},"content":"* 3a. The given index is invalid"},{"lineNumber":317,"author":{"gitId":"geraldfan"},"content":"    * 3a1. AddressBook shows an error message."},{"lineNumber":318,"author":{"gitId":"geraldfan"},"content":"      "},{"lineNumber":319,"author":{"gitId":"geraldfan"},"content":"        Use case resumes at step 2. "},{"lineNumber":320,"author":{"gitId":"geraldfan"},"content":"* 3b. Optional fields are not provided"},{"lineNumber":321,"author":{"gitId":"geraldfan"},"content":"    * 3b1. AddressBook shows an error message"},{"lineNumber":322,"author":{"gitId":"geraldfan"},"content":"      "},{"lineNumber":323,"author":{"gitId":"geraldfan"},"content":"        Use case resumes at step 2."},{"lineNumber":324,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":325,"author":{"gitId":"geraldfan"},"content":"**Use case: Setting a priority tag**"},{"lineNumber":326,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":327,"author":{"gitId":"geraldfan"},"content":"1. User requests to list deadlines"},{"lineNumber":328,"author":{"gitId":"geraldfan"},"content":"2. AddressBook shows a list of deadlines**"},{"lineNumber":329,"author":{"gitId":"geraldfan"},"content":"3. User requests to set a priority tag on a specific deadline in the list"},{"lineNumber":330,"author":{"gitId":"geraldfan"},"content":"4. AddressBook sets a priority tag to the specific deadline in the list"},{"lineNumber":331,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":332,"author":{"gitId":"geraldfan"},"content":"**Extensions**"},{"lineNumber":333,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":334,"author":{"gitId":"geraldfan"},"content":"* 2a. The list is empty."},{"lineNumber":335,"author":{"gitId":"geraldfan"},"content":"  "},{"lineNumber":336,"author":{"gitId":"geraldfan"},"content":"    Use case ends."},{"lineNumber":337,"author":{"gitId":"geraldfan"},"content":"* 3a. The given index is invalid"},{"lineNumber":338,"author":{"gitId":"geraldfan"},"content":"    * 3a1. AddressBook shows an error message"},{"lineNumber":339,"author":{"gitId":"geraldfan"},"content":"    "},{"lineNumber":340,"author":{"gitId":"geraldfan"},"content":"      Use case resumes at step 2"},{"lineNumber":341,"author":{"gitId":"geraldfan"},"content":"* 3b. The given priority tag is invalid"},{"lineNumber":342,"author":{"gitId":"geraldfan"},"content":"    * 3b1. AddressBook shows an error message"},{"lineNumber":343,"author":{"gitId":"geraldfan"},"content":"    "},{"lineNumber":344,"author":{"gitId":"geraldfan"},"content":"        Use case resumes at step 2"},{"lineNumber":345,"author":{"gitId":"geraldfan"},"content":"    "},{"lineNumber":346,"author":{"gitId":"geraldfan"},"content":"**Use case: Adding notes to a deadline**"},{"lineNumber":347,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":348,"author":{"gitId":"geraldfan"},"content":"1. User requests to list deadlines"},{"lineNumber":349,"author":{"gitId":"geraldfan"},"content":"2. AddressBook shows a list of deadlines**"},{"lineNumber":350,"author":{"gitId":"geraldfan"},"content":"3. User requests to add a note to a specific deadline in the list"},{"lineNumber":351,"author":{"gitId":"geraldfan"},"content":"4. AddressBook adds a note to the specific deadline in the list"},{"lineNumber":352,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":353,"author":{"gitId":"geraldfan"},"content":"**Extensions**"},{"lineNumber":354,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":355,"author":{"gitId":"geraldfan"},"content":"* 2a. The list is empty."},{"lineNumber":356,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":357,"author":{"gitId":"geraldfan"},"content":"    Use case ends"},{"lineNumber":358,"author":{"gitId":"geraldfan"},"content":"* 3a. The given index is invalids"},{"lineNumber":359,"author":{"gitId":"geraldfan"},"content":"    * 3a1. AddressBook shows an error message"},{"lineNumber":360,"author":{"gitId":"geraldfan"},"content":"    "},{"lineNumber":361,"author":{"gitId":"geraldfan"},"content":"        Use case resumes at step 2"},{"lineNumber":362,"author":{"gitId":"geraldfan"},"content":"* 3b. The deadline has existing notes"},{"lineNumber":363,"author":{"gitId":"geraldfan"},"content":"    * 3b1. AddressBook requests for confirmation to overwrite previous notes"},{"lineNumber":364,"author":{"gitId":"geraldfan"},"content":"    * 3b2. User confirms the request to overwrite previous notes"},{"lineNumber":365,"author":{"gitId":"geraldfan"},"content":"    * 3b3. AddressBook overwrites the previous notes with a new note"},{"lineNumber":366,"author":{"gitId":"geraldfan"},"content":"    "},{"lineNumber":367,"author":{"gitId":"geraldfan"},"content":"        Use case ends"},{"lineNumber":368,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":369,"author":{"gitId":"geraldfan"},"content":"  "},{"lineNumber":370,"author":{"gitId":"geraldfan"},"content":"  "},{"lineNumber":371,"author":{"gitId":"geraldfan"},"content":"  "},{"lineNumber":372,"author":{"gitId":"geraldfan"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"### Non-Functional Requirements"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed."},{"lineNumber":378,"author":{"gitId":"austenjs"},"content":"2.  The software should be portable. So moving from one OS to other OS does not create any problem."},{"lineNumber":379,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":380,"author":{"gitId":"austenjs"},"content":"4.  The response to any use action should become visible within 2 seconds."},{"lineNumber":381,"author":{"gitId":"austenjs"},"content":"5.  The source code should be open source."},{"lineNumber":382,"author":{"gitId":"austenjs"},"content":"6.  An application should be able to have up to 1000 deadlines."},{"lineNumber":383,"author":{"gitId":"austenjs"},"content":"7.  The user interface should be intuitive enough for users who are not IT-savvy."},{"lineNumber":384,"author":{"gitId":"austenjs"},"content":"8.  The product is free."},{"lineNumber":385,"author":{"gitId":"austenjs"},"content":"9.  The system should work on both `32-bit` and `64-bit` environments."},{"lineNumber":386,"author":{"gitId":"austenjs"},"content":"10. The deadline should not contain tasks deemed offensive (terrorism, bombing, etc)."},{"lineNumber":387,"author":{"gitId":"austenjs"},"content":"11. The application can be used **without** internet."},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"### Glossary"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"danielonges"},"content":"* **CS:** Computer Science"},{"lineNumber":392,"author":{"gitId":"danielonges"},"content":"* **CS-coded module tasks:** Assignments, Quizzes, Projects, and other tasks related to CS-coded modules provided by NUS School of Computing that have deadlines for submission"},{"lineNumber":393,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X"},{"lineNumber":394,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing."},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":406,"author":{"gitId":"-"},"content":""},{"lineNumber":407,"author":{"gitId":"-"},"content":"### Launch and shutdown"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"1. Initial launch"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"-"},"content":"1. Saving window preferences"},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"},{"lineNumber":420,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained."},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"### Deleting a person"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list."},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e"},{"lineNumber":431,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e"},{"lineNumber":434,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."},{"lineNumber":435,"author":{"gitId":"-"},"content":""},{"lineNumber":436,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      Expected: Similar to previous."},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"### Saving data"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"}],"authorContributionMap":{"geraldfan":76,"danielonges":24,"-":338,"austenjs":9}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"# User Guide"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"`semester.config` is a **desktop app for managing details, optimized for use via a Command Line Interface** (CLI) "},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"while still having the benefits of a Graphical User Interface (GUI). "},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"If you can type fast, `semester.config` can get your contact management tasks done faster than traditional GUI apps."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"1. [Quick start](#quick-start)"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"2. [Features](#features)"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"3. [FAQ](#faq)"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"4. [Command Summary](#command-summary)"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Quick start"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"1. Download the latest `semesterconfig.jar` from [here](https://github.com/AY2021S2-CS2103-T14-4/tp/releases)."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your `semester.config`."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   Some example commands you can try:"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"   * **`list`** : Lists all deadlines."},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"   * **`delete`**`3` : Deletes the 3rd deadline shown in the current list."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"   * **`clear`** : Deletes all deadlines."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`."},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable."},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken."},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `instructions`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"  e.g. if the command specifies `instructions 123`, it will be interpreted as `instructions`."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"### See the list of instructions: `instructions`"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"List down all possible commands in semester.config."},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"Format: `instructions`"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"### Add a deadline: `add`"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"Add a deadline to the list"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"Format: `add mc/MODULE_CODE mn/MODULE_NAME tn/TASK_NAME d/DATE [t/TIME]`"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"Example:  "},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"* `add mc/CS3243 mn/Introduction to Artificial Intelligence tn/Project 1 d/ Feb 15` will add this deadline to the list"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Clear Application : `clear`"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"Clears all deadlines from the application"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"Format: `clear`"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"### Delete a deadline: `delete` "},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"Deletes the specified deadline from the list"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"Format: `delete INDEX`"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"* Index to be inserted must be positive, and"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"* Index must be available on the list else an error will be thrown"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"Example: "},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"* `delete 3` will delete the 3rd deadline on the list"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"* Using `list` to show all deadlines, the user wants to delete the 2nd deadline. User use command `delete 2` to delete the 2nd deadline from the list "},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Edit a deadline: `edit`"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"Edits an existing deadline in the application"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"Format: `edit INDEX [tn/TASK NAME] [mn/MODULE NAME] [mc/MODULE CODE] [d/DEADLINE DATE]"},{"lineNumber":110,"author":{"gitId":"-"},"content":"[t/DEADLINE TIME] [n/NOTES] [pt/PRIORITY]`"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Edits the deadline at the specified index"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* The index must be a positive integer 1,2,3,..."},{"lineNumber":114,"author":{"gitId":"-"},"content":"* The index must be on the list else an error will be thrown"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* `edit 1 mn/Software Engineering mc/CS2103` edits the module name and module code of the deadline at index 1 to be “Software Engineering” and “CS2103” respectively."},{"lineNumber":120,"author":{"gitId":"-"},"content":"* `edit 2 tn/Finals n/Open Book` edits the name and notes of the deadline at index 2 to be “Finals” and “Open Book” respectively."},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"### Locating deadlines by name: `find`"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"Find deadlines whose name contains any of the given keywords."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"Format: `find KEYWORD...`"},{"lineNumber":127,"author":{"gitId":"austenjs"},"content":"* The search is case-insensitive. e.g “Assignment” will match “assignment”"},{"lineNumber":128,"author":{"gitId":"austenjs"},"content":"* The order of the keywords does not matter. e.g. “programming modular” will “match modular programming”"},{"lineNumber":129,"author":{"gitId":"austenjs"},"content":"* Only the deadline name is searched."},{"lineNumber":130,"author":{"gitId":"austenjs"},"content":"* Only full words will be matched e.g. “Java” will not match “Javascript”"},{"lineNumber":131,"author":{"gitId":"austenjs"},"content":"* Persons matching at least one keyword will be returned (i.e. OR search). e.g. “SQL Python” will return “SQL Quiz, Python Assignment”"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":134,"author":{"gitId":"austenjs"},"content":"* `find C++` will return `C++ project` and `C++ graded quiz`"},{"lineNumber":135,"author":{"gitId":"austenjs"},"content":"* `find assignment` exam will return `Final Assignment, Midterm exam`"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"austenjs"},"content":"### List all deadlines: `list`"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"austenjs"},"content":"List out all deadlines (might be unsorted)"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"austenjs"},"content":"Format: `list`"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"austenjs"},"content":"### Mark a deadline as done: `done`"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"austenjs"},"content":"Marks deadline(s) in the application to be done."},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"austenjs"},"content":"Format: `done INDEX…` "},{"lineNumber":148,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list."},{"lineNumber":149,"author":{"gitId":"austenjs"},"content":"* The index must be a positive integer 1, 2, 3, …​"},{"lineNumber":150,"author":{"gitId":"austenjs"},"content":"* Index must be available on the list else an error will be thrown"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"austenjs"},"content":"Example:"},{"lineNumber":153,"author":{"gitId":"austenjs"},"content":"* Using `list` to show all deadlines, the user wants to mark the 5th deadline as done. Users use command `done 5` to mark the 5th deadline."},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"austenjs"},"content":"### Sort deadlines: `sort`"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"austenjs"},"content":"Sorts deadlines according to the specified parameter."},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"austenjs"},"content":"Format: sort `[/dt] [/mc] [/pt]`"},{"lineNumber":160,"author":{"gitId":"austenjs"},"content":"* Deadlines can be sorted according to these three parameters: date \u0026 time `/dt`, module code `/mc` or priority tag `/pt`. If no arguments are given, assumed to be sorted based on date."},{"lineNumber":161,"author":{"gitId":"austenjs"},"content":"* For `date \u0026 time`, the deadlines will be sorted in ascending order, with the earliest deadline placed first."},{"lineNumber":162,"author":{"gitId":"austenjs"},"content":"* For `module code`, the deadlines will be sorted according to the lexicographical ordering of the module codes."},{"lineNumber":163,"author":{"gitId":"austenjs"},"content":"* For `priority tag`, the deadlines will be sorted according to this order: HIGH \u003e MEDIUM \u003e LOW. Deadlines with a high priority will then be shown at the top of the list."},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"austenjs"},"content":"### Clear Application: `clear`"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"austenjs"},"content":"Clears all deadlines from the application."},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"Format: `clear`"},{"lineNumber":170,"author":{"gitId":"-"},"content":" "},{"lineNumber":171,"author":{"gitId":"austenjs"},"content":"### Showing time-based alerts: `show`"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"austenjs"},"content":"Shows alert(s) for incoming deadlines based on the time range (if given). "},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"austenjs"},"content":"Format: `show [start/START_DATE] [end/END_DATE]`"},{"lineNumber":176,"author":{"gitId":"austenjs"},"content":"* If no time range is given, alert(s) shown will be deadlines next week."},{"lineNumber":177,"author":{"gitId":"austenjs"},"content":"* If only `START_DATE` is given, alert(s) shown will be from **the `START_DATE` until the latest deadline**. "},{"lineNumber":178,"author":{"gitId":"austenjs"},"content":"* If only `END_DATE` is given, alert(s) shown will be from **today’s date until the `END_DATE`**."},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"austenjs"},"content":"Example:"},{"lineNumber":181,"author":{"gitId":"austenjs"},"content":"* `alert start/10-10-2020` will show deadlines starting from 10 October 2020 onwards."},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Saving the data"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"austenjs"},"content":"`semester.config` data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"### Editing the data file"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"austenjs"},"content":"`semester.config` data are saved as a JSON file `[JAR file location]/data/semesterconfig.json`. Advanced users are welcome to update data directly by editing that data file."},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"austenjs"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e\u003cb\u003e:exclamation: Caution\u003c/b\u003e If your changes to the data file makes its format invalid, semester.config will discard all data and start with an empty data file at the next run."},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e"},{"lineNumber":199,"author":{"gitId":"austenjs"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file "},{"lineNumber":200,"author":{"gitId":"austenjs"},"content":"that contains the data of your previous `semester.config` home folder."},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"## Command summary"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"Action | Format, Examples"},{"lineNumber":207,"author":{"gitId":"-"},"content":"--------|------------------"},{"lineNumber":208,"author":{"gitId":"austenjs"},"content":"**instructions** | `instructions`"},{"lineNumber":209,"author":{"gitId":"austenjs"},"content":"**add** | `add mc/MODULE_CODE mn/MODULE_NAME tn/TASK_NAME d/DATE [t/TIME]` \u003cbr\u003e e.g, `add mc/CS1010 mn/Programming Methodology tn/Assignment 2 d/ Feb 15`"},{"lineNumber":210,"author":{"gitId":"austenjs"},"content":"**delete** | `delete INDEX ...` \u003cbr\u003e e.g, `delete 3` `delete 1 2`"},{"lineNumber":211,"author":{"gitId":"austenjs"},"content":"**find** | `find KEYWORD ...` \u003cbr\u003e e.g, `find Database` `find Software`"},{"lineNumber":212,"author":{"gitId":"austenjs"},"content":"**list** | `list`"},{"lineNumber":213,"author":{"gitId":"austenjs"},"content":"**done** | `done INDEX ...` \u003cbr\u003e e.g, `done 1` `done 3 5`"},{"lineNumber":214,"author":{"gitId":"austenjs"},"content":"**sort** | `sort [/dt] [/mc] [/pt]` \u003cbr\u003e e.g, `sort /dt` `sort /mc /pt`"},{"lineNumber":215,"author":{"gitId":"austenjs"},"content":"**notes** | `notes INDEX n/NOTES` \u003cbr\u003e e.g, `notes 4 n/Assignment must be handwritten`"},{"lineNumber":216,"author":{"gitId":"austenjs"},"content":"**edit** | `edit INDEX [tn/TASK NAME] [mn/MODULE NAME] [mc/MODULE CODE] [d/ DEADLINE DATE] [t/DEADLINE TIME] [n/NOTES] [pt/PRIORITY]` \u003cbr\u003e e.g, `edit 2 tn/Assignment 7`"},{"lineNumber":217,"author":{"gitId":"austenjs"},"content":"**clear** |`clear`"},{"lineNumber":218,"author":{"gitId":"austenjs"},"content":"**pt** | `pt [/LOW] [/MEDIUM] [/HIGH] INDEX` \u003cbr\u003e e.g, `pt /MEDIUM 3`"},{"lineNumber":219,"author":{"gitId":"austenjs"},"content":"**show** | `show [start/START_DATE] [end/END_DATE]` \u003cbr\u003e e.g, `show`  `show end/10-10-2020` `show start/10-10-2020 end/11-10-2020`"},{"lineNumber":220,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":221,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":222,"author":{"gitId":"austenjs"},"content":""}],"authorContributionMap":{"-":134,"austenjs":88}}]
