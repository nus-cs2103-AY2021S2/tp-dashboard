[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-T14-4/tp/actions)","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"![Ui](docs/images/v1.3.1_Ui.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"* ## **Instructions**","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"  1. Ensure that you have Java 11 or above installed in your computer","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"  2. Download the latest [semester.config] from [https://github.com/AY2021S2-CS2103-T14-4/tp/releases]","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"  3. Copy the file download location to the folder that you want to use as the home folder for your [semester.config]","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"  4. Double-click on the file to start the app","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"  5. Once the app is started, you can begin by typing certain commands in the command box to execute certain actions. E.g: typing help and pressing enter will open the help windows for guidance on some command executions.","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"      * add a task : `add n/Finals mc/CS2103 d/15-11-2020 t/18:00 w/10% pt/core ptag/HIGH` will add this module to the list (pt/ and ptag/ are optional, ptag/ will be set to LOW by default).","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"      * delete a task : `delete 3` will delete 3rd task from the list.","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"      * see all tasks : `list` will show all module tasks.","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"      * mark as done : `done 3` will mark the 3rd task from the list as done.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"      * sort : `sort dateTime` will sort based on deadline date and time (chronological order) and show all the tasks in list.","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"      * sort : `sort taskName` will sort based on task name (lexicographical order) and show all the tasks in list.","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"      * sort : `sort moduleCode` will sort based on module code (lexicographical order) and show all the tasks in list.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"      * sort : `sort priorityTag LOW/MEDIUM/HIGH` will sort based on priority levels (from HIGH to LOW) and show all tasks in list.","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"      * sort : `sort weightage` will sort weightage in descending order and show all the tasks in list.","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"      * edit task : `edit 3 n/PE` will allow user to edit the 3rd task and change the task name to be \"PE\".","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"      * edit task : `edit 3 mc/CS2100` will allow user to edit the 3rd task and change the module code to \"CS2100\".","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"      * edit task : `edit 3 d/10-06-2021` will allow user to edit the 3rd task and change the deadline to \"10-06-2021\".","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"      * edit task : `edit 3 t/23:59` will allow user to edit the 3rd task and change the time to \"23:59\".","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"      * edit task : `edit 3 w/25%` will allow user to edit the 3rd task and change the weightage to \"25%\".","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"      * edit task : `edit 3 pt/non-core` will allow user to edit the 3rd task and change the tag to \"non-core\".","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"      * edit task : `edit 3 ptag/MEDIUM` will allow user to edit the 3rd task and change the priority tag to \"MEDIUM\".","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"      * edit task : `edit 3 notes/Programming is hard :(` will allow user to edit the 3rd task and change the notes to \"Programming is hard :(\".","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"      * add notes : `notes 3 notes/Hello World!` will add the note \"Hello World!\" to the 3rd task from the list.","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"      * Time-based alert : `dueIn` will show a list of immediate tasks that will be due by next week.","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"      * clear : `clear` will delete all module tasks on the list.","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"  6. Refer to the features for each individual commands for more details","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"## **Commands**","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"1. ### Delete Task : *delete*","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"  * Deletes the task at the specified index.","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"  * Format:  `delete INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"    1. Index to be inserted must be positive, and","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"    2. Index must be available on the list, else an error will be thrown.","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"    - Example: Using the command `list` to show all tasks, the user wants to delete the 2nd task. User uses command `delete 2` to delete the 2nd task from the list.","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"    - Example: `delete 3` will delete the 3rd task on the list.","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"2. ### Edit Task: *edit*","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"  * Edits the task at the specified index.","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"  * Format: `edit INDEX [n/TASK NAME] [mc/MODULE CODE] [d/DEADLINE DATE] [t/DEADLINE TIME] [notes/NOTES] [pt/TAG] [ptag/PRIORITY TAG]`","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"    1. The index must be a positive integer.","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"    2. The index must be on the list else an error will be thrown.","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"    3. At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"    4. Existing values will be updated to the input values.","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"    - Example: `edit 1 n/Software Engineering Finals mc/CS2103`. Edits the name of the task and module code of the task at index 1 to be “Software Engineering Finals” and “CS2103” respectively.","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"    - Example: `edit 2 pt/Finals pt/Open Book`. Edits the tags of the task at index 2 to be “Finals” and “Open Book” respectively.","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"    - Example: `edit 3 ptag/HIGH`. Edits the priority tag of the task at index 3 to be \"HIGH\".","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"3. ### Clear Application: *clear*","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"  * Clears all tasks from the application.","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"  * Format: `clear`","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"4. ### Locating tasks by task name: *find*","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"  * Find tasks whose taskName contains any of the given key words.","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"  * Format: `find KEYWORD[MORE_KEYWORDS]`","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"    1. The search is case-insensitive. e.g. Assignment will match assignment.","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"    2. The order of the keywords does not matter. e.g. programming modular will match modular programming.","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"    3. Only the task taskName is searched.","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"    4. Only full words will be matched e.g. Java will not match Javascript","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"    5. Tasks matching at least one keyword will be returned (i.e. OR search). e.g. SQL Python will return SQL Quiz, Python Assignment","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"      * Example: `find C++` will return C++ project and C++ graded quiz","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"      * Example: `find assignment exam` will return Final Assignment, Midterm exam","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"danielonges"},"content":"5. ### Sort tasks: *sort*","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"danielonges"},"content":"  * Sort tasks according to the specified parameter.","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"danielonges"},"content":"  * Format: `sort dateTime OR moduleCode OR priorityTag or weightage OR taskName`","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"    1. Task can be sorted according to these five parameters: date \u0026 time (dateTime), module code (moduleCode) or priority tag (priorityTag) or weightage (weightage) or task name (taskName)","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"    2. For date \u0026 time, the tasks will be sorted in chronological order, with the earliest deadline placed first.","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"    3. For module code, the tasks will be sorted according to the lexicographical ordering of the module codes.","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"danielonges"},"content":"    4. For priority tag, the tasks will be sorted according to this order: HIGH \u003e MEDIUM \u003e LOW. Tasks with higher priority will then be shown at the top of the list.","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":"    5. For weightage, the tasks will be sorted in a descending order, starting from the heaviest weightage.","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"    6. For task name, the tasks will be sorted according to the lexicographical order of the task names.","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"danielonges"},"content":"6. ### Add notes to tasks: *notes*","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"danielonges"},"content":"  * Adds any additional notes or remarks to an existing task.","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"danielonges"},"content":"  * Format: `notes INDEX notes/NOTES`","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"danielonges"},"content":"    1. Adds user input NOTES to the task at the specified INDEX.","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"danielonges"},"content":"    2. The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"danielonges"},"content":"    3. The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"danielonges"},"content":"    4. Adding notes to a task that already has existing notes will overwrite the previous notes.","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"      * Example: `list` followed by `notes 2 notes/Hello World!` adds the note “Hello World!” to the 2nd task in the task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"danielonges"},"content":"      * Example: `find assignment` followed by `notes 1 notes/fooBar` adds the note “fooBar” to the 1st task in the results of the find command.","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"7. ### List tasks which need to be submitted soon: *dueIn*","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"danielonges"},"content":"  * List all tasks that are due within the days or weeks specified.","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"danielonges"},"content":"  * Format: `dueIn [day/NUMBER_OF_DAYS OR week/NUMBER_OF_WEEKS]`","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"    1. If no parameters given, tasks shown will be deadlines that will be due by next week.","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"danielonges"},"content":"    2. `NUMBER_OF_DAYS` \u0026 `NUMBER_OF_WEEKS` must be a positive integer.","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"danielonges"},"content":"    3. If both `day/` \u0026 `week/` are given, an error will be thrown.","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"danielonges"},"content":"    4. Tasks shown are tasks with deadlines starting from today\u0027s date.","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"    5. The limit for dueIn is until 31-12-2099.","lastModifiedDate":"2021-04-08"},{"lineNumber":127,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"austenjs"},"content":"      * Example: `dueIn day/2` will show tasks that have deadlines within the next 2 days.","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"danielonges"},"content":"8. ### Toggle the status of a Task: *done*","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"danielonges"},"content":"  * Toggles the status of a task.","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"austenjs"},"content":"  * Format: `done INDEX`","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"danielonges"},"content":"    1. Index to be inserted must be positive, and","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":136,"author":{"gitId":"danielonges"},"content":"    2. Index must be available on the list, else an error will be thrown.","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"danielonges"},"content":"      * Example: Task 3 has finished. `done 3` will mark task 3 to be unfinished. If the user types `done 3` again, it will mark task 3 to be finished again.","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"danielonges"},"content":"9. ### Undo the previous command: *undo*","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"  * Undoes the previous command.","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"geraldfan"},"content":"  * Format: `undo`","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"geraldfan"},"content":"    1. Only commands which modify the state of the TaskTracker will be undone","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"geraldfan"},"content":"    2. There must be previous states to undo to","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"danielonges"},"content":"10. ### Redo the previously undone command: *redo*","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"danielonges"},"content":"  * Redoes the previously undone command.","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"geraldfan"},"content":"  * Format: `redo`","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"geraldfan"},"content":"    1. Only commands which modify the state of the TaskTracker will be redone","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"geraldfan"},"content":"    2. There must be an available state to redo to","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"danielonges"},"content":"11. ### Add a task to the daily task list: `doToday`","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"danielonges"},"content":"- Adds the specified task from the regular task list to the daily task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"danielonges"},"content":"- Format: `doToday [-a OR -r] INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"danielonges"},"content":"  1. Flag to add or remove must be specified: `-a` to add a daily task, `-r` to remove a daily task.","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"danielonges"},"content":"  2. For add flag `-a`: Index must be available on the task list else an error will be thrown.","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"danielonges"},"content":"  3. For remove flag `-r`: Index must be available on the daily task list else an error will be thrown.","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"mrweikiat"},"content":"## Acknowledgements","lastModifiedDate":"2021-03-03"},{"lineNumber":168,"author":{"gitId":"mrweikiat"},"content":"1. This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"geraldfan":11,"mrweikiat":21,"danielonges":128,"-":2,"austenjs":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"    archiveName \u003d \u0027semesterconfig.jar\u0027","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"geraldfan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"geraldfan":4,"mrweikiat":1,"danielonges":4,"-":71}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for a modified version of the module\u0027s code standard at","lastModifiedDate":"2016-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://oss-generic.github.io/process/codingstandards/coding-standards-java.html","lastModifiedDate":"2016-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"      \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"      \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"      \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"      \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2021-03-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2021-03-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2021-03-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":311,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2021-03-09"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2021-03-09"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every class, enumeration and interface have a header comment. --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":397,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mrweikiat":4,"-":399}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"## AY2021S2-CS2103-T14-4","lastModifiedDate":"2021-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"### Austen Jeremy Sugiarto","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"\u003cimg src\u003d\"images/austenjs.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"[[github](https://github.com/austenjs)]","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"[[portfolio](team/austenjs.md)]","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"* Component: UI","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"* Administrative: IC for merging PR, User Guide, and About Us","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"### Daniel Ong Ee Shaeon","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"\u003cimg src\u003d\"images/danielonges.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"[[github](http://github.com/danielonges)]","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"[[portfolio](team/danielonges.md)]","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"* Component: Logic","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"* Administrative: IC for readme and Developer Guide","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"### Fan Horng Wei, Gerald","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"\u003cimg src\u003d\"images/geraldfan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"[[github](http://github.com/geraldfan)]","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"[[portfolio](team/geraldfan.md)]","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"* Component: Model","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"* Administrative: IC for Code Quality","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"### Goh Wei Kiat","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"\u003cimg src\u003d\"images/mrweikiat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"[[github](http://github.com/mrweikiat)]","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"[[portfolio](team/mrweikiat.md)]","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"* Component: Storage","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"* Administrative: IC for testing","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"### Kong Jun Yin","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"\u003cimg src\u003d\"images/oheyesee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"[[github](http://github.com/oheyesee)]","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"* Component: -","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"* Administrative: -","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"geraldfan":6,"mrweikiat":3,"danielonges":1,"-":28,"austenjs":20}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2021S2-CS2103-T14-4/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2021S2-CS2103-T14-4/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"* defines its *API* in an `interface` with the same `Name` as the Component.","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"![Architecture Sequence Diagram](images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103-T14-4/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `TaskListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"There are 2 `TaskListPanel`, one for All tasks and another for Daily tasks.","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2021S2-CS2103-T14-4/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103-T14-4/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103-T14-4/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"geraldfan"},"content":"1. `Logic` uses the `TaskTrackerParser` class to parse the user command.","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommand` and `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-04-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"**API** : [`Model.java`](https://github.com/AY2021S2-CS2103-T14-4/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"* stores a `UserPrefs` object that represents the user’s preferences.","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"geraldfan"},"content":"* stores the task tracker data.","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"* exposes an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"geraldfan"},"content":"  the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"geraldfan"},"content":"* contains DeadlineDate, DeadlineTime, ModuleCode, Remark, Status, TaskName, Weightage classes which serve as","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"geraldfan"},"content":"  attributes of the Task class","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"geraldfan"},"content":"* Tasks stored have to be unique","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103-T14-4/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"* can save `UserPrefs` objects in json format and read it back.","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":"* can save the task tracker data in json format and read it back.","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"danielonges"},"content":"### Sorting Feature","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"danielonges"},"content":"The proposed sorting feature allows a user to sort the `TaskTracker` according to specified flags. This feature makes use of  `SortingFlag` which indicates the attribute by which `Task`s are to be sorted by. Currently, this feature supports sorting by the following attributes:","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"danielonges"},"content":"1. `dateTime` - Deadline Date \u0026 Time (Chronological order)","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"danielonges"},"content":"2. `taskName` - Task Name (Lexicographical order)","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"3. `moduleCode` - Module Code (Lexicographical order)","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"danielonges"},"content":"4. `priorityTag` - Priority Tag (High -\u003e Medium -\u003e Low)","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"5. `weightage` - Task weightage (descending order: highest weightage first)","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"danielonges"},"content":"The sorting operation is exposed in the `Model` interface as `Model#sortTasks(Comparator)`. The `SortingFlag` determines which type of `Comparator` is to be used for the actual sorting implementation. It is noteworthy to mention that the sorting is performed only on the `UniqueTaskList`  that is displayed on the UI; no actual sorting of JSON data is performed.","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"danielonges"},"content":"Given below is an example usage scenario and how the sorting mechanism behaves at each step.","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"austenjs"},"content":"Step 1. The user launches the application, and it is assumed that there is existing data in the `TaskTracker`. The user executes the command \u003cbr\u003e`sort moduleCode` in order to sort the tasks by module code. The `sort` command creates a new SortingFlag with type `MODULE_CODE`, and creates a `ModuleCodeComparator` to be used for sorting.","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"danielonges"},"content":"Step 2. The `sort` command then calls the `Model#sortTasks(Comparator)`  method, and passes the `ModuleCodeComparator` as a parameter to be used for the sorting.","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"danielonges"},"content":"Step 3. The `Model#sortTasks(Comparator)` method then sorts the `UniqueTaskList`, and the sorted list is then reflected in the UI.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"austenjs"},"content":"![SortSequenceDiagram](images/SortSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":155,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":156,"author":{"gitId":"austenjs"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `SortCommand` \u0026 `SortCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-04-12"},{"lineNumber":157,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":158,"author":{"gitId":"austenjs"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":159,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":160,"author":{"gitId":"austenjs"},"content":"### Time-based alerts","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"austenjs"},"content":"The proposed time-based alert allows a user to filter the tasks in `TaskTracker` to have","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"austenjs"},"content":"deadlines within the specified days or weeks. This feature makes use of `DeadlineDateInRangePredicate`","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"austenjs"},"content":"which filter based on the `DeadlineDate` of the task.","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"austenjs"},"content":"The filtering operation is exposed in the `Model` interface as `Model#updateFilteredTaskList(Predicate)`.","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"austenjs"},"content":"It is noteworthy to mention that the filtering is performed only on the","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"austenjs"},"content":"`UniqueTaskList`  that is displayed on the UI; no actual filtering of JSON data is performed.","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"austenjs"},"content":"Given below is an example usage scenario and how the filtering mechanism behaves at each step.","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"austenjs"},"content":"Step 1. The user launches the application, and it is assumed that there is existing data in","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"austenjs"},"content":"the `TaskTracker`. The user executes the command \u003cbr\u003e`dueIn day/NUMBER_OF_DAYS` in order to filter the","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"austenjs"},"content":"tasks that have `DeadlineDate` within `NUMBER_OF_DAYS` from today. The `dueInCommandParser` creates","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"austenjs"},"content":"a new `DeadlineDateInRangePredicate` with parameter `NUMBER_OF_DAYS` to be used for filtering. The","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"austenjs"},"content":"predicate will be passed on to the `dueIn` command.","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"austenjs"},"content":"Step 2. The `dueIn` command then calls the `Model#updateFilteredTaskList(Predicate)`","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"austenjs"},"content":"method, and passes the `DeadlineDateInRangePredicate` as a parameter to be used for the filtering.","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"austenjs"},"content":"Step 3. The `Model#updateFilteredTaskList(Predicate)` method then filters the `UniqueTaskList`,","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"austenjs"},"content":"and the filtered list is then reflected in the UI.","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"austenjs"},"content":"![DueInSequenceDiagram](images/DueInSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"austenjs"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DueInCommand` \u0026 `DueInCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"austenjs"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"austenjs"},"content":"### Undo/redo feature","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"austenjs"},"content":"The undo/redo mechanism is facilitated by `VersionedTaskTracker`. It extends `TaskTracker` with an undo/redo history, stored internally as an `taskTrackerStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"austenjs"},"content":"* `VersionedTaskTracker#commit()` — Saves the current task tracker state in its history.","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"austenjs"},"content":"* `VersionedTaskTracker#undo()` — Restores the previous task tracker state from its history.","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"austenjs"},"content":"* `VersionedTaskTracker#redo()` — Restores a previously undone task tracker state from its history.","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"geraldfan"},"content":"These operations are exposed in the `Model` interface as `Model#commitTaskTracker()`, `Model#undoTaskTracker()` and `Model#redoTaskTracker()` respectively.","lastModifiedDate":"2021-03-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"austenjs"},"content":"Step 1. The user launches the application for the first time. The `VersionedTaskTracker` will be initialized with the initial task tracker state, and the `currentStatePointer` pointing to that single task tracker state.","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"austenjs"},"content":"Step 2. The user executes `delete 5` command to delete the 5th task in the task tracker. The `delete` command calls `Model#commitTaskTracker()`, causing the modified state of the task tracker after the `delete 5` command executes to be saved in the `taskTrackerStateList`, and the `currentStatePointer` is shifted to the newly inserted task tracker state.","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"austenjs"},"content":"Step 3. The user executes `add tn/PE1 …​` to add a new task. The `add` command also calls `Model#commitTaskTracker()`, causing another modified task tracker state to be saved into the `taskTrackerStateList`.","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"austenjs"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitTaskTracker()`, so the task tracker state will not be saved into the `taskTrackerStateList`.","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"austenjs"},"content":"Step 4. The user now decides that adding the task was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoTaskTracker()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous task tracker state, and restores the task tracker to that state.","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"geraldfan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial TaskTracker state, then there are no previous TaskTracker states to restore. The `undo` command uses `Model#canUndoTaskTracker()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-03-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"austenjs"},"content":"The `redo` command does the opposite — it calls `Model#redoTaskTracker()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the task tracker to that state.","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"austenjs"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `taskTrackerStateList.size() - 1`, pointing to the latest task tracker state, then there are no undone TaskTracker states to restore. The `redo` command uses `Model#canRedoTaskTracker()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"austenjs"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"geraldfan"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitTaskTracker()`, `Model#undoTaskTracker()` or `Model#redoTaskTracker()`. Thus, the `taskTrackerStateList` remains unchanged.","lastModifiedDate":"2021-03-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"austenjs"},"content":"Step 6. The user executes `clear`, which calls `Model#commitTaskTracker()`. Since the `currentStatePointer` is not pointing at the end of the `taskTrackerStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/PE1 …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"danielonges"},"content":"* is a CS student in NUS","lastModifiedDate":"2021-03-03"},{"lineNumber":272,"author":{"gitId":"danielonges"},"content":"* has a need to consolidate and manage deadlines for CS-coded module tasks","lastModifiedDate":"2021-03-03"},{"lineNumber":273,"author":{"gitId":"danielonges"},"content":"* prefer desktop apps over other types of apps","lastModifiedDate":"2021-03-03"},{"lineNumber":274,"author":{"gitId":"danielonges"},"content":"* prefers to use CLI over a GUI","lastModifiedDate":"2021-03-03"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"danielonges"},"content":"* prefers an all-keyboard workflow without needing to use a mouse","lastModifiedDate":"2021-03-03"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"danielonges"},"content":"**Value proposition**:","lastModifiedDate":"2021-03-03"},{"lineNumber":279,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":280,"author":{"gitId":"danielonges"},"content":"- manage upcoming CS assignment deadlines faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-03-03"},{"lineNumber":281,"author":{"gitId":"danielonges"},"content":"- consolidates all CS-coded module tasks into a single place for a CS student to manage and view easily","lastModifiedDate":"2021-03-03"},{"lineNumber":282,"author":{"gitId":"danielonges"},"content":"- allows a CS student to prioritise his/her time by seeing which task deadlines are more pressing","lastModifiedDate":"2021-03-03"},{"lineNumber":283,"author":{"gitId":"danielonges"},"content":"- the app can also remind a CS student about his/her upcoming deadlines so that he/she does not need to remember everything all at once","lastModifiedDate":"2021-03-03"},{"lineNumber":284,"author":{"gitId":"danielonges"},"content":"- easy CLI operation would entice a CS student to use the app, as he/she probably interacts with CLI on a daily basis while coding/doing CS-coded module tasks","lastModifiedDate":"2021-03-03"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"danielonges"},"content":"| `* * *`  | user                                       | add a new CS-coded module task                               | refer to the task in the App |","lastModifiedDate":"2021-03-03"},{"lineNumber":295,"author":{"gitId":"danielonges"},"content":"| `* * *`  | user                                       | delete a task                                                | remove entries that I no longer need                         |","lastModifiedDate":"2021-03-03"},{"lineNumber":296,"author":{"gitId":"mrweikiat"},"content":"| `* * *`  | user                                       | find a task by its moduleName                                      | locate a particular task in order to view its deadline and relevant details |","lastModifiedDate":"2021-03-09"},{"lineNumber":297,"author":{"gitId":"danielonges"},"content":"| `* * *`  | user                                       | add priority tags (low, medium, high)                        | categorise my tasks and know which ones I should work on first |","lastModifiedDate":"2021-03-03"},{"lineNumber":298,"author":{"gitId":"danielonges"},"content":"| `* * *`  | user who has just finished a task | mark a task as done                                          | know which tasks I have completed                            |","lastModifiedDate":"2021-03-03"},{"lineNumber":299,"author":{"gitId":"danielonges"},"content":"| `* *` | user | add notes to a particular task | jot down quick ideas or notes that I have for a particular task |","lastModifiedDate":"2021-03-03"},{"lineNumber":300,"author":{"gitId":"danielonges"},"content":"| `* *` | user with many tasks in the App | sort tasks either by deadlines, module codes, or their priority tags | have different views of the App when I require them |","lastModifiedDate":"2021-03-03"},{"lineNumber":301,"author":{"gitId":"danielonges"},"content":"| `* *` | user | edit task attributes | change the details of a task if the task requirements or details have changed |","lastModifiedDate":"2021-03-03"},{"lineNumber":302,"author":{"gitId":"danielonges"},"content":"| `*` | user with many upcoming deadlines | be reminded of deadlines that are approaching | remember when my tasks are due and work on them |","lastModifiedDate":"2021-03-03"},{"lineNumber":303,"author":{"gitId":"danielonges"},"content":"| `*` | user who just finished their semester | clear the application of all tasks | prepare for the next upcoming semester |","lastModifiedDate":"2021-03-03"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"geraldfan"},"content":"(For all use cases below, the **System** is the `TaskTracker` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-03-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"geraldfan"},"content":"**Use case: Delete a deadline**","lastModifiedDate":"2021-03-03"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"geraldfan"},"content":"1.  User requests to list deadlines","lastModifiedDate":"2021-03-03"},{"lineNumber":316,"author":{"gitId":"geraldfan"},"content":"2.  TaskTracker shows a list of deadlines","lastModifiedDate":"2021-03-09"},{"lineNumber":317,"author":{"gitId":"geraldfan"},"content":"3.  User requests to delete a specific deadline in the list","lastModifiedDate":"2021-03-03"},{"lineNumber":318,"author":{"gitId":"geraldfan"},"content":"4.  TaskTracker deletes the deadline","lastModifiedDate":"2021-03-09"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"geraldfan"},"content":"    * 3a1. TaskTracker shows an error message.","lastModifiedDate":"2021-03-09"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"geraldfan"},"content":"**Use case: Edit a deadline**","lastModifiedDate":"2021-03-03"},{"lineNumber":335,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":336,"author":{"gitId":"geraldfan"},"content":"1. User requests to list deadlines","lastModifiedDate":"2021-03-03"},{"lineNumber":337,"author":{"gitId":"geraldfan"},"content":"2. TaskTracker shows a list of deadlines","lastModifiedDate":"2021-03-09"},{"lineNumber":338,"author":{"gitId":"geraldfan"},"content":"3. User requests to edit a specific deadline in the list","lastModifiedDate":"2021-03-03"},{"lineNumber":339,"author":{"gitId":"geraldfan"},"content":"4. TaskTracker updates the specific deadline in the list","lastModifiedDate":"2021-03-09"},{"lineNumber":340,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":341,"author":{"gitId":"geraldfan"},"content":"    Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":342,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":343,"author":{"gitId":"geraldfan"},"content":"**Extensions**","lastModifiedDate":"2021-03-03"},{"lineNumber":344,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":345,"author":{"gitId":"geraldfan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-03"},{"lineNumber":346,"author":{"gitId":"geraldfan"},"content":"    Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":347,"author":{"gitId":"geraldfan"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2021-03-03"},{"lineNumber":348,"author":{"gitId":"geraldfan"},"content":"    * 3a1. TaskTracker shows an error message.","lastModifiedDate":"2021-03-09"},{"lineNumber":349,"author":{"gitId":"geraldfan"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2021-03-03"},{"lineNumber":350,"author":{"gitId":"geraldfan"},"content":"* 3b. Optional fields are not provided","lastModifiedDate":"2021-03-03"},{"lineNumber":351,"author":{"gitId":"geraldfan"},"content":"    * 3b1. TaskTracker shows an error message","lastModifiedDate":"2021-03-09"},{"lineNumber":352,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":353,"author":{"gitId":"geraldfan"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2021-03-03"},{"lineNumber":354,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":355,"author":{"gitId":"geraldfan"},"content":"**Use case: Setting a priority tag**","lastModifiedDate":"2021-03-03"},{"lineNumber":356,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":357,"author":{"gitId":"geraldfan"},"content":"1. User requests to list deadlines","lastModifiedDate":"2021-03-03"},{"lineNumber":358,"author":{"gitId":"geraldfan"},"content":"2. TaskTracker shows a list of deadlines**","lastModifiedDate":"2021-03-09"},{"lineNumber":359,"author":{"gitId":"geraldfan"},"content":"3. User requests to set a priority tag on a specific deadline in the list","lastModifiedDate":"2021-03-03"},{"lineNumber":360,"author":{"gitId":"geraldfan"},"content":"4. TaskTracker sets a priority tag to the specific deadline in the list","lastModifiedDate":"2021-03-09"},{"lineNumber":361,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":362,"author":{"gitId":"geraldfan"},"content":"**Extensions**","lastModifiedDate":"2021-03-03"},{"lineNumber":363,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":364,"author":{"gitId":"geraldfan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-03"},{"lineNumber":365,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":366,"author":{"gitId":"geraldfan"},"content":"    Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":367,"author":{"gitId":"geraldfan"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2021-03-03"},{"lineNumber":368,"author":{"gitId":"geraldfan"},"content":"    * 3a1. TaskTracker shows an error message","lastModifiedDate":"2021-03-09"},{"lineNumber":369,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":370,"author":{"gitId":"geraldfan"},"content":"      Use case resumes at step 2","lastModifiedDate":"2021-03-03"},{"lineNumber":371,"author":{"gitId":"geraldfan"},"content":"* 3b. The given priority tag is invalid","lastModifiedDate":"2021-03-03"},{"lineNumber":372,"author":{"gitId":"geraldfan"},"content":"    * 3b1. TaskTracker shows an error message","lastModifiedDate":"2021-03-09"},{"lineNumber":373,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":374,"author":{"gitId":"geraldfan"},"content":"        Use case resumes at step 2","lastModifiedDate":"2021-03-03"},{"lineNumber":375,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":376,"author":{"gitId":"geraldfan"},"content":"**Use case: Adding notes to a deadline**","lastModifiedDate":"2021-03-03"},{"lineNumber":377,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":378,"author":{"gitId":"geraldfan"},"content":"1. User requests to list deadlines","lastModifiedDate":"2021-03-03"},{"lineNumber":379,"author":{"gitId":"geraldfan"},"content":"2. TaskTracker shows a list of deadlines**","lastModifiedDate":"2021-03-09"},{"lineNumber":380,"author":{"gitId":"geraldfan"},"content":"3. User requests to add a note to a specific deadline in the list","lastModifiedDate":"2021-03-03"},{"lineNumber":381,"author":{"gitId":"geraldfan"},"content":"4. TaskTracker adds a note to the specific deadline in the list","lastModifiedDate":"2021-03-09"},{"lineNumber":382,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":383,"author":{"gitId":"geraldfan"},"content":"**Extensions**","lastModifiedDate":"2021-03-03"},{"lineNumber":384,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":385,"author":{"gitId":"geraldfan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-03"},{"lineNumber":386,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":387,"author":{"gitId":"geraldfan"},"content":"    Use case ends","lastModifiedDate":"2021-03-03"},{"lineNumber":388,"author":{"gitId":"austenjs"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2021-03-12"},{"lineNumber":389,"author":{"gitId":"geraldfan"},"content":"    * 3a1. TaskTracker shows an error message","lastModifiedDate":"2021-03-09"},{"lineNumber":390,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":391,"author":{"gitId":"geraldfan"},"content":"        Use case resumes at step 2","lastModifiedDate":"2021-03-03"},{"lineNumber":392,"author":{"gitId":"geraldfan"},"content":"* 3b. The deadline has existing notes","lastModifiedDate":"2021-03-03"},{"lineNumber":393,"author":{"gitId":"geraldfan"},"content":"    * 3b1. TaskTracker requests for confirmation to overwrite previous notes","lastModifiedDate":"2021-03-09"},{"lineNumber":394,"author":{"gitId":"geraldfan"},"content":"    * 3b2. User confirms the request to overwrite previous notes","lastModifiedDate":"2021-03-03"},{"lineNumber":395,"author":{"gitId":"geraldfan"},"content":"    * 3b3. TaskTracker overwrites the previous notes with a new note","lastModifiedDate":"2021-03-09"},{"lineNumber":396,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":397,"author":{"gitId":"geraldfan"},"content":"        Use case ends","lastModifiedDate":"2021-03-03"},{"lineNumber":398,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":399,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":400,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":401,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":402,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"austenjs"},"content":"2.  The software should be portable. So moving from one OS to other OS does not create any problem.","lastModifiedDate":"2021-03-02"},{"lineNumber":408,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"austenjs"},"content":"4.  The response to any use action should become visible within 2 seconds.","lastModifiedDate":"2021-03-02"},{"lineNumber":410,"author":{"gitId":"austenjs"},"content":"5.  The source code should be open source.","lastModifiedDate":"2021-03-02"},{"lineNumber":411,"author":{"gitId":"austenjs"},"content":"6.  An application should be able to have up to 1000 deadlines.","lastModifiedDate":"2021-03-02"},{"lineNumber":412,"author":{"gitId":"austenjs"},"content":"7.  The user interface should be intuitive enough for users who are not IT-savvy.","lastModifiedDate":"2021-03-02"},{"lineNumber":413,"author":{"gitId":"austenjs"},"content":"8.  The product is free.","lastModifiedDate":"2021-03-02"},{"lineNumber":414,"author":{"gitId":"austenjs"},"content":"9.  The system should work on both `32-bit` and `64-bit` environments.","lastModifiedDate":"2021-03-02"},{"lineNumber":415,"author":{"gitId":"austenjs"},"content":"10. The deadline should not contain tasks deemed offensive (terrorism, bombing, etc).","lastModifiedDate":"2021-03-02"},{"lineNumber":416,"author":{"gitId":"austenjs"},"content":"11. The application can be used **without** internet.","lastModifiedDate":"2021-03-02"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"danielonges"},"content":"* **CS:** Computer Science","lastModifiedDate":"2021-03-03"},{"lineNumber":421,"author":{"gitId":"danielonges"},"content":"* **CS-coded module tasks:** Assignments, Quizzes, Projects, and other tasks related to CS-coded modules provided by NUS School of Computing that have deadlines for submission","lastModifiedDate":"2021-03-03"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"geraldfan":84,"mrweikiat":2,"danielonges":42,"-":278,"austenjs":70}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"layout: page title: User Guide","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"`semester.config` is a **desktop app for managing tasks, optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, `semester.config` can get","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"1. [Quick start](#quick-start)","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"2. [Features](#features)","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"3. [FAQ](#faq)","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"4. [Command Summary](#command-summary)","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"1. Download the latest `semesterconfig.jar` from [here](https://github.com/AY2021S2-CS2103-T14-4/tp/releases).","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your `semester.config`.","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"   ![Ui](images/v1.3.1_Ui.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    * **`list`** : Lists all tasks.","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"    * **`delete`**`3` : Deletes the 3rd task shown in the current list.","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"    * **`clear`** : Deletes all tasks.","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/CS2103 Assignment`.","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"  e.g `n/NAME [pt/TAG]` can be used as `n/CS2103 Assignment pt/core` or as `n/CS2103 Assignment`.","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"* Items with `…` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"  e.g. `[pt/TAG]…` can be used as  `(i.e. 0 times)` OR `pt/core`OR `pt/difficult pt/SUable` etc.","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"  e.g. if the command specifies `n/TASK_NAME mc/MODULE_CODE`, `mc/MODULE_CODE n/TASK_NAME` is also acceptable.","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"  e.g. if you specify `mc/CS2103 mc/CS2105`, only `mc/CS2105` will be taken.","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list`, `exit` and `clear`)","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"  will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"* All available inputs of priority tags are `LOW/MEDIUM/HIGH`. The application only accept these inputs as valid inputs and will throw an error if other inputs are entered","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"geraldfan"},"content":"* The module code parameter only takes in uppercase CS module codes.","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"  e.g. `mc/CS2103` will be accepted but `mc/cs2103` will throw an error.","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"### Prefixes for `add` and `edit` commands","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"This table outlines all the available prefixes that can be used for the `add` and `edit` commands.","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"| Prefix   | Name          | Applicable Commands | Input types                                                  | Example Usage        |","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"| -------- | ------------- | ------------------- | ------------------------------------------------------------ | -------------------- |","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"| `n/`     | Task Name     | `add`, `edit`       | Any non-empty name                                           | `n/Assignment 2`     |","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"| `mc/`    | Module Code   | `add`, `edit`       | Only CS coded modules (suffix letters are allowed)           | `mc/CS2103`          |","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"| `d/`     | Deadline Date | `add`, `edit`       | Date in DD-MM-YYYY format                                    | `d/10-10-2021`       |","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"| `t/`     | Deadline Time | `add`, `edit`       | Time in HH:MM format                                         | `t/18:00`            |","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"| `w/`     | Weightage     | `add`, `edit`       | Positive integer percentage from 0 (inclusive) to 100 (inclusive) | `w/25%`              |","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"| `pt/`    | Tags          | `add`, `edit`       | Any non-empty tag                                            | `pt/core mod`        |","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"danielonges"},"content":"| `ptag/`  | Priority Tag  | `add`, `edit`       | either one of `LOW`, `MEDIUM` or `HIGH`                      | `ptag/HIGH`          |","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"| `notes/` | Notes         | `edit`              | Any note                                                     | `notes/Hello World!` |","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"### Add a task: `add`","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"Add a task to the list.","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"Format: `add mc/MODULE_CODE n/TASK_NAME d/DEADLINE_DATE t/DEADLINE_TIME w/WEIGHTAGE [ptag/PRIORITY_TAG] [pt/TAGS]...`","lastModifiedDate":"2021-04-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"- Weightage value provided must be a positive integer percentage between `0%` to `100%`, e.g. `w/10%`","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"danielonges"},"content":"Example:","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"* `add mc/CS3243 n/Project 1 d/15-04-2021 t/10:00 w/10%` will add this task to the list","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"danielonges"},"content":"* Priority tag of a task will be set to `LOW` by default if there are not inputs","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"danielonges"},"content":"* Note that the order of inputs does not matter, for e.g. there is no difference between entering `add mc/CS3243 n/Project 1` and `add n/Project 1 mc/CS3243` .","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"danielonges"},"content":"### Edit a task: `edit`","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"danielonges"},"content":"Edits an existing task in the application","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"danielonges"},"content":"Format: `edit INDEX [n/TASK_NAME] [mc/MODULE_CODE] [d/DEADLINE_DATE]","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"danielonges"},"content":"[t/DEADLINE_TIME] [w/WEIGHTAGE] [notes/NOTES] [pt/TAG] [ptag/PRIORITY_TAG]`","lastModifiedDate":"2021-04-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"* Edits the task at the specified index","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"* The index must be a positive integer 1,2,3,...","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"danielonges"},"content":"* The index must be on the list else an error will be thrown","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"danielonges"},"content":"* At least one of the optional fields must be provided","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"* Existing values will be updated to the input values","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"danielonges"},"content":"* Weightage value provided must be a positive integer percentage between `0%` to `100%`, e.g. `w/10%`","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"danielonges"},"content":"* Note that the order of inputs does not matter, for e.g. there is no difference between entering `edit 1 mc/CS3243 n/Project 1` and `edit 1 n/Project 1 mc/CS3243` .","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"danielonges"},"content":"* `edit 1 n/Lecture Quiz mc/CS2103` edits the task name and module code of the task at index 1 to be “Lecture Quiz”","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"danielonges"},"content":"  and “CS2103” respectively.","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"danielonges"},"content":"* `edit 2 d/15-04-2021 notes/Open Book` edits the date and notes of the task at index 2 to be “15 April 2021” and “Open","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"danielonges"},"content":"  Book” respectively.","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"danielonges"},"content":"* `edit 3 n/Finals ptag/HIGH` edits the task name and priority tag of the task at index 3 to be \"Finals\" and \"HIGH\" respectively.","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"danielonges"},"content":"### Add notes to a task `notes`","lastModifiedDate":"2021-04-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":131,"author":{"gitId":"danielonges"},"content":"Adds/edits notes for a task at the specified index under All Tasks.","lastModifiedDate":"2021-04-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":133,"author":{"gitId":"danielonges"},"content":"Format: `notes INDEX notes/NOTES`","lastModifiedDate":"2021-04-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":135,"author":{"gitId":"danielonges"},"content":"- Index to be inserted must be positive, and","lastModifiedDate":"2021-04-11"},{"lineNumber":136,"author":{"gitId":"danielonges"},"content":"- Index must be available on the All Tasks list else an error will be thrown.","lastModifiedDate":"2021-04-11"},{"lineNumber":137,"author":{"gitId":"danielonges"},"content":"- If there are currently no notes associated with the task, then it adds notes to that current task.","lastModifiedDate":"2021-04-11"},{"lineNumber":138,"author":{"gitId":"danielonges"},"content":"- If there are existing notes for the task, the existing notes will be *overwritten* by the new notes.","lastModifiedDate":"2021-04-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"Example:","lastModifiedDate":"2021-04-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"- Assume that the first task on the All task list has no existing notes. `notes 1 notes/Hello World!` will add the note `Hello World!` to that task.","lastModifiedDate":"2021-04-11"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"- Assume that the second task on the All task list has an existing note `I love Python`. `notes 2 notes/I love Java` will replace the existing note `I love Python` with the new note `I love Java` for that task.","lastModifiedDate":"2021-04-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":145,"author":{"gitId":"danielonges"},"content":"### Delete a task: `delete`","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"mrweikiat"},"content":"Deletes the task at the specified index under All Tasks","lastModifiedDate":"2021-04-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"austenjs"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"austenjs"},"content":"* Index to be inserted must be positive, and","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"* Index must be available on the All Tasks list else an error will be thrown","lastModifiedDate":"2021-04-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"austenjs"},"content":"Example:","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":"* `delete 3` will delete the 3rd task on the list of All Tasks","lastModifiedDate":"2021-04-08"},{"lineNumber":157,"author":{"gitId":"danielonges"},"content":"* Using `list` to show all tasks, the user wants to delete the 2nd task. User use command `delete 2` to delete","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"danielonges"},"content":"  the 2nd task from the list.","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":160,"author":{"gitId":"danielonges"},"content":"### Locating tasks by taskName: `find`","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"danielonges"},"content":"Find tasks whose taskName contains any of the given keywords.","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"austenjs"},"content":"Format: `find KEYWORD...`","lastModifiedDate":"2021-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"austenjs"},"content":"* The search is case-insensitive. e.g “Assignment” will match “assignment”","lastModifiedDate":"2021-03-02"},{"lineNumber":167,"author":{"gitId":"danielonges"},"content":"* The order of the keywords does not matter. e.g. “programming modular” will match \"modular programming”","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"danielonges"},"content":"* Only the task\u0027s taskName is searched.","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"austenjs"},"content":"* Only full words will be matched e.g. “Java” will not match “Javascript”","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"geraldfan"},"content":"* Persons matching at least one keyword will be returned (i.e. OR search). e.g. “SQL Python” will return “SQL Quiz,","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"geraldfan"},"content":"  Python Assignment”","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"mrweikiat"},"content":"* Searching allows multiple keywords e.g: \"Final Assignment\" will match with \"Final Assignment part 1\" and \"Final Assignment part 2\". Use of multiple search keys must be delimited by space. Using example above. \"FinalAssignment\" will not match \"Final Assignment part 1\".","lastModifiedDate":"2021-04-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"austenjs"},"content":"* `find C++` will return `C++ project` and `C++ graded quiz`","lastModifiedDate":"2021-03-02"},{"lineNumber":177,"author":{"gitId":"austenjs"},"content":"* `find assignment` exam will return `Final Assignment, Midterm exam`","lastModifiedDate":"2021-03-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"danielonges"},"content":"### List all tasks: `list`","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"danielonges"},"content":"List out all tasks (might be unsorted)","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"austenjs"},"content":"Format: `list`","lastModifiedDate":"2021-03-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"austenjs"},"content":"### Toggle the status of a task: `done`","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"danielonges"},"content":"Toggle the status of a task from finished to unfinished or from unfinished to finished.","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"austenjs"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"mrweikiat"},"content":"* The index refers to the index number shown in the displayed All Tasks list.","lastModifiedDate":"2021-04-08"},{"lineNumber":192,"author":{"gitId":"austenjs"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-03-02"},{"lineNumber":193,"author":{"gitId":"austenjs"},"content":"* Index must be available on the list else an error will be thrown","lastModifiedDate":"2021-03-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"austenjs"},"content":"Example:","lastModifiedDate":"2021-03-02"},{"lineNumber":196,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"geraldfan"},"content":"* Task 3 has finished. `done 3` will mark task 3 to be unfinished. If the user type `done 3` again, it will mark task 3","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"geraldfan"},"content":"  to be finished again.","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"austenjs"},"content":"* Task 1 hasn\u0027t finished. `done 1` will mark task 1 to be finished.","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"danielonges"},"content":"### Sort tasks: `sort`","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"danielonges"},"content":"Sorts tasks according to the specified parameter.","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"danielonges"},"content":"Format: `sort [dateTime OR taskName OR moduleCode OR priorityTag OR weightage]`","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"danielonges"},"content":"* Tasks can be sorted according to these five parameters: date \u0026 time `dateTime`, module code `moduleCode`,","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"geraldfan"},"content":"  priority tag `priorityTag`, weightage `weightage`, and task name `taskName`.","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"danielonges"},"content":"* If no arguments are given, an error will be thrown.","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"danielonges"},"content":"* For date \u0026 time, the tasks will be sorted in chronological order, with the earliest deadline placed first.","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"danielonges"},"content":"* For module code, the tasks will be sorted according to the lexicographical ordering of the module codes.","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"danielonges"},"content":"* For priority tag, the tasks will be sorted according to this order: HIGH \u003e MEDIUM \u003e LOW. Tasks with higher priority will then be shown at the top of the list.","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"danielonges"},"content":"* For weightage, the tasks will be sorted in a descending order, starting from the heaviest weightage.","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"danielonges"},"content":"* For task name, the tasks will be sorted according to the lexicographical order of the task names.","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"austenjs"},"content":"### Clear Application: `clear`","lastModifiedDate":"2021-03-02"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"danielonges"},"content":"Clears all tasks from the application.","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"mrweikiat"},"content":"### Exit Application `exit`","lastModifiedDate":"2021-04-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":224,"author":{"gitId":"mrweikiat"},"content":"Exit from semester.config, changes will be saved","lastModifiedDate":"2021-04-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-04-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":228,"author":{"gitId":"austenjs"},"content":"### Show tasks that due soon: `dueIn`","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"austenjs"},"content":"Show tasks that are due within the days/weeks specified by the user (if any).","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"danielonges"},"content":"Format: `dueIn [day/NUMBER_OF_DAYS OR week/NUMBER_OF_WEEKS]`","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"danielonges"},"content":"* If no parameters given, tasks shown will be tasks that will be due by **next week**.","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"austenjs"},"content":"* `NUMBER_OF_DAYS` \u0026 `NUMBER_OF_WEEKS` must be a positive integer","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"danielonges"},"content":"* If both `day/` \u0026 `week/` are given, an error will be thrown.","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"danielonges"},"content":"* Tasks shown are tasks with deadlines starting from today\u0027s date.","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"austenjs"},"content":"* The limit for dueIn is until 31-12-2099.","lastModifiedDate":"2021-04-08"},{"lineNumber":239,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":240,"author":{"gitId":"austenjs"},"content":"Example:","lastModifiedDate":"2021-03-02"},{"lineNumber":241,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"danielonges"},"content":"* Task 1\u0027s task is 10 March 2020. Task 2\u0027s task is 11 March 2020. Today is 3 March 2020. `dueIn`, `dueIn day/7`,","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"geraldfan"},"content":"  and `dueIn week/1` will lists task 1 on the list.","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"danielonges"},"content":"### Add or remove a task to the daily task list: `doToday`","lastModifiedDate":"2021-04-11"},{"lineNumber":246,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"danielonges"},"content":"Adds the specified task from the regular task list to the daily task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":248,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"danielonges"},"content":"Format: `doToday [-a OR -r] INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"danielonges"},"content":"- Flag to add or remove must be specified: `-a` to add a daily task, `-r` to remove a daily task.","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"danielonges"},"content":"- For add flag `-a`: Index must be available on the task list else an error will be thrown.","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"danielonges"},"content":"- For remove flag `-r`: Index must be available on the daily task list else an error will be thrown.","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"danielonges"},"content":"- Note: the daily task list only exists within the session. Once the user quits the application, no data from the daily task list will be saved, and the next time the user opens the application, the daily task list will be empty.","lastModifiedDate":"2021-04-11"},{"lineNumber":255,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"geraldfan"},"content":"### Undo last command: `undo`","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"geraldfan"},"content":"Undoes the last command that modified the application state","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"geraldfan"},"content":"Format: `undo`","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"geraldfan"},"content":"* If there are no older states for the application to undo to, an error will be thrown.","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"geraldfan"},"content":"* Only commands that modify the application\u0027s state can be undone i.e. add, delete, clear etc.","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"geraldfan"},"content":"### Redo last command: `redo`","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"geraldfan"},"content":"Redoes the last command that modified the application state","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"geraldfan"},"content":"Format: `redo`","lastModifiedDate":"2021-03-30"},{"lineNumber":270,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":271,"author":{"gitId":"geraldfan"},"content":"* If there are no newer states for the application to redo to, an error will be thrown.","lastModifiedDate":"2021-03-30"},{"lineNumber":272,"author":{"gitId":"geraldfan"},"content":"* Only commands that modify the application\u0027s state can be undone i.e. add, delete, clear etc.","lastModifiedDate":"2021-03-30"},{"lineNumber":273,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"geraldfan"},"content":"`semester.config` data are saved in the hard disk automatically after any command that changes the data. There is no","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"geraldfan"},"content":"need to save manually.","lastModifiedDate":"2021-03-30"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":281,"author":{"gitId":"geraldfan"},"content":"`semester.config` data are saved as a JSON file `[JAR file location]/data/semesterconfig.json`. Advanced users are","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"geraldfan"},"content":"welcome to update data directly by editing that data file.","lastModifiedDate":"2021-03-30"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":284,"author":{"gitId":"austenjs"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e\u003cb\u003e:exclamation: Caution\u003c/b\u003e If your changes to the data file makes its format invalid, semester.config will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"geraldfan"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"geraldfan"},"content":"the data of your previous `semester.config` home folder.","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"danielonges"},"content":"**add** | `add mc/MODULE_CODE n/TASK_NAME d/DEADLINE_DATE t/DEADLINE_TIME w/WEIGHTAGE [pt/TAGS] [ptag/PRIORITY_TAG]` \u003cbr\u003e e.g, `add mc/CS1010 n/Practical Exam d/12-12-2020 t/10:10 w/10%`","lastModifiedDate":"2021-03-31"},{"lineNumber":302,"author":{"gitId":"austenjs"},"content":" **delete**  | `delete INDEX` \u003cbr\u003e e.g, `delete 3` `delete 1`","lastModifiedDate":"2021-03-26"},{"lineNumber":303,"author":{"gitId":"austenjs"},"content":"**find** | `find KEYWORD ...` \u003cbr\u003e e.g, `find Database` `find Software`","lastModifiedDate":"2021-03-02"},{"lineNumber":304,"author":{"gitId":"austenjs"},"content":"**list** | `list`","lastModifiedDate":"2021-03-02"},{"lineNumber":305,"author":{"gitId":"austenjs"},"content":"**done** | `done INDEX` \u003cbr\u003e e.g, `done 1`","lastModifiedDate":"2021-03-26"},{"lineNumber":306,"author":{"gitId":"danielonges"},"content":"**sort** | `sort [dateTime OR taskName OR moduleCode OR priorityTag OR weightage]` \u003cbr\u003e e.g, `sort dateTime` `sort moduleCode`","lastModifiedDate":"2021-03-31"},{"lineNumber":307,"author":{"gitId":"danielonges"},"content":"**notes** | `notes INDEX notes/NOTES` \u003cbr\u003e e.g, `notes 4 notes/Assignment must be handwritten`","lastModifiedDate":"2021-03-31"},{"lineNumber":308,"author":{"gitId":"danielonges"},"content":"**edit** | `edit INDEX [n/TASK NAME] [mc/MODULE CODE] [d/DEADLINE_DATE] [t/DEADLINE_TIME] [notes/NOTES] [ptag/PRIORITY_TAG]` \u003cbr\u003e e.g, `edit 2 n/Assignment 7`","lastModifiedDate":"2021-03-31"},{"lineNumber":309,"author":{"gitId":"austenjs"},"content":"**clear** |`clear`","lastModifiedDate":"2021-03-02"},{"lineNumber":310,"author":{"gitId":"danielonges"},"content":"**dueIn** | `dueIn [day/NUMBER_OF_DAYS OR week/NUMBER_OF_WEEKS]` \u003cbr\u003e e.g, `dueIn`  `dueIn day/10` `dueIn week/2`","lastModifiedDate":"2021-03-31"},{"lineNumber":311,"author":{"gitId":"danielonges"},"content":"**doToday** | `doToday [-a OR -r] INDEX` \u003cbr\u003ee.g, `doToday -a 2` `doToday -r 2`","lastModifiedDate":"2021-03-31"},{"lineNumber":312,"author":{"gitId":"geraldfan"},"content":"**undo** | `undo`","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"geraldfan"},"content":"**redo** | `redo`","lastModifiedDate":"2021-03-30"},{"lineNumber":314,"author":{"gitId":"mrweikiat"},"content":"**exit** | `exit`","lastModifiedDate":"2021-04-08"},{"lineNumber":315,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":316,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":317,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"geraldfan":51,"mrweikiat":11,"danielonges":99,"-":117,"austenjs":39}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"mrweikiat"},"content":"  * Replaces the top navigation menu with the project moduleName when printing","lastModifiedDate":"2021-03-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    content: \"AB-3\";","lastModifiedDate":"2021-01-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"mrweikiat":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteTask(t)","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveTaskTracker(TaskTracker)","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":36,"austenjs":2}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"TaskTracker *-right-\u003e \"1\" UniqueTaskList","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"TaskTracker *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"UniqueTagList -[hidden]down- UniqueTaskList","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"UniqueTagList -[hidden]down- UniqueTaskList","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"UniqueTaskList o-right-\u003e Task","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"Task -up-\u003e \"*\" Tag","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"Task *--\u003e TaskName","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"Task *--\u003e ModuleCode","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"Task *--\u003e DeadlineDate","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"Task *--\u003e DeadlineTime","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"Task *--\u003e Notes","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"Task *--\u003e Status","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"Task *--\u003e Weightage","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":11,"austenjs":14}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"if () then ([command commits TaskTracker])","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    :Save TaskTracker to","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    taskTrackerStateList;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"austenjs":3}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"participant \":TaskTrackerParser\" as TaskTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"LogicManager -\u003e TaskTrackerParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"activate TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"DeleteCommandParser --\u003e TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"DeleteCommandParser --\u003e TaskTrackerParser : d","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"DeleteCommandParser -[hidden]-\u003e TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser --\u003e LogicManager : d","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"deactivate TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"DeleteCommand -\u003e Model : deleteTask(1)","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"destroy DeleteCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":55,"austenjs":13}},{"path":"docs/diagrams/DueInSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"!include style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"participant \":TaskTrackerParser\" as TaskTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"participant \":DueInCommandParser\" as DueInCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"participant \"pred:DeadlineDateInRagePredicate\" as DeadlineDateInRagePredicate LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"participant \"cmd:DueInCommand\" as DueInCommand LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"[-\u003e LogicManager : execute(\"dueIn day/NUMBER_OF_DAYS\")","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"activate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"LogicManager -\u003e TaskTrackerParser : parseCommand(\"dueIn day/NUMBER_OF_DAYS\")","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"activate TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"create DueInCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser -\u003e DueInCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"activate DueInCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"DueInCommandParser --\u003e TaskTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"deactivate DueInCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser -\u003e DueInCommandParser : parse(\"day/NUMBER_OF_DAYS\")","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"activate DueInCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"create DeadlineDateInRagePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"DueInCommandParser -\u003e DeadlineDateInRagePredicate : NUMBER_OF_DAYS","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"activate DeadlineDateInRagePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"DeadlineDateInRagePredicate --\u003e DueInCommandParser : pred","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"deactivate DeadlineDateInRagePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"create DueInCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"DueInCommandParser -\u003e DueInCommand : pred","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"activate DueInCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"DueInCommand --\u003e DueInCommandParser : cmd","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"deactivate DueInCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"DueInCommandParser --\u003e TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"destroy DueInCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser --\u003e LogicManager : cmd","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"deactivate TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"LogicManager -\u003e DueInCommand : execute()","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"activate DueInCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"DueInCommand -\u003e ModelManager : updateFilteredTaskList(pred)","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"activate ModelManager","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"ModelManager --\u003e DueInCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"deactivate ModelManager","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"DueInCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"CommandResult --\u003e DueInCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"DueInCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"destroy DueInCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"austenjs":69}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"Class TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"LogicManager --\u003e\"1\" TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":59,"austenjs":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"Interface ReadOnlyTaskTracker \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"Class TaskTracker","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"Class ReadOnlyTaskTracker","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"Class VersionedTaskTracker","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"Package Task {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"Class Task","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"Class DeadlineDate","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"Class DeadlineTime","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"Class TaskName","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"Class ModuleCode","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"Class UniqueTaskList","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"Class Notes","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"Class Status","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"Class Weightage","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"Class PriorityTag","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"TaskTracker .up.|\u003e ReadOnlyTaskTracker","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"ModelManager o--\u003e \"1\" TaskTracker","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"ModelManager o--\u003e \"1\" VersionedTaskTracker","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"VersionedTaskTracker --|\u003e TaskTracker","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"TaskTracker *--\u003e \"2\" UniqueTaskList","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"UniqueTaskList o--\u003e \"*\" Task","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"Task *--\u003e \"1\" TaskName","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"Task *--\u003e \"1\" ModuleCode","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"Task *--\u003e \"1\" DeadlineTime","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"Task *--\u003e \"1\" DeadlineDate","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"Task *--\u003e \"1\" Notes","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"Task *--\u003e \"1\" Status","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"Task *--\u003e \"1\" Weightage","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"Task *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"Task *--\u003e \"1\" PriorityTag","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"TaskName -[hidden]right-\u003e ModuleCode","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"ModuleCode -[hidden]right-\u003e DeadlineDate","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"DeadlineDate -[hidden]right-\u003e DeadlineTime","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"DeadlineTime -[hidden]right-\u003e Notes","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"Notes -[hidden]right-\u003e Status","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"Status -[hidden]right-\u003e Weightage","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"Tag -[hidden]right-\u003e PriorityTag","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"ModelManager -----\u003e Task : \" ~* filtered list\"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":33,"austenjs":38}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"participant \":TaskTrackerParser\" as TaskTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"participant \"flag:SortingFlag\" as SortingFlag LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"participant \"cmd:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"participant \"comparator:ModuleCodeComparator\" as ModuleCodeComparator LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"[-\u003e LogicManager : execute(\"sort moduleCode\")","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"activate LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"LogicManager -\u003e TaskTrackerParser : parseCommand(\"sort moduleCode\")","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"activate TaskTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"create SortCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser -\u003e SortCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"activate SortCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"SortCommandParser --\u003e TaskTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"deactivate SortCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser -\u003e SortCommandParser : parse(\"moduleCode\")","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"activate SortCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"create SortingFlag","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"SortCommandParser -\u003e SortingFlag : moduleCode","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"activate SortingFlag","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"SortingFlag --\u003e SortCommandParser : moduleCodeFlag","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"deactivate SortingFlag","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"create SortCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"SortCommandParser -\u003e SortCommand : moduleCodeFlag","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"activate SortCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"create ModuleCodeComparator","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"SortCommand -\u003e ModuleCodeComparator","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"activate ModuleCodeComparator","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"ModuleCodeComparator -\u003e SortCommand : comparator","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"deactivate ModuleCodeComparator","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"SortCommand --\u003e SortCommandParser : cmd","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"deactivate SortCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"SortCommandParser --\u003e TaskTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"destroy SortCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser --\u003e LogicManager : cmd","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"deactivate TaskTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"LogicManager -\u003e SortCommand : execute()","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"activate SortCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"SortCommand -\u003e ModelManager : sortTasks(comparator)","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"activate ModelManager","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"ModelManager --\u003e SortCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"deactivate ModelManager","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"SortCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"CommandResult --\u003e SortCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"destroy SortCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"austenjs":74}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"Interface TaskTrackerStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"Class JsonTaskTrackerStorage","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"StorageManager o--\u003e TaskTrackerStorage","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"JsonTaskTrackerStorage .left.|\u003e TaskTrackerStorage","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"JsonTaskTrackerStorage .down.\u003e JsonSerializableTaskTracker","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"JsonSerializableTaskTracker .right.\u003e JsonAdaptedTask","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"JsonAdaptedTask .right.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"austenjs":7}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"Class TaskListPanel","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"Class TaskCard","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"MainWindow --\u003e \"1\" HelpWindow","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"MainWindow *-down-\u003e \"1\" CommandBox","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"MainWindow *-down-\u003e \"2\" TaskListPanel","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"TaskListPanel -down-\u003e \"*\" TaskCard","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"TaskListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":47,"austenjs":13}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"    class State1 as \"__tt0:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    class State2 as \"__tt1:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    class State3 as \"__tt2:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"austenjs":3}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"    class State1 as \"__tt0:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    class State2 as \"__tt1:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    class State3 as \"__tt2:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"austenjs":3}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"    class State1 as \"__tt0:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    class State2 as \"__tt1:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    class State3 as \"__tt2:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"austenjs":3}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"    class State1 as \"__tt0:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    class State2 as \"__tt1:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    class State3 as \"__tt2:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"austenjs":3}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"    class State1 as \"__tt0:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    class State2 as \"__tt1:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    class State3 as \"__tt2:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"austenjs":3}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"    class State1 as \"__tt0:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    class State2 as \"__tt1:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    class State3 as \"__tt3:TaskTracker__\"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"note right on link: State tt2 deleted.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"austenjs":4}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"participant \":TaskTrackerParser\" as TaskTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"participant \":VersionedTaskTracker\" as VersionedTaskTracker MODEL_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"[-\u003e LogicManager : execute(\"undo\")","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"LogicManager -\u003e TaskTrackerParser : parseCommand(\"undo\")","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"activate TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser -\u003e UndoCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"UndoCommand --\u003e TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"TaskTrackerParser --\u003e LogicManager : u","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"deactivate TaskTrackerParser","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"UndoCommand -\u003e Model : undoTaskTracker()","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"Model -\u003e VersionedTaskTracker : undo()","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"activate VersionedTaskTracker","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"VersionedTaskTracker --\u003e Model : PreviousTaskTracker","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"deactivate VersionedTaskTracker","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"Model --\u003e UndoCommand : PreviousTaskTracker","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"UndoCommand --\u003e Model : setTaskTracker(PreviousTaskTracker)","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"activate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"UndoCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"CommandResult --\u003e UndoCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":38,"austenjs":26}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"title: semester.config","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-T14-4/tp/branch/master/graph/badge.svg?token\u003dHhZ0Zvs4ml)](https://codecov.io/gh/AY2021S2-CS2103-T14-4/tp)","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"![Ui](images/v1.3.1_Ui.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"**semester.config is a desktop application for managing your tasks.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"* If you are interested in using `semester.config`, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"* If you are interested about developing `semester.config`, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"mrweikiat":1,"-":12,"austenjs":5}},{"path":"docs/team/austenjs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"**semester.config is a desktop application for managing your tasks.**","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"## Summary Of Contributions","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"### Code Contributed","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"You can see my contribution [here](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003daustenjs\u0026tabRepo\u003dAY2021S2-CS2103-T14-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse).","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"### Enhancements implemented \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"I implemented 3 main features:","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"1. `DeadlineDate`,`DeadlineTime`, and `Status` attributes for Task which will be useful for users;","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"2. `done` command to indicate a task in all tasks list to be done; and,","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"3. `dueIn` command will filter tasks that are due within a certain number of days using `DeadlineDateInRangePredicate`.","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"**Enhancement 1: `DeadlineDate`,`DeadlineTime`, and `Status` attributes** \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"* What it does: Allows the user to add, edit, and sort the Task based on these attributes.","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"* Justification: Most assignments have a submission date and time. `DeadlineDate` and `DeadlineTime`","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"helps to encapsulate these data inside the `Task` class.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"Moreover, the `Status` attribute help to distinguish finished and unfinished tasks.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"* Highlights :","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"The `DeadlineDate` ensures date that are not earlier than today\u0027s date as well as","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"valid date (for instance 29-02-2021 will be rejected) using the help","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"of `java.time.LocalDate`.","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"**Enhancement 2: `done` command** \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"* What it does: Allows the user to toggle the status of `Task` to be finished or unfinished.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"* Justification: If the user wrongly mark a `Task` as done, the toggling effect of `Done` command","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"prevent user of having to use `Edit` command.","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"* Highlights:","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"The toggle of `Status` class use functional programming paradigm(not modifying current object, but rather creating new object) to","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"prevent side effects.","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"**Enhancement 3: `dueIn` command** \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"* What it does: Filters tasks that have deadlines within certain number of days/weeks.","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"* Justification: Some users might want to check what assignments are due within a certain number of days.","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"For instance, in a typical semester, every Monday denotes the beginning of new week and user wanna","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"check the upcoming deadlines for this week.","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"* Highlights: Using the command without specifying params will automatically list tasks within","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"the next 7 days. ","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"### Contributions to the UG","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"* I am the one who initially refactored the UG (removing the \u0027AddressBook\u0027 and change with \u0027TaskList\u0027,","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"change the name of attributes used, etc).","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"* Added `dueIn` and `done` command to list of features.","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"### Contributions to the DG","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"* I am the one who initially refactored the DG (removing the \u0027AddressBook\u0027 and change with \u0027TaskList\u0027,","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"modify the existing UML diagrams, updating PUMLs)","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"* Adding `dueIn` section of the DG.","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"* In charge of NFRs.","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"* In charge of UI component.","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"* In charge of creating and verifying all UML diagrams.","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"* I usually created a new Google docs for every team meeting.","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"* I am the one who mostly merged pull requests, and I\u0027ll inform my teammates if their PRs failed the CI or testing.","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"* I tried to fulfill the tP progress dashboard before the tutorial\u0027s deadline (closing issues","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"that haven\u0027t been done and creating new milestones).","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"* Add tests for :","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"    * `XYZCommandParsers` which increases code coverage by 6%","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"    * `seedu.address.common` functions","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"    * `DeadlineDate`,`DeadlineTime`, and `Status` attributes","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"* Released JAR file for V1.3.","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"* During PE-D, reported 22 bugs. 6 are considered `Medium` or `High` as they are unhandled exceptions.","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"### Contributions beyond the project team","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"I asked several questions on the forum which might helped other who have similar questions.","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"## Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"I draw 2 UML diagrams from scratch.","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"**`dueIn` activity diagram**","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"![DueInSequenceDiagram](../images/DueInSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"**`sort` activity diagram**","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"![SortSequenceDiagram](../images/SortSequenceDiagram.png)","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"austenjs":76}},{"path":"docs/team/danielonges.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"#Overview","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"**semester.config is a desktop application for managing your tasks.**","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"#Summary Of Contributions","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"## Code Contributed","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"You can see my code contributions [here](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003ddanielonges\u0026tabRepo\u003dAY2021S2-CS2103-T14-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse).","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"## Enhancements implemented","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"I implemented","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"1. Sorting feature according to pre-defined parameters:","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"   1. Date and time","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"   2. Module code","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"   3. Priority tag","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"   4. Task name","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"   5. Weightage","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"2. Daily task list that allows users to add and remove existing tasks into a daily planner","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"3. Ability to add notes to a task, which allows a user to jot down any quick remarks related to the task","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"4. Weightage attribute that allows users to capture the percentage weightage of their tasks","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"5. UI enhancements, such as colour coding priority tags, adding emojis for task status and creating additional headers for `All tasks` and `Daily tasks`","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"### Enhancement 1: `Sorting Feature` (Pull requests [#140](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/140), [#183](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/183))","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"What it does: This feature allows the user to sort semester.config according to any one of the five specified parameters mentioned above. It sorts the tasks and displays them according to this order:","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"1. Date and time - chronological","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"2. Module code - lexicographical","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"3. Priority tag - HIGH \u003e MEDIUM \u003e LOW","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"4. Task name - lexicographical","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"5. Weightage - descending","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"Justification: The motivation behind implementing this feature is to allow users to view their tasks in a preferred order, e.g. viewing the assignments that are due the soonest.","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"Highlights: Initially, I only planned to do the first 3 parameters. However, I realised that the implementation of the sorting feature could be easily extended to include parameters 4 and 5, and hence added them in for more flexibility for the user.","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"### Enhancement 2: `Daily task list` (Pull request [#182](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/182))","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"What it does: Displays a daily task list that the user can view as a to-do list for the day. The user can manually add or remove tasks from this daily task list by selecting the task index from the All tasks list.","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"Justification: This feature adds an extra dimension to the functionality of the application, as it allows the user to not only just view the tasks that he/she has, but select those that he/she wants to focus on today and plan their schedule accordingly for the day. ","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"Highlights: This feature proved challenging to implement, as it required an additional UniqueTaskList to be added to the TaskTracker, along with the relevant methods required to update it. Furthermore, I needed to take into account the modification of tasks on the All tasks list, and propagate any updates to the dailyTaskList.","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"Credits: I got the inspiration for this idea from Notion, as I personally use Notion to record down all my tasks and to plan my schedule for my days.","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"### Enhancement 3: `Notes feature` (Pull request [#77](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/77))","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"What it does: Allows user to add any additional notes that he/she might have to a task. ","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"Justification: A task might sometimes have additional attributes to take note of, or a user might have a certain idea as to how to approach a particular assignment. The notes feature allows the user to quickly capture and save these thoughts so that he/she can refer back to them in the future.","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"### Enhancement 4: `Weightage attribute` (Pull request [#81](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/81))","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"What it does: Provides a weightage component for each task.","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"Justification: Many assignments in School of Computing have weightages associated with them, and students might choose to prioritise those tasks that have a higher weightage. Therefore, having the weightage associated with the task allows them to quickly view how much each assignment is worth, and prioritise their work based on that information.","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"### Enhancement 5: `UI enhancements` (Pull request [#198](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/198), [#208](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/208), [#283](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/283))","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"The UI enhancements implemented include colour coding the priority tags (`HIGH \u003d red`, `MEDIUM \u003d yellow`, `LOW \u003d green`), adding emojis for status of tasks (`finished ☑` and `not finished ☒`), adding headers for `All tasks` and `Daily tasks`, and ensuring that the `Notes` label had a style of `wrap text`.","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"What it does and justification: Provide the user with a more pleasant experience while using the application. In particular, the colours associated with the priority tags accurately reflect the severity and priority of the tasks, and allow users to more easily identify which tasks are more urgent.","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"Highlight: Despite being a seemingly simple feature, colour coding the priority tags proved to be more complicated than I initially assumed it to be. It required the styleProperty of the priority tag component in the UI to be bound to its State, and to be dynamically updated when the priority tag values were updated by the user. Nonetheless, it was an interesting feature that allowed me to learn how to dynamically bind and generate elements using JavaFX.","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"## Contributions to the User Guide (UG)","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"- Helped to refine the overall format and cosmetics of the UG (Pull request [#204](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/204))","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"- Added table to outline all available prefixes and parameters that can be used for the `add` and `edit` commands (Pull request [#204](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/204))","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"- Add usage description for `notes` command (Pull request [#282](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/282))","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"- Add usage description for `sort` command (Pull request [#204](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/204))","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"- Add usage description for `doToday` command (Pull request [#204](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/204))","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"- Format Command summary table (Pull request [#204](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/204))","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"## Contributions to the DG","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"- Add sorting feature implementation details (Pull request [#160](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/160))","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"- Set up the GitHub team organisation and repository","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"- Generally helped to refactor certain codes to morph the address book into a task tracker","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"- Update target user profile, value proposition, user stories and glossary (Pull request [#30](https://github.com/AY2021S2-CS2103-T14-4/tp/pull/30))","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"danielonges"},"content":"- Maintain the issue tracker, and assigned people to tasks","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"- Facilitate the agenda and flow of team meetings most of the time","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"- Review, approve and merge PRs for the team","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"danielonges":92}},{"path":"docs/team/geraldfan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"#Overview","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"**semester.config is a desktop application for managing your tasks.**","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"#Summary Of Contributions","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"## Code Contributed","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"My code contributions can be found [here](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dgeraldfan\u0026tabRepo\u003dAY2021S2-CS2103-T14-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dgeraldfan).","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"##Enhancements implemented","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"I implemented 3 main features:","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"1. ModuleCode attribute for Task which will be useful for users;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"2. Undo Command,","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"3. Redo Command as well as the VersionedTaskTracker which supports these commands","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"Enhancement 1: Added the ModuleCode attribute for Task","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"* What it does:  Allows the user to add and edit the ModuleCode as an attribute of the Task","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"* Justification: Allows the user to know the module that the Task belongs to","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"Enhancement 2: Implemented the Undo Command","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"* What it does: Allows the user to undo the last command which altered the state of the application","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"* Justification: This allows the user to undo any mistakes that were made i.e. clearing the application","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"* Highlights: It was difficult to implment the functionality where only commands which altered the application","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"                could be undone as there was no way to differentiate between state modifying commands and non-state modifying","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"                    commands. This was overcome by creating a NonModifyingCommand Enum to differentiate between the","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"                    commands as well as overriding the toString() methods of each Command such that they could be","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"                    checked against the NonModifyingCommand Enum.","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"Enhancement 3: Implemented the Redo Command as well as the VersionedTaskTracker","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"* What it does: Allows the user to redo the last command that modified the application state","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"* Justification: This allows the user to redo a command after an Undo Command was issues.","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"* Highlights: This enhancement follows the behaviour that most moderrn desktop applications follow, where if a","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"                new command that alters the application is used after a Undo Command, the redundant states will","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"                be purged.","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"##Contributions to the UG","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"Added documentation for the features `edit`, `clear`, `undo` and `redo`","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"##Contributions to the DG","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"* I was in charge of the Model component and did the initial version of the Model component UML diagram.","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"* Added use cases for \"Editing a deadline\", \"Setting a priority tag to a deadline\" and \"Adding a note to a deadline\"","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"##Contributions to team-based tasks","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"* Refactored ReadOnlyAddressBook to ReadOnlyTaskTracker in all usages","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"* Refactored AddressBook to TaskTracker in all usages","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"* Refactored UniquePersonList to UniqueTaskList in all usages","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"* Refactored ModuleName to TaskName in all usages","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"* Approved and merged PRs where possible","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"##Contributions beyond the project team","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"geraldfan":56,"austenjs":1}},{"path":"docs/team/mrweikiat.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"# Overview","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"## Introduction","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"**semester.config is a desktop application for managing your tasks.**","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"## Code Contributed","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"You can see my contributions [here](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d)","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"## Enhancements implemented.","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"1) I implemented the PriorityTag feature for semesterconfig","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"2) Assist in creating sorting comparator to sort the tasks according to Priority levels","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"Enhancements","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"* It allows the user to classify tasks into 3 different category, `LOW/MEDIUM/HIGH`, with `HIGH` having the most priority","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"* Justification: User can view the different priority on the Ui and each priority levels are color coded distinctively from one another","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"* Highlights: User can use the `sort` command to view the tasks in priority levels","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"* It was difficult to implement the priority tag feature as we have to take note of the feature ability to be sorted, to handle that issue. I introduced `states` as an attribute to the priority tag class, and assign values to each of those states such that it was easier to implement the comparator feature that was handled by another of my team mate.","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"## Testing","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"* I was in charge of testing for the Storage component. I wrote test cases for storage classes, ensure that the test cases used are able to address the different valid/invalid cases given","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"* I wrote test cases for Priority Tag class, correctly testing the valid and invalid test cases carefully","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"## Contributions to the UG","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"Added documentation for `priority tag` feature, as well as standardising the team\u0027s markdown and language style","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"## Contributions to the DG","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"* I was in charge of the Storage component and therefore I drew up the Storage UML diagrams on the DG.","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"* Edited the exisiting UML diagram to fit our new features into the Storage component, taking care of the refactored componenets as well","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"* Wrote additional information under the Storage component with regards to our new features","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"* Refactored person classes in the Person package","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"* Helped to standardize UG and DG","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"* Wrote test cases for Storage component","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"* Approve and merge PRs when possible","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"## Contributions beyond the project team","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"mrweikiat":40}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"Let\u0027s walk you through the implementation of a new command — `notes`.","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"`notes INDEX r/REMARK` (e.g., `notes 2 r/Likes baseball`)","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"## Create a new `notes` command","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":" * Changes the notes of an existing person in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"    public static final String COMMAND_WORD \u003d \"notes\";","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"        return new CommandResult(\"Hello from notes\");","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `notes` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"![Output displayed](../images/add-notes/RemarkHello.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"![The relationship between RemarkCommand and Command](../images/add-notes/CommandInterface.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the notes of the person identified \"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"            + \"Existing notes will be overwritten by the input.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"danielonges"},"content":"    private final String notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"     * @param index of the person in the filtered person list to edit the notes","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"danielonges"},"content":"     * @param notes of the person to be updated to","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"danielonges"},"content":"    public RemarkCommand(Index index, String notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"danielonges"},"content":"        requireAllNonNull(index, notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"danielonges"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), notes));","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 notes.equals(e.notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"Now let’s move on to writing a parser that will extract the index and notes from the input provided by the user.","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"danielonges"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-notes/ParserInterface.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"danielonges"},"content":"This appears to be what we need to get a String of the notes. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"danielonges"},"content":"    String notes \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"danielonges"},"content":"    return new RemarkCommand(index, notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"danielonges"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s moduleName). That means we should add a `Remark` class so that we can use a `Remark` object to represent a notes given to a person.","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"danielonges"},"content":"## Add a placeholder element for notes to the UI","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"geraldfan"},"content":"Simply add the following to [`seedu.address.ui.TaskCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"danielonges"},"content":"private Label notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"danielonges"},"content":"\u003cLabel fx:id\u003d\"notes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$notes\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"danielonges"},"content":"![$notes shows up in each entry](../images/add-notes/$Remark.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"danielonges"},"content":"    notes.setText(person.getRemark().value);","lastModifiedDate":"2021-03-31"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"danielonges"},"content":"![The notes label is bound properly!](../images/add-notes/RemarkBound.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added notes to Person: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":333,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed notes from Person: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"danielonges"},"content":"                personToEdit.getAddress(), notes, personToEdit.getTags());","lastModifiedDate":"2021-03-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"danielonges"},"content":"     * Generates a command execution success message based on whether the notes is added to or removed from","lastModifiedDate":"2021-03-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"danielonges"},"content":"        String message \u003d !notes.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"danielonges"},"content":"![Congratulations!](../images/add-notes/RemarkComplete.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"danielonges"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a notes works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2021-03-31"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"danielonges"},"content":"![Using the context menu to jump to tests](../images/add-notes/ContextMenu.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"danielonges"},"content":"![Creating a test for `execute`.](../images/add-notes/CreateTest.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"mrweikiat"},"content":"Following convention, let’s change the moduleName of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2021-03-09"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"geraldfan":1,"mrweikiat":1,"danielonges":40,"-":352}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"    \"moduleName\": \"Person with invalid moduleName field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"mrweikiat":1,"-":102}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.address.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"![Using the `Search for target by moduleName` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"       persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"mrweikiat":1,"-":249}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"import seedu.address.storage.JsonTaskTrackerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"import seedu.address.storage.TaskTrackerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TaskTracker ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"        TaskTrackerStorage taskTrackerStorage \u003d new JsonTaskTrackerStorage(userPrefs.getTaskTrackerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"geraldfan"},"content":"        storage \u003d new StorageManager(taskTrackerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"geraldfan"},"content":"        Optional\u003cReadOnlyTaskTracker\u003e taskTrackerOptional;","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"geraldfan"},"content":"        ReadOnlyTaskTracker initialData;","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"geraldfan"},"content":"            taskTrackerOptional \u003d storage.readTaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"geraldfan"},"content":"            if (!taskTrackerOptional.isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"geraldfan"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TaskTracker\");","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"geraldfan"},"content":"            initialData \u003d taskTrackerOptional.orElseGet(SampleDataUtil::getSampleTaskTracker);","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"geraldfan"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TaskTracker\");","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"geraldfan"},"content":"            initialData \u003d new TaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"geraldfan"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskTracker\");","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"geraldfan"},"content":"            initialData \u003d new TaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"geraldfan"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskTracker\");","lastModifiedDate":"2021-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"geraldfan"},"content":"        logger.info(\"Starting TaskTracker \" + MainApp.VERSION);","lastModifiedDate":"2021-03-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"geraldfan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Task Tracker ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"geraldfan":22,"-":161,"austenjs":1}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    private static final String LOG_FILE \u003d \"semesterconfig.log\";","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mrweikiat":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_INVALID_UNDO_COMMAND \u003d \"Unable to undo any further\";","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_INVALID_REDO_COMMAND \u003d \"Unable to redo any further\";","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"geraldfan":4,"-":11}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"        requireNonNull(zeroBasedIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":54,"austenjs":3}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    private static final String PERCENTAGE_VALIDATION_REGEX \u003d \"\\\\d+%\";","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"     * Returns true if {@code s} represents a non-zero unsigned LONG","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"     * e.g. 1, 2, 3, ..., {@code Long.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"    public static boolean isNonZeroUnsignedLong(String s) {","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"            long value \u003d Long.parseLong(s);","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Long#parseLong(String)","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"     * Returns true if {@code s} represents a postive percentage value","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"     * e.g. 25%, 200%, 0%, ... etc. \u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"danielonges"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"danielonges"},"content":"    public static boolean isPositivePercentageValue(String s) {","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"danielonges"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"danielonges"},"content":"            if (s.matches(PERCENTAGE_VALIDATION_REGEX)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"danielonges"},"content":"                int value \u003d Integer.parseInt(s.substring(0, s.length() - 1));","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"                return value \u003e\u003d 0;","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"danielonges"},"content":"            } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"danielonges"},"content":"                return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"danielonges"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"danielonges"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"danielonges"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"danielonges"},"content":"     * Converts a {@code String} percentage value into an {@code Integer}.","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"     * e.g. 15% -\u003e 15","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"danielonges"},"content":"    public static Integer convertPercentageToInteger(String percentage) {","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"danielonges"},"content":"        return Integer.parseInt(percentage.substring(0, percentage.length() - 1));","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"danielonges":32,"-":68,"austenjs":18}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"     * Returns the TaskTracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"     * @see seedu.address.model.Model#getTaskTracker()","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"    ReadOnlyTaskTracker getTaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"     * Returns an unmodifiable view of the filtered list of tasks","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"     * Returns an unmodifiable view of the list of daily tasks","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"    ObservableList\u003cTask\u003e getDailyTaskList();","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"    Path getTaskTrackerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"geraldfan":11,"mrweikiat":1,"danielonges":4,"-":44,"austenjs":1}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.parser.TaskTrackerParser;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.util.NonModifyingCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"    private final TaskTrackerParser taskTrackerParser;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"        taskTrackerParser \u003d new TaskTrackerParser();","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"        model.commitTaskTracker(model.getTaskTracker());","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"        Command command \u003d taskTrackerParser.parseCommand(commandText);","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"        commitTaskTracker(command);","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"            storage.saveTaskTracker(model.getTaskTracker());","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"    private void commitTaskTracker(Command command) {","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"        if (!isNonModifyingCommand(command)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"            model.commitTaskTracker((model.getTaskTracker()));","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"    private boolean isNonModifyingCommand(Command command) {","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"        for (NonModifyingCommand c : NonModifyingCommand.values()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"geraldfan"},"content":"            if (command.toString().equals(c.toString())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"                return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"geraldfan"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"        return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"geraldfan"},"content":"    public ReadOnlyTaskTracker getTaskTracker() {","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"geraldfan"},"content":"        return model.getTaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"geraldfan"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"geraldfan"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"    public ObservableList\u003cTask\u003e getDailyTaskList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"        return model.getDailyTaskList();","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"geraldfan"},"content":"    public Path getTaskTrackerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"geraldfan"},"content":"        return model.getTaskTrackerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"geraldfan":33,"mrweikiat":1,"danielonges":3,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_TIME;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITYTAG;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHTAGE;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":" * Adds a task to the task list.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list. \"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"            + PREFIX_CODE + \"CODE \"","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"            + PREFIX_DEADLINE_DATE + \"DEADLINE_DATE \"","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"            + PREFIX_DEADLINE_TIME + \"DEADLINE_TIME \"","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"            + PREFIX_WEIGHTAGE + \"WEIGHTAGE \"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"            + \"[\" + PREFIX_PRIORITYTAG + \"PRIORITY_TAG] \"","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"            + \"[\" + PREFIX_TAG + \"TAGS]...\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"            + PREFIX_CODE + \"CS2103 \"","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"            + PREFIX_DEADLINE_DATE + \"10-06-2021 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"            + PREFIX_DEADLINE_TIME + \"23:59 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"            + PREFIX_WEIGHTAGE + \"25% \"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"            + PREFIX_TAG + \"core \"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"            + PREFIX_PRIORITYTAG + \"MEDIUM\";","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list\";","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"geraldfan":7,"mrweikiat":14,"danielonges":2,"-":42,"austenjs":7}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":" * Clears the task list.","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task list has been cleared!\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"        model.setTaskTracker(new TaskTracker());","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"geraldfan":2,"-":19,"austenjs":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":" * Deletes a task identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"            + \": Deletes the task at the specified index under All Tasks.\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"            throw new CommandException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        model.deleteDailyTask(taskToDelete);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"geraldfan":5,"mrweikiat":2,"danielonges":1,"-":43,"austenjs":3}},{"path":"src/main/java/seedu/address/logic/commands/DoTodayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.util.OperationFlag;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.util.OperationType;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":" * Adds or removes a task from the daily to-do list based on the operation type specified.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"public class DoTodayCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    public static final String COMMAND_WORD \u003d \"doToday\";","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"            + \": Adds (using the -a flag) or removes (using the -r flag) the task identified by the index number used \"","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"            + \"in the displayed task list into \"","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"            + \"the daily to-do list.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"            + \"Parameters: -a OR -r INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + OperationType.ADD.getOperationType() + \" 1\";","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_ADDED_TASK_SUCCESS \u003d \"Added Task: %1$s to daily to-do list.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_REMOVED_TASK_SUCCESS \u003d \"Removed Task: %1$s from daily to-do list.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_DUPLICATE_DAILY_TASK \u003d \"This task already exists in the daily task list\";","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"    private final OperationFlag operationFlag;","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"     * Constructs a {@code DoTodayCommand}.","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"    public DoTodayCommand(Index targetIndex, OperationFlag operationFlag) {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        requireAllNonNull(targetIndex, operationFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"        this.operationFlag \u003d operationFlag;","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"        if (operationFlag.getOperationType() \u003d\u003d OperationType.ADD) {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"            List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"                throw new CommandException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"            Task taskToAdd \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"            if (model.hasDailyTask(taskToAdd)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_DAILY_TASK);","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"            model.addToDailyToDoList(taskToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"            return new CommandResult(String.format(MESSAGE_ADDED_TASK_SUCCESS, taskToAdd));","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"            List\u003cTask\u003e lastShownDailyTaskList \u003d model.getDailyTaskList();","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownDailyTaskList.size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"                throw new CommandException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"            Task taskToRemove \u003d lastShownDailyTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"            model.removeFromDailyToDoList(taskToRemove);","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"            return new CommandResult(String.format(MESSAGE_REMOVED_TASK_SUCCESS, taskToRemove));","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"                || (other instanceof DoTodayCommand // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 targetIndex.equals(((DoTodayCommand) other).targetIndex))","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 operationFlag.equals(((DoTodayCommand) other).operationFlag); // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"danielonges":85,"austenjs":3}},{"path":"src/main/java/seedu/address/logic/commands/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import java.util.List;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":" * Finishes a task identified using it\u0027s displayed index from the task list.","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"            + \": Toggle the status of a task from finished to unfinished or from unfinished to finished.\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"            + \"The index refers to the index number shown in the displayed All Tasks list.\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_DONE_TASK_SUCCESS \u003d \"Successfully toggle the status of the task: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    public DoneCommand(Index targetIndex) {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"            throw new CommandException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"        Task taskToFinish \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"        model.finishTask(taskToFinish);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"        model.finishDailyTask(taskToFinish);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_TASK_SUCCESS, taskToFinish));","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"                || (other instanceof DoneCommand // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"                \u0026\u0026 targetIndex.equals(((DoneCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"mrweikiat":2,"danielonges":1,"austenjs":53}},{"path":"src/main/java/seedu/address/logic/commands/DueInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDateInRangePredicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":" * Finds and lists all tasks in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"public class DueInCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    public static final String COMMAND_WORD \u003d \"dueIn\";","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose date is \"","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"            + \"in range of the specified days or weeks.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"            + \"Parameters: day/NUMBER_OF_DAYS OR week/NUMBER_OF_WEEKS\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"            + \"NUMBER_OF_DAYS and NUMBER_OF_WEEKS must be a positive integer.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"            + \"Example: \" + COMMAND_WORD + \" day/10\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"            + \"If no parameters specified, the command will show assignments within the next 7 days.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"            + \"If multiple parameters specified, an error will be thrown.\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"            + \"The limit for dueIn is until 31-12-2099\";","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    private final DeadlineDateInRangePredicate predicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    public DueInCommand(DeadlineDateInRangePredicate predicate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size())","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"                        + predicate.toString());","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"                || (other instanceof DueInCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"                \u0026\u0026 predicate.equals(((DueInCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        return \"DUEIN\";","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"geraldfan":4,"austenjs":48}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_TIME;","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITYTAG;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":" * Edits the details of an existing task in the address book.","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"        + \"by the index number used in the All tasks list. \"","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"        + \"[\" + PREFIX_CODE + \"CODE] \"","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        + \"[\" + PREFIX_DEADLINE_DATE + \"DEADLINE_DATE] \"","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        + \"[\" + PREFIX_DEADLINE_TIME + \"DEADLINE_TIME] \"","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        + \"[\" + PREFIX_NOTES + \"NOTES] \"","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        + \"[\" + PREFIX_PRIORITYTAG + \"PRIORITY_TAG] \"","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"        + PREFIX_NAME + \"CS2103 Assignment\";","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"geraldfan"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"     * @param index              of the task in the filtered task list to edit","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"    public EditCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"geraldfan"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"        List\u003cTask\u003e lastShownDailyTaskList \u003d model.getDailyTaskList();","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"            throw new CommandException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"        int dailyTaskIndex \u003d lastShownDailyTaskList.indexOf(taskToEdit);","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"geraldfan"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"geraldfan"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"geraldfan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"geraldfan"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"        model.refreshDailyTasks(taskToEdit, editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"geraldfan"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"geraldfan"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"geraldfan"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"geraldfan"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"geraldfan"},"content":"        TaskName updatedTaskName \u003d editTaskDescriptor.getTaskName().orElse(taskToEdit.getTaskName());","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"        ModuleCode updatedModuleCode \u003d editTaskDescriptor.getModuleCode().orElse(taskToEdit.getModuleCode());","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"        DeadlineDate updatedDeadlineDate \u003d editTaskDescriptor.getDeadlineDate()","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"            .orElse(taskToEdit.getDeadlineDate());","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"        DeadlineTime updatedDeadlineTime \u003d editTaskDescriptor.getDeadlineTime()","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"            .orElse(taskToEdit.getDeadlineTime());","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"austenjs"},"content":"        Status updatedStatus \u003d taskToEdit.getStatus();","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"        Weightage updatedWeightage \u003d editTaskDescriptor.getWeightage()","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"                .orElse(taskToEdit.getWeightage());","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"danielonges"},"content":"        Notes updatedNotes \u003d editTaskDescriptor.getNotes().orElse(taskToEdit.getNotes());","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":"        PriorityTag priorityTag \u003d editTaskDescriptor.getPriorityTag().orElse(taskToEdit.getPriorityTag());","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"geraldfan"},"content":"        Set\u003cTag\u003e updatedTags \u003d editTaskDescriptor.getTags().orElse(taskToEdit.getTags());","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"geraldfan"},"content":"        return new Task(updatedTaskName, updatedModuleCode, updatedDeadlineDate,","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"            updatedDeadlineTime, updatedStatus, updatedWeightage,","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"danielonges"},"content":"                updatedNotes, updatedTags, priorityTag);","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"geraldfan"},"content":"            \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"geraldfan"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"geraldfan"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"geraldfan"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"danielonges"},"content":"        // descriptors should not be allowed to have a notes field, since editing of remarks is not supported for now","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"geraldfan"},"content":"        private TaskName taskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"geraldfan"},"content":"        private ModuleCode moduleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"austenjs"},"content":"        private DeadlineDate deadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"austenjs"},"content":"        private DeadlineTime deadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"danielonges"},"content":"        private Weightage weightage;","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"danielonges"},"content":"        private Notes notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"austenjs"},"content":"        private Status status;","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":"        private PriorityTag priorityTag;","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"geraldfan"},"content":"        public EditTaskDescriptor() {","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"geraldfan"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"geraldfan"},"content":"            setTaskName(toCopy.taskName);","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"geraldfan"},"content":"            setModuleCode(toCopy.moduleCode);","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"austenjs"},"content":"            setDeadlineDate(toCopy.deadlineDate);","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"austenjs"},"content":"            setDeadlineTime(toCopy.deadlineTime);","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"danielonges"},"content":"            setWeightage(toCopy.weightage);","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"danielonges"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"mrweikiat"},"content":"            setPriorityTag(toCopy.priorityTag);","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"geraldfan"},"content":"            return CollectionUtil.isAnyNonNull(taskName, moduleCode,","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"danielonges"},"content":"                deadlineDate, deadlineTime, weightage, notes, tags, priorityTag);","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"geraldfan"},"content":"        public void setTaskName(TaskName taskName) {","lastModifiedDate":"2021-03-23"},{"lineNumber":185,"author":{"gitId":"geraldfan"},"content":"            this.taskName \u003d taskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"geraldfan"},"content":"        public Optional\u003cTaskName\u003e getTaskName() {","lastModifiedDate":"2021-03-23"},{"lineNumber":189,"author":{"gitId":"geraldfan"},"content":"            return Optional.ofNullable(taskName);","lastModifiedDate":"2021-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"geraldfan"},"content":"        public void setModuleCode(ModuleCode moduleCode) {","lastModifiedDate":"2021-03-11"},{"lineNumber":193,"author":{"gitId":"geraldfan"},"content":"            this.moduleCode \u003d moduleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":196,"author":{"gitId":"geraldfan"},"content":"        public Optional\u003cModuleCode\u003e getModuleCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":197,"author":{"gitId":"geraldfan"},"content":"            return Optional.ofNullable(moduleCode);","lastModifiedDate":"2021-03-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":200,"author":{"gitId":"austenjs"},"content":"        public void setDeadlineDate(DeadlineDate deadlineDate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"austenjs"},"content":"            this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"austenjs"},"content":"        public Optional\u003cDeadlineDate\u003e getDeadlineDate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"austenjs"},"content":"            return Optional.ofNullable(deadlineDate);","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"austenjs"},"content":"        public void setDeadlineTime(DeadlineTime deadlineTime) {","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"austenjs"},"content":"            this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"austenjs"},"content":"        public Optional\u003cDeadlineTime\u003e getDeadlineTime() {","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"austenjs"},"content":"            return Optional.ofNullable(deadlineTime);","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"austenjs"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2021-03-25"},{"lineNumber":217,"author":{"gitId":"austenjs"},"content":"            this.status \u003d status;","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"austenjs"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2021-03-25"},{"lineNumber":221,"author":{"gitId":"austenjs"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2021-03-25"},{"lineNumber":222,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":223,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":224,"author":{"gitId":"danielonges"},"content":"        public void setWeightage(Weightage weightage) {","lastModifiedDate":"2021-03-25"},{"lineNumber":225,"author":{"gitId":"danielonges"},"content":"            this.weightage \u003d weightage;","lastModifiedDate":"2021-03-25"},{"lineNumber":226,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":227,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":228,"author":{"gitId":"danielonges"},"content":"        public Optional\u003cWeightage\u003e getWeightage() {","lastModifiedDate":"2021-03-25"},{"lineNumber":229,"author":{"gitId":"danielonges"},"content":"            return Optional.ofNullable(weightage);","lastModifiedDate":"2021-03-25"},{"lineNumber":230,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":231,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":232,"author":{"gitId":"danielonges"},"content":"        public void setNotes(Notes notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"danielonges"},"content":"            this.notes \u003d notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"danielonges"},"content":"        public Optional\u003cNotes\u003e getNotes() {","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"danielonges"},"content":"            return Optional.ofNullable(notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"mrweikiat"},"content":"        public void setPriorityTag(PriorityTag priorityTag) {","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"mrweikiat"},"content":"            this.priorityTag \u003d priorityTag;","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"mrweikiat"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"mrweikiat"},"content":"        public Optional\u003cPriorityTag\u003e getPriorityTag() {","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"mrweikiat"},"content":"            return Optional.ofNullable(priorityTag);","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"geraldfan"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"geraldfan"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"geraldfan"},"content":"            return getTaskName().equals(e.getTaskName())","lastModifiedDate":"2021-03-23"},{"lineNumber":281,"author":{"gitId":"geraldfan"},"content":"                \u0026\u0026 getModuleCode().equals(e.getModuleCode())","lastModifiedDate":"2021-03-11"},{"lineNumber":282,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 getWeightage().equals(e.getWeightage())","lastModifiedDate":"2021-03-25"},{"lineNumber":283,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 getNotes().equals(e.getNotes())","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 getDeadlineDate().equals(e.getDeadlineDate())","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 getDeadlineTime().equals(e.getDeadlineTime())","lastModifiedDate":"2021-03-24"},{"lineNumber":286,"author":{"gitId":"austenjs"},"content":"                \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2021-03-25"},{"lineNumber":287,"author":{"gitId":"mrweikiat"},"content":"                \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"mrweikiat"},"content":"                \u0026\u0026 getPriorityTag().equals(e.getPriorityTag());","lastModifiedDate":"2021-03-30"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"geraldfan":50,"mrweikiat":17,"danielonges":39,"-":148,"austenjs":38}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting semester.config as requested ...\";","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"        return \"EXIT\";","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"geraldfan":4,"-":18,"austenjs":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":" * Finds and lists all tasks in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose names contain any of \"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"        return \"FIND\";","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"geraldfan":9,"-":38}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"            || (other instanceof HelpCommand); // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"        return \"HELP\";","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"geraldfan":11,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":" * Lists all tasks in the task tracker to the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        return \"LIST\";","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"geraldfan":9,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/NotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import java.util.List;","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"public class NotesCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"    public static final String COMMAND_WORD \u003d \"notes\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the notes of the task identified \"","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"        + \"by the index number used in the All tasks list. \"","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"        + \"Existing notes will be overwritten by the input.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-02-23"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        + PREFIX_NOTES + \"REMARK\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-02-23"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"        + PREFIX_NOTES + \"Likes to swim.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Notes: %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added notes to Person: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed notes from Person: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"    private final Index index;","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"    private final Notes notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"     * @param index  of the person in the filtered person list to edit the notes","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"     * @param notes of the person to be updated to","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"    public NotesCommand(Index index, Notes notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"        requireAllNonNull(index, notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-02-23"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-02-23"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-02-23"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-02-23"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"            throw new CommandException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"        Task editedTask \u003d new Task(taskToEdit.getTaskName(), taskToEdit.getModuleCode(),","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"                taskToEdit.getDeadlineDate(), taskToEdit.getDeadlineTime(),","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"                taskToEdit.getStatus(), taskToEdit.getWeightage(),","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"                notes, taskToEdit.getTags(), taskToEdit.getPriorityTag());","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"        model.refreshDailyTasks(taskToEdit, editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"        return new CommandResult(generateSuccessMessage(editedTask));","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"     * Generates a command execution success message based on whether the notes is added to or removed from","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-02-23"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"    private String generateSuccessMessage(Task taskToEdit) {","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"        String message \u003d !notes.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"        return String.format(message, taskToEdit);","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-02-23"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-23"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"        // short circuit if same object","lastModifiedDate":"2021-02-23"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-02-23"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"            return true;","lastModifiedDate":"2021-02-23"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"        // instanceof handles null","lastModifiedDate":"2021-02-23"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"        if (!(other instanceof NotesCommand)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"            return false;","lastModifiedDate":"2021-02-23"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":89,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"        // state check","lastModifiedDate":"2021-02-23"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"        NotesCommand e \u003d (NotesCommand) other;","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"        return index.equals(e.index) \u0026\u0026 notes.equals(e.notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"geraldfan":1,"danielonges":86,"austenjs":7}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":" * Redoes the last non-undo Command","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Redoes the changes from an undo command\";","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Last command has been successfully redone!\";","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"        if (!model.canRedoTaskTracker()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_REDO_COMMAND);","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"        TaskTracker redoneTaskTracker \u003d model.redoTaskTracker();","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        model.setTaskTracker((redoneTaskTracker));","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"        return \"REDO\";","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"geraldfan":38}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.comparators.DateTimeComparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.comparators.ModuleCodeComparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.comparators.PriorityTagComparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.comparators.TaskNameComparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.comparators.WeightageComparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.util.SortingFlag;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts all tasks according to one of five\"","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"            + \" specified parameters: date \u0026 time, task name, module code, priority tag, or weightage.\\n\";","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Tasks have been successfully sorted according to: \";","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"    private final SortingFlag sortingFlag;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"    private final Comparator\u003cTask\u003e sortingComparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"     * Creates a SortCommand with the appropriate sorting flag and comparator.","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"     * @param sortingFlag a valid sorting flag","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"     * @throws IllegalStateException if the sorting flag provided is not valid.","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    public SortCommand(SortingFlag sortingFlag) {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"        this.sortingFlag \u003d sortingFlag;","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"        switch (sortingFlag.getSortingType()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"        case DATE_TIME:","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"            sortingComparator \u003d new DateTimeComparator();","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"        case TASK_NAME:","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"            sortingComparator \u003d new TaskNameComparator();","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"        case MODULE_CODE:","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"            sortingComparator \u003d new ModuleCodeComparator();","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        case PRIORITY_TAG:","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"            sortingComparator \u003d new PriorityTagComparator();","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"        case WEIGHTAGE:","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"            sortingComparator \u003d new WeightageComparator();","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"        default:","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + sortingFlag.getSortingType());","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"        model.sortTasks(sortingComparator);","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"        return new CommandResult(MESSAGE_SUCCESS + sortingFlag.toString());","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"                || (other instanceof SortCommand) // instanceof handles null","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 sortingFlag.equals(((SortCommand) other).sortingFlag); // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"geraldfan"},"content":"        return \"SORT\";","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"geraldfan":5,"danielonges":69}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":" * Undoes the last command and reverts to the previous TaskTracker state","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Undoes the last command\";","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Last command has been successfully undone!\";","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"        if (!model.canUndoTaskTracker()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_UNDO_COMMAND);","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"        TaskTracker undoneTaskTracker \u003d model.undoTaskTracker();","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        model.setTaskTracker((undoneTaskTracker));","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"        return \"UNDO\";","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"geraldfan":38}},{"path":"src/main/java/seedu/address/logic/comparators/DateTimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":" * Comparator that compares tasks according to their deadline dates and times.","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"public class DateTimeComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"    public int compare(Task firstTask, Task secondTask) {","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"        if (firstTask.getDeadlineDate().equals(secondTask.getDeadlineDate())) {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"            return firstTask.getDeadlineTime().compareTo(secondTask.getDeadlineTime());","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"        } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"            return firstTask.getDeadlineDate().compareTo(secondTask.getDeadlineDate());","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"danielonges":20}},{"path":"src/main/java/seedu/address/logic/comparators/ModuleCodeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":" * Comparator that compares tasks according to their module codes.","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"public class ModuleCodeComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"    public int compare(Task firstTask, Task secondTask) {","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"        return firstTask.getModuleCode().compareTo(secondTask.getModuleCode());","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"danielonges":16}},{"path":"src/main/java/seedu/address/logic/comparators/PriorityTagComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":" * Comparator that compares tasks according to their priority tags.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"public class PriorityTagComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"    public int compare(Task firstTask, Task secondTask) {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"        return secondTask.getPriorityTag().getPriority() - firstTask.getPriorityTag().getPriority();","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"danielonges":16}},{"path":"src/main/java/seedu/address/logic/comparators/TaskNameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":" * Comparator that compares tasks according to their module codes.","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"public class TaskNameComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"    public int compare(Task firstTask, Task secondTask) {","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"        return firstTask.getTaskName().compareTo(secondTask.getTaskName());","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"danielonges":16}},{"path":"src/main/java/seedu/address/logic/comparators/WeightageComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.comparators;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":" * Comparator that compares tasks according to their weightage.","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"public class WeightageComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"    public int compare(Task firstTask, Task secondTask) {","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"        return secondTask.getWeightage().compareTo(firstTask.getWeightage());","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"danielonges":16}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_TIME;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITYTAG;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHTAGE;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CODE, PREFIX_WEIGHTAGE,","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"                PREFIX_DEADLINE_DATE, PREFIX_DEADLINE_TIME, PREFIX_TAG, PREFIX_PRIORITYTAG);","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        // weightage is compulsory for now","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_CODE,","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"                PREFIX_DEADLINE_DATE, PREFIX_DEADLINE_TIME, PREFIX_WEIGHTAGE)","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        TaskName taskName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"        ModuleCode moduleCode \u003d ParserUtil.parseCode(argMultimap.getValue(PREFIX_CODE).get());","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"        Weightage weightage \u003d ParserUtil.parseWeightage(argMultimap.getValue(PREFIX_WEIGHTAGE).get());","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        DeadlineDate deadlineDate \u003d ParserUtil.parseDeadlineDate(argMultimap","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"            .getValue(PREFIX_DEADLINE_DATE).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        DeadlineTime deadlineTime \u003d ParserUtil.parseDeadlineTime(argMultimap","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"            .getValue(PREFIX_DEADLINE_TIME).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        Status status \u003d new Status();","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"        Notes notes \u003d new Notes(\"\"); // add command does not allow adding notes straightaway","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"        // if ptag is present","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_PRIORITYTAG)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"            PriorityTag priorityTag \u003d ParserUtil.parsePriorityTag(argMultimap.getValue(PREFIX_PRIORITYTAG).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"            Task task \u003d new Task(taskName, moduleCode, deadlineDate,","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"                    deadlineTime, status, weightage, notes, tagList, priorityTag);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"            Task task \u003d new Task(taskName, moduleCode, deadlineDate,","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"                    deadlineTime, status, weightage, notes, tagList);","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"geraldfan":8,"mrweikiat":14,"danielonges":10,"-":46,"austenjs":12}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"    public static final Prefix PREFIX_CODE \u003d new Prefix(\"mc/\");","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"    public static final Prefix PREFIX_WEIGHTAGE \u003d new Prefix(\"w/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    public static final Prefix PREFIX_DEADLINE_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    public static final Prefix PREFIX_DEADLINE_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"    public static final Prefix PREFIX_NOTES \u003d new Prefix(\"notes/\");","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"pt/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    public static final Prefix PREFIX_PRIORITYTAG \u003d new Prefix(\"ptag/\");","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    public static final Prefix PREFIX_NUMBER_OF_DAY \u003d new Prefix(\"day/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    public static final Prefix PREFIX_NUMBER_OF_WEEK \u003d new Prefix(\"week/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"geraldfan":1,"mrweikiat":1,"danielonges":2,"-":11,"austenjs":5}},{"path":"src/main/java/seedu/address/logic/parser/DoTodayCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.DoTodayCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.util.OperationFlag;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"public class DoTodayCommandParser implements Parser\u003cDoTodayCommand\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"     * Parses the given {@code String} of arguments in the context of the DoTodayCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"     * and returns a DoTodayCommand object for execution.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    public DoTodayCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"            String[] splitArgs \u003d splitArgs(args);","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"            if (splitArgs.length !\u003d 2) {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"                throw new ParseException(ParserUtil.MESSAGE_INVALID_ARGS_LENGTH);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"            OperationFlag operationFlag \u003d ParserUtil.parseOperationFlag(splitArgs[0]);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"            return new DoTodayCommand(index, operationFlag);","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoTodayCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"    private String[] splitArgs(String args) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"        return args.trim().split(\" \");","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"danielonges":35}},{"path":"src/main/java/seedu/address/logic/parser/DoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":" * Parses input arguments and creates a new DoneComment object","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"public class DoneCommandParser implements Parser\u003cDoneCommand\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneCommand","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"     * and returns a DoneCommand object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"    public DoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"austenjs":29}},{"path":"src/main/java/seedu/address/logic/parser/DueInCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUMBER_OF_DAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUMBER_OF_WEEK;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.DueInCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDateInRangePredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":" * Parses input arguments and creates a new ShowCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"public class DueInCommandParser implements Parser\u003cDueInCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    private static final long DEFAULT_NUMBER_OF_DAYS \u003d 7; // If no parameters given by the user","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * Parses the given {@code String} of arguments in the context of the DueInCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * and returns a DueInCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    public DueInCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NUMBER_OF_DAY, PREFIX_NUMBER_OF_WEEK);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"        long numberOfDays;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        if (argMultimap.getValue(PREFIX_NUMBER_OF_DAY).isPresent()","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_NUMBER_OF_WEEK).isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DueInCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        if (argMultimap.getValue(PREFIX_NUMBER_OF_DAY).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"            try {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"                numberOfDays \u003d ParserUtil.parseNumberOfDays(argMultimap.getValue(PREFIX_NUMBER_OF_DAY).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"                throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DueInCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        } else if (argMultimap.getValue(PREFIX_NUMBER_OF_WEEK).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"            try {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"                long numberOfWeeks \u003d ParserUtil.parseNumberOfWeeks(argMultimap.getValue(PREFIX_NUMBER_OF_WEEK).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"                numberOfDays \u003d numberOfWeeks * 7; // One week consists of 7 days","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"                throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DueInCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"            numberOfDays \u003d DEFAULT_NUMBER_OF_DAYS;","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        return new DueInCommand(new DeadlineDateInRangePredicate(numberOfDays));","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"austenjs":52}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_TIME;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITYTAG;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHTAGE;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CODE,","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"                    PREFIX_DEADLINE_DATE, PREFIX_DEADLINE_TIME, PREFIX_WEIGHTAGE, PREFIX_NOTES, PREFIX_TAG,","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"                    PREFIX_PRIORITYTAG);","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"            editTaskDescriptor.setTaskName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        if (argMultimap.getValue(PREFIX_CODE).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"            editTaskDescriptor.setModuleCode(ParserUtil.parseCode(argMultimap.getValue(PREFIX_CODE).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE_DATE).isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"            editTaskDescriptor.setDeadlineDate(ParserUtil","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"                    .parseDeadlineDate(argMultimap.getValue(PREFIX_DEADLINE_DATE).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE_TIME).isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"            editTaskDescriptor.setDeadlineTime(ParserUtil","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"                    .parseDeadlineTime(argMultimap.getValue(PREFIX_DEADLINE_TIME).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"        if (argMultimap.getValue(PREFIX_WEIGHTAGE).isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"            editTaskDescriptor.setWeightage(ParserUtil","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"                    .parseWeightage(argMultimap.getValue(PREFIX_WEIGHTAGE).get()));","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"        if (argMultimap.getValue(PREFIX_NOTES).isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"            editTaskDescriptor.setNotes(ParserUtil","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"                    .parseNotes(argMultimap.getValue(PREFIX_NOTES).get()));","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITYTAG).isPresent()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"            editTaskDescriptor.setPriorityTag(ParserUtil","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"                    .parsePriorityTag(argMultimap.getValue(PREFIX_PRIORITYTAG).get()));","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"geraldfan"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"geraldfan"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"geraldfan"},"content":"        return new EditCommand(index, editTaskDescriptor);","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"geraldfan":9,"mrweikiat":13,"danielonges":11,"-":67,"austenjs":7}},{"path":"src/main/java/seedu/address/logic/parser/NotesCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.NotesCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"public class NotesCommandParser implements Parser\u003cNotesCommand\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code NotesCommand} and returns a {@code","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"     * NotesCommand} object for execution.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"    public NotesCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-02-23"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"        Index index;","lastModifiedDate":"2021-02-23"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"        try {","lastModifiedDate":"2021-02-23"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-02-23"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, NotesCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"        String notes \u003d argMultimap.getValue(PREFIX_NOTES).orElse(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"        return new NotesCommand(index, new Notes(notes));","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"danielonges":35}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.util.OperationFlag;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_INVALID_WEIGHTAGE \u003d \"Weightage is not a positive percentage integer value.\";","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_INVALID_ARGS_LENGTH \u003d \"Invalid number of arguments provided.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_INVALID_NUMBER_OF_DAYS \u003d \"Number of days is not a positive integer.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_INVALID_NUMBER_OF_WEEKS \u003d \"Number of weeks is not a positive integer.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"     * Parses {@code String operationFlag} into an {@code OperationFlag} and returns it. Leading and trailing","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"     * whitespaces will be trimmed.","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"     * @throws ParseException if given {@code operationFlag} is invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"    public static OperationFlag parseOperationFlag(String operationFlag) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"        String trimmedOperationFlag \u003d operationFlag.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"        if (!OperationFlag.isValidOperationType(trimmedOperationFlag)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"            throw new ParseException(OperationFlag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"        return new OperationFlag(trimmedOperationFlag);","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"     * Parses a {@code String name} into a {@code TaskName}.","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"    public static TaskName parseName(String name) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"geraldfan"},"content":"        if (!TaskName.isValidName(trimmedName)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"geraldfan"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"geraldfan"},"content":"        return new TaskName(trimmedName);","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"     * Parses a {@code String code} into a {@code ModuleCode}.","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"geraldfan"},"content":"     * @throws ParseException if the given {@code code} is invalid.","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"geraldfan"},"content":"    public static ModuleCode parseCode(String code) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"geraldfan"},"content":"        requireNonNull(code);","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"geraldfan"},"content":"        String trimmedModuleCode \u003d code.trim();","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"geraldfan"},"content":"        if (!ModuleCode.isValidModuleCode(trimmedModuleCode)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"geraldfan"},"content":"            throw new ParseException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"geraldfan"},"content":"        return new ModuleCode(trimmedModuleCode);","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"     * Parses a {@code String deadlineDate} into a {@code DeadlineDate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"     * @throws ParseException if the given {@code deadlineDate} is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"    public static DeadlineDate parseDeadlineDate(String deadlineDate) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"        requireNonNull(deadlineDate);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"        String trimmedDeadlineDate \u003d deadlineDate.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"        if (!DeadlineDate.isValidDeadlineDate(trimmedDeadlineDate)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"            throw new ParseException(DeadlineDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"        return new DeadlineDate(trimmedDeadlineDate);","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"     * Parses a {@code String deadlineTime} into a {@code DeadlineTime}.","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"     * @throws ParseException if the given {@code deadlineTime} is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"    public static DeadlineTime parseDeadlineTime(String deadlineTime) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"        requireNonNull(deadlineTime);","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"        String trimmedDeadlineTime \u003d deadlineTime.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"        if (!DeadlineTime.isValidDeadlineTime(trimmedDeadlineTime)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"            throw new ParseException(DeadlineTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"        return new DeadlineTime(trimmedDeadlineTime);","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"danielonges"},"content":"     * Parses a {@code String weightage} into a {@code Weightage}.","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"danielonges"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-22"},{"lineNumber":131,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"danielonges"},"content":"    public static Weightage parseWeightage(String weightage) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"danielonges"},"content":"        requireNonNull(weightage);","lastModifiedDate":"2021-03-22"},{"lineNumber":134,"author":{"gitId":"danielonges"},"content":"        String trimmedWeightage \u003d weightage.trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"danielonges"},"content":"        if (!StringUtil.isPositivePercentageValue(trimmedWeightage)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"danielonges"},"content":"            throw new ParseException(MESSAGE_INVALID_WEIGHTAGE);","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":138,"author":{"gitId":"danielonges"},"content":"        Integer intWeightage \u003d StringUtil.convertPercentageToInteger(trimmedWeightage);","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"danielonges"},"content":"        if (!Weightage.isValidWeightage(intWeightage)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"            throw new ParseException(Weightage.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-22"},{"lineNumber":141,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"        return new Weightage(intWeightage);","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"danielonges"},"content":"     * Parses a {@code String notes} into a {@code Notes}.","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"danielonges"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":149,"author":{"gitId":"danielonges"},"content":"    public static Notes parseNotes(String notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"danielonges"},"content":"        requireNonNull(notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"danielonges"},"content":"        String trimmedRemark \u003d notes.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"danielonges"},"content":"        return new Notes(trimmedRemark);","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"mrweikiat"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"mrweikiat"},"content":"     * method to parse and return priorityTag","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"mrweikiat"},"content":"     * @param priorityTag String value of ptag","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"mrweikiat"},"content":"     * @return correct string value of ptag","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"mrweikiat"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"mrweikiat"},"content":"    public static PriorityTag parsePriorityTag(String priorityTag) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"mrweikiat"},"content":"        requireNonNull(priorityTag);","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"austenjs"},"content":"        String trimmedTag \u003d priorityTag.trim();","lastModifiedDate":"2021-04-11"},{"lineNumber":178,"author":{"gitId":"austenjs"},"content":"        if (trimmedTag.equals(\"LOW\")","lastModifiedDate":"2021-04-11"},{"lineNumber":179,"author":{"gitId":"austenjs"},"content":"                || trimmedTag.equals(\"MEDIUM\")","lastModifiedDate":"2021-04-11"},{"lineNumber":180,"author":{"gitId":"austenjs"},"content":"                || trimmedTag.equals(\"HIGH\")) {","lastModifiedDate":"2021-04-11"},{"lineNumber":181,"author":{"gitId":"austenjs"},"content":"            return new PriorityTag(trimmedTag);","lastModifiedDate":"2021-04-11"},{"lineNumber":182,"author":{"gitId":"mrweikiat"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"mrweikiat"},"content":"            throw new ParseException(PriorityTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"mrweikiat"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":198,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":199,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"austenjs"},"content":"     * Parses a {@code String numberOfDays} into a long.","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"austenjs"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"austenjs"},"content":"    public static long parseNumberOfDays(String numberOfDays) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"austenjs"},"content":"        requireNonNull(numberOfDays);","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"austenjs"},"content":"        String trimmedNumberOfDays \u003d numberOfDays.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"austenjs"},"content":"        if (!StringUtil.isNonZeroUnsignedLong(trimmedNumberOfDays)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"austenjs"},"content":"            throw new ParseException(MESSAGE_INVALID_NUMBER_OF_DAYS);","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"austenjs"},"content":"        long longNumberOfDays \u003d Long.parseLong(trimmedNumberOfDays);","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"austenjs"},"content":"        return longNumberOfDays;","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"austenjs"},"content":"     * Parses a {@code String numberOfWeeks} into a long.","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"austenjs"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"austenjs"},"content":"    public static long parseNumberOfWeeks(String numberOfWeeks) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"austenjs"},"content":"        requireNonNull(numberOfWeeks);","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"austenjs"},"content":"        String trimmedNumberOfWeeks \u003d numberOfWeeks.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"austenjs"},"content":"        if (!StringUtil.isNonZeroUnsignedLong(trimmedNumberOfWeeks)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"austenjs"},"content":"            throw new ParseException(MESSAGE_INVALID_NUMBER_OF_WEEKS);","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"austenjs"},"content":"        long longNumberOfWeeks \u003d Long.parseLong(trimmedNumberOfWeeks);","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"austenjs"},"content":"        return longNumberOfWeeks;","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"geraldfan":15,"mrweikiat":13,"danielonges":49,"-":92,"austenjs":58}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.util.SortingFlag;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"        } else if (!SortingFlag.isValidSortingType(trimmedArgs)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortingFlag.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"        return new SortCommand(new SortingFlag(trimmedArgs));","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"danielonges":28}},{"path":"src/main/java/seedu/address/logic/parser/TaskTrackerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.DoTodayCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.DueInCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.NotesCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"public class TaskTrackerParser {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"            return new DoneCommandParser().parse(arguments);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"        case DoTodayCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"            return new DoTodayCommandParser().parse(arguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"        case NotesCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"            return new NotesCommandParser().parse(arguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"        case DueInCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"            return new DueInCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"geraldfan"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"geraldfan"},"content":"            return new UndoCommand();","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"geraldfan"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"geraldfan"},"content":"            return new RedoCommand();","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"geraldfan":9,"danielonges":12,"-":75,"austenjs":8}},{"path":"src/main/java/seedu/address/logic/util/NonModifyingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.logic.util;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":" * Commands which do not modify the TaskTracker state","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"public enum NonModifyingCommand {","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    EXIT, FIND, HELP, LIST, SORT, UNDO, DUEIN, REDO","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"geraldfan":7,"austenjs":1}},{"path":"src/main/java/seedu/address/logic/util/OperationFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.util;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"public class OperationFlag {","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    public static final String ADD_FLAG \u003d \"-a\";","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"    public static final String REMOVE_FLAG \u003d \"-r\";","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Operation flag should be one of either -a or -r\";","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    public final OperationType operationType;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"     * Constructs an OperationFlag with the appropriate given type.","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"     * @throws IllegalArgumentException if the given type is invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    public OperationFlag(String operationFlag) {","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"        requireNonNull(operationFlag);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"        checkArgument(isValidOperationType(operationFlag), OperationFlag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"        switch (operationFlag) {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"        case ADD_FLAG:","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"            operationType \u003d OperationType.ADD;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"        case REMOVE_FLAG:","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"            operationType \u003d OperationType.REMOVE;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"        default:","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"            throw new IllegalArgumentException(OperationFlag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"    public OperationType getOperationType() {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"        return operationType;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"     * Checks if a given string represents a valid operation type.","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"    public static boolean isValidOperationType(String s) {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        return s.equals(ADD_FLAG) || s.equals(REMOVE_FLAG);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"                || (other instanceof OperationFlag","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 operationType.equals(((OperationFlag) other).operationType));","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"danielonges":53}},{"path":"src/main/java/seedu/address/logic/util/OperationType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.util;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.util.OperationFlag.ADD_FLAG;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.util.OperationFlag.REMOVE_FLAG;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"public enum OperationType {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"    ADD(ADD_FLAG),","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"    REMOVE(REMOVE_FLAG);","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"    private final String operationType;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    OperationType(String operationType) {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"        this.operationType \u003d operationType;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"    public String getOperationType() {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"        return operationType;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"danielonges":19}},{"path":"src/main/java/seedu/address/logic/util/SortingFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.util;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":" * Flag to indicate which type of sort is to be performed. There are three types of flag indicators: \u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":" * 1. Date \u0026 time","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":" * 2. Module code","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":" * 3. Priority tag","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"public class SortingFlag {","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"    public static final String DATE_TIME_FLAG \u003d \"dateTime\";","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"    public static final String TASK_NAME_FLAG \u003d \"taskName\";","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"    public static final String MODULE_CODE_FLAG \u003d \"moduleCode\";","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"    public static final String PRIORITY_TAG_FLAG \u003d \"priorityTag\";","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"    public static final String WEIGHTAGE_FLAG \u003d \"weightage\";","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Sorting flag should be one of either [dateTime],\"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"            + \"[taskName], [moduleCode], [priorityTag] or [weightage] (case-sensitive).\";","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"    public final SortingType sortingType;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"     * Constructs a SortingFlag with the appropriate given type.","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"     * @throws IllegalArgumentException if the given type is invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    public SortingFlag(String sortingFlag) {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"        requireNonNull(sortingFlag);","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"        checkArgument(isValidSortingType(sortingFlag), SortingFlag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"        switch (sortingFlag) {","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"        case DATE_TIME_FLAG:","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"            sortingType \u003d SortingType.DATE_TIME;","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"        case TASK_NAME_FLAG:","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"            sortingType \u003d SortingType.TASK_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"        case MODULE_CODE_FLAG:","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"            sortingType \u003d SortingType.MODULE_CODE;","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"        case PRIORITY_TAG_FLAG:","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"            sortingType \u003d SortingType.PRIORITY_TAG;","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"        case WEIGHTAGE_FLAG:","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"            sortingType \u003d SortingType.WEIGHTAGE;","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"            break;","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"        default:","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"            throw new IllegalArgumentException(SortingFlag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"    public SortingType getSortingType() {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"        return sortingType;","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"     * Checks if a given string represents a valid sorting type.","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"    public static boolean isValidSortingType(String s) {","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"        return s.equals(DATE_TIME_FLAG)","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"                || s.equals(TASK_NAME_FLAG)","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"                || s.equals(MODULE_CODE_FLAG)","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"                || s.equals(PRIORITY_TAG_FLAG)","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"                || s.equals(WEIGHTAGE_FLAG);","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"                || (other instanceof SortingFlag","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 sortingType.equals(((SortingFlag) other).sortingType));","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"    public String toString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"        return sortingType.getSortingFlag();","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"danielonges":85}},{"path":"src/main/java/seedu/address/logic/util/SortingType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.util;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":" * Enumeration that represents the three possible types of sorting flags: {@code DATE_TIME, MODULE_CODE,","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":" * PRIORITY_TAG}. \u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":" * Each type has a string label attached to it.","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"public enum SortingType {","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    DATE_TIME (SortingFlag.DATE_TIME_FLAG),","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"    TASK_NAME (SortingFlag.TASK_NAME_FLAG),","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"    MODULE_CODE (SortingFlag.MODULE_CODE_FLAG),","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    PRIORITY_TAG (SortingFlag.PRIORITY_TAG_FLAG),","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"    WEIGHTAGE (SortingFlag.WEIGHTAGE_FLAG);","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    private final String sortingFlag;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    SortingType(String sortingFlag) {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"        this.sortingFlag \u003d sortingFlag;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    public String getSortingFlag() {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"        return sortingFlag;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"danielonges":24}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d task -\u003e true;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"     * Returns the user prefs\u0027 task tracker file path.","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"    Path getTaskTrackerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"     * Sets the user prefs\u0027 task tracker file path.","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"    void setTaskTrackerFilePath(Path taskTrackerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"     * Replaces task tracker data with the data in {@code taskTracker}.","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"    void setTaskTracker(ReadOnlyTaskTracker taskTracker);","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"     * Returns the TaskTracker","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"    ReadOnlyTaskTracker getTaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task tracker.","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the daily task list.","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"    boolean hasDailyTask(Task taskToAdd);","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"     * Deletes the given task.","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"geraldfan"},"content":"     * The task must exist in the task tracker.","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"    void deleteDailyTask(Task target);","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"     * Finishes the given task.","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"     * The task must exist in the task tracker.","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"    void finishTask(Task target);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"    void finishDailyTask(Task target);","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"geraldfan"},"content":"     * Adds the given task.","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"geraldfan"},"content":"     * {@code task} must not already exist in the task tracker.","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"geraldfan"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"danielonges"},"content":"     * Adds the given task to the daily to-do list.","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"     * {@code task} must not already exist in the daily to-do list.","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"danielonges"},"content":"    void addToDailyToDoList(Task taskToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"danielonges"},"content":"     * Removes the given task from the daily to-do list.","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"danielonges"},"content":"     * {@code task} must not already exist in the daily to-do list.","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"    void removeFromDailyToDoList(Task dailyTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"geraldfan"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"geraldfan"},"content":"     * {@code target} must exist in the task tracker.","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task tracker.","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"geraldfan"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"danielonges"},"content":"     * Replaces the given task {@code target} with {@code editedTask} in the daily task tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"     * {@code target} must exist in the task tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"danielonges"},"content":"    void setDailyTask(Task target, Task editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"danielonges"},"content":"     * Sorts the TaskTracker according to the given {@code comparator}.","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"danielonges"},"content":"    void sortTasks(Comparator\u003cTask\u003e comparator);","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"geraldfan"},"content":"     * Returns an unmodifiable view of the filtered task list","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"geraldfan"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"danielonges"},"content":"     * Returns an unmodifiable view of the daily task list","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"danielonges"},"content":"    ObservableList\u003cTask\u003e getDailyTaskList();","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"geraldfan"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"geraldfan"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"     * Updates the filter of the daily task list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"danielonges"},"content":"    void updateDailyTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"danielonges"},"content":"    void refreshDailyTasks(Task target, Task editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"geraldfan"},"content":"     * Commits the taskTracker","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"geraldfan"},"content":"    void commitTaskTracker(ReadOnlyTaskTracker currentState);","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"geraldfan"},"content":"     * Undoes the last change to the TaskTracker","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"geraldfan"},"content":"     * @return Previous state of TaskTracker","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"geraldfan"},"content":"    TaskTracker undoTaskTracker();","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"geraldfan"},"content":"     * Redoes the last change to the TaskTracker after an \"undo\"","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"geraldfan"},"content":"     * @return Previous state of TaskTracker after an \"undo\"","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"geraldfan"},"content":"    TaskTracker redoTaskTracker();","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"geraldfan"},"content":"     * Checks if there is a valid TaskTracker state for undo","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"geraldfan"},"content":"     * @return True if there is a valid TaskTracker state for undo","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"geraldfan"},"content":"    boolean canUndoTaskTracker();","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"geraldfan"},"content":"     * Checks if there is a valid TaskTracker state for redo","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"geraldfan"},"content":"     * @return True if there is a valid TaskTracker state for redo","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"geraldfan"},"content":"    boolean canRedoTaskTracker();","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"geraldfan":66,"mrweikiat":1,"danielonges":35,"-":76,"austenjs":7}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"    private final TaskTracker taskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"    private final FilteredList\u003cTask\u003e dailyTasks;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"    private VersionedTaskTracker versionedTaskTracker;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"     * Initializes a ModelManager with the given taskTracker and userPrefs.","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"    public ModelManager(ReadOnlyTaskTracker taskTracker, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"        requireAllNonNull(taskTracker, userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"        logger.fine(\"Initializing with address book: \" + taskTracker + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"        this.taskTracker \u003d new TaskTracker(taskTracker);","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskTracker.getTaskList());","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"        dailyTasks \u003d new FilteredList\u003c\u003e(this.taskTracker.getDailyTaskList());","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"        this.versionedTaskTracker \u003d new VersionedTaskTracker();","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"        this(new TaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"    public Path getTaskTrackerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"        return userPrefs.getTaskTrackerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"geraldfan"},"content":"    public void setTaskTrackerFilePath(Path taskTrackerFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"geraldfan"},"content":"        requireNonNull(taskTrackerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"geraldfan"},"content":"        userPrefs.setTaskTrackerFilePath(taskTrackerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"geraldfan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskTracker \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"geraldfan"},"content":"    public void setTaskTracker(ReadOnlyTaskTracker taskTracker) {","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"geraldfan"},"content":"        this.taskTracker.resetData(taskTracker);","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"geraldfan"},"content":"    public ReadOnlyTaskTracker getTaskTracker() {","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"geraldfan"},"content":"        return taskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"geraldfan"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"geraldfan"},"content":"        return taskTracker.hasTask(task);","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"danielonges"},"content":"    public boolean hasDailyTask(Task task) {","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"danielonges"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"danielonges"},"content":"        return taskTracker.hasDailyTask(task);","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"geraldfan"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"geraldfan"},"content":"        taskTracker.removeTask(target);","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"danielonges"},"content":"    public void deleteDailyTask(Task target) {","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"danielonges"},"content":"        if (taskTracker.hasDailyTask(target)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"            taskTracker.removeDailyTask(target);","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"    public void finishTask(Task target) {","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"        taskTracker.finishTask(target);","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"danielonges"},"content":"    public void finishDailyTask(Task target) {","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"danielonges"},"content":"        if (taskTracker.hasDailyTask(target)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"danielonges"},"content":"            taskTracker.finishDailyTask(target);","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"geraldfan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"geraldfan"},"content":"        taskTracker.addTask(task);","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"austenjs"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":139,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"    public void addToDailyToDoList(Task taskToAdd) {","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"danielonges"},"content":"        // handle case where task already exists","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"        taskTracker.addDailyTask(taskToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"        updateDailyTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"danielonges"},"content":"    public void removeFromDailyToDoList(Task taskToRemove) {","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"danielonges"},"content":"        // handle case where task is not found","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"danielonges"},"content":"        taskTracker.removeDailyTask(taskToRemove);","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"geraldfan"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-10"},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":156,"author":{"gitId":"geraldfan"},"content":"        taskTracker.setTask(target, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"danielonges"},"content":"    public void setDailyTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"danielonges"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"danielonges"},"content":"        taskTracker.setDailyTask(target, editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"danielonges"},"content":"    public void sortTasks(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"danielonges"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"danielonges"},"content":"        taskTracker.sortTasks(comparator);","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"danielonges"},"content":"    public void refreshDailyTasks(Task target, Task editedTask) {","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"danielonges"},"content":"        taskTracker.refreshDailyTasks(target, editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"geraldfan"},"content":"    public void commitTaskTracker(ReadOnlyTaskTracker taskTracker) {","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"geraldfan"},"content":"        requireNonNull(taskTracker);","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"geraldfan"},"content":"        versionedTaskTracker.commit(new TaskTracker(taskTracker));","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"geraldfan"},"content":"    public TaskTracker undoTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"geraldfan"},"content":"        return versionedTaskTracker.undo();","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"geraldfan"},"content":"    public TaskTracker redoTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"geraldfan"},"content":"        return versionedTaskTracker.redo();","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"geraldfan"},"content":"    public boolean canUndoTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"geraldfan"},"content":"        return versionedTaskTracker.canUndoTaskTracker();","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"geraldfan"},"content":"    public boolean canRedoTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"geraldfan"},"content":"        return versionedTaskTracker.canRedoTaskTracker();","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"geraldfan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":206,"author":{"gitId":"geraldfan"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2021-03-10"},{"lineNumber":207,"author":{"gitId":"geraldfan"},"content":"     * {@code versionedTaskTracker}","lastModifiedDate":"2021-03-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":210,"author":{"gitId":"geraldfan"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":211,"author":{"gitId":"mrweikiat"},"content":"        return filteredTasks;","lastModifiedDate":"2021-03-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":214,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"danielonges"},"content":"    public ObservableList\u003cTask\u003e getDailyTaskList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"danielonges"},"content":"        return dailyTasks;","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":221,"author":{"gitId":"geraldfan"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":223,"author":{"gitId":"austenjs"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"danielonges"},"content":"    public void updateDailyTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"danielonges"},"content":"        dailyTasks.setPredicate(predicate);","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"geraldfan"},"content":"        return taskTracker.equals(other.taskTracker)","lastModifiedDate":"2021-03-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":248,"author":{"gitId":"mrweikiat"},"content":"            \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2021-03-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"geraldfan":55,"mrweikiat":6,"danielonges":47,"-":137,"austenjs":6}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"public interface ReadOnlyTaskTracker {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"     * Returns an unmodifiable view of the daily tasks list.","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    ObservableList\u003cTask\u003e getDailyTaskList();","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"geraldfan":4,"mrweikiat":1,"danielonges":5,"-":12}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"    Path getTaskTrackerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"geraldfan":1,"-":15}},{"path":"src/main/java/seedu/address/model/TaskTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.UniqueTaskList;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"public class TaskTracker implements ReadOnlyTaskTracker {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    private final UniqueTaskList dailyTasks;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"    {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"        dailyTasks \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    public TaskTracker() {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"     * Creates an TaskTracker using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"    public TaskTracker(ReadOnlyTaskTracker toBeCopied) {","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"    public void setDailyTasks(List\u003cTask\u003e dailyTasks) {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"        this.dailyTasks.setTasks(dailyTasks);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"     * Resets the existing data of this {@code TaskTracker} with {@code newData}.","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"    public void resetData(ReadOnlyTaskTracker newData) {","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"        setDailyTasks(newData.getDailyTaskList());","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"    //// sorting operation","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"     * Sorts the task list with the given {@code comparator}.","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"    public void sortTasks(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"        tasks.sort(comparator);","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"geraldfan"},"content":"    //// task-level operations","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"geraldfan"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"geraldfan"},"content":"        return tasks.contains(task);","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the daily task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"    public boolean hasDailyTask(Task task) {","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"danielonges"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"danielonges"},"content":"        return dailyTasks.contains(task);","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"geraldfan"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"geraldfan"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"geraldfan"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"geraldfan"},"content":"        tasks.add(p);","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"danielonges"},"content":"     * Adds a task to the daily task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"danielonges"},"content":"     * The task must not already exist in the task tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"danielonges"},"content":"    public void addDailyTask(Task taskToAdd) {","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"danielonges"},"content":"        dailyTasks.add(taskToAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"geraldfan"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"geraldfan"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"geraldfan"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"mrweikiat"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"geraldfan"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"danielonges"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask} in the daily task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"danielonges"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"danielonges"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"danielonges"},"content":"    public void setDailyTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"danielonges"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"danielonges"},"content":"        dailyTasks.setTask(target, editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"geraldfan"},"content":"     * Removes {@code key} from this {@code TaskTracker}.","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"geraldfan"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"geraldfan"},"content":"        tasks.remove(key);","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"danielonges"},"content":"     * Removes {@code key} from the daily task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"danielonges"},"content":"     * {@code key} must exist in the task tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"danielonges"},"content":"    public void removeDailyTask(Task key) {","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"danielonges"},"content":"        dailyTasks.remove(key);","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"austenjs"},"content":"     * Finishes {@code task} from this {@code TaskTracker}.","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"danielonges"},"content":"     * {@code task} must exist in the task tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"austenjs"},"content":"    public void finishTask(Task task) {","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"austenjs"},"content":"        tasks.finish(task);","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"danielonges"},"content":"    public void finishDailyTask(Task task) {","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"danielonges"},"content":"        dailyTasks.finish(task);","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"danielonges"},"content":"     * Refreshes the daily task list after any changes have been made.","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"danielonges"},"content":"     * {@code task} must exist in the task tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"danielonges"},"content":"    public void refreshDailyTasks(Task target, Task editedTask) {","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"danielonges"},"content":"        if (dailyTasks.contains(target)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"danielonges"},"content":"            dailyTasks.setTask(target, editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"geraldfan"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2021-03-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"geraldfan"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":185,"author":{"gitId":"geraldfan"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":188,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"danielonges"},"content":"    public ObservableList\u003cTask\u003e getDailyTaskList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"danielonges"},"content":"        return dailyTasks.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"geraldfan"},"content":"                || (other instanceof TaskTracker // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":197,"author":{"gitId":"geraldfan"},"content":"                \u0026\u0026 tasks.equals(((TaskTracker) other).tasks));","lastModifiedDate":"2021-03-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"geraldfan"},"content":"        return tasks.hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"geraldfan":41,"mrweikiat":3,"danielonges":75,"-":80,"austenjs":7}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"    private Path taskTrackerFilePath \u003d Paths.get(\"data\", \"tasktracker.json\");","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"        setTaskTrackerFilePath(newUserPrefs.getTaskTrackerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"    public Path getTaskTrackerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"        return taskTrackerFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"    public void setTaskTrackerFilePath(Path taskTrackerFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        requireNonNull(taskTrackerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"        this.taskTrackerFilePath \u003d taskTrackerFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"                \u0026\u0026 taskTrackerFilePath.equals(o.taskTrackerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"        return Objects.hash(guiSettings, taskTrackerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"geraldfan"},"content":"        sb.append(\"\\nLocal data file location : \" + taskTrackerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"geraldfan":10,"-":77}},{"path":"src/main/java/seedu/address/model/VersionedTaskTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":" * TaskTracker with an undo/redo history","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"public class VersionedTaskTracker extends TaskTracker {","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"    private List\u003cTaskTracker\u003e taskTrackerStateList \u003d new ArrayList\u003cTaskTracker\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"    private int currentStatePointer;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"     * Creates a VersionedTaskTracker","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"     * Initializes the currentStatePointer as 0","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"    public VersionedTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"        this.currentStatePointer \u003d 0;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"     * Commits the taskTrackerToBeCommitted into the taskTrackerStateList","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"     * @param taskTrackerToBeCommitted the TaskTracker to be committed","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    public void commit(TaskTracker taskTrackerToBeCommitted) {","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        if (!isCurrentStateNewest()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"            purgeRedundantStates();","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"        taskTrackerStateList.add(taskTrackerToBeCommitted);","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        currentStatePointer \u003d taskTrackerStateList.size() - 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"     * Undoes the last change by reverting to the previous TaskTracker state","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"     * @return previous TaskTracker as stored in the taskTrackerStateList","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"    public TaskTracker undo() {","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"        currentStatePointer -\u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"        return taskTrackerStateList.get(currentStatePointer);","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"     * Redoes the \"undo\" change by reverting to the TaskTracker state before the Undo","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"     * @return previous TaskTracker before the \"undo\" as stored in the taskTrackerStateList","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"    public TaskTracker redo() {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"        if (canRedoTaskTracker()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"            currentStatePointer +\u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        return taskTrackerStateList.get(currentStatePointer);","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"     * Checks if there is a valid TaskTracker state for redo","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"     * @return True if there is a valid TaskTracker state for redo","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"    public boolean canRedoTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"        if (currentStatePointer + 1 \u003c\u003d taskTrackerStateList.size() - 1) {","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"            return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"        return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"geraldfan"},"content":"     * Checks if there is a valid TaskTracker state for undo","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"     * @return True if there is a valid TaskTracker state for undo","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"    public boolean canUndoTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"geraldfan"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"geraldfan"},"content":"    private boolean isCurrentStateNewest() {","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"geraldfan"},"content":"        if (currentStatePointer \u003c taskTrackerStateList.size() - 1) {","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"geraldfan"},"content":"            return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"geraldfan"},"content":"        return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"geraldfan"},"content":"    private void purgeRedundantStates() {","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"geraldfan"},"content":"        taskTrackerStateList.subList(currentStatePointer + 1, taskTrackerStateList.size()).clear();","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":91,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":92,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"geraldfan":92}},{"path":"src/main/java/seedu/address/model/person/DeadlineDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":" * Represents a Task\u0027s deadlineDate in the task list.","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":" * Guarantees: is valid as declared in {@link #isValidDeadlineDate(String)}","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"public class DeadlineDate implements Comparable\u003cDeadlineDate\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"            \"Deadline date should: \\n 1.DD-MM-YYYY,\\n 2.it should exist on calendar,\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"                    + \" 3.The year is between 2020-2099, and\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"                    + \" 4.The date cannot be earlier than today.\";","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((20)[2-9][0-9])$\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    private static final DateTimeFormatter dateDateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     * Constructs a {@code DeadlineDate}.","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"     * @param deadlineDate A valid deadline date.","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"    public DeadlineDate(String deadlineDate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        requireNonNull(deadlineDate);","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        checkArgument(isValidDeadlineDate(deadlineDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        this.deadlineDate \u003d LocalDate.parse(deadlineDate, dateDateFormatter);","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"     * Returns true if a given String is a valid deadline date.","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    public static boolean isValidDeadlineDate(String test) {","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"            return false;","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"            LocalDate testingDate \u003d LocalDate.parse(test, dateDateFormatter);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"            if (testingDate.compareTo(LocalDate.now()) \u003c 0) {","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"                return false;","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"            }","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"            return false;","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        return true;","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    public String toString() {","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        return deadlineDate.format(dateDateFormatter);","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"                || (other instanceof DeadlineDate // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"                \u0026\u0026 deadlineDate.equals(((DeadlineDate) other).deadlineDate)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        return deadlineDate.hashCode();","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"    public int compareTo(DeadlineDate otherDeadline) {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        return this.deadlineDate.compareTo(otherDeadline.deadlineDate);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"austenjs":79}},{"path":"src/main/java/seedu/address/model/person/DeadlineDateInRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.DueInCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":" * Tests that a {@code Task}\u0027s {@code DeadlineDate} within the range of the given days/weeks.","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"public class DeadlineDateInRangePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    private static final DateTimeFormatter dateDateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    private static DeadlineDate maxDate \u003d new DeadlineDate(\"31-12-2099\"); // Latest date allowed","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    private static DeadlineDate today \u003d new DeadlineDate(LocalDate.now().format(dateDateFormatter));","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    private final DeadlineDate endDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    private final long numberOfDays;","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"     * A predicate to check deadlinedate of a task","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     * @param numberOfDays number of days ahead from today\u0027s date","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    public DeadlineDateInRangePredicate(long numberOfDays) throws ParseException {","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        DeadlineDate dateSpecifiedByUser;","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"            dateSpecifiedByUser \u003d new DeadlineDate(","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"                    LocalDate.now().plusDays(numberOfDays).format(dateDateFormatter));","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DueInCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        } catch (IllegalArgumentException re) {","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DueInCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"        this.numberOfDays \u003d numberOfDays;","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        this.endDate \u003d minimumOf(dateSpecifiedByUser, maxDate);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"     * Compare 2 deadlineDate and returns the minimum","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"     * @param firstDeadlineDate","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"     * @param secondDeadlineDate","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"     * @return DeadlineDate with smaller date","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"    private DeadlineDate minimumOf(DeadlineDate firstDeadlineDate, DeadlineDate secondDeadlineDate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        if (firstDeadlineDate.compareTo(secondDeadlineDate) \u003c 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"            return firstDeadlineDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"            return secondDeadlineDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        return task.getDeadlineDate().compareTo(endDate) \u003c\u003d 0","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"                \u0026\u0026 task.getDeadlineDate().compareTo(today) \u003e\u003d 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"                || (other instanceof DeadlineDateInRangePredicate // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"                \u0026\u0026 endDate.equals(((DeadlineDateInRangePredicate) other).endDate)); // task\u0027s deadline within range","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"    public String toString() {","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        return \" Show deadline for the next \" + numberOfDays + \" days\";","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"austenjs":78}},{"path":"src/main/java/seedu/address/model/person/DeadlineTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":" * Represents a Task\u0027s deadlineTime in the task list.","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":" * Guarantees: is valid as declared in {@link #isValidDeadlineTime(String)}","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"public class DeadlineTime implements Comparable\u003cDeadlineTime\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"            \"Deadline time should: \\n 1.HH:mm (24h format), and\\n 2.it should be a logical time\\n\";","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([01][0-9]|2[0-3]):([0-5][0-9])$\";","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    private LocalTime deadlineTime;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"     * Constructs a {@code DeadlineTime}.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"     * @param deadlineTime A valid deadline date.","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    public DeadlineTime(String deadlineTime) {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        requireNonNull(deadlineTime);","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"        checkArgument(isValidDeadlineTime(deadlineTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        this.deadlineTime \u003d LocalTime.parse(deadlineTime, dateTimeFormatter);","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"     * Returns true if a given String is a valid deadline date.","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    public static boolean isValidDeadlineTime(String test) {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"    public String toString() {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        return deadlineTime.format(dateTimeFormatter);","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"                || (other instanceof DeadlineTime // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"                \u0026\u0026 deadlineTime.equals(((DeadlineTime) other).deadlineTime)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        return deadlineTime.hashCode();","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"    public int compareTo(DeadlineTime otherDeadline) {","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        return this.deadlineTime.compareTo(otherDeadline.deadlineTime);","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"geraldfan":1,"austenjs":62}},{"path":"src/main/java/seedu/address/model/person/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":" * Represents a Task\u0027s name in the address book.","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModuleCode(String)}","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"public class ModuleCode implements Comparable\u003cModuleCode\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"        \"Codes should begin with uppercase CS, have 4 digits, end optionally with a \"","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"            + \"uppercase character, and it should not be blank.\\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"            + \"Only module codes between CS1XXX - CS6XXX are accepted.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[C][S][1-6]\\\\d{3}[A-Z]?\";","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"    public final String moduleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"     * Constructs a {@code ModuleCode}.","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"     * @param code A valid module code.","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    public ModuleCode(String code) {","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        requireNonNull(code);","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"        checkArgument(isValidModuleCode(code), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        moduleCode \u003d code;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    public static boolean isValidModuleCode(String test) {","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"        return moduleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"            || (other instanceof ModuleCode // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"            \u0026\u0026 moduleCode.equals(((ModuleCode) other).moduleCode)); // state check","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"        return moduleCode.hashCode();","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"    public int compareTo(ModuleCode other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"        return moduleCode.compareTo(other.moduleCode);","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"geraldfan":54,"danielonges":6,"austenjs":2}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":" * Tests that a {@code Task}\u0027s {@code TaskName} matches any of the keywords given.","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getTaskName().fullName, keyword));","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"geraldfan":2,"mrweikiat":2,"-":27}},{"path":"src/main/java/seedu/address/model/person/Notes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"public class Notes {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, and it should not be blank\";","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    public final String value;","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"     * Constructs an {@code Notes}.","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"     *","lastModifiedDate":"2021-02-23"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"     * @param notes a notes.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"    public Notes(String notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"        requireNonNull(notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"        value \u003d notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-02-23"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"    public String toString() {","lastModifiedDate":"2021-02-23"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"        return value;","lastModifiedDate":"2021-02-23"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-23"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-23"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"                || (other instanceof Notes // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"                \u0026\u0026 value.equals(((Notes) other).value)); // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"        return value.hashCode();","lastModifiedDate":"2021-02-23"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"danielonges":37}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":" * Represents a Task\u0027s status in the task list.","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"public class Status {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    private final boolean isDone;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    public Status() {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"     * Constructs a {@code Status} given the string given.","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    public Status(String status) {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"        if (status.equals(\"Finished\")) {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"     * Constructs a {@code Status} with the boolean switch.","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    public Status toggle() {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        if (isDone) {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"            return new Status(\"Unfinished\");","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"            return new Status(\"Finished\");","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"     * Returns true if isDone is true.","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    public boolean hasFinished() {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        return this.isDone;","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        return isDone ? \"Finished\" : \"Unfinished\";","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"                \u0026\u0026 (isDone \u003d\u003d (((Status) other).isDone))); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"danielonges":1,"austenjs":63}},{"path":"src/main/java/seedu/address/model/person/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"public class Task {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    private final TaskName taskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    private final DeadlineDate deadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    private final DeadlineTime deadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    private final Status status;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"    private final Weightage weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    private final PriorityTag priorityTag;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"    private final Notes notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"     * Task takes in priorityTag as an additional attribute","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"    public Task(TaskName taskName, ModuleCode moduleCode, DeadlineDate deadlineDate,","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"                DeadlineTime deadlineTime, Status status, Weightage weightage,","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"                Notes notes, Set\u003cTag\u003e tags, PriorityTag priorityTag) {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"        requireAllNonNull(taskName, moduleCode, status, tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"        this.priorityTag \u003d priorityTag;","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"    public Task(TaskName taskName, ModuleCode moduleCode, DeadlineDate deadlineDate,","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"                DeadlineTime deadlineTime, Status status, Weightage weightage,","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"                Notes notes, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"        requireAllNonNull(taskName, moduleCode, status, tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"        this.priorityTag \u003d new PriorityTag(\"LOW\");","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"geraldfan"},"content":"    public TaskName getTaskName() {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"geraldfan"},"content":"        return taskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"    public ModuleCode getModuleCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"geraldfan"},"content":"        return moduleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"    public DeadlineDate getDeadlineDate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        return deadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"    public DeadlineTime getDeadlineTime() {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"        return deadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"    public Status getStatus() {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        return status;","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"    public Weightage getWeightage() {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"        return weightage;","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"danielonges"},"content":"    public Notes getNotes() {","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"        return notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":99,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"    public PriorityTag getPriorityTag() {","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":"        return priorityTag;","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"    public boolean hasFinished() {","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"        return status.hasFinished();","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"     * Finish a task and return a new Task with status finished","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"    public Task finishTask() {","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"geraldfan"},"content":"        return new Task(this.taskName, this.moduleCode, this.deadlineDate,","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"                this.deadlineTime, this.status.toggle(), this.weightage, this.notes, this.tags, this.priorityTag);","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"geraldfan"},"content":"     * Returns true if both tasks have the same taskName and data fields.","lastModifiedDate":"2021-04-07"},{"lineNumber":126,"author":{"gitId":"geraldfan"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-04-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"danielonges"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"geraldfan"},"content":"        if (otherTask \u003d\u003d null) {","lastModifiedDate":"2021-04-07"},{"lineNumber":130,"author":{"gitId":"geraldfan"},"content":"            return false;","lastModifiedDate":"2021-04-07"},{"lineNumber":131,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":132,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":133,"author":{"gitId":"geraldfan"},"content":"        if (otherTask.equals(this)) {","lastModifiedDate":"2021-04-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"geraldfan"},"content":"        return false;","lastModifiedDate":"2021-04-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"geraldfan"},"content":"     * Returns true if both tasks have the same task name and data fields.","lastModifiedDate":"2021-04-07"},{"lineNumber":142,"author":{"gitId":"geraldfan"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-04-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"mrweikiat"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"geraldfan"},"content":"        return otherTask.getTaskName().equals(getTaskName())","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"geraldfan"},"content":"            \u0026\u0026 otherTask.getModuleCode().equals(getModuleCode())","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"austenjs"},"content":"            \u0026\u0026 otherTask.getDeadlineDate().equals(getDeadlineDate())","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"austenjs"},"content":"            \u0026\u0026 otherTask.getDeadlineTime().equals(getDeadlineTime())","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"austenjs"},"content":"            \u0026\u0026 otherTask.getStatus().equals(getStatus())","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"danielonges"},"content":"            \u0026\u0026 otherTask.getWeightage().equals(getWeightage())","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"danielonges"},"content":"            \u0026\u0026 otherTask.getNotes().equals(getNotes())","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"mrweikiat"},"content":"            \u0026\u0026 otherTask.getTags().equals(getTags());","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"danielonges"},"content":"        return Objects.hash(taskName, moduleCode, weightage, notes, tags);","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"geraldfan"},"content":"        builder.append(getTaskName())","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"geraldfan"},"content":"            .append(\"; Module Code: \")","lastModifiedDate":"2021-03-11"},{"lineNumber":176,"author":{"gitId":"geraldfan"},"content":"            .append(getModuleCode())","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"austenjs"},"content":"            .append(\"; Deadline Date: \")","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"austenjs"},"content":"            .append(getDeadlineDate())","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"austenjs"},"content":"            .append(\"; Deadline Time: \")","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"austenjs"},"content":"            .append(getDeadlineTime())","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"austenjs"},"content":"            .append(\"; Status: \")","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"austenjs"},"content":"            .append(getStatus())","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"danielonges"},"content":"            .append(\"; Weightage: \")","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"danielonges"},"content":"            .append(getWeightage())","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"danielonges"},"content":"            .append(\"; Notes: \")","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"danielonges"},"content":"            .append(getNotes())","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"mrweikiat"},"content":"            .append(\"; PriorityTag: \")","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"mrweikiat"},"content":"            .append(getPriorityTag().getTagName());","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"geraldfan":28,"mrweikiat":36,"danielonges":19,"-":72,"austenjs":43}},{"path":"src/main/java/seedu/address/model/person/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":" * Represents a Task\u0027s name in the address book.","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"public class TaskName implements Comparable\u003cTaskName\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"     * Constructs a {@code TaskName}.","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"    public TaskName(String name) {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"                || (other instanceof TaskName // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"                \u0026\u0026 fullName.equals(((TaskName) other).fullName)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"    public int compareTo(TaskName other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"        return fullName.compareTo(other.fullName);","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"geraldfan":5,"danielonges":6,"-":53}},{"path":"src/main/java/seedu/address/model/person/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"geraldfan"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"geraldfan"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"     * Finishes the equivalent task from the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"    public void finish(Task toFinish) {","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"        requireNonNull(toFinish);","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"        int index \u003d internalList.indexOf(toFinish);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"        internalList.set(index, toFinish.finishTask());","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"geraldfan"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"geraldfan"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"geraldfan"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"geraldfan"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"geraldfan"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"     * Sorts this list with the given {@code comparator}.","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"danielonges"},"content":"    public void sort(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"danielonges"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"danielonges"},"content":"        FXCollections.sort(internalList, comparator);","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"mrweikiat"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"mrweikiat"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"geraldfan"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"geraldfan"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"geraldfan"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2021-03-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"geraldfan"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-10"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-03-09"},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"danielonges"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"geraldfan":30,"mrweikiat":13,"danielonges":13,"-":90,"austenjs":15}},{"path":"src/main/java/seedu/address/model/person/Weightage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":" * Represents a Task\u0027s weightage (as a percentage) in the task tracker.","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"public class Weightage implements Comparable\u003cWeightage\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Weightage should be a percentage value greater or equal to 0%,\"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"            + \" and lesser or equal to 100%.\";","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"    public final Integer weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"     * Constructs a {@code Weightage}.","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"     * @param weightage a valid integer representing the weightage of a task.","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    public Weightage(Integer weightage) {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"        requireNonNull(weightage);","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"        checkArgument(isValidWeightage(weightage), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"     * Returns true if the weightage is a value greater or equal to 0, and less or equal to 100.","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"    public static boolean isValidWeightage(Integer weightage) {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"        return weightage \u003e\u003d 0 \u0026\u0026 weightage \u003c\u003d 100;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"    public String toString() {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"        return String.format(\"%d%%\", weightage);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"            || (other instanceof Weightage) // instanceof handles null","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"            \u0026\u0026 weightage.equals(((Weightage) other).weightage);","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"        return weightage.hashCode();","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"    public int compareTo(Weightage otherWeightage) {","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"        return weightage - otherWeightage.weightage;","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"danielonges":56}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"geraldfan":3,"-":8}},{"path":"src/main/java/seedu/address/model/person/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"geraldfan":1,"-":5}},{"path":"src/main/java/seedu/address/model/tag/PriorityTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":" * Represents a priority tag in the task","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":" *","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"public class PriorityTag {","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"PriorityTag should be a LOW/MEDIUM/HIGH\";","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"    public static final String MESSAGE_INVALID_INPUT \u003d \"Invalid Input, setting priority tag to default LOW\";","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"    private State state;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    private String tagName;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    public PriorityTag(String tagName) {","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"        boolean isValidTag \u003d validateTag(tagName);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"        checkArgument(isValidTag);","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"        if (isValidTag) {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"            setState(tagName);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"            this.state \u003d state.LOW;","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"            this.tagName \u003d \"LOW\";","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"     * method to return state of ptag","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"     * @return state of the ptag","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"    public State getState() {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"        return this.state;","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"     * method to return the state of the ptag in String value","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"     * @return String value of the ptag","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"    public String getTagName() {","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"        return this.tagName;","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"     * method to return the priority value of the priority tag","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"     * @return int value of priority tag","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"    public int getPriority() {","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"        return this.state.getPriorityValue();","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"     * method to validate if is valid tagName","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"     * @param tagName String value of tagName to validate","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"     * @return boolean value to validated","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"    public static boolean validateTag(String tagName) {","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"        try {","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"            if (tagName.equals(\"LOW\") || tagName.equals(\"MEDIUM\") || tagName.equals(\"HIGH\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"                return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"            } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"                return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"            return false;","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"     * method to init state for priorityTag","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"     * @param tagName String value of priorityTag","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"    private void setState(String tagName) {","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"        if (tagName.equals(\"LOW\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":"            this.state \u003d state.LOW;","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":"            this.tagName \u003d tagName;","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"        } else if (tagName.equals(\"MEDIUM\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"            this.state \u003d state.MEDIUM;","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"            this.tagName \u003d tagName;","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"            this.state \u003d state.HIGH;","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"            this.tagName \u003d tagName;","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"                || (other instanceof PriorityTag // instanceof handles nulls","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"                \u0026\u0026 tagName.equals(((PriorityTag) other).tagName)); // state check","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"mrweikiat":100,"austenjs":9}},{"path":"src/main/java/seedu/address/model/tag/State.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"public enum State {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"    LOW(1),","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"    MEDIUM(2),","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"    HIGH(3);","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"    private final int priorityValue;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    State(int priorityValue) {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"        this.priorityValue \u003d priorityValue;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"    public int getPriorityValue() {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"        return priorityValue;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"mrweikiat":18}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":" * Contains utility methods for populating {@code TaskTracker} with sample data.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"    public static final Notes EMPTY_NOTES \u003d new Notes(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\");","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    public static final DeadlineDate DEFAULT_DATE \u003d new DeadlineDate(","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"            LocalDate.now().plusDays(5).format(FORMATTER)); // 5 days after today","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"        return new Task[]{","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"            new Task(new TaskName(\"Week 10 Quiz\"), new ModuleCode(\"CS2103\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"                    DEFAULT_DATE, new DeadlineTime(\"10:10\"),","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"                new Status(), new Weightage(0),","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"                    EMPTY_NOTES, getTagSet(\"core\"), new PriorityTag(\"LOW\")),","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"            new Task(new TaskName(\"Take Home lab 1\"), new ModuleCode(\"CS2040\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"                    DEFAULT_DATE, new DeadlineTime(\"10:10\"),","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"                new Status(), new Weightage(10),","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"                    EMPTY_NOTES, getTagSet(\"core\", \"difficult\"), new PriorityTag(\"MEDIUM\")),","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"            new Task(new TaskName(\"Tutorial 6\"), new ModuleCode(\"CS1010\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"                    DEFAULT_DATE, new DeadlineTime(\"10:10\"),","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"                new Status(\"Finished\"), new Weightage(20),","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"                    EMPTY_NOTES, getTagSet(\"core\"), new PriorityTag(\"HIGH\")),","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"            new Task(new TaskName(\"Tutorial 5\"), new ModuleCode(\"CS2030\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"                    DEFAULT_DATE, new DeadlineTime(\"10:10\"),","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"                new Status(), new Weightage(10),","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"                    EMPTY_NOTES, getTagSet(\"core\"), new PriorityTag(\"LOW\")),","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"            new Task(new TaskName(\"Weekly Readings\"), new ModuleCode(\"CS3243\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"                    DEFAULT_DATE, new DeadlineTime(\"10:10\"),","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"                new Status(), new Weightage(20),","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"                    EMPTY_NOTES, getTagSet(\"specialization\"), new PriorityTag(\"MEDIUM\")),","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"            new Task(new TaskName(\"Write Tests\"), new ModuleCode(\"CS3244\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"                    DEFAULT_DATE, new DeadlineTime(\"10:10\"),","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"                new Status(\"Finished\"), new Weightage(15),","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"                    EMPTY_NOTES, getTagSet(\"specialization\"), new PriorityTag(\"HIGH\"))","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"    public static ReadOnlyTaskTracker getSampleTaskTracker() {","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"        TaskTracker sampleAb \u003d new TaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"            sampleAb.addTask(sampleTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"geraldfan":18,"mrweikiat":9,"danielonges":5,"-":28,"austenjs":20}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"    private final String taskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    private final String moduleCode;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"    private final String deadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    private final String deadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    private final String status;","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"    private final Integer weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"    private final String notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"    private final String priorityTag;","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given person details.","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"    public JsonAdaptedTask(@JsonProperty(\"taskName\") String taskName,","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"                           @JsonProperty(\"moduleCode\") String moduleCode,","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"                           @JsonProperty(\"deadlineDate\") String deadlineDate,","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"                           @JsonProperty(\"deadlineTime\") String deadlineTime,","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"                           @JsonProperty(\"status\") String status,","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"                           @JsonProperty(\"weightage\") Integer weightage,","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"                           @JsonProperty(\"notes\") String notes,","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"                           @JsonProperty(\"priorityTag)\") String priorityTag) {","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"        this.priorityTag \u003d priorityTag;","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"        taskName \u003d source.getTaskName().fullName;","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        moduleCode \u003d source.getModuleCode().moduleCode;","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"        deadlineDate \u003d source.getDeadlineDate().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        deadlineTime \u003d source.getDeadlineTime().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"        status \u003d source.getStatus().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"        weightage \u003d source.getWeightage().weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"        notes \u003d source.getNotes().value;","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"        priorityTag \u003d source.getPriorityTag().getTagName();","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"geraldfan"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"geraldfan"},"content":"                TaskName.class.getSimpleName()));","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"geraldfan"},"content":"        if (!TaskName.isValidName(taskName)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"geraldfan"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"geraldfan"},"content":"        final TaskName modelTaskName \u003d new TaskName(taskName);","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"        if (moduleCode \u003d\u003d null) {","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"geraldfan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"geraldfan"},"content":"                ModuleCode.class.getSimpleName()));","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"        if (!ModuleCode.isValidModuleCode(moduleCode)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"geraldfan"},"content":"            throw new IllegalValueException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"        final ModuleCode modelModuleCode \u003d new ModuleCode(moduleCode);","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"austenjs"},"content":"        if (deadlineDate \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"                DeadlineDate.class.getSimpleName()));","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"        if (!DeadlineDate.isValidDeadlineDate(deadlineDate)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"            throw new IllegalValueException(DeadlineDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"        final DeadlineDate modelDeadlineDate \u003d new DeadlineDate(deadlineDate);","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"        if (deadlineTime \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"                DeadlineTime.class.getSimpleName()));","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"        if (!DeadlineTime.isValidDeadlineTime(deadlineTime)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"austenjs"},"content":"            throw new IllegalValueException(DeadlineTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"austenjs"},"content":"        final DeadlineTime modelDeadlineTime \u003d new DeadlineTime(deadlineTime);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"austenjs"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"austenjs"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"austenjs"},"content":"                Status.class.getSimpleName()));","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"austenjs"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"danielonges"},"content":"        if (weightage \u003d\u003d null) {","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"danielonges"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-12"},{"lineNumber":139,"author":{"gitId":"danielonges"},"content":"                Weightage.class.getSimpleName()));","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"danielonges"},"content":"        if (!Weightage.isValidWeightage(weightage)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"            throw new IllegalValueException(Weightage.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"danielonges"},"content":"        final Weightage modelWeightage \u003d new Weightage(weightage);","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":146,"author":{"gitId":"danielonges"},"content":"        if (notes \u003d\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"danielonges"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Notes.class.getSimpleName()));","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":149,"author":{"gitId":"danielonges"},"content":"        final Notes modelNotes \u003d new Notes(notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"        if (!PriorityTag.validateTag(priorityTag)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"            throw new IllegalValueException(PriorityTag.MESSAGE_INVALID_INPUT);","lastModifiedDate":"2021-04-11"},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"mrweikiat"},"content":"        final PriorityTag modelPriorityTag \u003d new PriorityTag(priorityTag);","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"geraldfan"},"content":"        return new Task(modelTaskName, modelModuleCode, modelDeadlineDate,","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"danielonges"},"content":"            modelDeadlineTime, modelStatus, modelWeightage, modelNotes, modelTags, modelPriorityTag);","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"geraldfan":18,"mrweikiat":19,"danielonges":25,"-":53,"austenjs":47}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":" * An Immutable TaskTracker that is serializable to JSON format.","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"@JsonRootName(value \u003d \"tasktracker\")","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"class JsonSerializableTaskTracker {","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"     * Constructs a {@code JsonSerializableTaskTracker} with the given tasks.","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"    public JsonSerializableTaskTracker(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"     * Converts a given {@code ReadOnlyTaskTracker} into this class for Jackson use.","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskTracker}.","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"    public JsonSerializableTaskTracker(ReadOnlyTaskTracker source) {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"     * Converts this address book into the model\u0027s {@code TaskTracker} object.","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"    public TaskTracker toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"        TaskTracker taskTracker \u003d new TaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"            if (taskTracker.hasTask(task)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"            taskTracker.addTask(task);","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"        return taskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"geraldfan":23,"mrweikiat":2,"-":36}},{"path":"src/main/java/seedu/address/storage/JsonTaskTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":" * A class to access TaskTracker data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"public class JsonTaskTrackerStorage implements TaskTrackerStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskTrackerStorage.class);","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    public JsonTaskTrackerStorage(Path filePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"    public Path getTaskTrackerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    public Optional\u003cReadOnlyTaskTracker\u003e readTaskTracker() throws DataConversionException {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"        return readTaskTracker(filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"     * Similar to {@link #readTaskTracker()}.","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"    public Optional\u003cReadOnlyTaskTracker\u003e readTaskTracker(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"        Optional\u003cJsonSerializableTaskTracker\u003e jsonTaskTracker \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"                filePath, JsonSerializableTaskTracker.class);","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"        if (!jsonTaskTracker.isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"            return Optional.of(jsonTaskTracker.get().toModelType());","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"    public void saveTaskTracker(ReadOnlyTaskTracker taskTracker) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"        saveTaskTracker(taskTracker, filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"geraldfan"},"content":"     * Similar to {@link #saveTaskTracker(ReadOnlyTaskTracker)}.","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"    public void saveTaskTracker(ReadOnlyTaskTracker taskTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"        requireNonNull(taskTracker);","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"geraldfan"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskTracker(taskTracker), filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"geraldfan":23,"-":60}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"public interface Storage extends TaskTrackerStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"    Path getTaskTrackerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"    Optional\u003cReadOnlyTaskTracker\u003e readTaskTracker() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"    void saveTaskTracker(ReadOnlyTaskTracker taskTracker) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"geraldfan":5,"-":28}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":" * Manages storage of TaskTracker data in local storage.","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    private TaskTrackerStorage taskTrackerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"     * Creates a {@code StorageManager} with the given {@code TaskTrackerStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    public StorageManager(TaskTrackerStorage taskTrackerStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"        this.taskTrackerStorage \u003d taskTrackerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskTracker methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"    public Path getTaskTrackerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"        return taskTrackerStorage.getTaskTrackerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"    public Optional\u003cReadOnlyTaskTracker\u003e readTaskTracker() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"        return readTaskTracker(taskTrackerStorage.getTaskTrackerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"    public Optional\u003cReadOnlyTaskTracker\u003e readTaskTracker(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"        return taskTrackerStorage.readTaskTracker(filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"geraldfan"},"content":"    public void saveTaskTracker(ReadOnlyTaskTracker taskTracker) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"        saveTaskTracker(taskTracker, taskTrackerStorage.getTaskTrackerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"    public void saveTaskTracker(ReadOnlyTaskTracker taskTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"geraldfan"},"content":"        taskTrackerStorage.saveTaskTracker(taskTracker, filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"geraldfan":19,"-":62}},{"path":"src/main/java/seedu/address/storage/TaskTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":" * Represents a storage for {@link TaskTracker}.","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"public interface TaskTrackerStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    Path getTaskTrackerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"     * Returns TaskTracker data as a {@link ReadOnlyTaskTracker}.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"    Optional\u003cReadOnlyTaskTracker\u003e readTaskTracker() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"     * @see #getTaskTrackerFilePath()","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    Optional\u003cReadOnlyTaskTracker\u003e readTaskTracker(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"     * Saves the given {@link ReadOnlyTaskTracker} to the storage.","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"     * @param taskTracker cannot be null.","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"    void saveTaskTracker(ReadOnlyTaskTracker taskTracker) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"     * @see #saveTaskTracker(ReadOnlyTaskTracker)","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"    void saveTaskTracker(ReadOnlyTaskTracker taskTracker, Path filePath) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"geraldfan":19,"-":32}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103-t14-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"austenjs":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    private TaskListPanel dailyTaskListPanel;","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    @FXML","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"    private StackPane dailyTaskListPanelPlaceholder;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"geraldfan"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"geraldfan"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"danielonges"},"content":"        dailyTaskListPanel \u003d new TaskListPanel(logic.getDailyTaskList());","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"geraldfan"},"content":"        dailyTaskListPanelPlaceholder.getChildren().add(dailyTaskListPanel.getRoot());","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"geraldfan"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTaskTrackerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"geraldfan"},"content":"    public TaskListPanel getTaskListPanel() {","lastModifiedDate":"2021-03-10"},{"lineNumber":174,"author":{"gitId":"geraldfan"},"content":"        return taskListPanel;","lastModifiedDate":"2021-03-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"geraldfan":10,"danielonges":1,"-":191,"austenjs":1}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        saveLocationStatus.setText(saveLocation.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":26,"austenjs":1}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.tag.State;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"    private static final String FXML \u003d \"TaskCard.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    private static final String STYLE_PRIORITY_TAG_LOW \u003d \"-fx-background-color: green;\";","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"    private static final String STYLE_PRIORITY_TAG_MEDIUM \u003d \"-fx-background-color: yellow; -fx-text-fill: black;\";","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"    private static final String STYLE_PRIORITY_TAG_HIGH \u003d \"-fx-background-color: red;\";","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"    private static final String STATUS_PREFIX \u003d \"Status: \";","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"    private static final String FINISHED_EMOJI \u003d \"finished ☑\";","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"    private static final String UNFINISHED_EMOJI \u003d \"not finished ☒\";","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on TaskTracker level 4\u003c/a\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"    public final Task task;","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"    private Label taskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"    private Label priorityTag;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"    private Label moduleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"    private Label deadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"    private Label deadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"    private Label status;","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"    private Label weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"    private Label notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"    @FXML","lastModifiedDate":"2021-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"geraldfan"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"geraldfan"},"content":"        taskName.setText(task.getTaskName().fullName);","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"        if (task.getStatus().hasFinished()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"            status.setText(STATUS_PREFIX + FINISHED_EMOJI);","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"            status.setText(STATUS_PREFIX + UNFINISHED_EMOJI);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"        priorityTag.setText(task.getPriorityTag().getTagName());","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"        priorityTag.styleProperty().bind(Bindings.createStringBinding(() -\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"            State priorityTagLevel \u003d task.getPriorityTag().getState();","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"            switch (priorityTagLevel) {","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"            case HIGH:","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"                return STYLE_PRIORITY_TAG_HIGH;","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"            case MEDIUM:","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"                return STYLE_PRIORITY_TAG_MEDIUM;","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"            case LOW:","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"                return STYLE_PRIORITY_TAG_LOW;","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"danielonges"},"content":"            default:","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"                return \"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"        }));","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"geraldfan"},"content":"        moduleCode.setText(task.getModuleCode().moduleCode);","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"        deadlineDate.setText(\"Submission date : \" + task.getDeadlineDate().toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"        deadlineTime.setText(\"Submission time : \" + task.getDeadlineTime().toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"        weightage.setText(\"Weightage : \" + task.getWeightage().toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"        notes.setText(\"Notes: \" + task.getNotes().value);","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"        task.getTags().stream()","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"geraldfan"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"geraldfan"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"geraldfan":12,"mrweikiat":5,"danielonges":40,"-":53,"austenjs":10}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"geraldfan":11,"mrweikiat":5,"-":33}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/semesterConfigLogo.png\";","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":88,"austenjs":1}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here. You can try \u0027help\u0027\"/\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":8,"austenjs":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"danielonges"},"content":"#priorityTag {","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"danielonges"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"danielonges"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"danielonges"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"danielonges"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"danielonges"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"danielonges":9,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"semester.config\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    \u003cImage url\u003d\"@/images/semesterConfigLogo.png\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"                  \u003cSplitPane dividerPositions\u003d\"0.5\"\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"                     \u003citems\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"                        \u003cVBox fx:id\u003d\"taskList1\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"                              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"                              \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"All Tasks\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"                        \u003cVBox fx:id\u003d\"taskList21\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"                              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"                              \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Daily Tasks\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"                     \u003c/items\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"                  \u003c/SplitPane\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"                    \u003cSplitPane dividerPositions\u003d\"0.5\"\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"                \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"                  \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"                      \u003cVBox fx:id\u003d\"taskList2\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"geraldfan"},"content":"                  \u003cStackPane fx:id\u003d\"dailyTaskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"              \u003c/SplitPane\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"geraldfan":2,"danielonges":36,"-":48,"austenjs":5}},{"path":"src/main/resources/view/TaskCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"        \u003cLabel fx:id\u003d\"taskName\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"      \u003cLabel fx:id\u003d\"priorityTag\" text\u003d\"\\$priorityTag\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"               \u003cInsets bottom\u003d\"1.0\" left\u003d\"1.0\" right\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"               \u003cInsets bottom\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"            \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"      \u003cLabel fx:id\u003d\"moduleCode\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$moduleCode\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"      \u003cLabel fx:id\u003d\"deadlineDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"      \u003cLabel fx:id\u003d\"deadlineTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"      \u003cLabel fx:id\u003d\"weightage\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$weightage\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"      \u003cLabel fx:id\u003d\"notes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$notes\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"danielonges":17,"-":29,"austenjs":4}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"geraldfan":1,"-":7}},{"path":"src/test/data/JsonSerializableTaskTrackerTest/duplicateTaskTaskTracker.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"  \"tasks\": [ {","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"    \"taskName\" : \"Weekly Quiz\",","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\" : \"CS2103\",","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"10-04-2022\",","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"    \"weightage\" : 0,","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ \"core\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    \"priorityTag\": \"HIGH\"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"    \"taskName\" : \"Weekly Quiz\",","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\" : \"CS2103\",","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"10-04-2022\",","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"    \"weightage\" : 0,","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ \"core\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    \"priorityTag\" : \"HIGH\"","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"geraldfan":3,"mrweikiat":4,"danielonges":4,"-":4,"austenjs":8}},{"path":"src/test/data/JsonSerializableTaskTrackerTest/invalidTaskTaskTracker.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"  \"tasks\": [ {","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"    \"taskName\" : \"Weekly Quiz\",","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\" : \"CS21033\",","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"10-04-20201\",","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:101\",","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    \"weightage\" : -10,","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ \"core\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    \"PriorityTag\" : \"LOW\"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"geraldfan":2,"mrweikiat":2,"danielonges":1,"-":3,"austenjs":5}},{"path":"src/test/data/JsonSerializableTaskTrackerTest/typicalTasksTaskTracker.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"  \"_comment\": \"TaskTracker save file which contains the same Task values as in TypicalTasks#getTypicalTaskTracker()\",","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"  \"tasks\" : [ {","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"    \"taskName\": \"Week 10 Quiz\",","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\": \"CS2103\",","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"09-10-2022\",","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    \"weightage\" : 0,","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"Being a software engineer is fun\",","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"    \"priorityTag\" : \"LOW\"","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"    \"taskName\": \"Take Home lab 1\",","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\": \"CS2040\",","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"10-10-2022\",","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"    \"weightage\" : 0,","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"Favourite pastime: Kattis\",","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    \"priorityTag\" : \"HIGH\"","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"    \"taskName\": \"Tutorial 6\",","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\": \"CS1010\",","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"09-10-2022\",","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"    \"weightage\" : 0,","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"PE1\",","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"    \"priorityTag\" : \"MEDIUM\"","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"    \"taskName\": \"Tutorial 5\",","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\": \"CS2030\",","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"10-10-2022\",","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"    \"weightage\" : 0,","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"PE2\",","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"    \"priorityTag\" : \"HIGH\"","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"    \"taskName\": \"Weekly Readings\",","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\": \"CS3243\",","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"08-10-2022\",","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"    \"weightage\" : 0,","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"    \"priorityTag\" : \"LOW\"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"    \"taskName\": \"Write Tests\",","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\": \"CS2100\",","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"13-10-2022\",","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"    \"weightage\" : 0,","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"    \"priorityTag\" : \"MEDIUM\"","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"geraldfan":8,"mrweikiat":12,"danielonges":12,"-":8,"austenjs":24}},{"path":"src/test/data/JsonTaskTrackerStorageTest/invalidAndValidTaskTaskTracker.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"  \"tasks\": [ {","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"    \"taskName\" : \"Weekly Quiz\",","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\" : \"CS2103\",","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"10-04-2020\",","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    \"weightage\" : 0,","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ \"core\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    \"priorityTag\" : \"LOW\"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"    \"taskName\" : \"Invalid Module Code\",","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\" : \"CS2103213\",","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    \"deadlineDate\" : \"10-04-2020\",","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    \"deadlineTime\" : \"10:10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    \"status\" : \"Unfinished\",","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    \"weightage\" : 0,","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    \"tagged\" : [ \"core\" ],","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    \"priorityTag\" : \"HIGH\"","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"geraldfan":2,"mrweikiat":4,"danielonges":2,"-":4,"austenjs":11}},{"path":"src/test/data/JsonTaskTrackerStorageTest/invalidTaskTaskTracker.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"  \"tasks\": [ {","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"    \"taskName\": \"Task with invalid name field: S0ftw4r3 3ng1n33r1ng\",","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"    \"moduleCode\": \"CS2103\",","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"    \"email\": \"hans@example.com\"","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"geraldfan":1,"danielonges":1,"-":4,"austenjs":2}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"  \"addressBookFilePath\" : \"./data/tasktracker.json\"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":12,"austenjs":1}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"  \"addressBookFilePath\" : \"./data/tasktracker.json\"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":10,"austenjs":1}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"        //Other config","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        assertTrue(defaultConfig.equals(new Config()));","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"        //Self object","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        //Different objects","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        assertFalse(defaultConfig.equals(5)); // Integer","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        assertFalse(defaultConfig.equals(\"Random\")); // String","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        assertFalse(defaultConfig.equals(new Object())); // Object","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":27,"austenjs":11}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(-2));","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(-1));","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        assertEquals(123, Index.fromOneBased(123).getOneBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"        assertEquals(124, Index.fromOneBased(125).getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-3));","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-2));","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"        assertEquals(123, Index.fromZeroBased(123).getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"        assertEquals(126, Index.fromZeroBased(125).getOneBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        final Index fifthPersonIndexOneBased \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        final Index fifthPersonIndexZeroBased \u003d Index.fromZeroBased(4);","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        assertTrue(fifthPersonIndexOneBased.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"        assertTrue(fifthPersonIndexOneBased.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        assertTrue(fifthPersonIndexZeroBased.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        assertTrue(fifthPersonIndexZeroBased.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        assertTrue(fifthPersonIndexOneBased.equals(fifthPersonIndexZeroBased));","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        assertTrue(fifthPersonIndexOneBased.equals(fifthPersonIndexOneBased));","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        assertTrue(fifthPersonIndexZeroBased.equals(fifthPersonIndexZeroBased));","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        assertFalse(fifthPersonIndexOneBased.equals(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"        assertFalse(fifthPersonIndexZeroBased.equals(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        assertFalse(fifthPersonIndexOneBased.equals(5.0f));","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        assertFalse(fifthPersonIndexOneBased.equals(5L));","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        assertFalse(fifthPersonIndexZeroBased.equals(5.0f));","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        assertFalse(fifthPersonIndexZeroBased.equals(5L));","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"        assertFalse(fifthPersonIndexOneBased.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        assertFalse(fifthPersonIndexOneBased.equals(Index.fromZeroBased(1)));","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"austenjs":25}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"        assertNotNull(AppUtil.getImage(\"/images/semesterConfigLogo.png\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":36,"austenjs":1}},{"path":"src/test/java/seedu/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-12-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        // argument lists with all null elements","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"        assertNullPointerExceptionThrown(null, null);","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        assertNullPointerExceptionThrown(null, null, null);","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"        // list with all null elements","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, null));","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, null, null));","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":108,"austenjs":8}},{"path":"src/test/java/seedu/address/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"    public void save_nullFileAndConfig_throwsNullPointerException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, null));","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":116,"austenjs":5}},{"path":"src/test/java/seedu/address/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"        assertTrue(FileUtil.isValidPath(\"\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":23,"austenjs":1}},{"path":"src/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"    public void jsonUtil_readJsonStringToObjectInstance_correctObject() throws DataConversionException {","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        Optional\u003cSerializableTestClass\u003e readJsonFile \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"                SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        assertFalse(readJsonFile.isEmpty());","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        SerializableTestClass serializableTestClass \u003d readJsonFile.get();","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    public void jsonUtil_writeThenReadObjectToJson_correctObject() throws IOException, DataConversionException {","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        //Write","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"        JsonUtil.saveJsonFile(serializableTestClass, SERIALIZATION_FILE);","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"        //Read","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"        SerializableTestClass readSerializableTestClass \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"                SERIALIZATION_FILE, SerializableTestClass.class).get();","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        assertEquals(serializableTestClass.getName(), readSerializableTestClass.getName());","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(),","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"                readSerializableTestClass.getListOfLocalDateTimes());","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(),","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"                readSerializableTestClass.getMapOfIntegerToString());","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":43,"austenjs":33}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"    public void containsWordIgnoreCase_nullWordAndSentence_throwsNullPointerException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, null));","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":143,"austenjs":5}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CODE_DESC_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHTAGE_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"import seedu.address.storage.JsonTaskTrackerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"        JsonTaskTrackerStorage taskTrackerStorage \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"                new JsonTaskTrackerStorage(temporaryFolder.resolve(\"taskTracker.json\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"        StorageManager storage \u003d new StorageManager(taskTrackerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"        // Setup LogicManager with JsonTaskTrackerIoExceptionThrowingStub","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"        JsonTaskTrackerStorage taskTrackerStorage \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"                new JsonTaskTrackerIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionTaskTracker.json\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"        StorageManager storage \u003d new StorageManager(taskTrackerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"                + CODE_DESC_AMY + WEIGHTAGE_DESC_AMY + DATE_DESC_AMY + TIME_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"        Task expectedTask \u003d new TaskBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"geraldfan"},"content":"        expectedModel.addTask(expectedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"geraldfan"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"geraldfan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"geraldfan"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"geraldfan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"geraldfan"},"content":"    private static class JsonTaskTrackerIoExceptionThrowingStub extends JsonTaskTrackerStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"geraldfan"},"content":"        private JsonTaskTrackerIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"geraldfan"},"content":"        public void saveTaskTracker(ReadOnlyTaskTracker taskTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":165,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"geraldfan":19,"mrweikiat":4,"danielonges":6,"-":135,"austenjs":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"        model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"    public void execute_newTask_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"        expectedModel.addTask(validTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"        assertCommandSuccess(new AddCommand(validTask), model,","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validTask), expectedModel);","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"        Task taskInList \u003d model.getTaskTracker().getTaskList().get(0);","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"        assertCommandFailure(new AddCommand(taskInList), model, AddCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"geraldfan":7,"mrweikiat":6,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"        CommandResult commandResult \u003d new AddCommand(validTask).execute(modelStub);","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"        AddCommand addCommand \u003d new AddCommand(validTask);","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"        Task alice \u003d new TaskBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"        Task bob \u003d new TaskBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"        @Override","lastModifiedDate":"2021-04-09"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"        public boolean hasDailyTask(Task task) {","lastModifiedDate":"2021-04-09"},{"lineNumber":89,"author":{"gitId":"danielonges"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-09"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"geraldfan"},"content":"        public Path getTaskTrackerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"geraldfan"},"content":"        public void setTaskTrackerFilePath(Path taskTrackerFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"danielonges"},"content":"        public void refreshDailyTasks(Task target, Task editTask) {","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"danielonges"},"content":"        public void finishDailyTask(Task task) {","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"danielonges"},"content":"        public void deleteDailyTask(Task task) {","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"geraldfan"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"danielonges"},"content":"        public void addToDailyToDoList(Task task) {","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"        public void removeFromDailyToDoList(Task task) {","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"danielonges"},"content":"        public void setTaskTracker(ReadOnlyTaskTracker newData) {","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"danielonges"},"content":"        public void sortTasks(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"geraldfan"},"content":"        public ReadOnlyTaskTracker getTaskTracker() {","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"geraldfan"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"geraldfan"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"austenjs"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"austenjs"},"content":"        public void finishTask(Task target) {","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"austenjs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"geraldfan"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"danielonges"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"danielonges"},"content":"        public void setDailyTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"danielonges"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"geraldfan"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":193,"author":{"gitId":"danielonges"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"danielonges"},"content":"        public ObservableList\u003cTask\u003e getDailyTaskList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"danielonges"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"geraldfan"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"danielonges"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"danielonges"},"content":"        public void updateDailyTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"danielonges"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"geraldfan"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"geraldfan"},"content":"        public void commitTaskTracker(ReadOnlyTaskTracker currentState) {","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"geraldfan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"geraldfan"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":214,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"geraldfan"},"content":"        public TaskTracker undoTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"geraldfan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"geraldfan"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"geraldfan"},"content":"        public TaskTracker redoTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":221,"author":{"gitId":"geraldfan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":224,"author":{"gitId":"geraldfan"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"geraldfan"},"content":"        public boolean canUndoTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":226,"author":{"gitId":"geraldfan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"geraldfan"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":230,"author":{"gitId":"geraldfan"},"content":"        public boolean canRedoTaskTracker() {","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"geraldfan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":233,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":234,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"geraldfan"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2021-03-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"geraldfan"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2021-03-10"},{"lineNumber":241,"author":{"gitId":"mrweikiat"},"content":"        private final Task task;","lastModifiedDate":"2021-03-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"geraldfan"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":244,"author":{"gitId":"mrweikiat"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":245,"author":{"gitId":"mrweikiat"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-03-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"geraldfan"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":250,"author":{"gitId":"mrweikiat"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":251,"author":{"gitId":"danielonges"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2021-03-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"geraldfan"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2021-03-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"geraldfan"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2021-03-10"},{"lineNumber":259,"author":{"gitId":"geraldfan"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"geraldfan"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":263,"author":{"gitId":"mrweikiat"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":264,"author":{"gitId":"geraldfan"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"geraldfan"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":269,"author":{"gitId":"mrweikiat"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":270,"author":{"gitId":"geraldfan"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2021-03-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"geraldfan"},"content":"        public ReadOnlyTaskTracker getTaskTracker() {","lastModifiedDate":"2021-03-09"},{"lineNumber":275,"author":{"gitId":"geraldfan"},"content":"            return new TaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":276,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"geraldfan":62,"mrweikiat":15,"danielonges":30,"-":167,"austenjs":6}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"    public void execute_emptyTaskTracker_success() {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"    public void execute_nonEmptyTaskTracker_success() {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"        Model model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        expectedModel.setTaskTracker(new TaskTracker());","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"geraldfan":6,"mrweikiat":1,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_TIME;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITYTAG;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHTAGE;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"    public static final String VALID_CODE_AMY \u003d \"CS2103\";","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    public static final String VALID_CODE_BOB \u003d \"CS2040\";","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"    public static final String VALID_WEIGHTAGE_AMY \u003d \"25%\";","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"    public static final String VALID_WEIGHTAGE_BOB \u003d \"50%\";","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"    public static final String VALID_DATE_AMY \u003d \"10-10-2022\";","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    public static final String VALID_DATE_BOB \u003d \"03-05-2022\";","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"    public static final String VALID_TIME_AMY \u003d \"10:10\";","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"    public static final String VALID_TIME_BOB \u003d \"23:59\";","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    public static final String VALID_STATUS_AMY \u003d \"Finished\";","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"    public static final String VALID_STATUS_BOB \u003d \"Finished\";","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Being a software engineer is fun\";","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Kattis\";","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    public static final String VALID_PRIORITY_LOW \u003d \"LOW\";","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"    public static final String VALID_PRIORITY_HIGH \u003d \"HIGH\";","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"    public static final String CODE_DESC_AMY \u003d \" \" + PREFIX_CODE + VALID_CODE_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"    public static final String CODE_DESC_BOB \u003d \" \" + PREFIX_CODE + VALID_CODE_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"    public static final String WEIGHTAGE_DESC_AMY \u003d \" \" + PREFIX_WEIGHTAGE + VALID_WEIGHTAGE_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"    public static final String WEIGHTAGE_DESC_BOB \u003d \" \" + PREFIX_WEIGHTAGE + VALID_WEIGHTAGE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + PREFIX_DEADLINE_DATE + VALID_DATE_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + PREFIX_DEADLINE_DATE + VALID_DATE_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    public static final String TIME_DESC_AMY \u003d \" \" + PREFIX_DEADLINE_TIME + VALID_TIME_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"    public static final String TIME_DESC_BOB \u003d \" \" + PREFIX_DEADLINE_TIME + VALID_TIME_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_NOTES + VALID_REMARK_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_NOTES + VALID_REMARK_BOB;","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"    public static final String PRIORITY_DESC_AMY \u003d \" \" + PREFIX_PRIORITYTAG + VALID_PRIORITY_LOW;","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"    public static final String PRIORITY_DESC_BOB \u003d \" \" + PREFIX_PRIORITYTAG + VALID_PRIORITY_HIGH;","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"    public static final String INVALID_CODE_DESC \u003d \" \" + PREFIX_CODE + \"CT2340\"; // \u0027CT\u0027 not allowed in code","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DEADLINE_DATE + \"31:12:2022\"; // Must in DD-MM-YYYY","lastModifiedDate":"2021-04-09"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"    public static final String INVALID_TIME_DESC \u003d \" \" + PREFIX_DEADLINE_TIME + \"10-10\"; // Must in HH:MM","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"    // non-digits not allowed in weightage","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"    public static final String INVALID_WEIGHTAGE_DESC_NAN \u003d \" \" + PREFIX_WEIGHTAGE + \"asd%\";","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"    public static final String INVALID_WEIGHTAGE_DESC_OOB \u003d \" \" + PREFIX_WEIGHTAGE + \"101%\"; // out of bounds","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"    // must be either HIGH/MEDIUM/LOW","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"    public static final String INVALID_PRIORITY_TAG \u003d \" \" + PREFIX_PRIORITYTAG + \"12312\";","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"geraldfan"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"geraldfan"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"        DESC_AMY \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"            .withCode(VALID_CODE_AMY)","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"        DESC_BOB \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"            .withCode(VALID_CODE_BOB)","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"geraldfan"},"content":"     * - the address book, filtered task list and selected task in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"geraldfan"},"content":"        TaskTracker expectedTaskTracker \u003d new TaskTracker(actualModel.getTaskTracker());","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"geraldfan"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":133,"author":{"gitId":"geraldfan"},"content":"        assertEquals(expectedTaskTracker, actualModel.getTaskTracker());","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"geraldfan"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"geraldfan"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"geraldfan"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"geraldfan"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"geraldfan"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"geraldfan"},"content":"        final String[] splitName \u003d task.getTaskName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"geraldfan"},"content":"        model.updateFilteredTaskList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"geraldfan"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"geraldfan":22,"mrweikiat":4,"danielonges":15,"-":87,"austenjs":23}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        assertCommandFailure(deleteCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"geraldfan"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"geraldfan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        // ensures that outOfBoundIndex is still in bounds of task list","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"geraldfan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskTracker().getTaskList().size());","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        assertCommandFailure(deleteCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"geraldfan"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"geraldfan"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        assertTrue(deleteSecondCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"geraldfan"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"        DeleteCommand deleteSecondCommandCopy \u003d new DeleteCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"        assertTrue(deleteSecondCommand.equals(deleteSecondCommandCopy));","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"        assertFalse(deleteFirstCommand.equals(1)); // integer","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"        assertFalse(deleteSecondCommand.equals(1));","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        assertFalse(deleteFirstCommand.equals(\"1\")); // string","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"        assertFalse(deleteSecondCommand.equals(\"1\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"        assertFalse(deleteFirstCommand.equals(new Object())); // object","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"        assertFalse(deleteSecondCommand.equals(new Object()));","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"        assertFalse(deleteFirstCommand.equals(new DoneCommand(INDEX_FIRST_TASK))); // other command","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"        assertFalse(deleteSecondCommand.equals(new DoneCommand(INDEX_FIRST_TASK)));","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"geraldfan"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"geraldfan"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"geraldfan"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"geraldfan":27,"mrweikiat":2,"-":75,"austenjs":15}},{"path":"src/test/java/seedu/address/logic/commands/DoTodayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.util.OperationFlag;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"public class DoTodayCommandTest {","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"    private OperationFlag addOperationFlag \u003d new OperationFlag(OperationFlag.ADD_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"    private OperationFlag removeOperationFlag \u003d new OperationFlag(OperationFlag.REMOVE_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"    private Model modelNoDailyTasks \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DoTodayCommand(null, null));","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"    public void execute_validAllTaskIndex_addSuccessful() {","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"        Task dailyTaskToAdd \u003d modelNoDailyTasks.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"        DoTodayCommand doTodayCommand \u003d new DoTodayCommand(INDEX_FIRST_TASK, addOperationFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d String.format(DoTodayCommand.MESSAGE_ADDED_TASK_SUCCESS, dailyTaskToAdd);","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"        Model expectedModel \u003d new ModelManager(new TaskTracker(modelNoDailyTasks.getTaskTracker()), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"        expectedModel.addToDailyToDoList(dailyTaskToAdd);","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"        assertCommandSuccess(doTodayCommand, modelNoDailyTasks, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"    public void execute_validDailyTaskIndex_removeSuccessful() {","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"        Model modelWithDailyTask \u003d getModelWithDailyTask();","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"        Task dailyTaskToRemove \u003d modelWithDailyTask.getDailyTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"        DoTodayCommand doTodayCommand \u003d new DoTodayCommand(INDEX_FIRST_TASK, removeOperationFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d String.format(DoTodayCommand.MESSAGE_REMOVED_TASK_SUCCESS, dailyTaskToRemove);","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"        Model expectedModel \u003d getModelWithDailyTask();","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"        expectedModel.removeFromDailyToDoList(dailyTaskToRemove);","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"        assertCommandSuccess(doTodayCommand, modelWithDailyTask, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"    public void execute_invalidAllTaskIndexAddDailyTask_throwsCommandException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(modelNoDailyTasks.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"        DoTodayCommand doTodayCommand \u003d new DoTodayCommand(outOfBoundIndex, addOperationFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        assertCommandFailure(doTodayCommand, modelNoDailyTasks, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"    public void execute_invalidDailyTaskIndexRemoveDailyTask_throwsCommandException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"        Model modelWithDailyTask \u003d getModelWithDailyTask();","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(modelWithDailyTask.getDailyTaskList().size() + 1);","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"        DoTodayCommand doTodayCommand \u003d new DoTodayCommand(outOfBoundIndex, removeOperationFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        assertCommandFailure(doTodayCommand, modelWithDailyTask, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"    private Model getModelWithDailyTask() {","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"        Task dailyTaskToAdd \u003d modelNoDailyTasks.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"        Model modelWithDailyTask \u003d new ModelManager(new TaskTracker(modelNoDailyTasks.getTaskTracker()),","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"                new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"        modelWithDailyTask.addToDailyToDoList(dailyTaskToAdd);","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"        return modelWithDailyTask;","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"danielonges":82,"austenjs":3}},{"path":"src/test/java/seedu/address/logic/commands/DoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":" * {@code DoneCommand}.","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        Task taskToFinish \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d String.format(DoneCommand.MESSAGE_DONE_TASK_SUCCESS, taskToFinish);","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        expectedModel.finishTask(taskToFinish);","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        // Top boundary","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"        Index inBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        taskToFinish \u003d model.getFilteredTaskList().get(inBoundIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        doneCommand \u003d new DoneCommand(inBoundIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        expectedMessage \u003d String.format(DoneCommand.MESSAGE_DONE_TASK_SUCCESS, taskToFinish);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        expectedModel.finishTask(taskToFinish);","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        assertCommandFailure(doneCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"        Task taskToFinish \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased()); // Bottom boundary","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d String.format(DoneCommand.MESSAGE_DONE_TASK_SUCCESS, taskToFinish);","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        expectedModel.finishTask(taskToFinish);","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        // Top boundary","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"        Index inBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        taskToFinish \u003d model.getFilteredTaskList().get(inBoundIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        doneCommand \u003d new DoneCommand(inBoundIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        expectedMessage \u003d String.format(DoneCommand.MESSAGE_DONE_TASK_SUCCESS, taskToFinish);","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"        expectedModel.finishTask(taskToFinish);","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"        // ensures that outOfBoundIndex is still in bounds of task list","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskTracker().getTaskList().size());","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        assertCommandFailure(doneCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"    public void equals() {","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"        DoneCommand finishFirstCommand \u003d new DoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"        DoneCommand finishSecondCommand \u003d new DoneCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"        assertTrue(finishFirstCommand.equals(finishFirstCommand));","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"        assertTrue(finishSecondCommand.equals(finishSecondCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"        DoneCommand finishFirstCommandCopy \u003d new DoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"        DoneCommand finishSecondCommandCopy \u003d new DoneCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"austenjs"},"content":"        assertTrue(finishFirstCommand.equals(finishFirstCommandCopy));","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"austenjs"},"content":"        assertTrue(finishSecondCommand.equals(finishSecondCommandCopy));","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"        assertFalse(finishFirstCommand.equals(1)); // integer","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"        assertFalse(finishSecondCommand.equals(1));","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"        assertFalse(finishFirstCommand.equals(\"1\")); // string","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"        assertFalse(finishSecondCommand.equals(\"1\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"        assertFalse(finishFirstCommand.equals(new Object())); // object","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"        assertFalse(finishSecondCommand.equals(new Object()));","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"        assertFalse(finishFirstCommand.equals(new DeleteCommand(INDEX_FIRST_TASK))); // other command","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"        assertFalse(finishSecondCommand.equals(new DeleteCommand(INDEX_FIRST_TASK)));","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"        assertFalse(finishFirstCommand.equals(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"austenjs"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"austenjs"},"content":"        assertFalse(finishFirstCommand.equals(finishSecondCommand));","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"austenjs":131}},{"path":"src/test/java/seedu/address/logic/commands/DueInCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS1010E;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2030;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2040;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2100;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2103;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS3243;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDateInRangePredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":" * Contains integration tests (interaction with the Model) for {@code DueInCommand}.","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"public class DueInCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    private static long numberOfDays \u003d 9;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    private static long numberOfWeeks \u003d 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"    public void equals() {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate firstPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate secondPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"            firstPredicate \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"                    new DeadlineDateInRangePredicate(numberOfDays);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"            secondPredicate \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"                    new DeadlineDateInRangePredicate(numberOfWeeks * 7);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Must not be call;","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        DueInCommand dueInFirstCommand \u003d new DueInCommand(firstPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"        DueInCommand dueInSecondCommand \u003d new DueInCommand(secondPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        assertTrue(dueInFirstCommand.equals(dueInFirstCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        assertTrue(dueInSecondCommand.equals(dueInSecondCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        DueInCommand dueInFirstCommandCopy \u003d new DueInCommand(firstPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        assertTrue(dueInFirstCommand.equals(dueInFirstCommandCopy));","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"        DueInCommand dueInSecondCommandCopy \u003d new DueInCommand(secondPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        assertTrue(dueInSecondCommand.equals(dueInSecondCommandCopy));","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInFirstCommand.equals(1)); //integer","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInSecondCommand.equals(1));","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInFirstCommand.equals(\"aiue\")); //string","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInSecondCommand.equals(\"aiue\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInFirstCommand.equals(new Object())); //object","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInSecondCommand.equals(new Object()));","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInFirstCommand.equals(new DeadlineDate(\"10-11-2022\"))); //DeadlineDate","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInSecondCommand.equals(new DeadlineDate(\"10-11-2022\")));","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInFirstCommand.equals(new DeadlineTime(\"10:11\"))); //DeadlineTime","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInSecondCommand.equals(new DeadlineTime(\"10:11\")));","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInFirstCommand.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInSecondCommand.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"        assertFalse(dueInFirstCommand.equals(dueInSecondCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"    public void execute_noParamsGiven_noTaskFound() {","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"            predicate \u003d new DeadlineDateInRangePredicate(numberOfDays);","lastModifiedDate":"2021-04-09"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Must not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0) + predicate.toString();","lastModifiedDate":"2021-04-09"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        DueInCommand command \u003d new DueInCommand(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"    public void execute_numberOfDaysGiven_multipleTasksFound() {","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"            predicate \u003d new DeadlineDateInRangePredicateStub(numberOfDays);","lastModifiedDate":"2021-04-09"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Must not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":112,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 6) + predicate.toString();","lastModifiedDate":"2021-04-09"},{"lineNumber":113,"author":{"gitId":"austenjs"},"content":"        DueInCommand command \u003d new DueInCommand(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"        assertEquals(Arrays.asList(CS2103, CS2040, CS1010E, CS2030, CS3243, CS2100), model.getFilteredTaskList());","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"    public void execute_numberOfWeeksGiven_multipleTasksFound() {","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"            predicate \u003d new DeadlineDateInRangePredicateStub(numberOfWeeks * 7);","lastModifiedDate":"2021-04-09"},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Must not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":127,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":128,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 6) + predicate.toString();","lastModifiedDate":"2021-04-09"},{"lineNumber":129,"author":{"gitId":"austenjs"},"content":"        DueInCommand command \u003d new DueInCommand(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"austenjs"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"austenjs"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"austenjs"},"content":"        assertEquals(Arrays.asList(CS2103, CS2040, CS1010E, CS2030, CS3243, CS2100), model.getFilteredTaskList());","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"austenjs"},"content":"    private class DeadlineDateInRangePredicateStub extends DeadlineDateInRangePredicate {","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"austenjs"},"content":"        public DeadlineDateInRangePredicateStub(long numberOfDays) throws ParseException {","lastModifiedDate":"2021-04-09"},{"lineNumber":138,"author":{"gitId":"austenjs"},"content":"            super(numberOfDays);","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"austenjs"},"content":"        };","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"austenjs"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"austenjs"},"content":"        public boolean test(Task task) {","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"austenjs"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"austenjs":146}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"        Task expectedTask \u003d new TaskBuilder(editedTask).build();","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, expectedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"        Model expectedModel \u003d new ModelManager(new TaskTracker(model.getTaskTracker()), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), expectedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"        Task editedTask \u003d taskInList.withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastTask, descriptor);","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"geraldfan"},"content":"        Model expectedModel \u003d new ModelManager(new TaskTracker(model.getTaskTracker()), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK, new EditTaskDescriptor());","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"geraldfan"},"content":"        Model expectedModel \u003d new ModelManager(new TaskTracker(model.getTaskTracker()), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"geraldfan"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"geraldfan"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"geraldfan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"geraldfan"},"content":"        Model expectedModel \u003d new ModelManager(new TaskTracker(model.getTaskTracker()), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        showTaskAtIndex(expectedModel, INDEX_FIRST_TASK);","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"geraldfan"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"geraldfan"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"geraldfan"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"geraldfan"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"geraldfan"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"geraldfan"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"geraldfan"},"content":"        // edit task in filtered list into a duplicate in address book","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"geraldfan"},"content":"        Task taskInList \u003d model.getTaskTracker().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"geraldfan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"geraldfan"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"geraldfan"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"geraldfan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"austenjs"},"content":"        assertCommandFailure(editCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"geraldfan"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"geraldfan"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"geraldfan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"geraldfan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskTracker().getTaskList().size());","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"austenjs"},"content":"        assertCommandFailure(editCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"geraldfan"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_TASK, DESC_AMY);","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-10"},{"lineNumber":156,"author":{"gitId":"geraldfan"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2021-03-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"geraldfan"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_TASK, DESC_AMY)));","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"geraldfan"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_TASK, DESC_BOB)));","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"geraldfan":50,"mrweikiat":9,"danielonges":5,"-":107,"austenjs":4}},{"path":"src/test/java/seedu/address/logic/commands/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"public class EditTaskDescriptorTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor descriptorWithSameValues \u003d new EditTaskDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withDeadlineDate(VALID_DATE_AMY).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withDeadlineTime(VALID_TIME_AMY).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        //different status -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"geraldfan":3,"mrweikiat":3,"-":43,"austenjs":9}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS1010E;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2030;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2100;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"geraldfan"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Tutorial Tests\");","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"geraldfan"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        assertEquals(Arrays.asList(CS1010E, CS2030, CS2100), model.getFilteredTaskList());","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"geraldfan":12,"mrweikiat":1,"-":66,"austenjs":4}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"        model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"        expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"geraldfan":5,"mrweikiat":1,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/NotesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-02-23"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"public class NotesCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"    private static final String NOTES_STUB \u003d \"Some notes\";","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    public void equals() {","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"        final NotesCommand standardCommand \u003d new NotesCommand(INDEX_FIRST_TASK, new Notes(VALID_REMARK_AMY));","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-02-23"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"        NotesCommand commandWithSameValues \u003d new NotesCommand(INDEX_FIRST_TASK, new Notes(VALID_REMARK_AMY));","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-02-23"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-02-23"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-02-23"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-02-23"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-02-23"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-02-23"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-02-23"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-02-23"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"        assertFalse(standardCommand.equals(new NotesCommand(INDEX_SECOND_TASK, new Notes(VALID_REMARK_AMY))));","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"        // different notes -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"        assertFalse(standardCommand.equals(new NotesCommand(INDEX_FIRST_TASK, new Notes(VALID_REMARK_BOB))));","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2021-02-23"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"        Task editedTask \u003d new TaskBuilder(firstTask).withNotes(NOTES_STUB).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"        NotesCommand notesCommand \u003d new NotesCommand(INDEX_FIRST_TASK, new Notes(editedTask.getNotes().value));","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d String.format(NotesCommand.MESSAGE_ADD_REMARK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"        Model expectedModel \u003d new ModelManager(new TaskTracker(model.getTaskTracker()), new UserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"        expectedModel.setTask(firstTask, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"        assertCommandSuccess(notesCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2021-02-23"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"        Task editedTask \u003d new TaskBuilder(firstTask).withNotes(\"\").build();","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"        NotesCommand notesCommand \u003d new NotesCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"                new Notes(editedTask.getNotes().toString()));","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d String.format(NotesCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"        Model expectedModel \u003d new ModelManager(new TaskTracker(model.getTaskTracker()), new UserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"        expectedModel.setTask(firstTask, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"        assertCommandSuccess(notesCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-02-23"},{"lineNumber":89,"author":{"gitId":"danielonges"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"        Task editedTask \u003d new TaskBuilder(model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased()))","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"danielonges"},"content":"                .withNotes(NOTES_STUB).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":95,"author":{"gitId":"danielonges"},"content":"        NotesCommand notesCommand \u003d new NotesCommand(INDEX_FIRST_TASK, new Notes(editedTask.getNotes().value));","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d String.format(NotesCommand.MESSAGE_ADD_REMARK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":99,"author":{"gitId":"danielonges"},"content":"        Model expectedModel \u003d new ModelManager(new TaskTracker(model.getTaskTracker()), new UserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"danielonges"},"content":"        expectedModel.setTask(firstTask, editedTask);","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"        assertCommandSuccess(notesCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":104,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":105,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":106,"author":{"gitId":"danielonges"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-02-23"},{"lineNumber":107,"author":{"gitId":"danielonges"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"danielonges"},"content":"        NotesCommand notesCommand \u003d new NotesCommand(outOfBoundIndex, new Notes(VALID_REMARK_BOB));","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"        assertCommandFailure(notesCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":111,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":112,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-02-23"},{"lineNumber":115,"author":{"gitId":"danielonges"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-02-23"},{"lineNumber":116,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":118,"author":{"gitId":"danielonges"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-02-23"},{"lineNumber":119,"author":{"gitId":"danielonges"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"danielonges"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"danielonges"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-02-23"},{"lineNumber":122,"author":{"gitId":"danielonges"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskTracker().getTaskList().size());","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":124,"author":{"gitId":"danielonges"},"content":"        NotesCommand notesCommand \u003d new NotesCommand(outOfBoundIndex, new Notes(VALID_REMARK_BOB));","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"        assertCommandFailure(notesCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":127,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":128,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":129,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"danielonges":126,"austenjs":3}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_REDO_COMMAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"public class RedoCommandTest {","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"    public void execute_validRedoDeleteCommand_success() {","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"        model.commitTaskTracker(model.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        String expectedDeleteMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"        expectedModel.commitTaskTracker(expectedModel.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"        expectedModel.commitTaskTracker(expectedModel.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"        assertCommandSuccess(deleteCommand, model, expectedDeleteMessage, expectedModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"        model.commitTaskTracker(model.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"        ModelManager expectedUndoModel \u003d new ModelManager(expectedModel.undoTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedUndoModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"    public void execute_validRedoClearCommand_success() {","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"        model.commitTaskTracker(model.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"        expectedModel.commitTaskTracker(expectedModel.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"        expectedModel.setTaskTracker(new TaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"        expectedModel.commitTaskTracker(expectedModel.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"        model.commitTaskTracker(model.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        ModelManager expectedUndoModel \u003d new ModelManager(expectedModel.undoTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedUndoModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"    public void execute_invalidCurrentStatePointer_throwsCommandException() {","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"        assertCommandFailure(new RedoCommand(), model,","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"            String.format(MESSAGE_INVALID_REDO_COMMAND, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":67,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"geraldfan":67}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.comparators.DateTimeComparator;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.comparators.ModuleCodeComparator;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.comparators.PriorityTagComparator;","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.comparators.TaskNameComparator;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.comparators.WeightageComparator;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.util.SortingFlag;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"public class SortCommandTest {","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"    private SortingFlag dateTimeFlag \u003d new SortingFlag(\"dateTime\");","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"    private SortingFlag moduleCodeFlag \u003d new SortingFlag(\"moduleCode\");","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"    private SortingFlag priorityTagFlag \u003d new SortingFlag(\"priorityTag\");","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"    private SortingFlag taskNameFlag \u003d new SortingFlag(\"taskName\");","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"    private SortingFlag weightageFlag \u003d new SortingFlag(\"weightage\");","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"    private DateTimeComparator dateTimeComparator \u003d new DateTimeComparator();","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"    private ModuleCodeComparator moduleCodeComparator \u003d new ModuleCodeComparator();","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"    private PriorityTagComparator priorityTagComparator \u003d new PriorityTagComparator();","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"    private TaskNameComparator taskNameComparator \u003d new TaskNameComparator();","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"    private WeightageComparator weightageComparator \u003d new WeightageComparator();","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"    public void equals() {","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandDateTime \u003d new SortCommand(dateTimeFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandModuleCode \u003d new SortCommand(moduleCodeFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandPriorityTag \u003d new SortCommand(priorityTagFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandTaskName \u003d new SortCommand(taskNameFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandWeightage \u003d new SortCommand(weightageFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        assertTrue(sortCommandDateTime.equals(sortCommandDateTime));","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"        assertTrue(sortCommandModuleCode.equals(sortCommandModuleCode));","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"        assertTrue(sortCommandPriorityTag.equals(sortCommandPriorityTag));","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"        assertTrue(sortCommandTaskName.equals(sortCommandTaskName));","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"        assertTrue(sortCommandWeightage.equals(sortCommandWeightage));","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandDateTimeCopy \u003d new SortCommand(dateTimeFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandModuleCodeCopy \u003d new SortCommand(moduleCodeFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandPriorityTagCopy \u003d new SortCommand(priorityTagFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandTaskNameCopy \u003d new SortCommand(taskNameFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandWeightageCopy \u003d new SortCommand(weightageFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"        assertTrue(sortCommandDateTime.equals(sortCommandDateTimeCopy));","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"        assertTrue(sortCommandModuleCode.equals(sortCommandModuleCodeCopy));","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"        assertTrue(sortCommandPriorityTag.equals(sortCommandPriorityTagCopy));","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"        assertTrue(sortCommandTaskName.equals(sortCommandTaskNameCopy));","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"        assertTrue(sortCommandWeightage.equals(sortCommandWeightageCopy));","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"        assertFalse(sortCommandDateTime.equals(1));","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"        assertFalse(sortCommandDateTime.equals(null));","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"        // different sorting flags -\u003e returns false","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"        assertFalse(sortCommandDateTime.equals(sortCommandModuleCode));","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"    public void execute_validSortByDateTime_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandDateTime \u003d new SortCommand(dateTimeFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SUCCESS + dateTimeFlag.toString();","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"        expectedModel.sortTasks(dateTimeComparator);","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"        assertCommandSuccess(sortCommandDateTime, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"    public void execute_validSortByModuleCode_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandModuleCode \u003d new SortCommand(moduleCodeFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SUCCESS + moduleCodeFlag.toString();","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"        expectedModel.sortTasks(moduleCodeComparator);","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"danielonges"},"content":"        assertCommandSuccess(sortCommandModuleCode, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"    public void execute_validSortByPriorityTag_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandPriorityTag \u003d new SortCommand(priorityTagFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SUCCESS + priorityTagFlag.toString();","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"danielonges"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"        expectedModel.sortTasks(priorityTagComparator);","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"danielonges"},"content":"        assertCommandSuccess(sortCommandPriorityTag, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"danielonges"},"content":"    public void execute_validSortByTaskName_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandTaskName \u003d new SortCommand(taskNameFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":110,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":111,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SUCCESS + taskNameFlag.toString();","lastModifiedDate":"2021-04-11"},{"lineNumber":112,"author":{"gitId":"danielonges"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"        expectedModel.sortTasks(taskNameComparator);","lastModifiedDate":"2021-04-11"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":115,"author":{"gitId":"danielonges"},"content":"        assertCommandSuccess(sortCommandTaskName, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":116,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":118,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"danielonges"},"content":"    public void execute_validSortByWeightage_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":120,"author":{"gitId":"danielonges"},"content":"        SortCommand sortCommandWeightage \u003d new SortCommand(weightageFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":121,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":122,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SUCCESS + weightageFlag.toString();","lastModifiedDate":"2021-04-11"},{"lineNumber":123,"author":{"gitId":"danielonges"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":124,"author":{"gitId":"danielonges"},"content":"        expectedModel.sortTasks(weightageComparator);","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":126,"author":{"gitId":"danielonges"},"content":"        assertCommandSuccess(sortCommandWeightage, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-11"},{"lineNumber":127,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":128,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":129,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"danielonges":129}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_UNDO_COMMAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"public class UndoCommandTest {","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"    public void execute_validUndoDeleteCommand_success() {","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"        model.commitTaskTracker(model.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        String expectedDeleteMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        ModelManager expectedDeleteModel \u003d new ModelManager(model.getTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"        expectedDeleteModel.commitTaskTracker(expectedDeleteModel.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"        expectedDeleteModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"        expectedDeleteModel.commitTaskTracker(expectedDeleteModel.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"        assertCommandSuccess(deleteCommand, model, expectedDeleteMessage, expectedDeleteModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"        model.commitTaskTracker(model.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"    public void execute_validUndoClearCommand_success() {","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"        model.commitTaskTracker(model.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"        Model expectedClearModel \u003d new ModelManager(getTypicalTaskTracker(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"        expectedClearModel.setTaskTracker(new TaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedClearModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"        model.commitTaskTracker(model.getTaskTracker());","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"    public void execute_invalidCurrentStatePointer_throwsCommandException() {","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"        assertCommandFailure(new UndoCommand(), model,","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"geraldfan"},"content":"            String.format(MESSAGE_INVALID_UNDO_COMMAND, UndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"geraldfan":63}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CODE_DESC_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CODE_DESC_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CODE_DESC;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_TAG;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TIME_DESC;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHTAGE_DESC_NAN;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHTAGE_DESC_OOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CODE_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHTAGE_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHTAGE_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHTAGE_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"        // remarks are empty by default","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"        Task expectedTask \u003d new TaskBuilder(BOB).withCode(VALID_CODE_BOB).withWeightage(50).withNotes(\"\")","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"            .withDeadlineDate(VALID_DATE_AMY).withDeadlineTime(VALID_TIME_AMY)","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"            .withStatus(\"\").withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + CODE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"            + DATE_DESC_AMY + TIME_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"            + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + CODE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"            + DATE_DESC_AMY + TIME_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"            + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"        // multiple codes - last code accepted","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + CODE_DESC_AMY + CODE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"            + DATE_DESC_AMY + TIME_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"            + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        // multiple deadline dates - last date accepted","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + CODE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"            + DATE_DESC_BOB + DATE_DESC_AMY + TIME_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"            + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"        // multiple deadline times - last time accepted","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + CODE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"            + DATE_DESC_AMY + TIME_DESC_BOB + TIME_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"            + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"        // multiple weightage - last weigtage accepted","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + CODE_DESC_BOB + WEIGHTAGE_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"            + WEIGHTAGE_DESC_BOB + DATE_DESC_AMY + TIME_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"            + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"        // multiple priority tag - last priority tag accepted","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + CODE_DESC_BOB + WEIGHTAGE_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"                + WEIGHTAGE_DESC_BOB + DATE_DESC_AMY + TIME_DESC_AMY + PRIORITY_DESC_BOB + PRIORITY_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"danielonges"},"content":"        // remarks are empty by default","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"        Task expectedTaskMultipleTags \u003d new TaskBuilder(BOB)","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"geraldfan"},"content":"            .withCode(VALID_CODE_BOB)","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"danielonges"},"content":"            .withWeightage(50)","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"danielonges"},"content":"            .withNotes(\"\")","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"danielonges"},"content":"            .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":108,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"        // normal input","lastModifiedDate":"2021-04-11"},{"lineNumber":110,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + CODE_DESC_BOB + DATE_DESC_AMY + TIME_DESC_AMY + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"danielonges"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedTaskMultipleTags));","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"    public void parse_optionalFieldsPresent_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"        // zero tags and default priority tag","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"        // remarks are empty by default","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"        Task expectedTask \u003d new TaskBuilder(AMY).withWeightage(25).withDeadlineDate(\"10-10-2022\").withDeadlineTime(\"10\"","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"                + \":10\")","lastModifiedDate":"2021-04-11"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"                .withStatus(\"\").withNotes(\"\").withTags().build();","lastModifiedDate":"2021-04-11"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"        //Priority tag LOW given","lastModifiedDate":"2021-04-11"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + CODE_DESC_AMY + WEIGHTAGE_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"                        + DATE_DESC_AMY + TIME_DESC_AMY + PRIORITY_DESC_AMY,","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"                new AddCommand(expectedTask));","lastModifiedDate":"2021-04-11"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":127,"author":{"gitId":"austenjs"},"content":"        // zero tags and HIGH priority tag","lastModifiedDate":"2021-04-11"},{"lineNumber":128,"author":{"gitId":"austenjs"},"content":"        // remarks are empty by default","lastModifiedDate":"2021-04-11"},{"lineNumber":129,"author":{"gitId":"austenjs"},"content":"        expectedTask \u003d new TaskBuilder(AMY).withWeightage(25).withDeadlineDate(\"10-10-2022\").withDeadlineTime(\"10\"","lastModifiedDate":"2021-04-11"},{"lineNumber":130,"author":{"gitId":"austenjs"},"content":"                + \":10\")","lastModifiedDate":"2021-04-11"},{"lineNumber":131,"author":{"gitId":"austenjs"},"content":"                .withStatus(\"\").withNotes(\"\").withTags().withPriorityTag(\"HIGH\").build();","lastModifiedDate":"2021-04-11"},{"lineNumber":132,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"austenjs"},"content":"        //Priority tag HIGH given","lastModifiedDate":"2021-04-11"},{"lineNumber":134,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + CODE_DESC_AMY + WEIGHTAGE_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":135,"author":{"gitId":"austenjs"},"content":"                        + DATE_DESC_AMY + TIME_DESC_AMY + PRIORITY_DESC_BOB,","lastModifiedDate":"2021-04-11"},{"lineNumber":136,"author":{"gitId":"austenjs"},"content":"                new AddCommand(expectedTask));","lastModifiedDate":"2021-04-11"},{"lineNumber":137,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":138,"author":{"gitId":"austenjs"},"content":"        //Multiple Priority tags given - Last one taken","lastModifiedDate":"2021-04-11"},{"lineNumber":139,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + CODE_DESC_AMY + WEIGHTAGE_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":140,"author":{"gitId":"austenjs"},"content":"                        + DATE_DESC_AMY + TIME_DESC_AMY + PRIORITY_DESC_AMY + PRIORITY_DESC_BOB,","lastModifiedDate":"2021-04-11"},{"lineNumber":141,"author":{"gitId":"austenjs"},"content":"                new AddCommand(expectedTask));","lastModifiedDate":"2021-04-11"},{"lineNumber":142,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":143,"author":{"gitId":"austenjs"},"content":"        // a tag given","lastModifiedDate":"2021-04-11"},{"lineNumber":144,"author":{"gitId":"austenjs"},"content":"        expectedTask \u003d new TaskBuilder(AMY).withWeightage(25).withDeadlineDate(\"10-10-2022\").withDeadlineTime(\"10\"","lastModifiedDate":"2021-04-11"},{"lineNumber":145,"author":{"gitId":"austenjs"},"content":"                + \":10\")","lastModifiedDate":"2021-04-11"},{"lineNumber":146,"author":{"gitId":"austenjs"},"content":"                .withStatus(\"\").withNotes(\"\").withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":147,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + CODE_DESC_AMY + WEIGHTAGE_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":148,"author":{"gitId":"austenjs"},"content":"                        + DATE_DESC_AMY + TIME_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2021-04-11"},{"lineNumber":149,"author":{"gitId":"austenjs"},"content":"                new AddCommand(expectedTask));","lastModifiedDate":"2021-04-11"},{"lineNumber":150,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":151,"author":{"gitId":"austenjs"},"content":"        // multiple tags given","lastModifiedDate":"2021-04-11"},{"lineNumber":152,"author":{"gitId":"austenjs"},"content":"        expectedTask \u003d new TaskBuilder(AMY).withWeightage(25).withDeadlineDate(\"10-10-2022\").withDeadlineTime(\"10\"","lastModifiedDate":"2021-04-11"},{"lineNumber":153,"author":{"gitId":"austenjs"},"content":"                + \":10\")","lastModifiedDate":"2021-04-11"},{"lineNumber":154,"author":{"gitId":"austenjs"},"content":"                .withStatus(\"\").withNotes(\"\").withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":155,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + CODE_DESC_AMY + WEIGHTAGE_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":156,"author":{"gitId":"austenjs"},"content":"                        + DATE_DESC_AMY + TIME_DESC_AMY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-04-11"},{"lineNumber":157,"author":{"gitId":"austenjs"},"content":"                new AddCommand(expectedTask));","lastModifiedDate":"2021-04-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":162,"author":{"gitId":"austenjs"},"content":"        // zero tags and zero priority tag","lastModifiedDate":"2021-04-11"},{"lineNumber":163,"author":{"gitId":"austenjs"},"content":"        // remarks are empty by default","lastModifiedDate":"2021-04-11"},{"lineNumber":164,"author":{"gitId":"austenjs"},"content":"        Task expectedTask \u003d new TaskBuilder(AMY).withWeightage(25).withDeadlineDate(\"10-10-2022\").withDeadlineTime(\"10\"","lastModifiedDate":"2021-04-09"},{"lineNumber":165,"author":{"gitId":"danielonges"},"content":"            + \":10\")","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"danielonges"},"content":"            .withStatus(\"\").withNotes(\"\").withTags().build();","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + CODE_DESC_AMY + WEIGHTAGE_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":168,"author":{"gitId":"austenjs"},"content":"                        + DATE_DESC_AMY + TIME_DESC_AMY,","lastModifiedDate":"2021-04-11"},{"lineNumber":169,"author":{"gitId":"danielonges"},"content":"            new AddCommand(expectedTask));","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, VALID_NAME_BOB,","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"austenjs"},"content":"        // empty input","lastModifiedDate":"2021-04-11"},{"lineNumber":181,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-04-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":183,"author":{"gitId":"austenjs"},"content":"        // no name","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, CODE_DESC_BOB + DATE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"austenjs"},"content":"                + TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"austenjs"},"content":"        // no code","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"austenjs"},"content":"                + TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":191,"author":{"gitId":"austenjs"},"content":"        // no date","lastModifiedDate":"2021-03-25"},{"lineNumber":192,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CODE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":193,"author":{"gitId":"austenjs"},"content":"                + TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":195,"author":{"gitId":"austenjs"},"content":"        // no time","lastModifiedDate":"2021-03-25"},{"lineNumber":196,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CODE_DESC_BOB + DATE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":197,"author":{"gitId":"austenjs"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":198,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":199,"author":{"gitId":"austenjs"},"content":"        // no weightage","lastModifiedDate":"2021-03-25"},{"lineNumber":200,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CODE_DESC_BOB + DATE_DESC_BOB + TIME_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":201,"author":{"gitId":"austenjs"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_DATE_BOB + VALID_CODE_BOB + VALID_TIME_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":205,"author":{"gitId":"austenjs"},"content":"                + VALID_WEIGHTAGE_BOB + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + CODE_DESC_BOB + DATE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"geraldfan"},"content":"            + TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":214,"author":{"gitId":"geraldfan"},"content":"        // invalid code","lastModifiedDate":"2021-03-11"},{"lineNumber":215,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_CODE_DESC + DATE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"austenjs"},"content":"            + TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"austenjs"},"content":"        // invalid date","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CODE_DESC_BOB + INVALID_DATE_DESC + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"austenjs"},"content":"                + TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, DeadlineDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":222,"author":{"gitId":"austenjs"},"content":"        // invalid time","lastModifiedDate":"2021-03-25"},{"lineNumber":223,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CODE_DESC_BOB + DATE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":224,"author":{"gitId":"austenjs"},"content":"                + INVALID_TIME_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, DeadlineTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"danielonges"},"content":"        // invalid weightage - number out of bounds","lastModifiedDate":"2021-03-23"},{"lineNumber":227,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CODE_DESC_BOB + DATE_DESC_BOB + INVALID_WEIGHTAGE_DESC_OOB","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"danielonges"},"content":"            + TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Weightage.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"danielonges"},"content":"        // invalid weightage - not a number","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CODE_DESC_BOB + DATE_DESC_BOB + INVALID_WEIGHTAGE_DESC_NAN","lastModifiedDate":"2021-03-23"},{"lineNumber":232,"author":{"gitId":"danielonges"},"content":"            + TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, ParserUtil.MESSAGE_INVALID_WEIGHTAGE);","lastModifiedDate":"2021-03-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":235,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CODE_DESC_BOB + DATE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"austenjs"},"content":"            + TIME_DESC_BOB + INVALID_TAG_DESC + TAG_DESC_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-11"},{"lineNumber":237,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":238,"author":{"gitId":"austenjs"},"content":"        // invalid priority tag","lastModifiedDate":"2021-04-11"},{"lineNumber":239,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CODE_DESC_BOB + DATE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-04-11"},{"lineNumber":240,"author":{"gitId":"austenjs"},"content":"                + TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INVALID_PRIORITY_TAG,","lastModifiedDate":"2021-04-11"},{"lineNumber":241,"author":{"gitId":"austenjs"},"content":"                PriorityTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":244,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + CODE_DESC_BOB + DATE_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-23"},{"lineNumber":246,"author":{"gitId":"geraldfan"},"content":"            + TIME_DESC_BOB, TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":249,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + CODE_DESC_BOB + NAME_DESC_BOB + WEIGHTAGE_DESC_BOB","lastModifiedDate":"2021-03-23"},{"lineNumber":250,"author":{"gitId":"danielonges"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"geraldfan":12,"mrweikiat":4,"danielonges":39,"-":74,"austenjs":124}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"    public void tokenize_zeroArgument() {","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"        // Preamble present","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        String argsString \u003d \"  Some preamble string p/\";","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"\");","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        // No preamble","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"        argsString \u003d \" p/     \";","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"\");","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"        assertArgumentAbsent(argMultimap, dashT);","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2021-04-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"austenjs"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2021-04-11"},{"lineNumber":135,"author":{"gitId":"austenjs"},"content":"        assertArgumentAbsent(argMultimap, dashT);","lastModifiedDate":"2021-04-11"},{"lineNumber":136,"author":{"gitId":"austenjs"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2021-04-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":150,"austenjs":21}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"2\", new DeleteCommand(INDEX_SECOND_TASK));","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"3\", new DeleteCommand(INDEX_THIRD_TASK));","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        //Random string","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        //Empty String","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"geraldfan":2,"-":29,"austenjs":10}},{"path":"src/test/java/seedu/address/logic/parser/DoTodayCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.DoTodayCommand;","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.util.OperationFlag;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"public class DoTodayCommandParserTest {","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    private OperationFlag addOperationFlag \u003d new OperationFlag(OperationFlag.ADD_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"    private OperationFlag removeOperationFlag \u003d new OperationFlag(OperationFlag.REMOVE_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    private DoTodayCommandParser parser \u003d new DoTodayCommandParser();","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"    public void parse_validArgs_returnsDoTodayCommand() {","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"        // add flag","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"-a 1\", new DoTodayCommand(INDEX_FIRST_TASK, addOperationFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"-a 2\", new DoTodayCommand(INDEX_SECOND_TASK, addOperationFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"-a 3\", new DoTodayCommand(INDEX_THIRD_TASK, addOperationFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"        // remove flag","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"-r 1\", new DoTodayCommand(INDEX_FIRST_TASK, removeOperationFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"-r 2\", new DoTodayCommand(INDEX_SECOND_TASK, removeOperationFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"-r 3\", new DoTodayCommand(INDEX_THIRD_TASK, removeOperationFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"        // random string","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, \"hello world\",","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoTodayCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"        // empty string","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoTodayCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"danielonges":44}},{"path":"src/test/java/seedu/address/logic/parser/DoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":" * outside of the DoneCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":" * same path through the DoneCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"public class DoneCommandParserTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    private DoneCommandParser parser \u003d new DoneCommandParser();","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"1\", new DoneCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"2\", new DoneCommand(INDEX_SECOND_TASK));","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"3\", new DoneCommand(INDEX_THIRD_TASK));","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \" dsadas\",","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE)); // Random String","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE)); // Empty String","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"austenjs":39}},{"path":"src/test/java/seedu/address/logic/parser/DueInCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.DueInCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDateInRangePredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"public class DueInCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    private static final long DEFAULT_NUMBER_OF_DAYS \u003d 7;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    private DueInCommandParser parser \u003d new DueInCommandParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    public void parse_emptyArg_returnsDueInCommand() {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        DueInCommand expectedDueInCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"            expectedDueInCommand \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"                    new DueInCommand(new DeadlineDateInRangePredicate(DEFAULT_NUMBER_OF_DAYS));","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Must not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"\", expectedDueInCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \" \", expectedDueInCommand); // single whitespaces","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"         \", expectedDueInCommand); // multiple whitespaces","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    public void parse_invalidArgs_returnsDueInCommand() {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        DueInCommand expectedDueInCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"            expectedDueInCommand \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"                    new DueInCommand(new DeadlineDateInRangePredicate(DEFAULT_NUMBER_OF_DAYS));","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Must not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"   sdadasdas \", expectedDueInCommand); // random","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \" days/20\", expectedDueInCommand); // typo","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \" weeks/20\", expectedDueInCommand); // typo","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"    public void parse_invalidArgs_throwsError() {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DueInCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"  day/\", expectedMessage); // empty argument","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"  week/\", expectedMessage); // empty argument","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"  day/ashiap\", expectedMessage); // invalid input for day param","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"  week/ashiap\", expectedMessage); // invalid input for week param","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"  day/-1\", expectedMessage); // invalid input for day param","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"  week/-1\", expectedMessage); // invalid input for week param","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"  day/0\", expectedMessage); // invalid input for day param","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"  week/0\", expectedMessage); // invalid input for week param","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"  day/999999999999999\", expectedMessage); // invalid input for day param","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"  week/999999999999999\", expectedMessage); // invalid input for week param","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"    public void parse_validArgs_returnsDueInCommand() {","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"        DueInCommand expectedDueInCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"            expectedDueInCommand \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"                    new DueInCommand(new DeadlineDateInRangePredicate(DEFAULT_NUMBER_OF_DAYS));","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Must not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        // day given","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \" day/7\", expectedDueInCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \" day/7              \", expectedDueInCommand); //whitespaces behind","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"         day/7\", expectedDueInCommand); //whitespaces in front","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"      day/7    \", expectedDueInCommand); //whitespaces in both side","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"  day/10   day/7    \", expectedDueInCommand); //multiple day params","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"        // week given","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \" week/1\", expectedDueInCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \" week/1              \", expectedDueInCommand); //whitespaces behind","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"         week/1\", expectedDueInCommand); //whitespaces in front","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"      week/1    \", expectedDueInCommand); //whitespaces in both side","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, \"   week/10   week/1    \", expectedDueInCommand); //multiple week params","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"    public void parse_multipleParams_throwsError() {","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DueInCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \" day/7 week/20\", expectedMessage); // both valid args given","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \" day/7 week/\", expectedMessage); // one valid and one empty","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \" day/ week/\", expectedMessage); // both empty","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \" day/ week/7\", expectedMessage); // one valid and one empty","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \" day/sada week/7\", expectedMessage); // one valid and one invalid","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \" day/7 week/sdadas\", expectedMessage); // one valid and one invalid","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \" day/adsad week/asdsdad\", expectedMessage); // both invalid","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"austenjs":106}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CODE_DESC_AMY;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CODE_DESC_BOB;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CODE_DESC;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_TAG;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TIME_DESC;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHTAGE_DESC_NAN;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHTAGE_DESC_OOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CODE_AMY;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CODE_BOB;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHTAGE_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHTAGE_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        // big number index","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"99999999999999999\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"geraldfan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, TaskName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, DeadlineDate.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TIME_DESC, DeadlineTime.MESSAGE_CONSTRAINTS); // invalid time","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"1\" + INVALID_WEIGHTAGE_DESC_NAN,","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"                ParserUtil.MESSAGE_INVALID_WEIGHTAGE); // invalid weightage - not a number","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"1\" + INVALID_WEIGHTAGE_DESC_OOB,","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"                Weightage.MESSAGE_CONSTRAINTS); // invalid weightage - out of bound","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PRIORITY_TAG, PriorityTag.MESSAGE_CONSTRAINTS); // invalid priority tag","lastModifiedDate":"2021-04-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"geraldfan"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Task} being edited,","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_TAG_DESC,","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"geraldfan"},"content":"                TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"geraldfan"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_HUSBAND + CODE_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND + DATE_DESC_AMY + TIME_DESC_AMY + WEIGHTAGE_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"austenjs"},"content":"                .withCode(VALID_CODE_AMY).withDeadlineDate(VALID_DATE_AMY)","lastModifiedDate":"2021-04-11"},{"lineNumber":130,"author":{"gitId":"austenjs"},"content":"                .withDeadlineTime(VALID_TIME_AMY).withWeightage(25)","lastModifiedDate":"2021-04-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"geraldfan"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + CODE_DESC_AMY;","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"                .withName(VALID_NAME_AMY).withCode(VALID_CODE_AMY).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"geraldfan"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"danielonges"},"content":"        // code","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"danielonges"},"content":"        userInput \u003d targetIndex.getOneBased() + CODE_DESC_AMY;","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"danielonges"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withCode(VALID_CODE_AMY).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"austenjs"},"content":"        // date","lastModifiedDate":"2021-04-11"},{"lineNumber":165,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":166,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDeadlineDate(VALID_DATE_AMY).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":167,"author":{"gitId":"austenjs"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":168,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":169,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":170,"author":{"gitId":"austenjs"},"content":"        // time","lastModifiedDate":"2021-04-11"},{"lineNumber":171,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased() + TIME_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":172,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDeadlineTime(VALID_TIME_AMY).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":176,"author":{"gitId":"austenjs"},"content":"        // weightage","lastModifiedDate":"2021-04-11"},{"lineNumber":177,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased() + WEIGHTAGE_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":178,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withWeightage(25).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":182,"author":{"gitId":"austenjs"},"content":"        // priorityTag","lastModifiedDate":"2021-04-11"},{"lineNumber":183,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased() + PRIORITY_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":184,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withPriorityTag(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"mrweikiat"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":194,"author":{"gitId":"austenjs"},"content":"        // note","lastModifiedDate":"2021-04-11"},{"lineNumber":195,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased() + REMARK_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":196,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withNotes(VALID_REMARK_AMY).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"geraldfan"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":204,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":205,"author":{"gitId":"austenjs"},"content":"        //tags","lastModifiedDate":"2021-04-11"},{"lineNumber":206,"author":{"gitId":"danielonges"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"danielonges"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"danielonges"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"danielonges"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-03-13"},{"lineNumber":211,"author":{"gitId":"danielonges"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":217,"author":{"gitId":"austenjs"},"content":"        // name","lastModifiedDate":"2021-04-11"},{"lineNumber":218,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-04-11"},{"lineNumber":219,"author":{"gitId":"austenjs"},"content":"                + NAME_DESC_AMY + NAME_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":220,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-11"},{"lineNumber":221,"author":{"gitId":"austenjs"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":222,"author":{"gitId":"austenjs"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":223,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":224,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":225,"author":{"gitId":"austenjs"},"content":"        // code","lastModifiedDate":"2021-04-11"},{"lineNumber":226,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-04-11"},{"lineNumber":227,"author":{"gitId":"austenjs"},"content":"                + CODE_DESC_AMY + CODE_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":228,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-11"},{"lineNumber":229,"author":{"gitId":"austenjs"},"content":"                .withCode(VALID_CODE_BOB).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":230,"author":{"gitId":"austenjs"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":231,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":232,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":233,"author":{"gitId":"austenjs"},"content":"        // date","lastModifiedDate":"2021-04-11"},{"lineNumber":234,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-04-11"},{"lineNumber":235,"author":{"gitId":"austenjs"},"content":"                + DATE_DESC_AMY + DATE_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":236,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-11"},{"lineNumber":237,"author":{"gitId":"austenjs"},"content":"                .withDeadlineDate(VALID_DATE_BOB).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":238,"author":{"gitId":"austenjs"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":239,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":240,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":241,"author":{"gitId":"austenjs"},"content":"        // time","lastModifiedDate":"2021-04-11"},{"lineNumber":242,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-04-11"},{"lineNumber":243,"author":{"gitId":"austenjs"},"content":"                + TIME_DESC_AMY + TIME_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":244,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-11"},{"lineNumber":245,"author":{"gitId":"austenjs"},"content":"                .withDeadlineTime(VALID_TIME_BOB).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":246,"author":{"gitId":"austenjs"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":247,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":248,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":249,"author":{"gitId":"austenjs"},"content":"        // weightage","lastModifiedDate":"2021-04-11"},{"lineNumber":250,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-04-11"},{"lineNumber":251,"author":{"gitId":"austenjs"},"content":"                + WEIGHTAGE_DESC_AMY + WEIGHTAGE_DESC_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":252,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-11"},{"lineNumber":253,"author":{"gitId":"austenjs"},"content":"                .withWeightage(50).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":254,"author":{"gitId":"austenjs"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":255,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":256,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":257,"author":{"gitId":"austenjs"},"content":"        // priority tag","lastModifiedDate":"2021-04-11"},{"lineNumber":258,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-04-11"},{"lineNumber":259,"author":{"gitId":"austenjs"},"content":"                + PRIORITY_DESC_BOB + PRIORITY_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":260,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-11"},{"lineNumber":261,"author":{"gitId":"austenjs"},"content":"                .withPriorityTag(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":262,"author":{"gitId":"austenjs"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":263,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":264,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":265,"author":{"gitId":"austenjs"},"content":"        // note","lastModifiedDate":"2021-04-11"},{"lineNumber":266,"author":{"gitId":"austenjs"},"content":"        userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-04-11"},{"lineNumber":267,"author":{"gitId":"austenjs"},"content":"                + REMARK_DESC_BOB + REMARK_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":268,"author":{"gitId":"austenjs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-11"},{"lineNumber":269,"author":{"gitId":"austenjs"},"content":"                .withNotes(VALID_REMARK_AMY).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":270,"author":{"gitId":"austenjs"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":271,"author":{"gitId":"austenjs"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"geraldfan"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":278,"author":{"gitId":"danielonges"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_CODE_DESC + CODE_DESC_AMY;","lastModifiedDate":"2021-03-13"},{"lineNumber":279,"author":{"gitId":"danielonges"},"content":"        EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":280,"author":{"gitId":"danielonges"},"content":"                new EditTaskDescriptorBuilder().withCode(VALID_CODE_AMY).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":285,"author":{"gitId":"danielonges"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_BOB + INVALID_CODE_DESC + CODE_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-13"},{"lineNumber":286,"author":{"gitId":"danielonges"},"content":"        descriptor \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":287,"author":{"gitId":"danielonges"},"content":"                new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-03-13"},{"lineNumber":288,"author":{"gitId":"danielonges"},"content":"                        .withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-13"},{"lineNumber":289,"author":{"gitId":"danielonges"},"content":"                        .withCode(VALID_CODE_BOB)","lastModifiedDate":"2021-03-13"},{"lineNumber":290,"author":{"gitId":"danielonges"},"content":"                        .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-13"},{"lineNumber":291,"author":{"gitId":"danielonges"},"content":"                        .build();","lastModifiedDate":"2021-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":298,"author":{"gitId":"geraldfan"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":301,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-10"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"geraldfan":17,"mrweikiat":2,"danielonges":28,"-":142,"austenjs":117}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, \"         \",","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":35,"austenjs":2}},{"path":"src/test/java/seedu/address/logic/parser/NotesCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.NotesCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"public class NotesCommandParserTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"    private NotesCommandParser parser \u003d new NotesCommandParser();","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    private final String nonEmptyNotes \u003d \"Some notes.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2021-02-23"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"        // have notes","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NOTES + nonEmptyNotes;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"        NotesCommand expectedCommand \u003d new NotesCommand(INDEX_FIRST_TASK, new Notes(nonEmptyNotes));","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-02-23"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"        // no notes","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NOTES;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"        expectedCommand \u003d new NotesCommand(INDEX_FIRST_TASK, new Notes(\"\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, NotesCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"        // no parameters","lastModifiedDate":"2021-02-23"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, NotesCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"        // no index","lastModifiedDate":"2021-02-23"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        assertParseFailure(parser, NotesCommand.COMMAND_WORD + \" SADASDA\" + nonEmptyNotes, expectedMessage);","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        // no index and notes","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, NotesCommand.COMMAND_WORD + \" \" + nonEmptyNotes, expectedMessage);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"danielonges":43,"austenjs":3}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    private static final String INVALID_CODE \u003d \"SC7666\";","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    private static final String INVALID_DATE \u003d \"32-13-2000\";","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    private static final String INVALID_TIME \u003d \"24:00\";","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"    private static final String INVALID_WEIGHTAGE \u003d \"101%\";","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    private static final String INVALID_PRIORITY \u003d \"EASY\";","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    private static final String VALID_CODE \u003d \"CS1236\";","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    private static final String VALID_DATE \u003d \"31-01-2030\";","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"    private static final String VALID_TIME \u003d \"23:00\";","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    private static final String VALID_WEIGHTAGE \u003d \"11%\";","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"    private static final String VALID_PRIORITY \u003d \"LOW\";","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"a 10\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"3 2 1\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Long.MAX_VALUE + 1)));","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"    // TaskName","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"geraldfan"},"content":"        TaskName expectedModuleName \u003d new TaskName(VALID_NAME);","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(expectedModuleName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"geraldfan"},"content":"        TaskName expectedModuleName \u003d new TaskName(VALID_NAME);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(expectedModuleName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"    // ModuleCode","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"    public void parseCode_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCode((String) null));","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"    public void parseCode_invalidValue_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCode(INVALID_CODE));","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"    public void parseCode_validValueWithoutWhitespace_returnsCode() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"        ModuleCode expectedModuleCode \u003d new ModuleCode(VALID_CODE);","lastModifiedDate":"2021-04-11"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"        assertEquals(expectedModuleCode, ParserUtil.parseCode(VALID_CODE));","lastModifiedDate":"2021-04-11"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":112,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":113,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"    public void parseCode_validValueWithWhitespace_returnsTrimmedCode() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"        String codeWithWhitespace \u003d WHITESPACE + VALID_CODE + WHITESPACE;","lastModifiedDate":"2021-04-11"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"        ModuleCode expectedModuleCode \u003d new ModuleCode(VALID_CODE);","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"        assertEquals(expectedModuleCode, ParserUtil.parseCode(codeWithWhitespace));","lastModifiedDate":"2021-04-11"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"    // DeadlineDate","lastModifiedDate":"2021-04-11"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDeadlineDate((String) null));","lastModifiedDate":"2021-04-11"},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":127,"author":{"gitId":"austenjs"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":128,"author":{"gitId":"austenjs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeadlineDate(INVALID_DATE));","lastModifiedDate":"2021-04-11"},{"lineNumber":129,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":130,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":131,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":132,"author":{"gitId":"austenjs"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":133,"author":{"gitId":"austenjs"},"content":"        DeadlineDate expectedDeadlineDate \u003d new DeadlineDate(VALID_DATE);","lastModifiedDate":"2021-04-11"},{"lineNumber":134,"author":{"gitId":"austenjs"},"content":"        assertEquals(expectedDeadlineDate, ParserUtil.parseDeadlineDate(VALID_DATE));","lastModifiedDate":"2021-04-11"},{"lineNumber":135,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":136,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":137,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":138,"author":{"gitId":"austenjs"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":139,"author":{"gitId":"austenjs"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2021-04-11"},{"lineNumber":140,"author":{"gitId":"austenjs"},"content":"        DeadlineDate expectedModuleDate \u003d new DeadlineDate(VALID_DATE);","lastModifiedDate":"2021-04-11"},{"lineNumber":141,"author":{"gitId":"austenjs"},"content":"        assertEquals(expectedModuleDate, ParserUtil.parseDeadlineDate(dateWithWhitespace));","lastModifiedDate":"2021-04-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":144,"author":{"gitId":"austenjs"},"content":"    // DeadlineTime","lastModifiedDate":"2021-04-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":146,"author":{"gitId":"austenjs"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":147,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDeadlineTime((String) null));","lastModifiedDate":"2021-04-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":151,"author":{"gitId":"austenjs"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":152,"author":{"gitId":"austenjs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeadlineTime(INVALID_TIME));","lastModifiedDate":"2021-04-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":156,"author":{"gitId":"austenjs"},"content":"    public void parseTime_validValueWithoutWhitespace_returnsTime() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":157,"author":{"gitId":"austenjs"},"content":"        DeadlineTime expectedDeadlineTime \u003d new DeadlineTime(VALID_TIME);","lastModifiedDate":"2021-04-11"},{"lineNumber":158,"author":{"gitId":"austenjs"},"content":"        assertEquals(expectedDeadlineTime, ParserUtil.parseDeadlineTime(VALID_TIME));","lastModifiedDate":"2021-04-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":162,"author":{"gitId":"austenjs"},"content":"    public void parseTime_validValueWithWhitespace_returnsTrimmedTime() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":163,"author":{"gitId":"austenjs"},"content":"        String timeWithWhitespace \u003d WHITESPACE + VALID_TIME + WHITESPACE;","lastModifiedDate":"2021-04-11"},{"lineNumber":164,"author":{"gitId":"austenjs"},"content":"        DeadlineTime expectedDeadlineTime \u003d new DeadlineTime(VALID_TIME);","lastModifiedDate":"2021-04-11"},{"lineNumber":165,"author":{"gitId":"austenjs"},"content":"        assertEquals(expectedDeadlineTime, ParserUtil.parseDeadlineTime(timeWithWhitespace));","lastModifiedDate":"2021-04-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":168,"author":{"gitId":"austenjs"},"content":"    // Weightage","lastModifiedDate":"2021-04-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":170,"author":{"gitId":"austenjs"},"content":"    public void parseWeightage_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":171,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseWeightage((String) null));","lastModifiedDate":"2021-04-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":175,"author":{"gitId":"austenjs"},"content":"    public void parseWeightage_invalidValue_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":176,"author":{"gitId":"austenjs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeightage(INVALID_WEIGHTAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":180,"author":{"gitId":"austenjs"},"content":"    public void parseWeightage_validValueWithoutWhitespace_returnsWeightage() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":181,"author":{"gitId":"austenjs"},"content":"        Weightage expectedWeightage \u003d new Weightage(11);","lastModifiedDate":"2021-04-11"},{"lineNumber":182,"author":{"gitId":"austenjs"},"content":"        assertEquals(expectedWeightage, ParserUtil.parseWeightage(VALID_WEIGHTAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":186,"author":{"gitId":"austenjs"},"content":"    public void parseWeightage_validValueWithWhitespace_returnsTrimmedWeightage() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":187,"author":{"gitId":"austenjs"},"content":"        String weightageWithWhitespace \u003d WHITESPACE + VALID_WEIGHTAGE + WHITESPACE;","lastModifiedDate":"2021-04-11"},{"lineNumber":188,"author":{"gitId":"austenjs"},"content":"        Weightage expectedWeightage \u003d new Weightage(11);","lastModifiedDate":"2021-04-11"},{"lineNumber":189,"author":{"gitId":"austenjs"},"content":"        assertEquals(expectedWeightage, ParserUtil.parseWeightage(weightageWithWhitespace));","lastModifiedDate":"2021-04-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":192,"author":{"gitId":"austenjs"},"content":"    // Priority tag","lastModifiedDate":"2021-04-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":194,"author":{"gitId":"austenjs"},"content":"    public void parsePriorityTag_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":195,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePriorityTag((String) null));","lastModifiedDate":"2021-04-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":199,"author":{"gitId":"austenjs"},"content":"    public void parsePriorityTag_invalidValue_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":200,"author":{"gitId":"austenjs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePriorityTag(INVALID_PRIORITY));","lastModifiedDate":"2021-04-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":204,"author":{"gitId":"austenjs"},"content":"    public void parsePriorityTag_validValueWithoutWhitespace_returnsPriorityTag() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":205,"author":{"gitId":"austenjs"},"content":"        PriorityTag expectedPriority \u003d new PriorityTag(VALID_PRIORITY);","lastModifiedDate":"2021-04-11"},{"lineNumber":206,"author":{"gitId":"austenjs"},"content":"        assertEquals(expectedPriority, ParserUtil.parsePriorityTag(VALID_PRIORITY));","lastModifiedDate":"2021-04-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":210,"author":{"gitId":"austenjs"},"content":"    public void parsePriorityTag_validValueWithWhitespace_returnsTrimmedPriorityTag() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":211,"author":{"gitId":"austenjs"},"content":"        String priorityWithWhitespace \u003d WHITESPACE + VALID_PRIORITY + WHITESPACE;","lastModifiedDate":"2021-04-11"},{"lineNumber":212,"author":{"gitId":"austenjs"},"content":"        PriorityTag expectedPriority \u003d new PriorityTag(VALID_PRIORITY);","lastModifiedDate":"2021-04-11"},{"lineNumber":213,"author":{"gitId":"austenjs"},"content":"        assertEquals(expectedPriority, ParserUtil.parsePriorityTag(priorityWithWhitespace));","lastModifiedDate":"2021-04-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":216,"author":{"gitId":"austenjs"},"content":"    // Single tag","lastModifiedDate":"2021-04-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"austenjs"},"content":"    // Multiple tags","lastModifiedDate":"2021-04-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"geraldfan":6,"mrweikiat":2,"danielonges":1,"-":148,"austenjs":106}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.util.SortingFlag;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"    private SortingFlag dateTimeFlag \u003d new SortingFlag(\"dateTime\");","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    private SortingFlag moduleCodeFlag \u003d new SortingFlag(\"moduleCode\");","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"    private SortingFlag priorityTagFlag \u003d new SortingFlag(\"priorityTag\");","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    private SortingFlag taskNameFlag \u003d new SortingFlag(\"taskName\");","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"    private SortingFlag weightageFlag \u003d new SortingFlag(\"weightage\");","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    public void parse_validArgsDateTimeFlag_returnsSortCommand() {","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"dateTime\", new SortCommand(dateTimeFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"    public void parse_validArgsModuleCodeFlag_returnsSortCommand() {","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"moduleCode\", new SortCommand(moduleCodeFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"    public void parse_validArgsPriorityTagFlag_returnsSortCommand() {","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"priorityTag\", new SortCommand(priorityTagFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"    public void parse_validArgsTaskNameFlag_returnsSortCommand() {","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"taskName\", new SortCommand(taskNameFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"    public void parse_validArgsWeightageFlag_returnsSortCommand() {","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"        assertParseSuccess(parser, \"weightage\", new SortCommand(weightageFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortingFlag.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"    public void parse_invalidArgsNoArgs_throwsParseException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"danielonges":54}},{"path":"src/test/java/seedu/address/logic/parser/TaskTrackerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.DoTodayCommand;","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.DueInCommand;","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"import seedu.address.logic.commands.NotesCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.util.OperationFlag;","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.util.SortingFlag;","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDateInRangePredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"public class TaskTrackerParserTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"    private final TaskTrackerParser parser \u003d new TaskTrackerParser();","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(TaskUtil.getAddCommand(task));","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(new AddCommand(task), command);","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_TASK), command);","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"    public void parseCommand_done() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        DoneCommand command \u003d (DoneCommand) parser.parseCommand(","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"                DoneCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        assertEquals(new DoneCommand(INDEX_FIRST_TASK), command);","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"    public void parseCommand_doToday() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        OperationFlag add \u003d new OperationFlag(\"-a\");","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"        OperationFlag delete \u003d new OperationFlag(\"-r\");","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        // Add function","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        DoTodayCommand command \u003d (DoTodayCommand) parser.parseCommand(","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"                DoTodayCommand.COMMAND_WORD + \" -a \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"        assertEquals(new DoTodayCommand(INDEX_FIRST_TASK, add), command);","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"        // Delete operation","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        command \u003d (DoTodayCommand) parser.parseCommand(","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"                DoTodayCommand.COMMAND_WORD + \" -r \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"        assertEquals(new DoTodayCommand(INDEX_FIRST_TASK, delete), command);","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"    public void parseCommand_dueIn() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate predicate \u003d new DeadlineDateInRangePredicate(7); // 7 days","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"        DueInCommand command \u003d (DueInCommand) parser.parseCommand(","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"                DueInCommand.COMMAND_WORD + \" day/7\");","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"        assertEquals(new DueInCommand(predicate), command);","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        command \u003d (DueInCommand) parser.parseCommand(","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"                DueInCommand.COMMAND_WORD + \" week/1\");","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"        assertEquals(new DueInCommand(predicate), command);","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"geraldfan"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(task).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"                + INDEX_FIRST_TASK.getOneBased() + \" \" + TaskUtil.getEditTaskDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"geraldfan"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_TASK, descriptor), command);","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":138,"author":{"gitId":"danielonges"},"content":"    public void parseCommand_notes() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"danielonges"},"content":"        final String notes \u003d \"Some notes.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"        NotesCommand command \u003d (NotesCommand) parser.parseCommand(NotesCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"danielonges"},"content":"                        + INDEX_FIRST_TASK.getOneBased() + \" \" + PREFIX_NOTES + notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"        assertEquals(new NotesCommand(INDEX_FIRST_TASK, new Notes(notes)), command);","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":144,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":145,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":146,"author":{"gitId":"austenjs"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":147,"author":{"gitId":"austenjs"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":148,"author":{"gitId":"austenjs"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\") instanceof RedoCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":149,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":150,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":151,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":152,"author":{"gitId":"austenjs"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":153,"author":{"gitId":"austenjs"},"content":"        SortingFlag date \u003d new SortingFlag(SortingFlag.DATE_TIME_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":154,"author":{"gitId":"austenjs"},"content":"        SortingFlag name \u003d new SortingFlag(SortingFlag.TASK_NAME_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":155,"author":{"gitId":"austenjs"},"content":"        SortingFlag code \u003d new SortingFlag(SortingFlag.MODULE_CODE_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":156,"author":{"gitId":"austenjs"},"content":"        SortingFlag ptag \u003d new SortingFlag(SortingFlag.PRIORITY_TAG_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":157,"author":{"gitId":"austenjs"},"content":"        SortingFlag weightage \u003d new SortingFlag(SortingFlag.WEIGHTAGE_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":158,"author":{"gitId":"austenjs"},"content":"        SortCommand command \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-04-11"},{"lineNumber":159,"author":{"gitId":"austenjs"},"content":"                + SortingFlag.DATE_TIME_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":160,"author":{"gitId":"austenjs"},"content":"        assertEquals(new SortCommand(date), command);","lastModifiedDate":"2021-04-11"},{"lineNumber":161,"author":{"gitId":"austenjs"},"content":"        command \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-04-11"},{"lineNumber":162,"author":{"gitId":"austenjs"},"content":"                + SortingFlag.TASK_NAME_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":163,"author":{"gitId":"austenjs"},"content":"        assertEquals(new SortCommand(name), command);","lastModifiedDate":"2021-04-11"},{"lineNumber":164,"author":{"gitId":"austenjs"},"content":"        command \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-04-11"},{"lineNumber":165,"author":{"gitId":"austenjs"},"content":"                + SortingFlag.MODULE_CODE_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":166,"author":{"gitId":"austenjs"},"content":"        assertEquals(new SortCommand(code), command);","lastModifiedDate":"2021-04-11"},{"lineNumber":167,"author":{"gitId":"austenjs"},"content":"        command \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-04-11"},{"lineNumber":168,"author":{"gitId":"austenjs"},"content":"                + SortingFlag.PRIORITY_TAG_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":169,"author":{"gitId":"austenjs"},"content":"        assertEquals(new SortCommand(ptag), command);","lastModifiedDate":"2021-04-11"},{"lineNumber":170,"author":{"gitId":"austenjs"},"content":"        command \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-04-11"},{"lineNumber":171,"author":{"gitId":"austenjs"},"content":"                + SortingFlag.WEIGHTAGE_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":172,"author":{"gitId":"austenjs"},"content":"        assertEquals(new SortCommand(weightage), command);","lastModifiedDate":"2021-04-11"},{"lineNumber":173,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":174,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":175,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":176,"author":{"gitId":"austenjs"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":177,"author":{"gitId":"austenjs"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":178,"author":{"gitId":"austenjs"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD + \" 3\") instanceof UndoCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":179,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":180,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"geraldfan":9,"mrweikiat":8,"danielonges":11,"-":84,"austenjs":79}},{"path":"src/test/java/seedu/address/logic/util/OperationFlagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.util;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"public class OperationFlagTest {","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    private OperationFlag validAddOperationFlag \u003d new OperationFlag(OperationFlag.ADD_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"    private OperationFlag validRemoveOperationFlag \u003d new OperationFlag(OperationFlag.REMOVE_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"        assertThrows(NullPointerException.class, () -\u003e new OperationFlag(null));","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"    public void constructor_invalidOperationFlag_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"        String invalidOperationFlag \u003d \"\";","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new OperationFlag(invalidOperationFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"    public void constructor_validAddOperationFlag_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"        assertEquals(new OperationFlag(\"-a\"), validAddOperationFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    public void constructor_validRemoveOperationFlag_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"        assertEquals(new OperationFlag(\"-r\"), validRemoveOperationFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"    public void equals() {","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"        assertTrue(validAddOperationFlag.equals(validAddOperationFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"        assertTrue(validRemoveOperationFlag.equals(validRemoveOperationFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        // same value -\u003e returns true","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        assertTrue(validAddOperationFlag.equals(new OperationFlag(OperationFlag.ADD_FLAG)));","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"        assertTrue(validRemoveOperationFlag.equals(new OperationFlag(OperationFlag.REMOVE_FLAG)));","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"        // diff type -\u003e returns false","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"        assertFalse(validAddOperationFlag.equals(1));","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"        assertFalse(validAddOperationFlag.equals(\"Hello World!\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"        assertFalse(validAddOperationFlag.equals(null));","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"        // diff values -\u003e returns false","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"        assertFalse(validAddOperationFlag.equals(validRemoveOperationFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"    public void isValidOperationType() {","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"        // valid types","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"        assertTrue(OperationFlag.isValidOperationType(OperationFlag.ADD_FLAG));","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"        assertTrue(OperationFlag.isValidOperationType(OperationFlag.REMOVE_FLAG));","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"        // invalid types","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"        assertFalse(OperationFlag.isValidOperationType(\"\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"danielonges":68}},{"path":"src/test/java/seedu/address/logic/util/SortingFlagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.logic.util;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"public class SortingFlagTest {","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    private SortingFlag validDateTimeSortingFlag \u003d new SortingFlag(SortingFlag.DATE_TIME_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"    private SortingFlag validModuleCodeSortingFlag \u003d new SortingFlag(SortingFlag.MODULE_CODE_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"    private SortingFlag validPriorityTagSortingFlag \u003d new SortingFlag(SortingFlag.PRIORITY_TAG_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"    private SortingFlag validTaskNameSortingFlag \u003d new SortingFlag(SortingFlag.TASK_NAME_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"    private SortingFlag validWeightageSortingFlag \u003d new SortingFlag(SortingFlag.WEIGHTAGE_FLAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortingFlag(null));","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"    public void constructor_invalidSortingFlag_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"        String invalidSortingFlag \u003d \"\";","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new SortingFlag(invalidSortingFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"    public void constructor_validDateTimeSortingFlag_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"        assertEquals(new SortingFlag(\"dateTime\"), validDateTimeSortingFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"    public void constructor_validModuleCodeSortingFlag_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"        assertEquals(new SortingFlag(\"moduleCode\"), validModuleCodeSortingFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"    public void constructor_validPriorityTagSortingFlag_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        assertEquals(new SortingFlag(\"priorityTag\"), validPriorityTagSortingFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"    public void constructor_validTaskNameSortingFlag_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"        assertEquals(new SortingFlag(\"taskName\"), validTaskNameSortingFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"    public void constructor_validWeightageSortingFlag_success() {","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"        assertEquals(new SortingFlag(\"weightage\"), validWeightageSortingFlag);","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"    public void equals() {","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"        assertTrue(validDateTimeSortingFlag.equals(validDateTimeSortingFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"        assertTrue(validModuleCodeSortingFlag.equals(validModuleCodeSortingFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"        assertTrue(validPriorityTagSortingFlag.equals(validPriorityTagSortingFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"        assertTrue(validTaskNameSortingFlag.equals(validTaskNameSortingFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"        assertTrue(validWeightageSortingFlag.equals(validWeightageSortingFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"        // same value -\u003e returns true","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"        assertTrue(validDateTimeSortingFlag.equals(new SortingFlag(SortingFlag.DATE_TIME_FLAG)));","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"        assertTrue(validModuleCodeSortingFlag.equals(new SortingFlag(SortingFlag.MODULE_CODE_FLAG)));","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"        assertTrue(validPriorityTagSortingFlag.equals(new SortingFlag(SortingFlag.PRIORITY_TAG_FLAG)));","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"        assertTrue(validTaskNameSortingFlag.equals(new SortingFlag(SortingFlag.TASK_NAME_FLAG)));","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"        assertTrue(validWeightageSortingFlag.equals(new SortingFlag(SortingFlag.WEIGHTAGE_FLAG)));","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"        // diff type -\u003e returns false","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"        assertFalse(validDateTimeSortingFlag.equals(1));","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"        assertFalse(validDateTimeSortingFlag.equals(\"\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"        assertFalse(validDateTimeSortingFlag.equals(null));","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"        // diff values -\u003e returns false","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"        assertFalse(validDateTimeSortingFlag.equals(validModuleCodeSortingFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"        assertFalse(validDateTimeSortingFlag.equals(validPriorityTagSortingFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"        assertFalse(validDateTimeSortingFlag.equals(validTaskNameSortingFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"        assertFalse(validDateTimeSortingFlag.equals(validWeightageSortingFlag));","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"    public void isValidSortingType() {","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"        // valid types","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"danielonges"},"content":"        assertTrue(SortingFlag.isValidSortingType(SortingFlag.DATE_TIME_FLAG));","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"        assertTrue(SortingFlag.isValidSortingType(SortingFlag.MODULE_CODE_FLAG));","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"danielonges"},"content":"        assertTrue(SortingFlag.isValidSortingType(SortingFlag.PRIORITY_TAG_FLAG));","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"danielonges"},"content":"        assertTrue(SortingFlag.isValidSortingType(SortingFlag.TASK_NAME_FLAG));","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"        assertTrue(SortingFlag.isValidSortingType(SortingFlag.WEIGHTAGE_FLAG));","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"danielonges"},"content":"        // invalid types","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"danielonges"},"content":"        assertFalse(SortingFlag.isValidSortingType(\"\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"danielonges":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2040;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2103;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"import seedu.address.testutil.TaskTrackerBuilder;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        assertEquals(new TaskTracker(), new TaskTracker(modelManager.getTaskTracker()));","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"        userPrefs.setTaskTrackerFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"        userPrefs.setTaskTrackerFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"    public void setTaskTrackerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskTrackerFilePath(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"    public void setTaskTrackerFilePath_validPath_setsTaskTrackerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"        modelManager.setTaskTrackerFilePath(path);","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"geraldfan"},"content":"        assertEquals(path, modelManager.getTaskTrackerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"geraldfan"},"content":"    public void hasTask_taskNotInTaskTracker_returnsFalse() {","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"        assertFalse(modelManager.hasTask(CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"geraldfan"},"content":"    public void hasTask_taskInTaskTracker_returnsTrue() {","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"        modelManager.addTask(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"        assertTrue(modelManager.hasTask(CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"geraldfan"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"geraldfan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"        TaskTracker taskTracker \u003d new TaskTrackerBuilder().withTask(CS2103).withTask(CS2040).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"geraldfan"},"content":"        TaskTracker differentTaskTracker \u003d new TaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"geraldfan"},"content":"        modelManager \u003d new ModelManager(taskTracker, userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"geraldfan"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(taskTracker, userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"geraldfan"},"content":"        // different taskTracker -\u003e returns false","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"geraldfan"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTaskTracker, userPrefs)));","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"geraldfan"},"content":"        String[] keywords \u003d CS2103.getTaskName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"geraldfan"},"content":"        modelManager.updateFilteredTaskList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"geraldfan"},"content":"        assertFalse(modelManager.equals(new ModelManager(taskTracker, userPrefs)));","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"geraldfan"},"content":"        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"geraldfan"},"content":"        differentUserPrefs.setTaskTrackerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"geraldfan"},"content":"        assertFalse(modelManager.equals(new ModelManager(taskTracker, differentUserPrefs)));","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"geraldfan":27,"-":99,"austenjs":6}},{"path":"src/test/java/seedu/address/model/TaskTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2103;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"public class TaskTrackerTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    private final TaskTracker taskTracker \u003d new TaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"        assertEquals(Collections.emptyList(), taskTracker.getTaskList());","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskTracker.resetData(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"    public void resetData_withValidReadOnlyTaskTracker_replacesData() {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"        TaskTracker newData \u003d getTypicalTaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"        taskTracker.resetData(newData);","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"        assertEquals(newData, taskTracker);","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        Task editedAlice \u003d new TaskBuilder(CS2103).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"        Task duplicateAlice \u003d new TaskBuilder(CS2103).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"            .build();","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(duplicateAlice, editedAlice);","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"        TaskTrackerStub newData \u003d new TaskTrackerStub(newTasks);","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskTracker.resetData(newData));","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskTracker.hasTask(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"    public void hasTask_taskNotInTaskTracker_returnsFalse() {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        assertFalse(taskTracker.hasTask(CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"    public void hasTask_taskInTaskTracker_returnsTrue() {","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        taskTracker.addTask(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        assertTrue(taskTracker.hasTask(CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"    public void hasTask_taskWithSameIdentityFieldsInTaskTracker_returnsFalse() {","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        taskTracker.addTask(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        Task editedAlice \u003d new TaskBuilder(CS2103).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"geraldfan"},"content":"        assertFalse(taskTracker.hasTask(editedAlice));","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"geraldfan"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"geraldfan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e taskTracker.getTaskList().remove(0));","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"geraldfan"},"content":"     * A stub ReadOnlyTaskTracker whose tasks list can violate interface constraints.","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"geraldfan"},"content":"    private static class TaskTrackerStub implements ReadOnlyTaskTracker {","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"        private final ObservableList\u003cTask\u003e dailyTasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"        TaskTrackerStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"geraldfan"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"            return tasks;","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"danielonges"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"danielonges"},"content":"        public ObservableList\u003cTask\u003e getDailyTaskList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"danielonges"},"content":"            return dailyTasks;","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"danielonges"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"geraldfan":26,"mrweikiat":8,"danielonges":6,"-":62,"austenjs":7}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"    public void setTaskTrackerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTaskTrackerFilePath(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"geraldfan":2,"-":19}},{"path":"src/test/java/seedu/address/model/person/DeadlineDateInRangePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"public class DeadlineDateInRangePredicateTest {","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    private static final DateTimeFormatter dateDateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    public void equals() {","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        long numberOfDays \u003d 3;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        long numberOfWeeks \u003d 3;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate firstPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate secondPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"            firstPredicate \u003d new DeadlineDateInRangePredicate(numberOfDays); //days","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"            secondPredicate \u003d new DeadlineDateInRangePredicate(","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"                    numberOfWeeks * 7); //weeks","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Should not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        assertTrue(secondPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate firstPredicateCopy;","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate secondPredicateCopy;","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"            firstPredicateCopy \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"                    new DeadlineDateInRangePredicate(numberOfDays);","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"            secondPredicateCopy \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"                    new DeadlineDateInRangePredicate(numberOfWeeks * 7);","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Must not be call;","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"        assertTrue(secondPredicate.equals(secondPredicateCopy));","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"        assertFalse(firstPredicate.equals(1)); // integer","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        assertFalse(secondPredicate.equals(1));","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        assertFalse(firstPredicate.equals(\"rand\")); //string","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        assertFalse(secondPredicate.equals(\"rand\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        assertFalse(firstPredicate.equals(new Object())); // object","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        assertFalse(secondPredicate.equals(new Object()));","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        assertFalse(firstPredicate.equals(new DeadlineTime(\"10:10\"))); // DeadlineTime","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        assertFalse(secondPredicate.equals(new DeadlineTime(\"10:10\")));","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        assertFalse(firstPredicate.equals(new DeadlineDate(\"10-10-2022\"))); // DeadlineDate","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"        assertFalse(secondPredicate.equals(new DeadlineDate(\"10-11-2022\")));","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"        assertFalse(secondPredicate.equals(null));","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"    public void test_deadlineDateInRange_returnsTrue() {","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        long oneDayAfter \u003d 1; // Lower bound","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        long maxDaysAfter \u003d ChronoUnit.DAYS.between(LocalDate.now().atStartOfDay(),","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"                LocalDate.of(2099, 12, 31).atStartOfDay()); //upper bound","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        long oneWeekAfter \u003d 1; // Lower bound","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        long maxWeeksAfter \u003d ChronoUnit.DAYS.between(LocalDate.now().atStartOfDay(),","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"                LocalDate.of(2099, 12, 31).atStartOfDay()) / 7; //upper bound","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"        String oneDayFromToday \u003d LocalDate.now().plusDays(1)","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 1 day from today","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"        String twoDaysFromToday \u003d LocalDate.now().plusDays(2)","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 2 days from today","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        String sevenDaysFromToday \u003d LocalDate.now().plusDays(7)","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 7 days from today","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"        String eightDaysFromToday \u003d LocalDate.now().plusDays(8)","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 8 days from today","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"        String maxDays \u003d LocalDate.now().plusDays(maxDaysAfter)","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 8 days from today","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"        String maxWeeks \u003d LocalDate.now().plusDays(maxWeeksAfter)","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 8 days from today","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"        //Tomorrow","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"            predicate \u003d new DeadlineDateInRangePredicate(oneDayAfter);","lastModifiedDate":"2021-04-09"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Should not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(oneDayFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"        //Within next week","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"            predicate \u003d new DeadlineDateInRangePredicate(oneWeekAfter * 7);","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Should not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":112,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(oneDayFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(twoDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(sevenDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"        //Until 31-12-2099 (by days)","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"            predicate \u003d new DeadlineDateInRangePredicate(maxDaysAfter);","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Should not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(oneDayFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(twoDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(sevenDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(eightDaysFromToday).build()));","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(maxDays).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(maxWeeks).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"austenjs"},"content":"        //Until 31-12-2099 (by weeks)","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":132,"author":{"gitId":"austenjs"},"content":"            predicate \u003d new DeadlineDateInRangePredicate(maxWeeksAfter * 7);","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":134,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Should not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":135,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":136,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":137,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(oneDayFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(twoDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(sevenDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(eightDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"austenjs"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDeadlineDate(maxWeeks).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"austenjs"},"content":"    public void test_deadlineDateInRange_returnsFalse() {","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"austenjs"},"content":"        long oneDayAfter \u003d 1; // Lower bound","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"austenjs"},"content":"        long maxDaysAfter \u003d ChronoUnit.DAYS.between(LocalDate.now().atStartOfDay(),","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"austenjs"},"content":"                LocalDate.of(2099, 12, 31).atStartOfDay()); //upper bound","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"austenjs"},"content":"        long oneWeekAfter \u003d 1; // Lower bound","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"austenjs"},"content":"        long maxWeeksAfter \u003d ChronoUnit.DAYS.between(LocalDate.now().atStartOfDay(),","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"austenjs"},"content":"                LocalDate.of(2099, 12, 31).atStartOfDay()) / 7; //upper bound","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"austenjs"},"content":"        String twoDaysFromToday \u003d LocalDate.now().plusDays(2)","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 2 days from today","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"austenjs"},"content":"        String sevenDaysFromToday \u003d LocalDate.now().plusDays(7)","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 7 days from today","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"austenjs"},"content":"        String eightDaysFromToday \u003d LocalDate.now().plusDays(8)","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 8 days from today","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"austenjs"},"content":"        String maxDays \u003d LocalDate.now().plusDays(maxDaysAfter)","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 8 days from today","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"austenjs"},"content":"        String maxWeeks \u003d LocalDate.now().plusDays(maxWeeksAfter)","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"austenjs"},"content":"                .format(dateDateFormatter); // 8 days from today","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"austenjs"},"content":"        //Tomorrow","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"austenjs"},"content":"        DeadlineDateInRangePredicate predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":165,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":166,"author":{"gitId":"austenjs"},"content":"            predicate \u003d new DeadlineDateInRangePredicate(oneDayAfter);","lastModifiedDate":"2021-04-09"},{"lineNumber":167,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":168,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Should not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":169,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":170,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":171,"author":{"gitId":"austenjs"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDeadlineDate(twoDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"austenjs"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDeadlineDate(sevenDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"austenjs"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDeadlineDate(eightDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"austenjs"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDeadlineDate(maxDays).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"austenjs"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDeadlineDate(maxWeeks).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"austenjs"},"content":"        //Within next week","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"austenjs"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":179,"author":{"gitId":"austenjs"},"content":"            predicate \u003d new DeadlineDateInRangePredicate(oneWeekAfter * 7);","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"austenjs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-09"},{"lineNumber":181,"author":{"gitId":"austenjs"},"content":"            assertFalse(true); // Should not be called","lastModifiedDate":"2021-04-09"},{"lineNumber":182,"author":{"gitId":"austenjs"},"content":"            return;","lastModifiedDate":"2021-04-09"},{"lineNumber":183,"author":{"gitId":"austenjs"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":184,"author":{"gitId":"austenjs"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDeadlineDate(eightDaysFromToday).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"austenjs"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDeadlineDate(maxDays).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"austenjs"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDeadlineDate(maxWeeks).build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":188,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"austenjs":188}},{"path":"src/test/java/seedu/address/model/person/DeadlineDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"public class DeadlineDateTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeadlineDate(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    public void constructor_invalidDeadlineDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"        String invalidDeadlineDateLowerBound \u003d \"12-12-2019\";","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"        String invalidDeadlineDateUpperBound \u003d \"01-01-2100\";","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"        String invalidDeadlineDateLowerBoundSecond \u003d \"00-02-2020\";","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"        String invalidDeadlineDateUpperBoundSecond \u003d \"32-12-2099\";","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        String invalidDeadlineDateLowerBoundThird \u003d \"12-00-2020\";","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        String invalidDeadlineDateUpperBoundThird \u003d \"01-13-2099\";","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"            new DeadlineDate(invalidDeadlineDateLowerBound));","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"            new DeadlineDate(invalidDeadlineDateUpperBound));","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"                new DeadlineDate(invalidDeadlineDateLowerBoundSecond));","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"                new DeadlineDate(invalidDeadlineDateUpperBoundSecond));","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"                new DeadlineDate(invalidDeadlineDateLowerBoundThird));","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"                new DeadlineDate(invalidDeadlineDateUpperBoundThird));","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    public void isValidDeadlineDate() {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"        // null DeadlineDate","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e DeadlineDate.isValidDeadlineDate(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        // invalid DeadlineDate","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineDate.isValidDeadlineDate(\"\")); // empty string","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineDate.isValidDeadlineDate(\"12:22:2020\")); // incorrect format MM:DD:YYYY","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineDate.isValidDeadlineDate(\"22:12:2020\")); // incorrect format DD:MM:YYYY","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineDate.isValidDeadlineDate(\"2020:12:02\")); // incorrect format YYYY:DD:MM","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineDate.isValidDeadlineDate(\"12/22/2020\")); // incorrect format MM/DD/YYYY","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineDate.isValidDeadlineDate(\"22/12/2020\")); // incorrect format DD/MM/YYYY","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineDate.isValidDeadlineDate(\"2020/12/02\")); // incorrect format YYYY/DD/MM","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineDate.isValidDeadlineDate(\"29-02-2023\")); // non-leap year","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"        // valid DeadlineDate","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineDate.isValidDeadlineDate(\"11-11-2022\")); // min year","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineDate.isValidDeadlineDate(\"11-01-2026\")); // min month","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineDate.isValidDeadlineDate(\"01-10-2029\")); // min date","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineDate.isValidDeadlineDate(\"12-02-2099\")); // max year","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineDate.isValidDeadlineDate(\"01-12-2029\")); // max month","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineDate.isValidDeadlineDate(\"31-10-2022\")); // max day","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineDate.isValidDeadlineDate(\"29-02-2024\")); // leap day","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineDate.isValidDeadlineDate(\"10-11-2021\")); // typical value","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineDate.isValidDeadlineDate(\"25-09-2032\")); // typical value","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"        DeadlineDate toTest \u003d new DeadlineDate(\"11-11-2022\");","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        //Different Strings","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.toString().equals(null)); // null","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.toString().equals(\"\")); // empty string","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.toString().equals(\"random\")); // random string","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        //Equals to itself","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.toString().equals(toTest.toString()));","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        //Equals to other DeadlineDate with same date","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.toString().equals(new DeadlineDate(\"11-11-2022\").toString()));","lastModifiedDate":"2021-04-09"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"    public void equals() {","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"        DeadlineDate toTest \u003d new DeadlineDate(\"11-11-2022\");","lastModifiedDate":"2021-04-09"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"        //Different object","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(null)); // null","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new Object())); // object","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(\"random\")); // string","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(1)); // integer","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new DeadlineTime(\"11:11\"))); // DeadlineTime","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"        //Different values","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new DeadlineDate(\"10-11-2022\"))); // Different date","lastModifiedDate":"2021-04-09"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new DeadlineDate(\"11-10-2022\"))); // Different month","lastModifiedDate":"2021-04-09"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new DeadlineDate(\"11-11-2023\"))); // Different year","lastModifiedDate":"2021-04-09"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new DeadlineDate(\"01-01-2024\"))); // All different","lastModifiedDate":"2021-04-09"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"        //Equals to itself","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.equals(toTest));","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"        //Equals to other DeadlineDate with same date","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.equals(new DeadlineDate(\"11-11-2022\")));","lastModifiedDate":"2021-04-09"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"austenjs":104}},{"path":"src/test/java/seedu/address/model/person/DeadlineTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"public class DeadlineTimeTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeadlineTime(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    public void constructor_invalidDeadlineTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"        String invalidDeadlineTimeLowerBound \u003d \"23:60\";","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"        String invalidDeadlineTimeUpperBound \u003d \"24:00\";","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalArgumentException.class, ()","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"            -\u003e new DeadlineTime(invalidDeadlineTimeLowerBound));","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalArgumentException.class, ()","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"            -\u003e new DeadlineTime(invalidDeadlineTimeUpperBound));","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    public void isValidDeadlineTime() {","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"        // null DeadlineTime","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e DeadlineTime.isValidDeadlineTime(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        // invalid DeadlineTime","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineTime.isValidDeadlineTime(\"\")); // empty string","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineTime.isValidDeadlineTime(\"12:20pm\")); // incorrect format","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineTime.isValidDeadlineTime(\"12:20am\")); // incorrect format","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        assertFalse(DeadlineTime.isValidDeadlineTime(\"590\")); // incorrect format","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        // valid DeadlineTime","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineTime.isValidDeadlineTime(\"00:00\")); // lowest hour","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineTime.isValidDeadlineTime(\"20:00\")); // lowest min","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineTime.isValidDeadlineTime(\"23:22\")); // highest hour","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineTime.isValidDeadlineTime(\"11:22\")); // highest min","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineTime.isValidDeadlineTime(\"12:12\")); // typical value","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        assertTrue(DeadlineTime.isValidDeadlineTime(\"21:21\")); // typical value","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        DeadlineTime toTest \u003d new DeadlineTime(\"10:20\");","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        //Different Strings","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.toString().equals(null)); // null","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.toString().equals(\"\")); // empty string","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.toString().equals(\"random\")); // random string","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"        //Equals to itself","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.toString().equals(toTest.toString()));","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        //Equals to other DeadlineDate with same date","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.toString().equals(new DeadlineTime(\"10:20\").toString()));","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"    public void equals() {","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"        DeadlineTime toTest \u003d new DeadlineTime(\"11:20\");","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"        //Different object","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(null)); // null","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new Object())); // object","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(\"random\")); // string","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(1)); // integer","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new DeadlineDate(\"11-11-2022\"))); // DeadlineDate","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"        //Different values","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new DeadlineTime(\"10:20\"))); // Different hour","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new DeadlineTime(\"11:10\"))); // Different min","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new DeadlineTime(\"10:10\"))); // All different","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"        //Equals to itself","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.equals(toTest));","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        //Equals to other DeadlineDate with same value","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.equals(new DeadlineTime(\"11:20\")));","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"austenjs":84}},{"path":"src/test/java/seedu/address/model/person/ModuleCodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"public class ModuleCodeTest {","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModuleCode(null));","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"    public void constructor_invalidCode_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"        String invalidCode \u003d \"CT1211\";","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ModuleCode(invalidCode));","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"    public void isValidModuleCode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"        // null name","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ModuleCode.isValidModuleCode(null));","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        // invalid name","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"\")); // empty string","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\" \")); // spaces only","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"CT1211\")); // Invalid format","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"cs2103\")); // lowercase cs","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"CS2103t\")); // lowercase cs","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"        // EP: CS1000-CS6999 valid name","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"CS6999\")); // 6999 is the highest code number accepted","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"CS1000\")); // 1000 is the highest code number accepted","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"CS2103\")); // typical value","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"CS2103T\")); // with an optional uppercase character","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"geraldfan":43}},{"path":"src/test/java/seedu/address/model/person/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"public class StatusTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"        Status toTest \u003d new Status();","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"        Status toTestDone \u003d new Status(\"Finished\");","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"        Status toTestUndone \u003d new Status(\"Unfinished\");","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        //Different Strings","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.toString().equals(null)); // null","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.toString().equals(\"\")); // empty string","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.toString().equals(\"random\")); // random string","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTestDone.toString().equals(null)); // null","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTestDone.toString().equals(\"\")); // empty string","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTestDone.toString().equals(\"random\")); // random string","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTestUndone.toString().equals(null)); // null","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTestUndone.toString().equals(\"\")); // empty string","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTestUndone.toString().equals(\"random\")); // random string","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        //Equals to itself","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.toString().equals(toTest.toString()));","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTestDone.toString().equals(toTestDone.toString()));","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTestUndone.toString().equals(toTestUndone.toString()));","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        //Equals to other string value","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.toString().equals(new Status().toString()));","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTestDone.toString().equals(new Status(\"Finished\").toString()));","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTestUndone.toString().equals(new Status(\"Unfinished\").toString()));","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    public void equals() {","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        Status toTest \u003d new Status();","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        //Different object","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(null)); // null","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new Object())); // object","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(\"random\")); // string","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(1)); // integer","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new DeadlineDate(\"11-11-2022\"))); // DeadlineDate","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"        //Different value","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(new Status(\"Finished\"))); // Different hour","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        assertFalse(toTest.equals(toTest.toggle())); // Toggle odd times","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        //Equals to itself","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.equals(toTest));","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        //Equals to other Status with same value","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.equals(new Status()));","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"        assertTrue(toTest.equals(toTest.toggle().toggle())); // Toggle even times","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"austenjs":66}},{"path":"src/test/java/seedu/address/model/person/TaskNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"public class TaskNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"Alice\")","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"                .build()));","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"geraldfan":2,"mrweikiat":7,"danielonges":2,"-":64}},{"path":"src/test/java/seedu/address/model/person/TaskNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"public class TaskNameTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskName(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskName(invalidName));","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"    public void isValidName() {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"        // null name","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskName.isValidName(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        // invalid name","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"        assertFalse(TaskName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        assertFalse(TaskName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"        assertFalse(TaskName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        assertFalse(TaskName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"        // valid name","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"        assertTrue(TaskName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"        assertTrue(TaskName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"        assertTrue(TaskName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"        assertTrue(TaskName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"        assertTrue(TaskName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"geraldfan":40}},{"path":"src/test/java/seedu/address/model/person/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2103;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"public class TaskTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e task.getTags().remove(0));","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"    public void isSameTask() {","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        assertTrue(CS2103.isSameTask(CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        assertFalse(CS2103.isSameTask(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"        Task editedAlice \u003d new TaskBuilder(CS2103)","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"        assertFalse(CS2103.isSameTask(editedAlice));","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        editedAlice \u003d new TaskBuilder(CS2103).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        assertFalse(CS2103.isSameTask(editedAlice));","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"        Task editedBob \u003d new TaskBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"        assertFalse(BOB.isSameTask(editedBob));","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"        editedBob \u003d new TaskBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"        assertFalse(BOB.isSameTask(editedBob));","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"    public void equals() {","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"        Task aliceCopy \u003d new TaskBuilder(CS2103).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        assertTrue(CS2103.equals(aliceCopy));","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        assertTrue(CS2103.equals(CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        assertFalse(CS2103.equals(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        assertFalse(CS2103.equals(5));","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"        assertFalse(CS2103.equals(BOB));","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        Task editedAlice \u003d new TaskBuilder(CS2103).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        assertFalse(CS2103.equals(editedAlice));","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"        editedAlice \u003d new TaskBuilder(CS2103).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        assertFalse(CS2103.equals(editedAlice));","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"geraldfan":3,"mrweikiat":7,"danielonges":35,"-":16,"austenjs":15}},{"path":"src/test/java/seedu/address/model/person/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2103;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        assertFalse(uniqueTaskList.contains(CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        assertTrue(uniqueTaskList.contains(CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"    public void contains_taskWithSameIdentityFieldsInList_returnsFalse() {","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        Task editedAlice \u003d new TaskBuilder(CS2103).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"        assertFalse(uniqueTaskList.contains(editedAlice));","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(CS2103, null));","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(CS2103, CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.setTask(CS2103, CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"geraldfan"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        expectedUniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"geraldfan"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"geraldfan"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"        Task editedAlice \u003d new TaskBuilder(CS2103).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.setTask(CS2103, editedAlice);","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"geraldfan"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"geraldfan"},"content":"        expectedUniqueTaskList.add(editedAlice);","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"geraldfan"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"geraldfan"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.setTask(CS2103, BOB);","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"geraldfan"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"geraldfan"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"geraldfan"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"geraldfan"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"        uniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(CS2103, BOB));","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"geraldfan"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"geraldfan"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(CS2103));","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"geraldfan"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.remove(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"geraldfan"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"geraldfan"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"geraldfan"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"geraldfan"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"geraldfan"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"geraldfan"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"geraldfan"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"geraldfan"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"geraldfan"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"geraldfan"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":150,"author":{"gitId":"austenjs"},"content":"        uniqueTaskList.add(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-09"},{"lineNumber":152,"author":{"gitId":"geraldfan"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"geraldfan"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-10"},{"lineNumber":154,"author":{"gitId":"geraldfan"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"geraldfan"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"geraldfan"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":160,"author":{"gitId":"austenjs"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(CS2103, CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"geraldfan"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"geraldfan"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"geraldfan":51,"mrweikiat":4,"-":87,"austenjs":27}},{"path":"src/test/java/seedu/address/model/person/WeightageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"public class WeightageTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Weightage(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    public void constructor_invalidWeightage_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"        Integer invalidWeightageLowerBound \u003d -1;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"        Integer invalidWeightageUpperBound \u003d 101;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Weightage(invalidWeightageLowerBound));","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Weightage(invalidWeightageUpperBound));","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"    public void isValidWeightage() {","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"        // null weightage","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"        assertThrows(NullPointerException.class, () -\u003e Weightage.isValidWeightage(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"        // invalid weightage","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"        assertFalse(Weightage.isValidWeightage(-1)); // negative value","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"        assertFalse(Weightage.isValidWeightage(101)); // value that is greater than 100","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"        // valid weightage","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"        assertTrue(Weightage.isValidWeightage(0)); // 0 (lower boundary)","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"        assertTrue(Weightage.isValidWeightage(100)); // 100 (upper boundary)","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"        assertTrue(Weightage.isValidWeightage(50)); // typical value","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"danielonges":38,"austenjs":1}},{"path":"src/test/java/seedu/address/model/tag/PriorityTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"public class PriorityTagTest {","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    public static final String LOW \u003d \"LOW\";","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    public static final String MEDIUM \u003d \"MEDIUM\";","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    public static final String HIGH \u003d \"HIGH\";","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PriorityTag(invalidName));","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    public void isValidPriorityTag() {","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"        // valid test","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(PriorityTag.validateTag(\"LOW\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(PriorityTag.validateTag(\"MEDIUM\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(PriorityTag.validateTag(\"HIGH\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        assertTrue(PriorityTag.validateTag(HIGH));","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"        assertTrue(PriorityTag.validateTag(MEDIUM));","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        assertTrue(PriorityTag.validateTag(HIGH));","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"        // valid tags after constructing","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt1 \u003d new PriorityTag(LOW);","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt2 \u003d new PriorityTag(MEDIUM);","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt3 \u003d new PriorityTag(HIGH);","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(PriorityTag.validateTag(pt1.getTagName()));","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(PriorityTag.validateTag(pt2.getTagName()));","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(PriorityTag.validateTag(pt3.getTagName()));","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"        //invalid test","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(PriorityTag.validateTag(\"Hello\")); //alphabets","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(PriorityTag.validateTag(\"\")); // empty string","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(PriorityTag.validateTag(\"***\")); //special characters","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(PriorityTag.validateTag(\"???hello\")); //special characters and alphabets","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(PriorityTag.validateTag(\"123\")); //numerics","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(PriorityTag.validateTag(\"123test\")); //numerics and alphabets","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(PriorityTag.validateTag(\"MED\")); // similar cases","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(PriorityTag.validateTag(\"HiGH\")); // similar cases","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(PriorityTag.validateTag(\"LoW\")); // similar cases","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"    public void isEqualPriorityTag() {","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"        // valid tags after constructing","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt1 \u003d new PriorityTag(LOW);","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt2 \u003d new PriorityTag(MEDIUM);","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt3 \u003d new PriorityTag(HIGH);","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt1Copy \u003d new PriorityTag(LOW);","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt2Copy \u003d new PriorityTag(MEDIUM);","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt3Copy \u003d new PriorityTag(HIGH);","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(pt1.equals(pt1Copy));","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(pt2.equals(pt2Copy));","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(pt3.equals(pt3Copy));","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"    public void isNotEqualPriorityTag() {","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"        // valid tags after constructing","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt1 \u003d new PriorityTag(LOW);","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt2 \u003d new PriorityTag(MEDIUM);","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt3 \u003d new PriorityTag(HIGH);","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt1Copy \u003d new PriorityTag(LOW);","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt2Copy \u003d new PriorityTag(MEDIUM);","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"        PriorityTag pt3Copy \u003d new PriorityTag(HIGH);","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"        // not equal tags","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(pt1.equals(pt2Copy));","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(pt2.equals(pt3Copy));","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(pt3.equals(pt1Copy));","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"}","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"mrweikiat":74,"austenjs":21}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"public class JsonAdaptedTagTest {","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"    private static final String VALID_TAG_1 \u003d \"Completing\";","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"    private static final String VALID_TAG_2 \u003d \"Important\";","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"    private static final String VALID_TAG_3 \u003d \"Failing\";","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    private static final String VALID_TAG_4 \u003d \"Coursework\";","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"    private static final String INVALID_TAG_1 \u003d \"How?\";","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    private static final String INVALID_TAG_2 \u003d \"**IMPORTANT\";","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    private static final String INVALID_TAG_3 \u003d \"--No 123\";","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    private static final String INVALID_TAG_4 \u003d \"This_INVALID\";","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    public void toModelType_validTagTest() {","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"        //valid tag","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(Tag.isValidTagName(VALID_TAG_1)); // CS 1k mod","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(Tag.isValidTagName(VALID_TAG_2)); // CS 1k mod","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(Tag.isValidTagName(VALID_TAG_3)); // CS 3k mod","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"        assertTrue(Tag.isValidTagName(VALID_TAG_4)); // CS 4k mod","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"        //invalid tags","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(Tag.isValidTagName(INVALID_TAG_1)); // Special character at the back","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(Tag.isValidTagName(INVALID_TAG_2)); // Special character at the front","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(Tag.isValidTagName(INVALID_TAG_3)); // special character at the front, alphanumeric, with space","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(Tag.isValidTagName(INVALID_TAG_4)); // special character in the middle","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"    public void toModel_invalidTagTest_throwsIllegalValueException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"        JsonAdaptedTag tag \u003d new JsonAdaptedTag(INVALID_TAG_1);","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"        String expectedMessage \u003d Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tag::toModelType);","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"    public void toModel_notEqualTagTest() {","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"        JsonAdaptedTag tag \u003d new JsonAdaptedTag(VALID_TAG_1);","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"        JsonAdaptedTag tag2 \u003d new JsonAdaptedTag(VALID_TAG_2);","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"        assertFalse(tag.equals(tag2));","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"}","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"mrweikiat":57}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2040;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    private static final String INVALID_DATE \u003d \"2020-10-03\";","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    private static final String INVALID_TIME \u003d \"25:61\";","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    private static final Integer INVALID_WEIGHTAGE \u003d 100000;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"    private static final String INVALID_CODE \u003d \"CT2103\";","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"    private static final String INVALID_PRIORITY_TAG \u003d \"MED\";","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"    private static final String VALID_NAME \u003d CS2040.getTaskName().toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    private static final String VALID_CODE \u003d CS2040.getModuleCode().toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"    private static final String VALID_DATE \u003d CS2040.getDeadlineDate().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    private static final String VALID_TIME \u003d CS2040.getDeadlineTime().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    private static final String VALID_STATUS \u003d CS2040.getStatus().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"    private static final Integer VALID_WEIGHTAGE \u003d CS2040.getWeightage().weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"    private static final String VALID_PRIORITY_TAG \u003d CS2040.getPriorityTag().getTagName();","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"    private static final String VALID_REMARK \u003d CS2040.getNotes().toString();","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d CS2040.getTags().stream()","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(CS2040);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        assertEquals(CS2040, task.toModelType());","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"                new JsonAdaptedTask(INVALID_NAME, VALID_CODE, VALID_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"                        VALID_TIME, VALID_STATUS, VALID_WEIGHTAGE, VALID_REMARK,","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"                        VALID_TAGS, VALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d TaskName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_CODE, VALID_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"                VALID_TIME, VALID_STATUS, VALID_WEIGHTAGE,","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"            VALID_REMARK, VALID_TAGS, VALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName());","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"    public void toModelType_invalidCode_throwsIllegalValueException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"geraldfan"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"            new JsonAdaptedTask(VALID_NAME, INVALID_CODE, VALID_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"                    VALID_TIME, VALID_STATUS, VALID_WEIGHTAGE, VALID_REMARK,","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"                    VALID_TAGS, VALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d ModuleCode.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"geraldfan"},"content":"    public void toModelType_nullCode_throwsIllegalValueException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, null, VALID_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"                VALID_TIME, VALID_STATUS, VALID_WEIGHTAGE,","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":"            VALID_REMARK, VALID_TAGS, VALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"geraldfan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ModuleCode.class.getSimpleName());","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"geraldfan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"    public void toModelType_invalidDeadlineDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_CODE, INVALID_DATE,","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"                        VALID_TIME, VALID_STATUS, VALID_WEIGHTAGE, VALID_REMARK,","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"                        VALID_TAGS, VALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d DeadlineDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"    public void toModelType_nullDeadlineDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_CODE, null,","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"                VALID_TIME, VALID_STATUS, VALID_WEIGHTAGE,","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"                VALID_REMARK, VALID_TAGS, VALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DeadlineDate.class.getSimpleName());","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"    public void toModelType_invalidDeadlineTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_CODE, VALID_DATE,","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"                        INVALID_TIME, VALID_STATUS, VALID_WEIGHTAGE, VALID_REMARK,","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":"                        VALID_TAGS, VALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":113,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d DeadlineTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"    public void toModelType_nullDeadlineTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_CODE, VALID_DATE,","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"                null, VALID_STATUS, VALID_WEIGHTAGE,","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":"                VALID_REMARK, VALID_TAGS, VALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DeadlineTime.class.getSimpleName());","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"geraldfan"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"austenjs"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_CODE, VALID_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"austenjs"},"content":"                        VALID_TIME, VALID_STATUS, VALID_WEIGHTAGE, VALID_REMARK,","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"mrweikiat"},"content":"                        invalidTags, VALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":135,"author":{"gitId":"geraldfan"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"mrweikiat"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":139,"author":{"gitId":"mrweikiat"},"content":"    public void toModelType_invalidPriorityTag_throwsIllegalValueException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":140,"author":{"gitId":"mrweikiat"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_CODE, VALID_DATE,","lastModifiedDate":"2021-04-11"},{"lineNumber":141,"author":{"gitId":"mrweikiat"},"content":"                VALID_TIME, VALID_STATUS, VALID_WEIGHTAGE, VALID_REMARK,","lastModifiedDate":"2021-04-11"},{"lineNumber":142,"author":{"gitId":"mrweikiat"},"content":"                VALID_TAGS, INVALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":143,"author":{"gitId":"mrweikiat"},"content":"        String expectedMessage \u003d PriorityTag.MESSAGE_INVALID_INPUT;","lastModifiedDate":"2021-04-11"},{"lineNumber":144,"author":{"gitId":"mrweikiat"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-04-11"},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":146,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":147,"author":{"gitId":"mrweikiat"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":148,"author":{"gitId":"mrweikiat"},"content":"    public void toModeType_invalidWeightage_throwsIllegalValueException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":149,"author":{"gitId":"mrweikiat"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_CODE, VALID_DATE,","lastModifiedDate":"2021-04-11"},{"lineNumber":150,"author":{"gitId":"mrweikiat"},"content":"                VALID_TIME, VALID_STATUS, INVALID_WEIGHTAGE, VALID_REMARK,","lastModifiedDate":"2021-04-11"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"                VALID_TAGS, VALID_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"        String expectedMessage \u003d Weightage.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-11"},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-04-11"},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":155,"author":{"gitId":"mrweikiat"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"geraldfan":22,"mrweikiat":38,"danielonges":2,"-":38,"austenjs":57}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTaskTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"public class JsonSerializableTaskTrackerTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaskTrackerTest\");","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksTaskTracker.json\");","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskTaskTracker.json\");","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskTaskTracker.json\");","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"        JsonSerializableTaskTracker dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"                JsonSerializableTaskTracker.class).get();","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        TaskTracker taskTrackerFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"        TaskTracker typicalTasksTaskTracker \u003d TypicalTasks.getTypicalTaskTracker();","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        assertEquals(taskTrackerFromFile, typicalTasksTaskTracker);","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"        JsonSerializableTaskTracker dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"                JsonSerializableTaskTracker.class).get();","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"        JsonSerializableTaskTracker dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"                JsonSerializableTaskTracker.class).get();","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaskTracker.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"geraldfan":19,"mrweikiat":1,"-":27}},{"path":"src/test/java/seedu/address/storage/JsonTaskTrackerStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"geraldfan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import static seedu.address.testutil.TypicalTasks.CS2103;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.HOON;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.IDA;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"public class JsonTaskTrackerStorageTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskTrackerStorageTest\");","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"    @TempDir","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"    public void readTaskTracker_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskTracker(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"    private java.util.Optional\u003cReadOnlyTaskTracker\u003e readTaskTracker(String filePath) throws Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"        return new JsonTaskTrackerStorage(Paths.get(filePath)).readTaskTracker(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"                : null;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"geraldfan"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"geraldfan"},"content":"        assertFalse(readTaskTracker(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"geraldfan"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskTracker(\"notJsonFormatTaskTracker.json\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"    public void readTaskTracker_invalidTaskTaskTracker_throwDataConversionException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskTracker(\"invalidTaskTaskTracker.json\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"    public void readTaskTracker_invalidAndValidTaskTaskTracker_throwDataConversionException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"geraldfan"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskTracker(\"invalidAndValidTaskTaskTracker.json\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"    public void readAndSaveTaskTracker_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaskTracker.json\");","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"        TaskTracker original \u003d getTypicalTaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"geraldfan"},"content":"        JsonTaskTrackerStorage jsonTaskTrackerStorage \u003d new JsonTaskTrackerStorage(filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"geraldfan"},"content":"        jsonTaskTrackerStorage.saveTaskTracker(original, filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"        ReadOnlyTaskTracker readBack \u003d jsonTaskTrackerStorage.readTaskTracker(filePath).get();","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"geraldfan"},"content":"        assertEquals(original, new TaskTracker(readBack));","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"geraldfan"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"geraldfan"},"content":"        original.addTask(HOON);","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        original.removeTask(CS2103);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"geraldfan"},"content":"        jsonTaskTrackerStorage.saveTaskTracker(original, filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"geraldfan"},"content":"        readBack \u003d jsonTaskTrackerStorage.readTaskTracker(filePath).get();","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"geraldfan"},"content":"        assertEquals(original, new TaskTracker(readBack));","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"geraldfan"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"geraldfan"},"content":"        original.addTask(IDA);","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"geraldfan"},"content":"        jsonTaskTrackerStorage.saveTaskTracker(original); // file path not specified","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"geraldfan"},"content":"        readBack \u003d jsonTaskTrackerStorage.readTaskTracker().get(); // file path not specified","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"geraldfan"},"content":"        assertEquals(original, new TaskTracker(readBack));","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"geraldfan"},"content":"    public void saveTaskTracker_nullTaskTracker_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskTracker(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"geraldfan"},"content":"     * Saves {@code taskTracker} at the specified {@code filePath}.","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"geraldfan"},"content":"    private void saveTaskTracker(ReadOnlyTaskTracker taskTracker, String filePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"geraldfan"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"geraldfan"},"content":"            new JsonTaskTrackerStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"geraldfan"},"content":"                    .saveTaskTracker(taskTracker, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"geraldfan"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"geraldfan"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"geraldfan"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"geraldfan"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"    public void saveTaskTracker_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"geraldfan"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskTracker(new TaskTracker(), null));","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"geraldfan":105,"mrweikiat":3,"austenjs":2}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"        userPrefs.setTaskTrackerFilePath(Paths.get(\"data\", \"tasktracker.json\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"geraldfan":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.ReadOnlyTaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        JsonTaskTrackerStorage taskTrackerStorage \u003d new JsonTaskTrackerStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"        storageManager \u003d new StorageManager(taskTrackerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"    public void taskTrackerReadSave() throws Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"         * {@link JsonTaskTrackerStorage} class.","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"geraldfan"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTaskTrackerStorageTest} class.","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"geraldfan"},"content":"        TaskTracker original \u003d getTypicalTaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"        storageManager.saveTaskTracker(original);","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"        ReadOnlyTaskTracker retrieved \u003d storageManager.readTaskTracker().get();","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"geraldfan"},"content":"        assertEquals(original, new TaskTracker(retrieved));","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"    public void getTaskTrackerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"        assertNotNull(storageManager.getTaskTrackerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"geraldfan":14,"mrweikiat":1,"-":54}},{"path":"src/test/java/seedu/address/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"    private EditTaskDescriptor descriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"geraldfan"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"        descriptor.setTaskName(task.getTaskName());","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"geraldfan"},"content":"        descriptor.setModuleCode(task.getModuleCode());","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"        descriptor.setDeadlineDate(task.getDeadlineDate());","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"        descriptor.setDeadlineTime(task.getDeadlineTime());","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        descriptor.setStatus(task.getStatus());","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"        descriptor.setWeightage(task.getWeightage());","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        descriptor.setNotes(task.getNotes());","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"        descriptor.setTags(task.getTags());","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        descriptor.setPriorityTag(task.getPriorityTag());","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"geraldfan"},"content":"     * Sets the {@code TaskName} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"        descriptor.setTaskName(new TaskName(name));","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"geraldfan"},"content":"     * Sets the {@code TaskName} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"    public EditTaskDescriptorBuilder withCode(String code) {","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"        descriptor.setModuleCode(new ModuleCode(code));","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"        return this;","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"     * Sets the {@code DeadlineDate} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"    public EditTaskDescriptorBuilder withDeadlineDate(String deadlineDate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"        descriptor.setDeadlineDate(new DeadlineDate(deadlineDate));","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"     * Sets the {@code DeadlineTime} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"    public EditTaskDescriptorBuilder withDeadlineTime(String deadlineTime) {","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"        descriptor.setDeadlineTime(new DeadlineTime(deadlineTime));","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"     * Sets the {@code Status} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"    public EditTaskDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"     * Sets the {@code Notes} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"danielonges"},"content":"    public EditTaskDescriptorBuilder withWeightage(Integer weightage) {","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"        descriptor.setWeightage(new Weightage(weightage));","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"danielonges"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"danielonges"},"content":"     * Sets the {@code Notes} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"danielonges"},"content":"    public EditTaskDescriptorBuilder withNotes(String notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"        descriptor.setNotes(new Notes(notes));","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"danielonges"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"geraldfan"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":"    public EditTaskDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"     * Sets the {@code Notes} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-04-11"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"    public EditTaskDescriptorBuilder withPriorityTag(String priorityTag) {","lastModifiedDate":"2021-04-11"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"        descriptor.setPriorityTag(new PriorityTag(priorityTag));","lastModifiedDate":"2021-04-11"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":"        return this;","lastModifiedDate":"2021-04-11"},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":124,"author":{"gitId":"geraldfan"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"geraldfan":24,"mrweikiat":7,"danielonges":40,"-":36,"austenjs":20}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.DeadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.person.TaskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"import seedu.address.model.person.Weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"public class TaskBuilder {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"    public static final String DEFAULT_NAME \u003d \"Weekly Quiz 11\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"    public static final String DEFAULT_CODE \u003d \"CS2103\";","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    public static final String DEFAULT_DATE \u003d \"10-10-2022\";","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    public static final String DEFAULT_TIME \u003d \"10:10\";","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    public static final String DEFAULT_STATUS \u003d \"Unfinished\";","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"    public static final Integer DEFAULT_WEIGHTAGE \u003d 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    public static final String DEFAULT_PRIORITY_TAG \u003d \"LOW\";","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"    private TaskName taskName;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"    private ModuleCode moduleCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    private DeadlineDate deadlineDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    private DeadlineTime deadlineTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    private Status status;","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"    private Weightage weightage;","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":"    private Notes notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"    private PriorityTag priorityTag;","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"    public TaskBuilder() {","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"        taskName \u003d new TaskName(DEFAULT_NAME);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"geraldfan"},"content":"        moduleCode \u003d new ModuleCode(DEFAULT_CODE);","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        deadlineDate \u003d new DeadlineDate(DEFAULT_DATE);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        deadlineTime \u003d new DeadlineTime(DEFAULT_TIME);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"        weightage \u003d new Weightage(DEFAULT_WEIGHTAGE);","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"        notes \u003d new Notes(DEFAULT_REMARK);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        priorityTag \u003d new PriorityTag(DEFAULT_PRIORITY_TAG);","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"     * Initializes the TaskBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"geraldfan"},"content":"        taskName \u003d taskToCopy.getTaskName();","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"        moduleCode \u003d taskToCopy.getModuleCode();","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        deadlineDate \u003d taskToCopy.getDeadlineDate();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"        deadlineTime \u003d taskToCopy.getDeadlineTime();","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        status \u003d taskToCopy.getStatus();","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"        weightage \u003d taskToCopy.getWeightage();","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"        notes \u003d taskToCopy.getNotes();","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"        tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        priorityTag \u003d taskToCopy.getPriorityTag();","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"geraldfan"},"content":"     * Sets the {@code TaskName} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"        this.taskName \u003d new TaskName(name);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"geraldfan"},"content":"     * Sets the {@code ModuleCode} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"geraldfan"},"content":"    public TaskBuilder withCode(String code) {","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"geraldfan"},"content":"        this.moduleCode \u003d new ModuleCode(code);","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"geraldfan"},"content":"        return this;","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"     * Sets the {@code DeadlineDate} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"    public TaskBuilder withDeadlineDate(String deadlineDate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"        this.deadlineDate \u003d new DeadlineDate(deadlineDate);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"     * Sets the {@code DeadlineTime} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"    public TaskBuilder withDeadlineTime(String deadlineTime) {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"        this.deadlineTime \u003d new DeadlineTime(deadlineTime);","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"     * Sets the {@code Status} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"    public TaskBuilder withStatus(String status) {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"     * Sets the {@code Weightage} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"danielonges"},"content":"    public TaskBuilder withWeightage(Integer weightage) {","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"danielonges"},"content":"        // perhaps this shouldn\u0027t be an integer?","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"        this.weightage \u003d new Weightage(weightage);","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"danielonges"},"content":"        return this;","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"geraldfan"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":124,"author":{"gitId":"mrweikiat"},"content":"    public TaskBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"danielonges"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":130,"author":{"gitId":"danielonges"},"content":"     * Sets the {@code Notes} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"danielonges"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":132,"author":{"gitId":"danielonges"},"content":"    public TaskBuilder withNotes(String notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"danielonges"},"content":"        this.notes \u003d new Notes(notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"danielonges"},"content":"        return this;","lastModifiedDate":"2021-02-23"},{"lineNumber":135,"author":{"gitId":"danielonges"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":136,"author":{"gitId":"danielonges"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":137,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":138,"author":{"gitId":"austenjs"},"content":"     * Sets the {@code PriorityTag} of the {@code Task} that we are building.","lastModifiedDate":"2021-04-11"},{"lineNumber":139,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":140,"author":{"gitId":"austenjs"},"content":"    public TaskBuilder withPriorityTag(String priorityTag) {","lastModifiedDate":"2021-04-11"},{"lineNumber":141,"author":{"gitId":"austenjs"},"content":"        this.priorityTag \u003d new PriorityTag(priorityTag);","lastModifiedDate":"2021-04-11"},{"lineNumber":142,"author":{"gitId":"austenjs"},"content":"        return this;","lastModifiedDate":"2021-04-11"},{"lineNumber":143,"author":{"gitId":"austenjs"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":144,"author":{"gitId":"austenjs"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":145,"author":{"gitId":"austenjs"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"austenjs"},"content":"     * Build a new Task with default attributes.","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"austenjs"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"mrweikiat"},"content":"    public Task build() {","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"geraldfan"},"content":"        return new Task(taskName, moduleCode, deadlineDate,","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"austenjs"},"content":"            deadlineTime, status, weightage, notes, tags, priorityTag);","lastModifiedDate":"2021-04-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"geraldfan":23,"mrweikiat":10,"danielonges":27,"-":37,"austenjs":56}},{"path":"src/test/java/seedu/address/testutil/TaskTrackerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldfan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"geraldfan"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"geraldfan"},"content":" * A utility class to help with building TaskTracker objects.","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"geraldfan"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":" *     {@code TaskTracker ab \u003d new TaskTrackerBuilder().withTask(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"public class TaskTrackerBuilder {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"geraldfan"},"content":"    private TaskTracker taskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"    public TaskTrackerBuilder() {","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":"        taskTracker \u003d new TaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"geraldfan"},"content":"    public TaskTrackerBuilder(TaskTracker taskTracker) {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"        this.taskTracker \u003d taskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"geraldfan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"     * Adds a new {@code Task} to the {@code TaskTracker} that we are building.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"geraldfan"},"content":"    public TaskTrackerBuilder withTask(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"geraldfan"},"content":"        taskTracker.addTask(task);","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"        return this;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"geraldfan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"geraldfan"},"content":"    public TaskTracker build() {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"        return taskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"geraldfan":33,"mrweikiat":1}},{"path":"src/test/java/seedu/address/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"geraldfan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_TIME;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITYTAG;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHTAGE;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"geraldfan"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":" * A utility class for Task.","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"public class TaskUtil {","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"geraldfan"},"content":"     * Returns an add command string for adding the {@code task}.","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"    public static String getAddCommand(Task task) {","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"geraldfan"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getTaskDetails(task);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"geraldfan"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"geraldfan"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"        // add and edit do not have notes fields","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"geraldfan"},"content":"        sb.append(PREFIX_NAME + task.getTaskName().fullName + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"        sb.append(PREFIX_CODE + task.getModuleCode().moduleCode + \" \");","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"        sb.append(PREFIX_WEIGHTAGE + task.getWeightage().weightage.toString() + \"% \");","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"        sb.append(PREFIX_DEADLINE_DATE + task.getDeadlineDate().toString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        sb.append(PREFIX_DEADLINE_TIME + task.getDeadlineTime().toString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"        // cannot add notes directly using add command yet.","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"        // sb.append(PREFIX_NOTES + task.getNotes().value + \" \");","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"        task.getTags().stream().forEach(","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        sb.append(PREFIX_PRIORITYTAG + task.getPriorityTag().getTagName());;","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"     * Returns the part of command string for the given {@code EditTaskDescriptor}\u0027s details.","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"geraldfan"},"content":"    public static String getEditTaskDescriptorDetails(EditTaskDescriptor descriptor) {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"        // currently edit does not support editing of remarks","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"        descriptor.getTaskName().ifPresent(name -\u003e sb.append(PREFIX_NAME)","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"                .append(name.fullName).append(\" \"));","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"        descriptor.getModuleCode().ifPresent(code -\u003e sb.append(PREFIX_CODE)","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"                .append(code.moduleCode).append(\" \"));","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"        descriptor.getDeadlineDate().ifPresent(date -\u003e sb.append(PREFIX_DEADLINE_DATE)","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"                .append(date.toString()).append(\" \"));","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"        descriptor.getDeadlineTime().ifPresent(time -\u003e sb.append(PREFIX_DEADLINE_TIME)","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"                .append(time.toString()).append(\" \"));","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"        descriptor.getWeightage().ifPresent(weightage -\u003e sb.append(PREFIX_WEIGHTAGE)","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"                .append(weightage.toString()).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":"        descriptor.getNotes().ifPresent(notes -\u003e sb.append(PREFIX_NOTES)","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"                .append(notes.value).append(\" \"));","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        descriptor.getPriorityTag().ifPresent(ptag -\u003e sb.append(PREFIX_PRIORITYTAG)","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"                .append(ptag.getTagName()));","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"geraldfan":11,"mrweikiat":4,"danielonges":19,"-":38,"austenjs":9}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"geraldfan"},"content":"     * Returns the middle index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"geraldfan"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size() / 2);","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"geraldfan"},"content":"     * Returns the last index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"geraldfan"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"geraldfan"},"content":"     * Returns the task in the {@code model}\u0027s task list at {@code index}.","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"geraldfan"},"content":"    public static Task getTask(Model model, Index index) {","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"        return model.getFilteredTaskList().get(index.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"geraldfan":7,"mrweikiat":1,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"geraldfan"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"geraldfan"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"geraldfan"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"geraldfan":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"geraldfan"},"content":"import seedu.address.model.TaskTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":16,"author":{"gitId":"geraldfan"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"public class TypicalTasks {","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"geraldfan"},"content":"    public static final Task CS2103 \u003d new TaskBuilder().withName(\"Week 10 Quiz\")","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"        .withCode(\"CS2103\").withDeadlineDate(\"09-10-2022\").withDeadlineTime(\"10:10\")","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"        .withStatus(\"Unfinished\").withWeightage(0).withNotes(\"Being a software engineer is fun\")","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"        .withTags(\"friends\").withPriorityTag(\"LOW\").build();","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"geraldfan"},"content":"    public static final Task CS2040 \u003d new TaskBuilder().withName(\"Take Home lab 1\")","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"        .withCode(\"CS2040\").withDeadlineDate(\"10-10-2022\").withDeadlineTime(\"10:10\")","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        .withStatus(\"Unfinished\").withWeightage(0)","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"        .withNotes(\"Favourite pastime: Kattis\")","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"        .withTags(\"owesMoney\", \"friends\").withPriorityTag(\"HIGH\").build();","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"geraldfan"},"content":"    public static final Task CS1010E \u003d new TaskBuilder().withName(\"Tutorial 6\")","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"        .withCode(\"CS1010\").withDeadlineDate(\"09-10-2022\").withDeadlineTime(\"10:10\")","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        .withStatus(\"Unfinished\").withWeightage(0)","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"        .withNotes(\"PE1\").withPriorityTag(\"MEDIUM\").build();","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"geraldfan"},"content":"    public static final Task CS2030 \u003d new TaskBuilder().withName(\"Tutorial 5\")","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        .withCode(\"CS2030\").withDeadlineDate(\"10-10-2022\").withDeadlineTime(\"10:10\")","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        .withStatus(\"Unfinished\").withWeightage(0)","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"        .withNotes(\"PE2\")","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"        .withTags(\"friends\").withPriorityTag(\"LOW\").build();","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"geraldfan"},"content":"    public static final Task CS3243 \u003d new TaskBuilder().withName(\"Weekly Readings\")","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        .withCode(\"CS3243\").withDeadlineDate(\"08-10-2022\").withDeadlineTime(\"10:10\")","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"        .withStatus(\"Unfinished\").withWeightage(0).withPriorityTag(\"LOW\")","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"        .build();","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"geraldfan"},"content":"    public static final Task CS2100 \u003d new TaskBuilder().withName(\"Write Tests\")","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"        .withCode(\"CS2100\").withDeadlineDate(\"13-10-2022\").withDeadlineTime(\"10:10\")","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"        .withStatus(\"Unfinished\").withWeightage(0).withPriorityTag(\"MEDIUM\")","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"        .build();","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"    public static final Task HOON \u003d new TaskBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"        .build();","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"    public static final Task IDA \u003d new TaskBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"        .build();","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"geraldfan"},"content":"    // Manually added - Task\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"    public static final Task AMY \u003d new TaskBuilder().withName(VALID_NAME_AMY).withWeightage(25)","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"        .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"    public static final Task BOB \u003d new TaskBuilder().withName(VALID_NAME_BOB).withWeightage(25)","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":"        .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"geraldfan"},"content":"    private TypicalTasks() {","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"geraldfan"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"geraldfan"},"content":"     * Returns an {@code TaskTracker} with all the typical tasks.","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"geraldfan"},"content":"    public static TaskTracker getTypicalTaskTracker() {","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"geraldfan"},"content":"        TaskTracker ab \u003d new TaskTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"geraldfan"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"geraldfan"},"content":"            ab.addTask(task);","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"geraldfan"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2103, CS2040, CS1010E, CS2030, CS3243, CS2100));","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"geraldfan":17,"mrweikiat":8,"danielonges":13,"-":31,"austenjs":10}}]
